GAS LISTING /tmp/cc23nfB3.s 			page 1


   1              		.file	"quex_scan.cpp"
   9              	.Ltext0:
  10              	.globl _ZN4quex26quex_scan_PROGRAM_on_entryEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE
  12              	_ZN4quex26quex_scan_PROGRAM_on_entryEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE:
  13              	.LFB1308:
  14              		.file 1 "out/quex_scan.cpp"
   1:out/quex_scan.cpp **** #include "out/quex_scan"
   2:out/quex_scan.cpp **** #include <quex/code_base/analyzer/C-adaptions.h>
   3:out/quex_scan.cpp **** QUEX_NAMESPACE_MAIN_OPEN
   4:out/quex_scan.cpp **** /* Global */QUEX_NAME(Mode)  QUEX_NAME(PROGRAM);
   5:out/quex_scan.cpp **** #ifndef __QUEX_INDICATOR_DUMPED_TOKEN_ID_DEFINED
   6:out/quex_scan.cpp ****     static QUEX_TYPE_TOKEN_ID    QUEX_NAME_TOKEN(DumpedTokenIdObject);
   7:out/quex_scan.cpp **** #endif
   8:out/quex_scan.cpp **** #define self  (*(QUEX_TYPE_DERIVED_ANALYZER*)me)
   9:out/quex_scan.cpp **** #define __self_result_token_id    QUEX_NAME_TOKEN(DumpedTokenIdObject)
  10:out/quex_scan.cpp **** 
  11:out/quex_scan.cpp **** void
  12:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_on_entry)(QUEX_TYPE_ANALYZER* me, const QUEX_NAME(Mode)* FromMode) {
  15              		.loc 1 12 0
  16              		.cfi_startproc
  17              		.cfi_personality 0x0,__gxx_personality_v0
  18              	.LVL0:
  19 0000 55       		pushl	%ebp
  20              	.LCFI0:
  21              		.cfi_def_cfa_offset 8
  22 0001 89E5     		movl	%esp, %ebp
  23              		.cfi_offset 5, -8
  24              	.LCFI1:
  25              		.cfi_def_cfa_register 5
  26 0003 83EC08   		subl	$8, %esp
  13:out/quex_scan.cpp ****     (void)me;
  14:out/quex_scan.cpp ****     (void)FromMode;
  15:out/quex_scan.cpp **** #   ifdef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
  16:out/quex_scan.cpp ****     QUEX_NAME(PROGRAM).has_entry_from(FromMode);
  27              		.loc 1 16 0
  28 0006 8B450C   		movl	12(%ebp), %eax
  29 0009 894508   		movl	%eax, 8(%ebp)
  30 000c A11C0000 		movl	_ZN4quex17quex_scan_PROGRAME+28, %eax
  30      00
  17:out/quex_scan.cpp **** #   endif
  18:out/quex_scan.cpp **** 
  19:out/quex_scan.cpp **** }
  31              		.loc 1 19 0
  32 0011 C9       		leave
  16:out/quex_scan.cpp ****     QUEX_NAME(PROGRAM).has_entry_from(FromMode);
  33              		.loc 1 16 0
  34              		.cfi_escape 0x2e,0x4
  35 0012 FFE0     		jmp	*%eax
  36              		.cfi_endproc
  37              	.LFE1308:
  39              	.globl _ZN4quex25quex_scan_PROGRAM_on_exitEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE
  41              	_ZN4quex25quex_scan_PROGRAM_on_exitEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE:
  42              	.LFB1309:
  20:out/quex_scan.cpp **** 
  21:out/quex_scan.cpp **** void
  22:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_on_exit)(QUEX_TYPE_ANALYZER* me, const QUEX_NAME(Mode)* ToMode)  {
  43              		.loc 1 22 0
GAS LISTING /tmp/cc23nfB3.s 			page 2


  44              		.cfi_startproc
  45              		.cfi_personality 0x0,__gxx_personality_v0
  46              	.LVL1:
  47 0014 55       		pushl	%ebp
  48              	.LCFI2:
  49              		.cfi_def_cfa_offset 8
  50 0015 89E5     		movl	%esp, %ebp
  51              		.cfi_offset 5, -8
  52              	.LCFI3:
  53              		.cfi_def_cfa_register 5
  54 0017 83EC08   		subl	$8, %esp
  23:out/quex_scan.cpp ****     (void)me;
  24:out/quex_scan.cpp ****     (void)ToMode;
  25:out/quex_scan.cpp **** #   ifdef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
  26:out/quex_scan.cpp ****     QUEX_NAME(PROGRAM).has_exit_to(ToMode);
  55              		.loc 1 26 0
  56 001a 8B450C   		movl	12(%ebp), %eax
  57 001d 894508   		movl	%eax, 8(%ebp)
  58 0020 A1200000 		movl	_ZN4quex17quex_scan_PROGRAME+32, %eax
  58      00
  27:out/quex_scan.cpp **** #   endif
  28:out/quex_scan.cpp **** 
  29:out/quex_scan.cpp **** }
  59              		.loc 1 29 0
  60 0025 C9       		leave
  26:out/quex_scan.cpp ****     QUEX_NAME(PROGRAM).has_exit_to(ToMode);
  61              		.loc 1 26 0
  62              		.cfi_escape 0x2e,0x4
  63 0026 FFE0     		jmp	*%eax
  64              		.cfi_endproc
  65              	.LFE1309:
  67              	.globl _ZN4quex26quex_scan_PROGRAM_has_baseEPKNS_18quex_scan_Mode_tagE
  69              	_ZN4quex26quex_scan_PROGRAM_has_baseEPKNS_18quex_scan_Mode_tagE:
  70              	.LFB1310:
  30:out/quex_scan.cpp **** 
  31:out/quex_scan.cpp **** #if defined(QUEX_OPTION_INDENTATION_TRIGGER) 
  32:out/quex_scan.cpp **** void
  33:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_on_indentation)(QUEX_TYPE_ANALYZER*    me, 
  34:out/quex_scan.cpp ****                                         QUEX_TYPE_INDENTATION  Indentation, 
  35:out/quex_scan.cpp ****                                         QUEX_TYPE_CHARACTER*   Begin) {
  36:out/quex_scan.cpp ****     (void)me;
  37:out/quex_scan.cpp ****     (void)Indentation;
  38:out/quex_scan.cpp ****     (void)Begin;
  39:out/quex_scan.cpp **** #   if defined(QUEX_OPTION_TOKEN_POLICY_SINGLE)
  40:out/quex_scan.cpp ****     return __self_result_token_id;
  41:out/quex_scan.cpp **** #   else
  42:out/quex_scan.cpp ****     return;
  43:out/quex_scan.cpp **** #   endif
  44:out/quex_scan.cpp **** }
  45:out/quex_scan.cpp **** #endif
  46:out/quex_scan.cpp **** 
  47:out/quex_scan.cpp **** #ifdef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
  48:out/quex_scan.cpp **** bool
  49:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_base)(const QUEX_NAME(Mode)* Mode) {
  71              		.loc 1 49 0
  72              		.cfi_startproc
  73              		.cfi_personality 0x0,__gxx_personality_v0
GAS LISTING /tmp/cc23nfB3.s 			page 3


  74              	.LVL2:
  75 0028 55       		pushl	%ebp
  76              	.LCFI4:
  77              		.cfi_def_cfa_offset 8
  50:out/quex_scan.cpp ****     (void)Mode;
  51:out/quex_scan.cpp ****     return false;
  52:out/quex_scan.cpp **** }
  78              		.loc 1 52 0
  79 0029 31C0     		xorl	%eax, %eax
  49:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_base)(const QUEX_NAME(Mode)* Mode) {
  80              		.loc 1 49 0
  81 002b 89E5     		movl	%esp, %ebp
  82              		.cfi_offset 5, -8
  83              	.LCFI5:
  84              		.cfi_def_cfa_register 5
  85              		.loc 1 52 0
  86 002d 5D       		popl	%ebp
  87 002e C3       		ret
  88              		.cfi_endproc
  89              	.LFE1310:
  91              	.globl _ZN4quex32quex_scan_PROGRAM_has_entry_fromEPKNS_18quex_scan_Mode_tagE
  93              	_ZN4quex32quex_scan_PROGRAM_has_entry_fromEPKNS_18quex_scan_Mode_tagE:
  94              	.LFB1311:
  53:out/quex_scan.cpp **** bool
  54:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_entry_from)(const QUEX_NAME(Mode)* Mode) {
  95              		.loc 1 54 0
  96              		.cfi_startproc
  97              		.cfi_personality 0x0,__gxx_personality_v0
  98              	.LVL3:
  99 002f 55       		pushl	%ebp
 100              	.LCFI6:
 101              		.cfi_def_cfa_offset 8
  55:out/quex_scan.cpp ****     (void)Mode;
  56:out/quex_scan.cpp ****     return true; /* default */
  57:out/quex_scan.cpp **** }
 102              		.loc 1 57 0
 103 0030 B001     		movb	$1, %al
  54:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_entry_from)(const QUEX_NAME(Mode)* Mode) {
 104              		.loc 1 54 0
 105 0032 89E5     		movl	%esp, %ebp
 106              		.cfi_offset 5, -8
 107              	.LCFI7:
 108              		.cfi_def_cfa_register 5
 109              		.loc 1 57 0
 110 0034 5D       		popl	%ebp
 111 0035 C3       		ret
 112              		.cfi_endproc
 113              	.LFE1311:
 115              	.globl _ZN4quex29quex_scan_PROGRAM_has_exit_toEPKNS_18quex_scan_Mode_tagE
 117              	_ZN4quex29quex_scan_PROGRAM_has_exit_toEPKNS_18quex_scan_Mode_tagE:
 118              	.LFB1312:
  58:out/quex_scan.cpp **** bool
  59:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_exit_to)(const QUEX_NAME(Mode)* Mode) {
 119              		.loc 1 59 0
 120              		.cfi_startproc
 121              		.cfi_personality 0x0,__gxx_personality_v0
 122              	.LVL4:
GAS LISTING /tmp/cc23nfB3.s 			page 4


 123 0036 55       		pushl	%ebp
 124              	.LCFI8:
 125              		.cfi_def_cfa_offset 8
  60:out/quex_scan.cpp ****     (void)Mode;
  61:out/quex_scan.cpp ****     return true; /* default */
  62:out/quex_scan.cpp **** }
 126              		.loc 1 62 0
 127 0037 B001     		movb	$1, %al
  59:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_has_exit_to)(const QUEX_NAME(Mode)* Mode) {
 128              		.loc 1 59 0
 129 0039 89E5     		movl	%esp, %ebp
 130              		.cfi_offset 5, -8
 131              	.LCFI9:
 132              		.cfi_def_cfa_register 5
 133              		.loc 1 62 0
 134 003b 5D       		popl	%ebp
 135 003c C3       		ret
 136              		.cfi_endproc
 137              	.LFE1312:
 139              		.section	.text._ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE,"axG",@progbits,_ZN4que
 140              		.weak	_ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE
 142              	_ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE:
 143              	.LFB1178:
 144              		.file 2 "/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** /* -*- C++ -*- vim:set syntax=cpp: */
   2:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #ifndef __QUEX_INCLUDE_GUARD__BUFFER__BUFFER_I
   3:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #define __QUEX_INCLUDE_GUARD__BUFFER__BUFFER_I
   4:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
   5:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/analyzer/configuration/validation>
   6:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/asserts>
   7:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/buffer/asserts>
   8:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/definitions>
   9:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/buffer/Buffer>
  10:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/buffer/BufferFiller>
  11:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/buffer/Buffer_debug.i>
  12:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/MemoryManager>
  13:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  14:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #include <quex/code_base/temporary_macros_on>
  15:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  16:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** QUEX_NAMESPACE_MAIN_OPEN
  17:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  18:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void  QUEX_NAME(Buffer_init)(QUEX_NAME(Buffer)*  me, 
  19:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                              bool                ByteOrderReversionF); 
  20:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void  QUEX_NAME(Buffer_init_analyzis)(QUEX_NAME(Buffer)*  me, 
  21:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                                       bool                ByteOrderReversionF);
  22:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void 
  23:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_construct)(QUEX_NAME(BufferMemory)*  me, 
  24:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       QUEX_TYPE_CHARACTER*      Memory, 
  25:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       const size_t              Size,
  26:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       QUEX_TYPE_CHARACTER*      EndOfFileP);
  27:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void 
  28:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_init)(QUEX_NAME(BufferMemory)*  me, 
  29:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  QUEX_TYPE_CHARACTER*      Memory, 
  30:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  const size_t              Size,
  31:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  QUEX_TYPE_CHARACTER*      EndOfFileP,
  32:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  bool                      ExternalOwnerF);
  33:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void  QUEX_NAME(BufferMemory_destruct)(QUEX_NAME(BufferMemory)* me);
GAS LISTING /tmp/cc23nfB3.s 			page 5


  34:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  35:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     TEMPLATE_IN(InputHandleT) void
  36:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_construct)(QUEX_NAME(Buffer)*    me, 
  37:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 InputHandleT*         input_handle,
  38:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 QUEX_TYPE_CHARACTER*  InputMemory,
  39:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 const size_t          MemorySize,
  40:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 QUEX_TYPE_CHARACTER*  EndOfFileP,
  41:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 const char*           CharacterEncodingName, 
  42:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 const size_t          TranslationBufferMemorySize,
  43:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                 bool                  ByteOrderReversionF)
  44:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* The input can either come from MEMORY or from a STREAM. 
  45:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *
  46:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * input_handle == 0x0 => input via memory
  47:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *              != 0x0 => input via stream (spec. by input_handle)
  48:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *
  49:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * InputMemory != 0x0  => run directly on specified memory.
  50:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *             == 0x0  => get memory from memory manager.                              */ 
  51:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
  52:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       ifdef QUEX_OPTION_ASSERTS
  53:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( input_handle != 0x0 ) __quex_assert(InputMemory == 0x0 );
  54:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( InputMemory  != 0x0 ) { 
  55:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             __quex_assert(input_handle == 0x0 );
  56:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* If the input memory is provided, the content **must** be properly set up.       */
  57:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE(InputMemory + 1, EndOfFileP);
  58:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
  59:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
  60:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  61:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* No allocation of the base 'me->_memory' since it is a plain member of 'Buffer'.
  62:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * InputMemory == 0x0 => interact with memory manager to get memory.                   */
  63:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(BufferMemory_construct)(&(me->_memory), 
  64:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                           InputMemory, MemorySize, EndOfFileP);      
  65:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  66:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->on_buffer_content_change = 0x0;
  67:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  68:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->filler = QUEX_NAME(BufferFiller_new)(input_handle, CharacterEncodingName, TranslationBu
  69:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Until now, nothing is loaded into the buffer. */
  70:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  71:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(Buffer_init)(me, ByteOrderReversionF);
  72:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  73:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(me);
  74:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(me);
  75:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(me->_input_p == me->_memory._front + 1);
  76:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
  77:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
  78:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     TEMPLATE_IN(InputHandleT) void
  79:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_reset)(QUEX_NAME(Buffer)*  me, 
  80:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             InputHandleT*       input_handle, 
  81:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             const char*         CharacterEncodingName, 
  82:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             const size_t        TranslationBufferMemorySize)
  83:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     /* NOTE:     me->_content_character_index_begin == 0 
  84:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       and me->_content_character_index_end   == 0 
  85:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       => buffer is filled the very first time.                                    
  86:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      * NOTE: The reset of the buffer filler happens by 'delete' and 'new'. This is
  87:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       done in order to keep the template decoupled from the rest. Only the
  88:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       'new' functions (allocator + constructor) know about the template. The
  89:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       'delete_self' function pointer is set to a template that knows how to
  90:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *       deallocate the object.
GAS LISTING /tmp/cc23nfB3.s 			page 6


  91:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      */
  92:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
  93:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Setup the buffer filler for new analysis */
  94:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->filler != 0x0 ) { 
  95:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* If the same input handle is used, as before, than the following command
  96:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****              * ensures, that we start at the same position.                            */
  97:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->filler->seek_character_index(me->filler, 0);
  98:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->filler->delete_self(me->filler);
  99:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 100:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->filler = QUEX_NAME(BufferFiller_new)(input_handle, CharacterEncodingName, TranslationBu
 101:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 102:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(Buffer_init_analyzis)(me, me->_byte_order_reversion_active_f);
 103:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 104:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->filler != 0x0 ) {
 105:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* We only have to reset the input stream, if we are not at position zero    */
 106:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_NAME(BufferFiller_initial_load)(me);   
 107:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         } else {
 108:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->_content_character_index_begin = 0; 
 109:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->_content_character_index_end   = 0;
 110:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 111:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 112:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 113:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(me);
 114:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(me->_input_p == me->_memory._front + 1);
 115:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 116:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 117:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 118:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_init)(QUEX_NAME(Buffer)*  me, bool ByteOrderReversionF)
 119:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 120:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* By setting begin and end to zero, we indicate to the loader that
 121:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * this is the very first load procedure.                           */
 122:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_content_character_index_end   = 0;
 123:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_content_character_index_begin = 0; 
 124:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 125:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(Buffer_init_analyzis)(me, ByteOrderReversionF);
 126:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 127:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->filler != 0x0 ) {
 128:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* We only have to reset the input stream, if we are not at position zero    */
 129:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_NAME(BufferFiller_initial_load)(me);   
 130:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         } 
 131:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 132:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 133:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(me);
 134:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 135:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 136:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 137:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_init_analyzis)(QUEX_NAME(Buffer)*  me, bool ByteOrderReversionF)
 138:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 139:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_byte_order_reversion_active_f = ByteOrderReversionF;
 140:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 141:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Init is a special kind of reset, where some things might not be reset. */
 142:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_input_p        = me->_memory._front + 1;  /* First State does not increment */
 143:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_lexeme_start_p = me->_memory._front + 1;  /* Thus, set it on your own.      */
 144:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* NOTE: The terminating zero is stored in the first character **after** the  
 145:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       lexeme (matching character sequence). The begin of line pre-condition  
 146:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       is concerned with the last character in the lexeme, which is the one  
 147:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       before the 'char_covered_by_terminating_zero'.                          */
GAS LISTING /tmp/cc23nfB3.s 			page 7


 148:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_character_at_lexeme_start     = '\0';  /* (0 means: no character covered)   */
 149:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       ifdef  __QUEX_OPTION_SUPPORT_BEGIN_OF_LINE_PRE_CONDITION
 150:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_character_before_lexeme_start = '\n';  /* --> begin of line                 */
 151:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
 152:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 153:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 154:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 155:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_destruct)(QUEX_NAME(Buffer)* me)
 156:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 145              		.loc 2 156 0
 146              		.cfi_startproc
 147              		.cfi_personality 0x0,__gxx_personality_v0
 148              	.LVL5:
 149 0000 55       		pushl	%ebp
 150              	.LCFI10:
 151              		.cfi_def_cfa_offset 8
 152 0001 89E5     		movl	%esp, %ebp
 153              		.cfi_offset 5, -8
 154              	.LCFI11:
 155              		.cfi_def_cfa_register 5
 156 0003 53       		pushl	%ebx
 157 0004 83EC04   		subl	$4, %esp
 158              		.loc 2 156 0
 159 0007 8B5D08   		movl	8(%ebp), %ebx
 160              		.cfi_offset 3, -12
 157:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->filler != 0x0 ) { 
 161              		.loc 2 157 0
 162 000a 8B4328   		movl	40(%ebx), %eax
 163 000d 85C0     		testl	%eax, %eax
 164 000f 7411     		je	.L12
 165              	.LVL6:
 158:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->filler->delete_self(me->filler); 
 166              		.loc 2 158 0
 167 0011 83EC0C   		subl	$12, %esp
 168 0014 50       		pushl	%eax
 169              		.cfi_escape 0x2e,0x10
 170 0015 FF5010   		call	*16(%eax)
 159:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->filler = 0x0;
 171              		.loc 2 159 0
 172 0018 83C410   		addl	$16, %esp
 173 001b C7432800 		movl	$0, 40(%ebx)
 173      000000
 174              	.L12:
 175              	.LBB340:
 176              	.LBB341:
 160:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 161:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 162:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(BufferMemory_destruct)(&me->_memory);
 163:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 164:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 165:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 166:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_input_p_add_offset)(QUEX_NAME(Buffer)* buffer, const size_t Offset)
 167:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 168:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(buffer);
 169:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p += Offset; 
 170:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(buffer);
 171:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 8


 172:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 173:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 174:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_input_p_increment)(QUEX_NAME(Buffer)* buffer)
 175:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 176:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         ++(buffer->_input_p); 
 177:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 178:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 179:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 180:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_input_p_decrement)(QUEX_NAME(Buffer)* buffer)
 181:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 182:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         --(buffer->_input_p); 
 183:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 184:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 185:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 186:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_mark_lexeme_start)(QUEX_NAME(Buffer)* buffer)
 187:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 188:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_lexeme_start_p = buffer->_input_p; 
 189:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 190:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 191:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 192:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_seek_lexeme_start)(QUEX_NAME(Buffer)* buffer)
 193:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 194:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p = buffer->_lexeme_start_p;
 195:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 196:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 197:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER_POSITION
 198:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_tell_memory_adr)(QUEX_NAME(Buffer)* buffer)
 199:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 200:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* NOTE: We cannot check for general consistency here, because this function 
 201:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       may be used by the range skippers, and they write possibly something on
 202:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       the end of file pointer, that is different from the buffer limit code.
 203:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * NOT: QUEX_BUFFER_ASSERT_CONSISTENCY(buffer); */
 204:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       if defined (QUEX_OPTION_ASSERTS) && ! defined(__QUEX_OPTION_PLAIN_C)
 205:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return QUEX_TYPE_CHARACTER_POSITION(buffer->_input_p, buffer->_content_character_index_begi
 206:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       else
 207:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return (QUEX_TYPE_CHARACTER_POSITION)(buffer->_input_p);
 208:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
 209:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 210:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 211:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 212:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_seek_memory_adr)(QUEX_NAME(Buffer)* buffer, QUEX_TYPE_CHARACTER_POSITION Posit
 213:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 214:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       if      defined (QUEX_OPTION_ASSERTS) \
 215:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            && ! defined(__QUEX_OPTION_PLAIN_C)
 216:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Check whether the memory_position is relative to the current start position   
 217:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * of the stream. That means, that the tell_adr() command was called on the  
 218:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * same buffer setting or the positions have been adapted using the += operator.*/
 219:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(Position.buffer_start_position == (size_t)buffer->_content_character_index_be
 220:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p = Position.address;
 221:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       else
 222:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p = Position;
 223:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
 224:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 225:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 226:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 227:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER
 228:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_input_get)(QUEX_NAME(Buffer)* me)
GAS LISTING /tmp/cc23nfB3.s 			page 9


 229:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 230:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(me);
 231:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       ifdef QUEX_OPTION_ASSERTS
 232:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( *me->_input_p == QUEX_SETTING_BUFFER_LIMIT_CODE )
 233:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             __quex_assert(   me->_input_p == me->_memory._end_of_file_p 
 234:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                           || me->_input_p == me->_memory._back 
 235:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                           || me->_input_p == me->_memory._front);
 236:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
 237:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* std::fprintf(stderr, "## front = %08X; back = %08X; input_p = %08X;\n", (int)(me->_memor
 238:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return *(me->_input_p); 
 239:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 240:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 241:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER
 242:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_input_get_offset)(QUEX_NAME(Buffer)* me, const size_t Offset)
 243:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 244:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(me);
 245:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert( me->_input_p + Offset > me->_memory._front );
 246:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert( me->_input_p + Offset <= me->_memory._back );
 247:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return *(me->_input_p + Offset); 
 248:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 249:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 250:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 251:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_set_terminating_zero_for_lexeme)(QUEX_NAME(Buffer)* me)
 252:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 253:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_character_at_lexeme_start = *(me->_input_p); 
 254:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         *(me->_input_p) = '\0';
 255:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 256:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 257:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 258:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_undo_terminating_zero_for_lexeme)(QUEX_NAME(Buffer)* me)
 259:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 260:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* only need to reset, in case that the terminating zero was set*/
 261:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_character_at_lexeme_start != (QUEX_TYPE_CHARACTER)'\0' ) {  
 262:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             *(me->_input_p) = me->_character_at_lexeme_start;                  
 263:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             me->_character_at_lexeme_start = (QUEX_TYPE_CHARACTER)'\0';     
 264:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 265:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 266:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 267:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER*
 268:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_content_front)(QUEX_NAME(Buffer)* me)
 269:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._front + 1;
 271:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 272:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 273:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER*
 274:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_content_back)(QUEX_NAME(Buffer)* me)
 275:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 276:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._back - 1;
 277:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 278:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 279:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE size_t
 280:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_content_size)(QUEX_NAME(Buffer)* me)
 281:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 282:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return QUEX_NAME(BufferMemory_size)(&(me->_memory)) - 2;
 283:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 284:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 285:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER*  
GAS LISTING /tmp/cc23nfB3.s 			page 10


 286:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_text_end)(QUEX_NAME(Buffer)* me)
 287:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 288:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Returns a pointer to the position after the last text content inside the buffer. */
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 291:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 292:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 293:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE ptrdiff_t
 294:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_distance_input_to_text_end)(QUEX_NAME(Buffer)* me)
 295:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 296:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(me);
 297:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return QUEX_NAME(Buffer_text_end)(me) - me->_input_p;
 298:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 299:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 300:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 301:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_end_of_file_set)(QUEX_NAME(Buffer)* me, QUEX_TYPE_CHARACTER* Position)
 302:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 303:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* NOTE: The content starts at _front[1], since _front[0] contains 
 304:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       the buffer limit code. */
 305:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_memory._end_of_file_p    = Position;
 306:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         *(me->_memory._end_of_file_p) = QUEX_SETTING_BUFFER_LIMIT_CODE;
 307:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 308:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Not yet: QUEX_BUFFER_ASSERT_CONSISTENCY(me) -- pointers may still have to be adapted. */
 309:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 310:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 311:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 312:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_end_of_file_unset)(QUEX_NAME(Buffer)* buffer)
 313:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 314:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* If the end of file pointer is to be 'unset' me must assume that the storage as been
 315:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * overidden with something useful. Avoid setting _memory._end_of_file_p = 0x0 while the 
 316:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * position pointed to still contains the buffer limit code.                             */
 317:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_memory._end_of_file_p = 0x0;
 318:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Not yet: QUEX_BUFFER_ASSERT_CONSISTENCY(me) -- pointers may still have to be adapted. */
 319:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 320:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 321:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE bool 
 322:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_is_end_of_file)(QUEX_NAME(Buffer)* buffer)
 323:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 324:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 325:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return buffer->_input_p == buffer->_memory._end_of_file_p;
 326:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 327:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 328:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE bool                  
 329:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_is_begin_of_file)(QUEX_NAME(Buffer)* buffer)
 330:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 331:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 332:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if     ( buffer->_input_p != buffer->_memory._front )  return false;
 333:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else if( buffer->_content_character_index_begin != 0 ) return false;
 334:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return true;
 335:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 336:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 337:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void  
 338:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_move_forward)(QUEX_NAME(Buffer)* me, const ptrdiff_t CharacterN)
 339:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 340:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 341:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        /* Why: __quex_assert(QUEX_SETTING_BUFFER_MIN_FALLBACK_N >= 1); ? fschaef 08y11m1d> */
 342:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
GAS LISTING /tmp/cc23nfB3.s 			page 11


 343:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        if( CharacterN < QUEX_NAME(Buffer_distance_input_to_text_end)(me) ) {
 344:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            /* _input_p + CharacterN < text_end, thus no reload necessary. */
 345:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            me->_input_p += CharacterN;
 346:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        }
 347:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        else {
 348:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            /* _input_p + CharacterN >= text_end, thus we need to reload. */
 349:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            if( me->filler == 0x0 || me->_memory._end_of_file_p != 0x0 ) {
 350:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                me->_input_p = QUEX_NAME(Buffer_text_end)(me);  /* No reload possible */
 351:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            } else {
 352:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                /* Reload until delta is reachable inside buffer. */
 353:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                ptrdiff_t delta    = CharacterN; 
 354:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                ptrdiff_t distance = QUEX_NAME(Buffer_distance_input_to_text_end)(me);
 355:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                do {
 356:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    delta -= distance;
 357:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 358:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    me->_input_p        = me->_memory._back; /* Prepare reload forward. */
 359:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    me->_lexeme_start_p = me->_input_p;
 360:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    if( QUEX_NAME(BufferFiller_load_forward)(me) == 0 ) {
 361:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        me->_input_p = QUEX_NAME(Buffer_text_end)(me);  /* No reload possible */
 362:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        break;
 363:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    } 
 364:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    /* After loading forward, we need to increment ... the way the game is to be pla
 365:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    ++(me->_input_p);
 366:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    distance = QUEX_NAME(Buffer_distance_input_to_text_end)(me);
 367:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 368:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    if( delta < distance ) {
 369:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        /* _input_p + delta < text_end, thus no further reload necessary. */
 370:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        me->_input_p += delta;
 371:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        break;
 372:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    }
 373:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                } while( 1 + 1 == 2 );
 374:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            }
 375:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        }
 376:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_lexeme_start_p            = me->_input_p;
 377:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_character_at_lexeme_start = *(me->_lexeme_start_p);
 378:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #      ifdef __QUEX_OPTION_SUPPORT_BEGIN_OF_LINE_PRE_CONDITION
 379:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_character_before_lexeme_start = *(me->_lexeme_start_p - 1);
 380:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #      endif
 381:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 382:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 383:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 384:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     
 385:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void  
 386:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_move_backward)(QUEX_NAME(Buffer)* me, const ptrdiff_t CharacterN)
 387:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 388:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 389:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 390:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        /* When going backward, anyway a non-zero width distance is left ahead. */
 391:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        if( CharacterN < (me->_input_p - QUEX_NAME(Buffer_content_front)(me)) ) {
 392:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            /* _input_p - CharacterN < content_front, thus no reload necessary. */
 393:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            me->_input_p -= CharacterN;
 394:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        }
 395:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        else {
 396:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            /* _input_p - CharacterN < _front + 1 >= text_end, thus we need to reload. */
 397:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            if( me->filler == 0x0 || me->_content_character_index_begin == 0 ) { 
 398:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                me->_input_p = QUEX_NAME(Buffer_content_front)(me);
 399:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            } else {
GAS LISTING /tmp/cc23nfB3.s 			page 12


 400:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                /* Reload until delta is reachable inside buffer. */
 401:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                ptrdiff_t delta    = (ptrdiff_t)CharacterN; 
 402:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                ptrdiff_t distance = (ptrdiff_t)(me->_input_p - QUEX_NAME(Buffer_content_front)(me))
 403:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                do {
 404:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    delta -= distance;
 405:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 406:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    me->_input_p        = me->_memory._front; /* Prepare reload backward. */
 407:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    me->_lexeme_start_p = me->_input_p + 1;
 408:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    if( QUEX_NAME(BufferFiller_load_backward)(me) == 0 ) {
 409:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        me->_input_p = QUEX_NAME(Buffer_content_front)(me); /* No reload possible */
 410:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        break;
 411:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    } 
 412:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    /* After loading backwards, we need **not** to increment ... the way the game is
 413:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    distance = (ptrdiff_t)(me->_input_p - QUEX_NAME(Buffer_content_front)(me));
 414:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 415:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    if( delta < distance ) {
 416:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        /* _input_p + delta < text_end, thus no further reload necessary. */
 417:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        me->_input_p -= delta;
 418:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                        break;
 419:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                    }
 420:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                } while( 1 + 1 == 2 );
 421:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            }
 422:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        }
 423:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_lexeme_start_p = me->_input_p;
 424:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_character_at_lexeme_start = *(me->_lexeme_start_p);
 425:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #      ifdef __QUEX_OPTION_SUPPORT_BEGIN_OF_LINE_PRE_CONDITION
 426:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        me->_character_before_lexeme_start = *(me->_lexeme_start_p - 1);
 427:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #      endif
 428:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 429:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****        QUEX_BUFFER_ASSERT_CONSISTENCY(me);
 430:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 431:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 432:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE ptrdiff_t  
 433:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_tell)(QUEX_NAME(Buffer)* me)
 434:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 435:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* This function returns the character index that corresponds to the 
 436:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * current setting of the input pointer. Note, that the content starts
 437:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * at one position after the memory (buffer limitting char at _front.).         
 438:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          */
 439:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         const ptrdiff_t DeltaToBufferBegin = me->_input_p - me->_memory._front - 1;
 440:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Adding the current offset of the content of the buffer in the stream. 
 441:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * If there is no filler, there is no stream, then there is also no offset. */
 442:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->filler == 0x0 ) 
 443:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             return DeltaToBufferBegin;
 444:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else
 445:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             return DeltaToBufferBegin + me->_content_character_index_begin;
 446:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 447:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 448:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void    
 449:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_seek)(QUEX_NAME(Buffer)* me, const ptrdiff_t CharacterIndex)
 450:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 451:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* This function sets the _input_p according to a character index of the
 452:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * input stream (if there is a stream). It is the inverse of 'tell()'.   */
 453:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         const ptrdiff_t CurrentCharacterIndex = QUEX_NAME(Buffer_tell)(me);
 454:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( CharacterIndex > CurrentCharacterIndex )
 455:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_NAME(Buffer_move_forward)(me, CharacterIndex - CurrentCharacterIndex);
 456:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else
GAS LISTING /tmp/cc23nfB3.s 			page 13


 457:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_NAME(Buffer_move_backward)(me, CurrentCharacterIndex - CharacterIndex);
 458:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 459:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 460:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void          
 461:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_move_away_passed_content)(QUEX_NAME(Buffer)* me)
 462:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     /* PURPOSE: Moves buffer content that has been passed by out of the buffer.
 463:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *
 464:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      * Example:  
 465:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *
 466:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *   buffer before: 
 467:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *                         _input_p
 468:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *                            |
 469:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *            [case( x < 10 ) { print; } else ]
 470:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *
 471:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *   buffer after:   
 472:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *              _input_p
 473:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *                 |
 474:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *            [case( x < 10 ) { print; } else ]
 475:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *
 476:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *            |----|
 477:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      *         fallback size                                                       */
 478:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { 
 479:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*  ContentFront      = QUEX_NAME(Buffer_content_front)(me);
 480:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*  RemainderBegin    = me->_input_p;
 481:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*  RemainderEnd      = me->_memory._end_of_file_p;
 482:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*  MoveRegionBegin   = RemainderBegin - (ptrdiff_t)QUEX_SETTING_BUFFER_M
 483:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         ptrdiff_t             MoveRegionSize    = (ptrdiff_t)(RemainderEnd - MoveRegionBegin);
 484:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 485:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Asserts ensure, that we are running in 'buffer-based-mode' */
 486:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(me->_content_character_index_begin == 0); 
 487:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 488:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* If the distance to content front <= the fallback size, no move possible.  */
 489:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( MoveRegionBegin <= ContentFront ) { return; }
 490:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 491:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __QUEX_STD_memmove((void*)ContentFront,
 492:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                            (void*)MoveRegionBegin,
 493:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                            (size_t)MoveRegionSize * sizeof(QUEX_TYPE_CHARACTER));
 494:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 495:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 496:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Anything before '_input_p + 1' is considered to be 'past'. However, leave
 497:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * a number of 'FALLBACK' to provide some pre-conditioning to work.          */
 498:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 499:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(Buffer_end_of_file_set)(me, ContentFront + MoveRegionSize);
 500:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 501:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* (*) Pointer adaption:
 502:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *     IMPORTANT: This function is called outside the 'engine' so the 
 503:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *                next char to be read is: '_input_p' not '_input_p + 1'    */
 504:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_input_p        = ContentFront + QUEX_SETTING_BUFFER_MIN_FALLBACK_N;   
 505:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* NOTE: This operation can only happen from outside the lexical analysis
 506:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       process, i.e. either in a TERMINAL (pattern action) or outside the
 507:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          *       receive function calls.                                            */
 508:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_lexeme_start_p = me->_input_p; 
 509:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 510:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 511:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE size_t          
 512:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_size)(QUEX_NAME(BufferMemory)* me)
 513:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { return (size_t)(me->_back - me->_front + 1); }
GAS LISTING /tmp/cc23nfB3.s 			page 14


 514:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 515:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void
 516:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(Buffer_reverse_byte_order)(QUEX_TYPE_CHARACTER* Begin, QUEX_TYPE_CHARACTER* End)
 517:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 518:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         uint8_t              tmp = 0xFF;
 519:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER* iterator = 0x0;
 520:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 521:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         switch( sizeof(QUEX_TYPE_CHARACTER) ) {
 522:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         default:
 523:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             __quex_assert(false);
 524:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             break;
 525:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         case 1:
 526:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* Nothing to be done */
 527:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             break;
 528:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         case 2:
 529:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             for(iterator=Begin; iterator != End; ++iterator) {
 530:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 tmp = *(((uint8_t*)iterator) + 0);
 531:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 0) = *(((uint8_t*)iterator) + 1);
 532:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 1) = tmp;
 533:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             }
 534:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             break;
 535:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         case 4:
 536:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             for(iterator=Begin; iterator != End; ++iterator) {
 537:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 tmp = *(((uint8_t*)iterator) + 0);
 538:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 0) = *(((uint8_t*)iterator) + 3);
 539:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 3) = tmp;
 540:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 tmp = *(((uint8_t*)iterator) + 1);
 541:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 1) = *(((uint8_t*)iterator) + 2);
 542:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                 *(((uint8_t*)iterator) + 2) = tmp;
 543:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             }
 544:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             break;
 545:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 546:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 547:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 548:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void 
 549:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_construct)(QUEX_NAME(BufferMemory)*  me, 
 550:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       QUEX_TYPE_CHARACTER*      Memory, 
 551:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       const size_t              Size,
 552:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                       QUEX_TYPE_CHARACTER*      EndOfFileP)
 553:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     /* InputMemory == 0x0 => Allocate memory yourself. Not externally owned.
 554:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****      * Else               => Use provided memory, mark that it is externally owned. */
 555:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 556:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*   chunk         = Memory;
 557:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER*   end_of_file_p = EndOfFileP;
 558:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         bool                   external_f    = true;
 559:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 560:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( Memory == 0x0 ) { 
 561:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* The actual 'memory chunk' is an 'owned member resource' accessed by pointer.
 562:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****              * Thus, it is allocated in the constructor.                                    */
 563:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             chunk         = QUEX_NAME(MemoryManager_BufferMemory_allocate)(Size * sizeof(QUEX_TYPE_
 564:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             end_of_file_p = 0x0;
 565:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             external_f    = false; /* We own the memory, not someone outside. */
 566:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         } 
 567:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 568:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(BufferMemory_init)(me, chunk, Size, end_of_file_p, external_f);
 569:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 570:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
GAS LISTING /tmp/cc23nfB3.s 			page 15


 571:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE QUEX_TYPE_CHARACTER* 
 572:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_reset)(QUEX_NAME(BufferMemory)*  me, 
 573:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                   QUEX_TYPE_CHARACTER*      Memory, 
 574:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                   const size_t              Size,
 575:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                   QUEX_TYPE_CHARACTER*      EndOfContentP)
 576:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     /* Memory == 0x0 => no initialization, only return current pointer to memory. */
 577:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 578:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_TYPE_CHARACTER* old_memory = (me->_external_owner_f) ? me->_front : 0x0;
 579:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 580:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( Memory == 0x0 ) return old_memory;
 581:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 582:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Destruct the current memory (if it is not externally owned. */
 583:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(BufferMemory_destruct)(me);
 584:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 585:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* It is assumed that if memory is reset, it is owned externally not by the engine. */
 586:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(Memory != 0x0);
 587:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 588:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Content must be provided (event empty will do, i.e. EndOfContentP = Memory + 1) */
 589:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(EndOfContentP > Memory);
 590:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(EndOfContentP <= Memory + Size);
 591:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 592:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         QUEX_NAME(BufferMemory_init)(me, Memory, Size, EndOfContentP, /* ExternalOwnerF */ true);
 593:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 594:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return old_memory;
 595:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 596:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 597:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void 
 598:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_init)(QUEX_NAME(BufferMemory)*  me, 
 599:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  QUEX_TYPE_CHARACTER*      Memory, 
 600:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  const size_t              Size,
 601:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  QUEX_TYPE_CHARACTER*      EndOfFileP,
 602:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                                  bool                      ExternalOwnerF) 
 603:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 604:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         /* Min(Size) = 2 characters for buffer limit code (front and back) + at least
 605:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****          * one character to be read in forward direction.                                   */
 606:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(Memory != 0x0);
 607:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         __quex_assert(Size != 0);
 608:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       ifdef QUEX_OPTION_ASSERTS
 609:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( Size <= QUEX_SETTING_BUFFER_MIN_FALLBACK_N + 2) {
 610:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_ERROR_EXIT("Error: Tried to initialize buffer memory with a size less or equal\n"
 611:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             "Error: to QUEX_SETTING_BUFFER_MIN_FALLBACK_N + 2. Maybe, define\n"
 612:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             "Error: -DQUEX_SETTING_BUFFER_MIN_FALLBACK_N=0, if no pre-contexts\n"
 613:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                             "Error: are involved.");
 614:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 615:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else if( EndOfFileP != 0x0 ) {
 616:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             __quex_assert(EndOfFileP > Memory);
 617:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             __quex_assert(EndOfFileP <= Memory + Size);
 618:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 619:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif
 620:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 621:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_front            = Memory;
 622:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_end_of_file_p    = EndOfFileP;
 623:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_back             = Memory + (Size - 1);
 624:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_external_owner_f = ExternalOwnerF;
 625:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         *(me->_front)         = QUEX_SETTING_BUFFER_LIMIT_CODE;
 626:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         *(me->_back)          = QUEX_SETTING_BUFFER_LIMIT_CODE;
 627:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_end_of_file_p != 0x0 ) {
GAS LISTING /tmp/cc23nfB3.s 			page 16


 628:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             *(me->_end_of_file_p) = QUEX_SETTING_BUFFER_LIMIT_CODE;
 629:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 630:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 631:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       ifdef QUEX_OPTION_ASSERTS
 632:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( EndOfFileP != 0x0 ) {
 633:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****            if( EndOfFileP < me->_back - 1 ) {
 634:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****                __QUEX_STD_memset(EndOfFileP + 1, 0xFF, (size_t)((me->_back - EndOfFileP) - (ptrdiff
 635:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             }
 636:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         } 
 637:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** #       endif 
 638:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 639:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 640:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_INLINE void 
 641:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     QUEX_NAME(BufferMemory_destruct)(QUEX_NAME(BufferMemory)* me) 
 642:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     {
 643:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_external_owner_f == false && me->_front != (QUEX_TYPE_CHARACTER*)0x0 ) {
 177              		.loc 2 643 0
 178 0022 807B0C00 		cmpb	$0, 12(%ebx)
 179 0026 7512     		jne	.L13
 180 0028 8B03     		movl	(%ebx), %eax
 181 002a 85C0     		testl	%eax, %eax
 182 002c 740C     		je	.L13
 183              	.LBB342:
 184              	.LBB343:
 185              	.LBB344:
 186              		.file 3 "/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** /* -*- C++ -*- vim: set syntax=cpp: */
   2:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #ifndef __QUEX_INCLUDE_GUARD__MEMORY_MANAGER_I
   3:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #define __QUEX_INCLUDE_GUARD__MEMORY_MANAGER_I
   4:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** 
   5:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #include <quex/code_base/definitions>
   6:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** 
   7:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #if   defined(__QUEX_OPTION_CONVERTER)
   8:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   include <quex/code_base/buffer/converter/BufferFiller_Converter>
   9:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   if defined (QUEX_OPTION_CONVERTER_ICU)
  10:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #      include <quex/code_base/buffer/converter/icu/Converter_ICU>
  11:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   endif
  12:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   if defined (QUEX_OPTION_CONVERTER_ICONV)
  13:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #      include <quex/code_base/buffer/converter/iconv/Converter_IConv>
  14:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   endif
  15:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #else
  16:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #   include <quex/code_base/buffer/plain/BufferFiller_Plain>
  17:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #endif
  18:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** 
  19:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #include <quex/code_base/temporary_macros_on>
  20:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****  
  21:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** QUEX_NAMESPACE_MAIN_OPEN
  22:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** 
  23:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     QUEX_INLINE uint8_t*
  24:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     QUEX_NAME(MemoryManager_Default_allocate)(const size_t ByteN)
  25:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     {
  26:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****          uint8_t*  result = (uint8_t*)__QUEX_STD_malloc((size_t)ByteN);
  27:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #        ifdef QUEX_OPTION_ASSERTS
  28:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****          __QUEX_STD_memset((void*)result, 0xFF, ByteN);
  29:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i **** #        endif
  30:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****          return result;
  31:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 17


  32:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****        
  33:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     QUEX_INLINE void 
  34:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     QUEX_NAME(MemoryManager_Default_free)(void* Obj)  
  35:/home/fschaef/prj/quex/trunk/quex/code_base/MemoryManager.i ****     { __QUEX_STD_free(Obj); }
 187              		.loc 3 35 0
 188 002e 83EC0C   		subl	$12, %esp
 189 0031 50       		pushl	%eax
 190 0032 E8FCFFFF 		call	free
 190      FF
 191 0037 83C410   		addl	$16, %esp
 192              	.L13:
 193              	.LBE344:
 194              	.LBE343:
 195              	.LBE342:
 644:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             QUEX_NAME(MemoryManager_BufferMemory_free)(me->_front);
 645:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****             /* me->_external_owner_f = false; */
 646:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         }
 647:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i **** 
 648:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_front = me->_back = (QUEX_TYPE_CHARACTER*)0x0;
 196              		.loc 2 648 0
 197 003a C7430400 		movl	$0, 4(%ebx)
 197      000000
 198 0041 C7030000 		movl	$0, (%ebx)
 198      0000
 199              	.LBE341:
 200              	.LBE340:
 163:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     }
 201              		.loc 2 163 0
 202 0047 8B5DFC   		movl	-4(%ebp), %ebx
 203              	.LVL7:
 204 004a C9       		leave
 205 004b C3       		ret
 206              		.cfi_endproc
 207              	.LFE1178:
 209              		.section	.text._ZN4quex18quex_scan_destructEPNS_9quex_scanE,"axG",@progbits,_ZN4quex18quex_scan_de
 210              		.weak	_ZN4quex18quex_scan_destructEPNS_9quex_scanE
 212              	_ZN4quex18quex_scan_destructEPNS_9quex_scanE:
 213              	.LFB1227:
 214              		.file 4 "/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** /* -*- C++ -*- vim:set syntax=cpp:
   2:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****  * (C) 2005-2009 Frank-Rene Schaefer
   3:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****  * ABSOLUTELY NO WARRANTY                   */
   4:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #ifndef __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__CONSTRUCTOR_I
   5:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #define __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__CONSTRUCTOR_I
   6:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
   7:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #include <quex/code_base/buffer/Buffer.i>
   8:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
   9:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #include <quex/code_base/temporary_macros_on>
  10:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  11:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAMESPACE_MAIN_OPEN
  12:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  13:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
  14:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(construct_memory)(QUEX_TYPE_ANALYZER*  me,
  15:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             QUEX_TYPE_CHARACTER* BufferMemoryBegin, 
  16:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             size_t               BufferMemorySize,
  17:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             QUEX_TYPE_CHARACTER* BufferEndOfContentP,  /* = 0x0   */
  18:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             const char*          CharacterEncodingName /* = 0x0   */,
GAS LISTING /tmp/cc23nfB3.s 			page 18


  19:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             bool                 ByteOrderReversionF   /* = false */)
  20:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
  21:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     size_t  memory_size = BufferMemoryBegin != 0 ? BufferMemorySize 
  22:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                           :                        QUEX_SETTING_BUFFER_SIZE;
  23:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   ifdef QUEX_OPTION_ASSERTS
  24:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_TYPE_CHARACTER*   iterator = 0x0;
  25:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  26:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     __quex_assert(memory_size == 0 || memory_size > 2);
  27:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( BufferMemoryBegin != 0x0 ) {
  28:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         /* End of File must be inside the buffer, because we assume that the buffer
  29:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****          * contains all that is required.                                           */
  30:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         if( BufferMemorySize <= QUEX_SETTING_BUFFER_MIN_FALLBACK_N + 2) {
  31:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****             QUEX_ERROR_EXIT("\nConstructor: Provided memory size must be more than 2 greater than\n
  32:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             "Constructor: QUEX_SETTING_BUFFER_MIN_FALLBACK_N. If in doubt, specify\
  33:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             "Constructor: -DQUEX_SETTING_BUFFER_MIN_FALLBACK_N=0 as compile option.
  34:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         }
  35:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         if(    BufferEndOfContentP < BufferMemoryBegin 
  36:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****             || BufferEndOfContentP > (BufferMemoryBegin + BufferMemorySize - 1)) {
  37:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****             QUEX_ERROR_EXIT("\nConstructor: Argument 'BufferEndOfContentP' must be inside the provi
  38:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             "Constructor: buffer (speficied by 'BufferMemoryBegin' and 'BufferMemor
  39:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             "Constructor: Note, that the last element of the buffer is to be filled
  40:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                             "Constructor: the buffer limit code character.\n");
  41:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         }
  42:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     }
  43:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( BufferEndOfContentP != 0x0 ) {
  44:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         __quex_assert(BufferEndOfContentP >  BufferMemoryBegin);
  45:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         __quex_assert(BufferEndOfContentP <= BufferMemoryBegin + memory_size - 1);
  46:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  47:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         /* The memory provided must be initialized. If it is not, then that's wrong.
  48:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****          * Try to detect this by searching for BLC and PTC.                         */
  49:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         for(iterator = BufferMemoryBegin + 1; iterator != BufferEndOfContentP; ++iterator) {
  50:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****             if(    *iterator == QUEX_SETTING_BUFFER_LIMIT_CODE 
  51:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                 || *iterator == QUEX_SETTING_PATH_TERMINATION_CODE ) {
  52:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                 QUEX_ERROR_EXIT("\nConstructor: Buffer limit code and/or path termination code appe
  53:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 "Constructor: when pointed to user memory. Note, that the memory po
  54:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 "Constructor: be initialized!");
  55:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****             }
  56:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         }
  57:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     }
  58:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   endif
  59:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  60:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(constructor_core)(me, 
  61:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   if defined(__QUEX_OPTION_PLAIN_C)
  62:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 (FILE*)0x0,
  63:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   else
  64:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 (void*)0x0, 
  65:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   endif
  66:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 CharacterEncodingName, ByteOrderReversionF,
  67:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 BufferMemoryBegin, memory_size, BufferEndOfContentP);
  68:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
  69:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  70:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
  71:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(construct_file_name)(QUEX_TYPE_ANALYZER* me,
  72:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                const char*         Filename, 
  73:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                const char*         CharacterEncodingName /* = 0x0   */,
  74:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                bool                ByteOrderReversionF   /* = false */)
  75:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
GAS LISTING /tmp/cc23nfB3.s 			page 19


  76:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     /* Buffer: Size = (see macro def.), Fallback = 10 Characters
  77:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * prefer FILE* based buffers, because we can turn low-level buffering off.
  78:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * ownership of FILE* id passed to the input strategy of the buffer.         */
  79:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     __QUEX_STD_FILE*   fh = __QUEX_STD_fopen(Filename, "rb");
  80:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  81:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(construct_FILE)(me, fh, CharacterEncodingName, ByteOrderReversionF);
  82:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  83:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     /* Recall, that this thing as to be deleted/closed */
  84:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     me->__file_handle_allocated_by_constructor = fh;
  85:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
  86:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  87:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
  88:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(construct_FILE)(QUEX_TYPE_ANALYZER* me,
  89:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                           __QUEX_STD_FILE*    fh, 
  90:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                           const char*         CharacterEncodingName /* = 0x0   */,
  91:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                           bool                ByteOrderReversionF   /* = false */)
  92:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
  93:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( fh == NULL )             QUEX_ERROR_EXIT("Error: received NULL as a file handle.");
  94:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
  95:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     /* At the time of this writing 'stdin' as located in the C++ global namespace. 
  96:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * This seemed suspicous to the author. To avoid compilation errors in the future
  97:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * the test for the standard input is only active in 'C'. It is only about
  98:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * user information anyway. So better no risks taken.      <fschaef 2010y02m06d> */
  99:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   ifdef __QUEX_OPTION_PLAIN_C
 100:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( fh == __QUEX_STD_STDIN ) QUEX_ERROR_EXIT(__QUEX_MESSAGE_STDIN_IN_CONSTRUCTOR);
 101:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   endif
 102:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     setbuf(fh, 0);   /* turn off system based buffering! 
 103:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     **               ** this is essential to profit from the quex buffer! */
 104:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(constructor_core)(me, fh, 
 105:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 CharacterEncodingName, ByteOrderReversionF, 
 106:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 0x0, QUEX_SETTING_BUFFER_SIZE, 0x0);
 107:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 108:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 109:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #ifndef __QUEX_OPTION_PLAIN_C
 110:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
 111:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(construct_istream)(QUEX_TYPE_ANALYZER* me,
 112:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                              std::istream*       p_input_stream, 
 113:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                              const char*         CharacterEncodingName /* = 0x0   */,
 114:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                              bool                ByteOrderReversionF   /* = false */)
 115:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 116:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( p_input_stream == NULL )     QUEX_ERROR_EXIT("Error: received NULL as pointer to input stre
 117:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( p_input_stream == std::cin ) QUEX_ERROR_EXIT(__QUEX_MESSAGE_STDIN_IN_CONSTRUCTOR);
 118:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(constructor_core)(me, p_input_stream, 
 119:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 CharacterEncodingName, ByteOrderReversionF, 
 120:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 0x0,  QUEX_SETTING_BUFFER_SIZE, 0x0);
 121:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 122:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #endif
 123:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 124:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 125:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #if defined(__QUEX_OPTION_WCHAR_T) && ! defined(__QUEX_OPTION_PLAIN_C)
 126:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
 127:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(construct_wistream)(QUEX_TYPE_ANALYZER* me,
 128:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                               std::wistream*      p_input_stream, 
 129:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                               const char*         CharacterEncodingName /* = 0x0   */,
 130:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                               bool                ByteOrderReversionF   /* = false */)
 131:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 132:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( p_input_stream == NULL ) 
GAS LISTING /tmp/cc23nfB3.s 			page 20


 133:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         QUEX_ERROR_EXIT("Error: received NULL as pointer to input stream.\n");
 134:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(constructor_core)(me, p_input_stream, 
 135:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 CharacterEncodingName, ByteOrderReversionF, 
 136:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 0x0, QUEX_SETTING_BUFFER_SIZE, 0x0);
 137:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 138:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #endif
 139:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 140:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void
 141:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(destruct)(QUEX_TYPE_ANALYZER* me) 
 142:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 215              		.loc 4 142 0
 216              		.cfi_startproc
 217              		.cfi_personality 0x0,__gxx_personality_v0
 218              	.LVL8:
 219 0000 55       		pushl	%ebp
 220              	.LCFI12:
 221              		.cfi_def_cfa_offset 8
 222 0001 89E5     		movl	%esp, %ebp
 223              		.cfi_offset 5, -8
 224              	.LCFI13:
 225              		.cfi_def_cfa_register 5
 226 0003 57       		pushl	%edi
 227 0004 56       		pushl	%esi
 228 0005 53       		pushl	%ebx
 229 0006 83EC1C   		subl	$28, %esp
 230              		.loc 4 142 0
 231 0009 8B5D08   		movl	8(%ebp), %ebx
 232              		.cfi_offset 3, -20
 233              		.cfi_offset 6, -16
 234              		.cfi_offset 7, -12
 235              	.LBB345:
 236              	.LBB346:
 237              	.LBB347:
 238              	.LBB348:
 239              	.LBB349:
 240              	.LBB350:
 241              		.file 5 "/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** /* -*- C++ -*- vim:set syntax=cpp:
   2:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  *
   3:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  * (C) 2004-2009 Frank-Rene Schaefer
   4:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  *
   5:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  * __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__INCLUDE_STACK_I may be undefined in case
   6:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  *    that multiple lexical analyzers are used. Then, the name of the
   7:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****  *    QUEX_NAME(Accumulator) must be different.                             */
   8:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #ifndef __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__INCLUDE_STACK_I
   9:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #define __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__INCLUDE_STACK_I
  10:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  11:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #ifndef   QUEX_TYPE_ANALYZER
  12:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #   error "Macro QUEX_TYPE_ANALYZER must be defined before inclusion of this file."
  13:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #endif
  14:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  15:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  16:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #include <quex/code_base/temporary_macros_on>
  17:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  18:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** QUEX_NAMESPACE_MAIN_OPEN
  19:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  20:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     TEMPLATE_IN(InputHandleT) void    
GAS LISTING /tmp/cc23nfB3.s 			page 21


  21:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_NAME(include_push)(QUEX_TYPE_ANALYZER*    me,
  22:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                             InputHandleT*          Optional_InputHandle,
  23:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                             QUEX_TYPE_CHARACTER*   Optional_InputName,
  24:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                             const QUEX_NAME(Mode)* Mode, 
  25:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                             const char*            CharacterCodecName /* = 0x0 */)
  26:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     {
  27:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* (A) Freezing and Copying away:
  28:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *
  29:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *     memento_pack(...): Store the lexical analyzer's to the state before including   */
  30:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         InputHandleT*        input_handle = Optional_InputHandle;
  31:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifndef __QUEX_OPTION_PLAIN_C
  32:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Memento)*  m            = QUEX_NAME(memento_pack)<InputHandleT>(me, Optional_Inpu
  33:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       else
  34:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Memento)*  m            = QUEX_NAME(memento_pack)(me, Optional_InputName, &input_
  35:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
  36:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  37:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         if( input_handle == 0x0 ) {
  38:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****             QUEX_ERROR_EXIT("Segment 'memento_pack' segment did not set the input_handle.");
  39:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         }
  40:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  41:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* (B) Initializations on Inclusion:
  42:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *  
  43:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *    (1) A new buffer is required for the new content.                           */
  44:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Buffer_construct)(&me->buffer, input_handle, 
  45:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                     0x0, QUEX_SETTING_BUFFER_SIZE, 0x0,
  46:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                     CharacterCodecName, QUEX_SETTING_TRANSLATION_BUFFER_SIZE,
  47:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                     me->buffer._byte_order_reversion_active_f);
  48:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  49:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (2) If requested: transition to a specific mode for new file.               */
  50:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         if( Mode != 0x0 ) QUEX_NAME(set_mode_brutally)(me, (QUEX_NAME(Mode)*)Mode);
  51:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*        now leave alone:
  52:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               __current_mode_p 
  53:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               current_analyzer_function                                       
  54:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               DEBUG_analyzer_function_at_entry                                 */
  55:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  56:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Mode stack is not subject to include handling.                          */
  57:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Tokens and token queues are not subject to include handling.            */
  58:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  59:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (3) Initialize line, column, and indentation counters.                      */
  60:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifdef __QUEX_OPTION_COUNTER
  61:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Counter_construct)(&me->counter);
  62:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
  63:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  64:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (4) Initialize accumulator content.                                         */
  65:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifdef QUEX_OPTION_STRING_ACCUMULATOR
  66:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Accumulator_construct)(&me->accumulator, me);
  67:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
  68:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Post categorizer is not subject to include handling.                    */
  69:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (5) File handle allocated by **initial constructor** == 0x0 to prevent 
  70:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *        deletion by pre-mature destructor call.                                 */
  71:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         me->__file_handle_allocated_by_constructor = 0x0;
  72:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  73:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (6) Keep track of 'who's your daddy?'                                       */
  74:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         me->_parent_memento = m;
  75:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     }   
  76:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  77:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     TEMPLATE_IN(InputHandleT) void    
GAS LISTING /tmp/cc23nfB3.s 			page 22


  78:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_NAME(include_push_input_name)(QUEX_TYPE_ANALYZER*      me,
  79:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                        QUEX_TYPE_CHARACTER*     InputName,
  80:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                        const QUEX_NAME(Mode)*   mode, 
  81:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                        const char*              CharacterCodecName /* = 0x0 */)
  82:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     {
  83:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* The Optional_InputHandle = 0x0, which indicates that InputName tells how to 
  84:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          * open the input stream.                                                       */
  85:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifndef __QUEX_OPTION_PLAIN_C
  86:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(include_push)<InputHandleT>(me, 0x0, InputName, mode, CharacterCodecName);
  87:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       else
  88:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(include_push)(me, 0x0, InputName, mode, CharacterCodecName);
  89:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
  90:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     }
  91:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
  92:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     TEMPLATE_IN(InputHandleT) void    
  93:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_NAME(include_push_input_handle)(QUEX_TYPE_ANALYZER*      me,
  94:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                          InputHandleT*            sh,
  95:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                          const QUEX_NAME(Mode)*   mode, 
  96:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****                                          const char*              CharacterCodecName /* = 0x0 */)
  97:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     {
  98:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* The Optional_InputName = 0x0, which indicates that the InputName is defined. */
  99:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifndef __QUEX_OPTION_PLAIN_C
 100:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(include_push)<InputHandleT>(me, sh, 0x0, mode, CharacterCodecName);
 101:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       else
 102:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(include_push)(me, sh, 0x0, mode, CharacterCodecName);
 103:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
 104:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     }
 105:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 106:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_INLINE bool
 107:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_NAME(include_pop)(QUEX_TYPE_ANALYZER* me) 
 108:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     {
 109:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* Not included? return 'false' to indicate we're on the top level       */
 110:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         if( me->_parent_memento == 0x0 ) return false; 
 111:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 112:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* (A) Uninitializing of unused objects:                                 
 113:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *    (1) A new buffer is required for the new content.                           */
 114:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Buffer_destruct)(&me->buffer);
 242              		.loc 5 114 0
 243 000c 8D5318   		leal	24(%ebx), %edx
 244              	.LBB351:
 245              	.LBB352:
 246              		.file 6 "./out/quex_scan"
   1:./out/quex_scan **** /* -*- C++ -*-   vim: set syntax=cpp:
   2:./out/quex_scan ****  * CONTENT: 
   3:./out/quex_scan ****  *
   4:./out/quex_scan ****  * (1) Includes for required standard headers.
   5:./out/quex_scan ****  * (2) Definitions of options and settings for the particular application.
   6:./out/quex_scan ****  * (3) #include <quex/code_base/definitions> for default settings.
   7:./out/quex_scan ****  * (4) Lexical Analyzer class quex_scan and its memento class.
   8:./out/quex_scan ****  * (5) Constructor and init core of quex_scan.
   9:./out/quex_scan ****  * (6) Memento pack and unpack functions.
  10:./out/quex_scan ****  *
  11:./out/quex_scan ****  * File content generated by Quex 0.58.1.
  12:./out/quex_scan ****  *
  13:./out/quex_scan ****  * (C) 2005-2010 Frank-Rene Schaefer
  14:./out/quex_scan ****  * ABSOLUTELY NO WARRANTY                                                      */
  15:./out/quex_scan **** #ifndef __QUEX_INCLUDE_GUARD__ANALYZER__GENERATED____QUEX____QUEX_SCAN
GAS LISTING /tmp/cc23nfB3.s 			page 23


  16:./out/quex_scan **** #define __QUEX_INCLUDE_GUARD__ANALYZER__GENERATED____QUEX____QUEX_SCAN
  17:./out/quex_scan **** 
  18:./out/quex_scan **** #ifdef      __QUEX_INCLUDE_INDICATOR__ANALYZER__MAIN
  19:./out/quex_scan ****     /* In case that multiple lexical analyzers are used the same header
  20:./out/quex_scan ****      * files are compiled with a different setting of the macros. The
  21:./out/quex_scan ****      * undef of the include guards happens in the following file.              */
  22:./out/quex_scan **** #   include <quex/code_base/include-guard-undef>
  23:./out/quex_scan **** #   include <quex/code_base/analyzer/member/token-sending-undef.i>
  24:./out/quex_scan **** #   undef   __QUEX_INCLUDE_GUARD__ANALYZER__CONFIGURATION____QUEX____QUEX_SCAN
  25:./out/quex_scan **** #else
  26:./out/quex_scan **** #   define  __QUEX_INCLUDE_INDICATOR__ANALYZER__MAIN
  27:./out/quex_scan **** #endif
  28:./out/quex_scan **** 
  29:./out/quex_scan **** #include "out/quex_scan-configuration"
  30:./out/quex_scan **** 
  31:./out/quex_scan **** #include <quex/code_base/definitions>
  32:./out/quex_scan **** 
  33:./out/quex_scan **** QUEX_NAMESPACE_MAIN_OPEN 
  34:./out/quex_scan ****     struct QUEX_NAME(Engine_tag);
  35:./out/quex_scan ****     struct QUEX_NAME(Memento_tag);
  36:./out/quex_scan ****     
  37:./out/quex_scan ****     class  QUEX_TYPE0_ANALYZER;    /* quex_scan */
  38:./out/quex_scan ****     typedef __QUEX_TYPE_ANALYZER_RETURN_VALUE  (*QUEX_NAME(AnalyzerFunctionP))(QUEX_TYPE_ANALYZER*)
  39:./out/quex_scan **** QUEX_NAMESPACE_MAIN_CLOSE
  40:./out/quex_scan **** 
  41:./out/quex_scan **** /* Token Class Declaration must preceed the user's header, so that the user
  42:./out/quex_scan ****  * can refer to it at ease.                                                    */
  43:./out/quex_scan **** QUEX_NAMESPACE_TOKEN_OPEN
  44:./out/quex_scan ****     class  QUEX_TYPE0_TOKEN;
  45:./out/quex_scan **** QUEX_NAMESPACE_TOKEN_CLOSE
  46:./out/quex_scan **** 
  47:./out/quex_scan **** /* START: User defined header content _________________________________________
  48:./out/quex_scan ****  *        Must come before token class definition, since the token class 
  49:./out/quex_scan ****  *        might rely on contents of the header.                                */
  50:./out/quex_scan **** 
  51:./out/quex_scan **** 
  52:./out/quex_scan **** /* END: _______________________________________________________________________*/
  53:./out/quex_scan **** 
  54:./out/quex_scan **** #if defined(__QUEX_OPTION_CONVERTER_HELPER)
  55:./out/quex_scan **** #   include "quex/code_base/converter_helper/unicode"
  56:./out/quex_scan **** #endif
  57:./out/quex_scan **** #include <quex/code_base/analyzer/headers>
  58:./out/quex_scan **** 
  59:./out/quex_scan **** #include "out/quex_scan-token_ids"
  60:./out/quex_scan **** #include "out/quex_scan-token"
  61:./out/quex_scan **** 
  62:./out/quex_scan **** QUEX_NAMESPACE_MAIN_OPEN 
  63:./out/quex_scan **** 
  64:./out/quex_scan **** enum {
  65:./out/quex_scan ****     QUEX_NAME(ModeID_PROGRAM) = 0
  66:./out/quex_scan **** };
  67:./out/quex_scan **** 
  68:./out/quex_scan ****         extern QUEX_NAME(Mode)  QUEX_NAME(PROGRAM);
  69:./out/quex_scan **** 
  70:./out/quex_scan **** 
  71:./out/quex_scan **** extern     __QUEX_TYPE_ANALYZER_RETURN_VALUE QUEX_NAME(PROGRAM_analyzer_function)(QUEX_TYPE_ANALYZE
  72:./out/quex_scan **** #ifdef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
GAS LISTING /tmp/cc23nfB3.s 			page 24


  73:./out/quex_scan **** extern     bool QUEX_NAME(PROGRAM_has_base)(const QUEX_NAME(Mode)*);
  74:./out/quex_scan **** extern     bool QUEX_NAME(PROGRAM_has_entry_from)(const QUEX_NAME(Mode)*);
  75:./out/quex_scan **** extern     bool QUEX_NAME(PROGRAM_has_exit_to)(const QUEX_NAME(Mode)*);
  76:./out/quex_scan **** #endif
  77:./out/quex_scan **** 
  78:./out/quex_scan **** 
  79:./out/quex_scan **** 
  80:./out/quex_scan **** typedef struct QUEX_NAME(Memento_tag) {
  81:./out/quex_scan **** #   include <quex/code_base/analyzer/EngineMemento_body>
  82:./out/quex_scan **** 
  83:./out/quex_scan ****     QUEX_NAME(Memento_tag)()  {}  /* Con- and Destruction necessary to trigger */
  84:./out/quex_scan ****     ~QUEX_NAME(Memento_tag)() {}  /* con- and destruction of user members.     */
  85:./out/quex_scan **** 
  86:./out/quex_scan **** /* START: User's memento extentions ___________________________________________*/
  87:./out/quex_scan **** 
  88:./out/quex_scan **** /* END: _______________________________________________________________________*/
  89:./out/quex_scan **** } QUEX_NAME(Memento);
  90:./out/quex_scan **** 
  91:./out/quex_scan **** QUEX_NAMESPACE_MAIN_CLOSE 
  92:./out/quex_scan **** 
  93:./out/quex_scan **** #include <quex/code_base/temporary_macros_on>
  94:./out/quex_scan **** 
  95:./out/quex_scan **** QUEX_NAMESPACE_MAIN_OPEN 
  96:./out/quex_scan **** 
  97:./out/quex_scan **** class quex_scan {
  98:./out/quex_scan **** public:
  99:./out/quex_scan **** #   include <quex/code_base/analyzer/Engine_body>
 100:./out/quex_scan **** 
 101:./out/quex_scan ****     /* DISABLED */ quex_scan(const quex_scan&);
 102:./out/quex_scan **** public:
 103:./out/quex_scan ****     typedef QUEX_TYPE_TOKEN      token_type;
 104:./out/quex_scan ****     typedef QUEX_TYPE_TOKEN_ID   token_id_type;
 105:./out/quex_scan ****     typedef QUEX_TYPE_CHARACTER  char_type;
 106:./out/quex_scan **** 
 107:./out/quex_scan ****     quex_scan(QUEX_TYPE_CHARACTER* BufferMemoryBegin, size_t  BufferMemorySize,
 108:./out/quex_scan ****               QUEX_TYPE_CHARACTER* BufferEndOfContentP   = 0x0,
 109:./out/quex_scan ****               const char*          CharacterEncodingName = 0x0,
 110:./out/quex_scan ****               bool                 ByteOrderReversionF   = false);
 111:./out/quex_scan ****     quex_scan(const std::string&   Filename,       
 112:./out/quex_scan ****               const char*          CharacterEncodingName = 0x0,
 113:./out/quex_scan ****               bool                 ByteOrderReversionF   = false);
 114:./out/quex_scan ****     quex_scan(std::istream*        p_input_stream, 
 115:./out/quex_scan ****               const char*          CharacterEncodingName = 0x0,
 116:./out/quex_scan ****               bool                 ByteOrderReversionF   = false);
 117:./out/quex_scan **** #   if defined(__QUEX_OPTION_WCHAR_T)
 118:./out/quex_scan ****     quex_scan(std::wistream*       p_input_stream,
 119:./out/quex_scan ****               const char*          CharacterEncodingName = 0x0,
 120:./out/quex_scan ****               bool                 ByteOrderReversionF   = false);
 121:./out/quex_scan **** #   endif
 122:./out/quex_scan ****     quex_scan(std::FILE*           input_fh,       
 123:./out/quex_scan ****               const char*          CharacterEncodingName = 0x0,
 124:./out/quex_scan ****               bool                 ByteOrderReversionF   = false);
 125:./out/quex_scan **** #   if defined(__QUEX_OPTION_UNIT_TEST)
 126:./out/quex_scan ****     template <class UnderlyingStreamT>
 127:./out/quex_scan ****         quex_scan(quex::StrangeStream<UnderlyingStreamT>*  p_input_stream, 
 128:./out/quex_scan ****                   const char*                              CharacterEncodingName = 0x0,
 129:./out/quex_scan ****                   bool                                     ByteOrderReversionF   = false);
GAS LISTING /tmp/cc23nfB3.s 			page 25


 130:./out/quex_scan **** #   endif
 131:./out/quex_scan **** 
 132:./out/quex_scan ****     virtual ~quex_scan();
 133:./out/quex_scan **** 
 134:./out/quex_scan ****     /* Direct Access to Memory */
 135:./out/quex_scan ****     void*                 buffer_fill_region_append(void* ContentBegin, 
 136:./out/quex_scan ****                                                     void* ContentEnd);
 137:./out/quex_scan ****     void*                 buffer_fill_region_append_conversion(void* ContentBegin, 
 138:./out/quex_scan ****                                                                void* ContentEnd);
 139:./out/quex_scan ****     void*                 buffer_fill_region_append_conversion_direct(void* ContentBegin, 
 140:./out/quex_scan ****                                                                       void* ContentEnd);
 141:./out/quex_scan ****     void                  buffer_fill_region_prepare();
 142:./out/quex_scan ****     QUEX_TYPE_CHARACTER*  buffer_fill_region_begin();
 143:./out/quex_scan ****     QUEX_TYPE_CHARACTER*  buffer_fill_region_end();
 144:./out/quex_scan ****     size_t                buffer_fill_region_size();
 145:./out/quex_scan ****     void                  buffer_fill_region_finish(const size_t LoadedN);
 146:./out/quex_scan ****     void                  buffer_conversion_fill_region_prepare(); 
 147:./out/quex_scan ****     uint8_t*              buffer_conversion_fill_region_begin();
 148:./out/quex_scan ****     uint8_t*              buffer_conversion_fill_region_end();
 149:./out/quex_scan ****     size_t                buffer_conversion_fill_region_size();
 150:./out/quex_scan ****     void                  buffer_conversion_fill_region_finish(const size_t  ByteN);
 151:./out/quex_scan ****     QUEX_TYPE_CHARACTER*  buffer_lexeme_start_pointer_get();
 152:./out/quex_scan ****     void                  buffer_input_pointer_set(QUEX_TYPE_CHARACTER*);
 153:./out/quex_scan **** 
 154:./out/quex_scan ****     /* -- activate/deactivate byte order reversion (big-/little-endian)    */
 155:./out/quex_scan ****     bool                  byte_order_reversion();
 156:./out/quex_scan ****     void                  byte_order_reversion_set(bool Value);
 157:./out/quex_scan **** 
 158:./out/quex_scan ****     /* NOTE: All calls to receive functions for 'queue' and 'single'
 159:./out/quex_scan ****      *       are deliberately chosen to be incompatible! Thus, when 
 160:./out/quex_scan ****      *       the user switches the token passing policy, he must re-
 161:./out/quex_scan ****      *       think his receive mechanism.                                  */
 162:./out/quex_scan **** #   if defined(QUEX_OPTION_TOKEN_POLICY_QUEUE)
 163:./out/quex_scan ****     /* (1) Token Queue 
 164:./out/quex_scan ****      * 
 165:./out/quex_scan ****      *   When using a token queue, the pointer **must** be adapted.
 166:./out/quex_scan ****      *   Otherwise, very strange results may occur. Force the user to
 167:./out/quex_scan ****      *   provide a pointer that can be adapted by having him specify
 168:./out/quex_scan ****      *   the second argument--not only a return value.
 169:./out/quex_scan ****      *
 170:./out/quex_scan ****      *   Command line option:  --token-policy  queue                       */
 171:./out/quex_scan ****     void                receive(QUEX_TYPE_TOKEN**);
 172:./out/quex_scan **** #   elif defined(QUEX_OPTION_TOKEN_POLICY_SINGLE)  
 173:./out/quex_scan ****     /* (2) Single Token
 174:./out/quex_scan ****      * 
 175:./out/quex_scan ****      *   When there is only one single token as interface, than the
 176:./out/quex_scan ****      *   token id is returned. This enables a minimal setup were the
 177:./out/quex_scan ****      *   analyzer may only return a token id and does not work on tokens. 
 178:./out/quex_scan ****      *
 179:./out/quex_scan ****      *   Command line options: --token-policy  single                      */
 180:./out/quex_scan ****     QUEX_TYPE_TOKEN_ID  receive();
 181:./out/quex_scan **** #   else
 182:./out/quex_scan **** #       error "This section should never be compiled."
 183:./out/quex_scan **** #   endif
 184:./out/quex_scan **** 
 185:./out/quex_scan ****     // NOTE: A pointer to an object of the token queue/object is used in order to make
 186:./out/quex_scan ****     //       memory management more flexible. The token queue/token object is heavily
GAS LISTING /tmp/cc23nfB3.s 			page 26


 187:./out/quex_scan ****     //       used and it should be possible to put it somewhere in memory with other
 188:./out/quex_scan ****     //       heavily used data so that the cache can take advantage of data locality.
 189:./out/quex_scan ****     QUEX_TYPE_TOKEN*     token_p();
 190:./out/quex_scan **** 
 191:./out/quex_scan **** #   if defined(QUEX_OPTION_TOKEN_POLICY_SINGLE) 
 192:./out/quex_scan **** #      if defined(QUEX_OPTION_USER_MANAGED_TOKEN_MEMORY)
 193:./out/quex_scan ****        void              token_p_set(QUEX_TYPE_TOKEN*);
 194:./out/quex_scan ****        QUEX_TYPE_TOKEN*  token_p_switch(QUEX_TYPE_TOKEN*);
 195:./out/quex_scan **** #      endif
 196:./out/quex_scan **** #   else
 197:./out/quex_scan ****        bool              token_queue_is_empty();
 198:./out/quex_scan ****        void              token_queue_remainder_get(QUEX_TYPE_TOKEN** begin, QUEX_TYPE_TOKEN** end);
 199:./out/quex_scan **** #      if defined(QUEX_OPTION_USER_MANAGED_TOKEN_MEMORY)
 200:./out/quex_scan ****        void              token_queue_get(QUEX_TYPE_TOKEN** begin, size_t* size);
 201:./out/quex_scan ****        void              token_queue_set(QUEX_TYPE_TOKEN* Begin, size_t Size);
 202:./out/quex_scan ****        void              token_queue_switch(QUEX_TYPE_TOKEN** queue, 
 203:./out/quex_scan ****                                             size_t*           size); 
 204:./out/quex_scan **** #      endif
 205:./out/quex_scan **** #   endif
 206:./out/quex_scan **** 
 207:./out/quex_scan ****     //
 208:./out/quex_scan ****     // (*) Mode handling
 209:./out/quex_scan ****     //
 210:./out/quex_scan ****     //     -- modes: read access
 211:./out/quex_scan ****     QUEX_NAME(Mode)&      mode();
 212:./out/quex_scan ****     int                   mode_id() const;
 213:./out/quex_scan ****     const char*           mode_name() const;
 214:./out/quex_scan ****     //
 215:./out/quex_scan ****     //     -- modes: changing lexical analysis mode
 216:./out/quex_scan ****     void        set_mode_brutally(const int       LexerMode);
 217:./out/quex_scan ****     void        set_mode_brutally(const QUEX_NAME(Mode)& Mode);
 218:./out/quex_scan ****     //
 219:./out/quex_scan ****     void        operator<<(const int MODE_ID);               
 220:./out/quex_scan ****     void        operator<<(/* NOT const*/ QUEX_NAME(Mode)& Mode);  
 221:./out/quex_scan ****     //
 222:./out/quex_scan ****     void        pop_mode();
 223:./out/quex_scan ****     void        pop_drop_mode();
 224:./out/quex_scan ****     void        push_mode(QUEX_NAME(Mode)& new_mode);
 225:./out/quex_scan ****     //
 226:./out/quex_scan ****     void        enter_mode(/* NOT const*/ QUEX_NAME(Mode)& TargetMode);
 227:./out/quex_scan ****     //
 228:./out/quex_scan ****     //     -- map: mode id to mode and vice versa
 229:./out/quex_scan ****     QUEX_NAME(Mode)&   map_mode_id_to_mode(const int              ModeID);       
 230:./out/quex_scan ****     int                map_mode_to_mode_id(const QUEX_NAME(Mode)& Mode) const;
 231:./out/quex_scan **** 
 232:./out/quex_scan ****     // (*) Token sending happens only via 'self_send*(...)' macros
 233:./out/quex_scan ****     void        send(const QUEX_TYPE_TOKEN_ID TokenID)
 234:./out/quex_scan ****     { (void)TokenID; QUEX_ERROR_DEPRECATED("Member functions .send()", "macros: self_send*()"); }
 235:./out/quex_scan **** 
 236:./out/quex_scan **** #   ifdef  QUEX_OPTION_LINE_NUMBER_COUNTING
 237:./out/quex_scan ****     size_t      line_number() const             { return line_number_at_begin(); }
 238:./out/quex_scan ****     size_t      line_number_at_begin() const    { return counter._line_number_at_begin; }
 239:./out/quex_scan ****     size_t      line_number_at_end() const      { return counter._line_number_at_end; }
 240:./out/quex_scan ****     /*          line_number_set(...) defines the column number of the next pattern match. */
 241:./out/quex_scan ****     void        line_number_set(size_t Y)       { counter._line_number_at_end = Y; }
 242:./out/quex_scan **** #   endif
 243:./out/quex_scan **** #   ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
GAS LISTING /tmp/cc23nfB3.s 			page 27


 244:./out/quex_scan ****     size_t      column_number() const             { return column_number_at_begin(); }
 245:./out/quex_scan ****     size_t      column_number_at_begin() const    { return counter._column_number_at_begin; }
 246:./out/quex_scan ****     size_t      column_number_at_end() const      { return counter._column_number_at_end; }
 247:./out/quex_scan ****     /*          column_number_set(...) defines the column number of the next pattern match. */
 248:./out/quex_scan ****     void        column_number_set(size_t X)       { counter._column_number_at_end = X; }
 249:./out/quex_scan **** #   endif
 250:./out/quex_scan **** #   ifdef   QUEX_OPTION_INDENTATION_TRIGGER
 251:./out/quex_scan ****     size_t      indentation()                    { return counter._indentation; }
 252:./out/quex_scan **** #   endif
 253:./out/quex_scan **** 
 254:./out/quex_scan ****     // (*) Version information
 255:./out/quex_scan ****     const char* version() const; // created by quex for version/date information
 256:./out/quex_scan **** 
 257:./out/quex_scan ****     // (*) Tell/Seek/Move on basis of character index
 258:./out/quex_scan ****     size_t  tell();
 259:./out/quex_scan ****     void    seek(const size_t);
 260:./out/quex_scan ****     void    seek_forward(const size_t);
 261:./out/quex_scan ****     void    seek_backward(const size_t);
 262:./out/quex_scan **** 
 263:./out/quex_scan ****     void    undo();
 264:./out/quex_scan ****     void    undo(size_t DeltaN_Backward);
 265:./out/quex_scan **** 
 266:./out/quex_scan ****     void    move_forward(const size_t) { QUEX_ERROR_EXIT("'move_forward()' has been renamed to 'see
 267:./out/quex_scan ****     void    move_backward(const size_t){ QUEX_ERROR_EXIT("'move_backward()' has been renamed to 'se
 268:./out/quex_scan **** 
 269:./out/quex_scan **** public:
 270:./out/quex_scan **** 
 271:./out/quex_scan ****     void        set_callback_on_buffer_content_change(void (*callback)(QUEX_TYPE_CHARACTER*, 
 272:./out/quex_scan ****                                                                        QUEX_TYPE_CHARACTER*));
 273:./out/quex_scan **** 
 274:./out/quex_scan ****     template <class InputHandleT> void reset(InputHandleT*  input_handle, 
 275:./out/quex_scan ****                                              const char*    CharacterEncodingName = 0x0);
 276:./out/quex_scan ****     void                               reset(const char*    CharacterEncodingName = 0x0) 
 277:./out/quex_scan ****     { reset<void>((void*)0x0, CharacterEncodingName); }
 278:./out/quex_scan **** 
 279:./out/quex_scan ****     QUEX_TYPE_CHARACTER*               reset_buffer(QUEX_TYPE_CHARACTER* BufferMemoryBegin, 
 280:./out/quex_scan ****                                                     size_t               BufferMemorySize,
 281:./out/quex_scan ****                                                     QUEX_TYPE_CHARACTER* BufferEndOfContentP,  
 282:./out/quex_scan ****                                                     const char*          CharacterEncodingName = 0x
 283:./out/quex_scan **** 
 284:./out/quex_scan **** #   ifdef QUEX_OPTION_INCLUDE_STACK
 285:./out/quex_scan **** public:
 286:./out/quex_scan ****     template<class InputHandleT> void  include_push(QUEX_TYPE_CHARACTER*     InputName, 
 287:./out/quex_scan ****                                                     const QUEX_NAME(Mode)*   Mode            = 0x0,
 288:./out/quex_scan ****                                                     const char*              IANA_CodingName = 0x0)
 289:./out/quex_scan ****     template<class InputHandleT> void  include_push(InputHandleT*            sh, 
 290:./out/quex_scan ****                                                     const QUEX_NAME(Mode)*   Mode            = 0x0,
 291:./out/quex_scan ****                                                     const char*              IANA_CodingName = 0x0)
 292:./out/quex_scan ****     bool                               include_pop();
 293:./out/quex_scan **** 
 294:./out/quex_scan **** protected:
 295:./out/quex_scan ****     void                               include_stack_delete();
 296:./out/quex_scan **** 
 297:./out/quex_scan **** private:
 298:./out/quex_scan **** #   endif
 299:./out/quex_scan **** 
 300:./out/quex_scan **** public:
GAS LISTING /tmp/cc23nfB3.s 			page 28


 301:./out/quex_scan ****     void  print_this();
 302:./out/quex_scan **** 
 303:./out/quex_scan **** private:
 304:./out/quex_scan ****     // (*) Common core of all constructors ___________________________________________
 305:./out/quex_scan ****     TEMPLATE_IN(InputHandleT) friend void
 306:./out/quex_scan ****     QUEX_NAME(constructor_core)(QUEX_TYPE_ANALYZER*       me,
 307:./out/quex_scan ****                                 InputHandleT*             input_handle, 
 308:./out/quex_scan ****                                 const char*               CharacterEncodingName,
 309:./out/quex_scan ****                                 bool                      ByteOrderReversionF,
 310:./out/quex_scan ****                                 QUEX_TYPE_CHARACTER*      BufferMemory,    
 311:./out/quex_scan ****                                 size_t                    BufferMemorySize);
 312:./out/quex_scan **** 
 313:./out/quex_scan ****     template<class InputHandleT> friend QUEX_NAME(Memento)*
 314:./out/quex_scan ****     QUEX_NAME(memento_pack)(QUEX_TYPE_ANALYZER*, QUEX_TYPE_CHARACTER*, 
 315:./out/quex_scan ****                             InputHandleT**);
 316:./out/quex_scan ****     friend void
 317:./out/quex_scan ****     QUEX_NAME(memento_unpack)(QUEX_TYPE_ANALYZER*, QUEX_NAME(Memento)*);
 318:./out/quex_scan **** 
 319:./out/quex_scan ****     template<class InputHandleT> friend void
 320:./out/quex_scan ****     QUEX_NAME(reset)(QUEX_TYPE_ANALYZER*, InputHandleT*, const char*);
 321:./out/quex_scan **** 
 322:./out/quex_scan ****     /* (*) All Modes are Friends ___________________________________________________*/
 323:./out/quex_scan ****     friend     __QUEX_TYPE_ANALYZER_RETURN_VALUE QUEX_NAME(PROGRAM_analyzer_function)(QUEX_TYPE_ANA
 324:./out/quex_scan **** #ifdef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
 325:./out/quex_scan ****     friend     bool QUEX_NAME(PROGRAM_has_base)(const QUEX_NAME(Mode)*);
 326:./out/quex_scan ****     friend     bool QUEX_NAME(PROGRAM_has_entry_from)(const QUEX_NAME(Mode)*);
 327:./out/quex_scan ****     friend     bool QUEX_NAME(PROGRAM_has_exit_to)(const QUEX_NAME(Mode)*);
 328:./out/quex_scan **** #endif
 329:./out/quex_scan **** 
 330:./out/quex_scan ****   
 331:./out/quex_scan **** 
 332:./out/quex_scan **** public:
 333:./out/quex_scan **** #define self  (*(QUEX_TYPE_DERIVED_ANALYZER*)this)
 334:./out/quex_scan **** /* START: User's class body extensions _____________________________________________*/
 335:./out/quex_scan **** 
 336:./out/quex_scan **** /* END: ____________________________________________________________________________*/
 337:./out/quex_scan **** #undef  self
 338:./out/quex_scan **** 
 339:./out/quex_scan **** public:
 340:./out/quex_scan ****     // At least warn those, who still use the old interface ...
 341:./out/quex_scan ****     void                  get_token() 
 342:./out/quex_scan ****     { QUEX_ERROR_DEPRECATED("Member functions .get_token()", ".receive(...)"); }
 343:./out/quex_scan ****     void                  get_token(QUEX_TYPE_TOKEN*   result_p)  { (void)result_p; get_token(); }
 344:./out/quex_scan ****     void                  get_token(QUEX_TYPE_TOKEN**  result_pp) { (void)result_pp; get_token(); }
 345:./out/quex_scan **** };
 346:./out/quex_scan **** 
 347:./out/quex_scan **** QUEX_NAMESPACE_MAIN_CLOSE
 348:./out/quex_scan **** #include <quex/code_base/temporary_macros_off>
 349:./out/quex_scan **** 
 350:./out/quex_scan **** #include <quex/code_base/temporary_macros_on>
 351:./out/quex_scan **** 
 352:./out/quex_scan **** QUEX_NAMESPACE_MAIN_OPEN
 353:./out/quex_scan **** 
 354:./out/quex_scan **** #ifndef __QUEX_OPTION_PLAIN_C
 355:./out/quex_scan **** TEMPLATE_IN(InputHandleT)
 356:./out/quex_scan **** #endif
 357:./out/quex_scan **** void
GAS LISTING /tmp/cc23nfB3.s 			page 29


 358:./out/quex_scan **** QUEX_NAME(constructor_core)(QUEX_TYPE_ANALYZER*    me,
 359:./out/quex_scan ****                             InputHandleT*          input_handle, 
 360:./out/quex_scan ****                             const char*            CharacterEncodingName,
 361:./out/quex_scan ****                             bool                   ByteOrderReversionF,
 362:./out/quex_scan ****                             QUEX_TYPE_CHARACTER*   BufferMemory,    
 363:./out/quex_scan ****                             size_t                 BufferMemorySize,
 364:./out/quex_scan ****                             QUEX_TYPE_CHARACTER*   BufferEndOfFileP)
 365:./out/quex_scan **** {
 366:./out/quex_scan ****     __quex_assert(QUEX_NAME(ModeID_PROGRAM) < 1);
 367:./out/quex_scan **** 
 368:./out/quex_scan ****      QUEX_NAME(PROGRAM).id   = QUEX_NAME(ModeID_PROGRAM);
 369:./out/quex_scan ****      QUEX_NAME(PROGRAM).name = "PROGRAM";
 370:./out/quex_scan ****      QUEX_NAME(PROGRAM).analyzer_function = QUEX_NAME(PROGRAM_analyzer_function);
 371:./out/quex_scan **** #    if      defined(QUEX_OPTION_INDENTATION_TRIGGER) \
 372:./out/quex_scan ****         && ! defined(QUEX_OPTION_INDENTATION_DEFAULT_HANDLER)
 373:./out/quex_scan ****      QUEX_NAME(PROGRAM).on_indentation = QUEX_NAME(Mode_on_indentation_null_function);
 374:./out/quex_scan **** #    endif
 375:./out/quex_scan ****      QUEX_NAME(PROGRAM).on_entry       = QUEX_NAME(Mode_on_entry_exit_null_function);
 376:./out/quex_scan ****      QUEX_NAME(PROGRAM).on_exit        = QUEX_NAME(Mode_on_entry_exit_null_function);
 377:./out/quex_scan **** #    if      defined(QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK)
 378:./out/quex_scan ****      QUEX_NAME(PROGRAM).has_base       = QUEX_NAME(PROGRAM_has_base);
 379:./out/quex_scan ****      QUEX_NAME(PROGRAM).has_entry_from = QUEX_NAME(PROGRAM_has_entry_from);
 380:./out/quex_scan ****      QUEX_NAME(PROGRAM).has_exit_to    = QUEX_NAME(PROGRAM_has_exit_to);
 381:./out/quex_scan **** #    endif
 382:./out/quex_scan ****         me->mode_db[QUEX_NAME(ModeID_PROGRAM)] = &(QUEX_NAME(PROGRAM));
 383:./out/quex_scan **** 
 384:./out/quex_scan **** 
 385:./out/quex_scan ****     QUEX_NAME(construct_basic)(me, input_handle,
 386:./out/quex_scan ****                                BufferMemory, BufferMemorySize, BufferEndOfFileP,
 387:./out/quex_scan ****                                CharacterEncodingName, 
 388:./out/quex_scan ****                                QUEX_SETTING_TRANSLATION_BUFFER_SIZE,
 389:./out/quex_scan ****                                ByteOrderReversionF);
 390:./out/quex_scan **** 
 391:./out/quex_scan ****     me->__current_mode_p = 0x0; /* REQUIRED, for mode transition check */
 392:./out/quex_scan ****     QUEX_NAME(set_mode_brutally_by_id)(me, __QUEX_SETTING_INITIAL_LEXER_MODE_ID);
 393:./out/quex_scan **** 
 394:./out/quex_scan **** #define self  (*(QUEX_TYPE_DERIVED_ANALYZER*)me)
 395:./out/quex_scan **** /* START: User's constructor extensions _______________________________________*/
 396:./out/quex_scan **** 
 397:./out/quex_scan **** /* END: _______________________________________________________________________*/
 398:./out/quex_scan **** #undef self
 399:./out/quex_scan **** }
 400:./out/quex_scan **** 
 401:./out/quex_scan **** 
 402:./out/quex_scan **** #ifdef QUEX_OPTION_INCLUDE_STACK
 403:./out/quex_scan **** 
 404:./out/quex_scan **** #ifndef __QUEX_OPTION_PLAIN_C
 405:./out/quex_scan **** TEMPLATE_IN(InputHandleT)
 406:./out/quex_scan **** #endif
 407:./out/quex_scan **** QUEX_NAME(Memento)*
 408:./out/quex_scan **** QUEX_NAME(memento_pack)(QUEX_TYPE_ANALYZER*   me, 
 409:./out/quex_scan ****                         QUEX_TYPE_CHARACTER*  InputName, 
 410:./out/quex_scan ****                         InputHandleT**        input_handle)
 411:./out/quex_scan **** {
 412:./out/quex_scan **** #   define self  (*me)
 413:./out/quex_scan ****     QUEX_NAME(Memento)* memento = QUEX_NAME(MemoryManager_Memento_allocate)();
 414:./out/quex_scan ****     
GAS LISTING /tmp/cc23nfB3.s 			page 30


 415:./out/quex_scan ****     (void)InputName;
 416:./out/quex_scan ****     (void)input_handle;
 417:./out/quex_scan **** 
 418:./out/quex_scan **** #   ifndef __QUEX_OPTION_PLAIN_C
 419:./out/quex_scan ****     /* Use placement 'new' for explicit call of constructor. 
 420:./out/quex_scan ****      * Necessary in C++: Trigger call to constructor for user defined members.   */
 421:./out/quex_scan ****     new ((void*)memento) QUEX_NAME(Memento);
 422:./out/quex_scan **** #   endif
 423:./out/quex_scan **** 
 424:./out/quex_scan ****     memento->_parent_memento                  = self._parent_memento;
 425:./out/quex_scan ****     memento->buffer                           = self.buffer;
 426:./out/quex_scan ****     memento->__current_mode_p                 = self.__current_mode_p; 
 427:./out/quex_scan ****     memento->current_analyzer_function        = self.current_analyzer_function;
 428:./out/quex_scan **** #   if    defined(QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE) \
 429:./out/quex_scan ****        || defined(QUEX_OPTION_ASSERTS)
 430:./out/quex_scan ****     memento->DEBUG_analyzer_function_at_entry = self.DEBUG_analyzer_function_at_entry;
 431:./out/quex_scan **** #   endif
 432:./out/quex_scan **** #   ifdef __QUEX_OPTION_COUNTER
 433:./out/quex_scan ****     memento->counter                          = self.counter;
 434:./out/quex_scan **** #   endif
 435:./out/quex_scan **** #   ifdef QUEX_OPTION_STRING_ACCUMULATOR
 436:./out/quex_scan ****     memento->accumulator                      = self.accumulator;
 437:./out/quex_scan **** #   endif
 438:./out/quex_scan ****     memento->__file_handle_allocated_by_constructor = self.__file_handle_allocated_by_constructor;
 439:./out/quex_scan **** 
 440:./out/quex_scan ****     /* Deriberately not subject to include handling:
 441:./out/quex_scan ****      *    -- Mode stack.
 442:./out/quex_scan ****      *    -- Token and token queues.
 443:./out/quex_scan ****      *    -- Post categorizer.                                                 */
 444:./out/quex_scan **** 
 445:./out/quex_scan **** #   ifdef QUEX_OPTION_TOKEN_POLICY_QUEUE
 446:./out/quex_scan ****     /* QuexTokenQueueRemainder_restore(&memento->token_queue_remainder, &self._token_queue); */
 447:./out/quex_scan **** #   endif
 448:./out/quex_scan **** 
 449:./out/quex_scan **** /* START: User's memento 'pack' _______________________________________________*/
 450:./out/quex_scan **** 
 451:./out/quex_scan **** /* END: _______________________________________________________________________*/
 452:./out/quex_scan **** 
 453:./out/quex_scan ****     return memento;
 454:./out/quex_scan **** #   undef self
 455:./out/quex_scan **** }
 456:./out/quex_scan **** 
 457:./out/quex_scan **** #ifndef __QUEX_OPTION_PLAIN_C
 458:./out/quex_scan **** QUEX_INLINE 
 459:./out/quex_scan **** #endif
 460:./out/quex_scan **** void
 461:./out/quex_scan **** QUEX_NAME(memento_unpack)(QUEX_TYPE_ANALYZER*  me, 
 462:./out/quex_scan ****                           QUEX_NAME(Memento)*  memento)
 463:./out/quex_scan **** {
 464:./out/quex_scan **** #   define self  (*me)
 465:./out/quex_scan ****     self._parent_memento                  = memento->_parent_memento;
 466:./out/quex_scan ****     self.buffer                           = memento->buffer;
 247              		.loc 6 466 0
 248 000f 8955E4   		movl	%edx, -28(%ebp)
 249 0012 EB44     		jmp	.L17
 250              	.LVL9:
 251              	.L18:
GAS LISTING /tmp/cc23nfB3.s 			page 31


 252              	.LBE352:
 253              	.LBE351:
 254              		.loc 5 114 0
 255 0014 83EC0C   		subl	$12, %esp
 256 0017 52       		pushl	%edx
 257 0018 8955E0   		movl	%edx, -32(%ebp)
 258              		.cfi_escape 0x2e,0x10
 259 001b E8FCFFFF 		call	_ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE
 259      FF
 115:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 116:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (2) Current mode will be determined by unfreeze/copy back.                  */
 117:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*        now leave alone:
 118:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               __current_mode_p 
 119:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               current_analyzer_function                                       
 120:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *               DEBUG_analyzer_function_at_entry                                 */
 121:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 122:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Mode stack is not subject to include handling.                          */
 123:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Tokens and token queues are not subject to include handling.            */
 124:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 125:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (3) Counters will be determined by unfreeze/copy back.                      */
 126:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (4) Allocated accumulator content needs to be freed, previous content is      
 127:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****          *        restored by unfreeze/copy back.                                         */
 128:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       ifdef QUEX_OPTION_STRING_ACCUMULATOR
 129:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(Accumulator_destruct)(&me->accumulator);
 130:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** #       endif
 131:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (*) Post categorizer is not subject to include handling.                    */
 132:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (5) File handle allocated by **initial constructor** reset by unfreeze.     */
 133:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 134:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /*    (6) Keep track of 'who's your daddy?' handled by unfreeze/copy back.        */
 135:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 136:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* (B) Unfreezing / Copy Back of content that was stored upon inclusion.          */
 137:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         QUEX_NAME(memento_unpack)(me, me->_parent_memento);
 260              		.loc 5 137 0
 261 0020 8B437C   		movl	124(%ebx), %eax
 262              	.LBB357:
 263              	.LBB356:
 264              		.loc 6 466 0
 265 0023 8B7DE4   		movl	-28(%ebp), %edi
 465:./out/quex_scan ****     self._parent_memento                  = memento->_parent_memento;
 266              		.loc 6 465 0
 267 0026 8B4838   		movl	56(%eax), %ecx
 268              		.loc 6 466 0
 269 0029 89C6     		movl	%eax, %esi
 465:./out/quex_scan ****     self._parent_memento                  = memento->_parent_memento;
 270              		.loc 6 465 0
 271 002b 894B7C   		movl	%ecx, 124(%ebx)
 272              		.loc 6 466 0
 273 002e B90C0000 		movl	$12, %ecx
 273      00
 274 0033 F3A5     		rep movsl
 467:./out/quex_scan ****     self.__current_mode_p                 = memento->__current_mode_p; 
 275              		.loc 6 467 0
 276 0035 8B4830   		movl	48(%eax), %ecx
 277 0038 894B4C   		movl	%ecx, 76(%ebx)
 468:./out/quex_scan ****     self.current_analyzer_function        = memento->current_analyzer_function;
 278              		.loc 6 468 0
 279 003b 8B4834   		movl	52(%eax), %ecx
GAS LISTING /tmp/cc23nfB3.s 			page 32


 280 003e 894B48   		movl	%ecx, 72(%ebx)
 469:./out/quex_scan **** #   if    defined(QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE) \
 470:./out/quex_scan ****        || defined(QUEX_OPTION_ASSERTS)
 471:./out/quex_scan ****     self.DEBUG_analyzer_function_at_entry = memento->DEBUG_analyzer_function_at_entry;
 472:./out/quex_scan **** #   endif
 473:./out/quex_scan **** #   ifdef __QUEX_OPTION_COUNTER
 474:./out/quex_scan ****     self.counter                          = memento->counter;
 475:./out/quex_scan **** #   endif
 476:./out/quex_scan **** #   ifdef QUEX_OPTION_STRING_ACCUMULATOR
 477:./out/quex_scan ****     self.accumulator                      = memento->accumulator;
 478:./out/quex_scan **** #   endif
 479:./out/quex_scan ****     self.__file_handle_allocated_by_constructor = memento->__file_handle_allocated_by_constructor;
 281              		.loc 6 479 0
 282 0041 8B483C   		movl	60(%eax), %ecx
 283 0044 898B8000 		movl	%ecx, 128(%ebx)
 283      0000
 284              	.LBB353:
 285              	.LBB354:
 286              	.LBB355:
 287              		.loc 3 35 0
 288 004a 890424   		movl	%eax, (%esp)
 289 004d E8FCFFFF 		call	free
 289      FF
 290 0052 8B55E0   		movl	-32(%ebp), %edx
 291 0055 83C410   		addl	$16, %esp
 292              	.L17:
 293              	.LBE355:
 294              	.LBE354:
 295              	.LBE353:
 296              	.LBE356:
 297              	.LBE357:
 298              	.LBE350:
 299              	.LBE349:
 138:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 139:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         /* Return to including file succesful */
 140:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         return true;
 141:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     }
 142:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i **** 
 143:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_INLINE void
 144:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     QUEX_NAME(include_stack_delete)(QUEX_TYPE_ANALYZER* me) 
 145:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****     {
 146:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/include-stack.i ****         while( me->_parent_memento != 0x0 ) {
 300              		.loc 5 146 0
 301 0058 837B7C00 		cmpl	$0, 124(%ebx)
 302 005c 75B6     		jne	.L18
 303              	.LBE348:
 304              	.LBE347:
 305              		.file 7 "/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** /* -*- C++ -*- vim: set syntax=cpp: */
   2:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #ifndef __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__BASIC_I
   3:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #define __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__BASIC_I
   4:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
   5:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #include    <quex/code_base/definitions>
   6:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #include    <quex/code_base/buffer/Buffer>
   7:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #include    <quex/code_base/buffer/BufferFiller>
   8:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #include    <quex/code_base/buffer/asserts>
   9:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #ifdef      QUEX_OPTION_INCLUDE_STACK
GAS LISTING /tmp/cc23nfB3.s 			page 33


  10:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #   include <quex/code_base/analyzer/member/include-stack>
  11:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #endif
  12:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  13:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #include <quex/code_base/temporary_macros_on>
  14:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  15:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** QUEX_NAMESPACE_MAIN_OPEN
  16:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     struct QUEX_NAME(Mode_tag);
  17:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  18:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     TEMPLATE_IN(InputHandleT) void
  19:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(construct_basic)(QUEX_TYPE_ANALYZER*     me,
  20:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                InputHandleT*           input_handle,
  21:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                QUEX_TYPE_CHARACTER*    BufferMemory,
  22:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                const size_t            BufferMemorySize,
  23:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                QUEX_TYPE_CHARACTER*    EndOfFileP,
  24:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                const char*             CharacterEncodingName, 
  25:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                const size_t            TranslationBufferMemorySize,
  26:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                bool                    ByteOrderReversionF)
  27:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     /* Initialization of Components of the Lexical Analyzer Engine ________________________
  28:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *
  29:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      * input_handle == 0x0 means that there is no stream/file to read from. Instead, the 
  30:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *                     user intends to perform the lexical analysis directly on plain
  31:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *                     memory. In this case, the user needs to call the following function
  32:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *                     by hand in order to setup the memory:
  33:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *
  34:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *                     QuexBufferMemory_construct(analyse->buffer._memory, 
  35:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *                                                (uint8_t*)MyMemoryP, MyMemorySize); 
  36:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      */
  37:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
  38:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       if      defined(QUEX_OPTION_ASSERTS) \
  39:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****            && ! defined(QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED)
  40:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __QUEX_STD_printf(__QUEX_MESSAGE_ASSERTS_INFO);
  41:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  42:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****        
  43:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       if      defined(QUEX_OPTION_ASSERTS) 
  44:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( QUEX_SETTING_BUFFER_LIMIT_CODE == QUEX_SETTING_PATH_TERMINATION_CODE ) {
  45:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             QUEX_ERROR_EXIT("Path termination code (PTC) and buffer limit code (BLC) must be differ
  46:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
  47:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  48:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  49:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       if defined(QUEX_OPTION_TOKEN_POLICY_QUEUE)
  50:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           if defined(QUEX_OPTION_USER_MANAGED_TOKEN_MEMORY)
  51:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* Assume that the user will pass us a constructed token queue */
  52:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             QUEX_NAME(TokenQueue_init)(&me->_token_queue, 0, 0x0);
  53:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           else
  54:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             QUEX_NAME(TokenQueue_construct)(&me->_token_queue, 
  55:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                             (QUEX_TYPE_TOKEN*)&me->__memory_token_queue,
  56:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                             QUEX_SETTING_TOKEN_QUEUE_SIZE);
  57:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           endif
  58:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       else
  59:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           if defined(QUEX_OPTION_USER_MANAGED_TOKEN_MEMORY)
  60:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* Assume that the user will pass us a constructed token */
  61:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             me->token = 0x0;     
  62:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           else
  63:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             me->token = &me->__memory_token;     
  64:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #              ifdef __QUEX_OPTION_PLAIN_C
  65:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                QUEX_NAME_TOKEN(construct)(me->token);
  66:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #              endif
GAS LISTING /tmp/cc23nfB3.s 			page 34


  67:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #           endif
  68:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  69:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****        
  70:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef __QUEX_OPTION_COUNTER
  71:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Counter_construct)(&me->counter);
  72:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  73:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  74:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_STRING_ACCUMULATOR
  75:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Accumulator_construct)(&me->accumulator, (QUEX_TYPE_ANALYZER*)me);
  76:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  77:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****        
  78:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef  QUEX_OPTION_INCLUDE_STACK
  79:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->_parent_memento = 0x0;
  80:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  81:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  82:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_POST_CATEGORIZER
  83:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(PostCategorizer_construct)(&me->post_categorizer);
  84:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  85:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  86:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->_mode_stack.end        = me->_mode_stack.begin;
  87:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->_mode_stack.memory_end = me->_mode_stack.begin + QUEX_SETTING_MODE_STACK_SIZE;
  88:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
  89:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_ASSERTS
  90:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* Initialize everything to 0xFF which is most probably causing an error
  91:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          * if a member variable is not initialized before it is used.             */
  92:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __QUEX_STD_memset((uint8_t*)&me->buffer, 0xFF, sizeof(me->buffer));
  93:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
  94:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         
  95:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Buffer_construct)(&me->buffer, input_handle, 
  96:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                     BufferMemory, BufferMemorySize, EndOfFileP,
  97:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                     CharacterEncodingName, TranslationBufferMemorySize,
  98:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                     ByteOrderReversionF);
  99:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 100:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( input_handle == 0x0 ) {
 101:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* TWO CASES:
 102:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * (1) The user provides a buffer memory: --> assume it is filled to the end.
 103:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * (2) The user does not provide memory:  --> the memory IS empty.             */
 104:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             if( BufferMemory == 0x0 ) {
 105:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                 /* 'buffer._memory._front' has been set at this point in time.             */
 106:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                 QUEX_NAME(Buffer_end_of_file_set)(&me->buffer, me->buffer._memory._front + 1);
 107:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             }
 108:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* When working on plain memory, the '_end_of_file_p' must be set to indicate
 109:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * the end of the content.                                                     */
 110:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             __quex_assert(me->buffer._memory._end_of_file_p >  me->buffer._memory._front);
 111:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             __quex_assert(me->buffer._memory._end_of_file_p <= me->buffer._memory._back);
 112:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 113:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 114:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->__file_handle_allocated_by_constructor = 0x0;
 115:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 116:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 117:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     TEMPLATE_IN(InputHandleT) void
 118:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(reset_basic)(QUEX_TYPE_ANALYZER*  me,
 119:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                            InputHandleT*        input_handle, 
 120:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                            const char*          CharacterEncodingName, 
 121:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                            const size_t         TranslationBufferMemorySize)
 122:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* Reset of Components of the Lexical Analyzer Engine ____________________________*/
 123:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
GAS LISTING /tmp/cc23nfB3.s 			page 35


 124:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef __QUEX_OPTION_COUNTER
 125:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Counter_reset)(&me->counter);
 126:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 127:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 128:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_TOKEN_POLICY_QUEUE
 129:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(TokenQueue_reset)(&me->_token_queue);
 130:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 131:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 132:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_INCLUDE_STACK
 133:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(include_stack_delete)((QUEX_TYPE_ANALYZER*)me);
 134:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 135:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 136:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* IMPORTANT: THE ACCUMULATOR CAN ONLY BE DESTRUCTED AFTER THE INCLUDE *
 137:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *            STACK HAS BEEN DELETED. OTHERWISE, THERE MIGHT BE LEAKS. */
 138:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_STRING_ACCUMULATOR
 139:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Accumulator_clear)(&me->accumulator);
 140:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 141:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 142:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_POST_CATEGORIZER
 143:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(PostCategorizer_clear)(&me->post_categorizer);
 144:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 145:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 146:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->_mode_stack.end        = me->_mode_stack.begin;
 147:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         me->_mode_stack.memory_end = me->_mode_stack.begin + QUEX_SETTING_MODE_STACK_SIZE;
 148:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 149:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Buffer_reset)(&me->buffer, input_handle, CharacterEncodingName, TranslationBuffer
 150:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 151:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 152:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 153:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE void
 154:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(destruct_basic)(QUEX_TYPE_ANALYZER* me)
 155:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
 156:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_TOKEN_POLICY_QUEUE 
 157:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(TokenQueue_destruct)(&me->_token_queue);
 158:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 159:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 160:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_INCLUDE_STACK
 161:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(include_stack_delete)((QUEX_TYPE_ANALYZER*)me);
 162:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 163:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 164:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* IMPORTANT: THE ACCUMULATOR CAN ONLY BE DESTRUCTED AFTER THE INCLUDE *
 165:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *            STACK HAS BEEN DELETED. OTHERWISE, THERE MIGHT BE LEAKS. */
 166:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_STRING_ACCUMULATOR
 167:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Accumulator_destruct)(&me->accumulator);
 168:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 169:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****        
 170:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       ifdef QUEX_OPTION_POST_CATEGORIZER
 171:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(PostCategorizer_destruct)(&me->post_categorizer);
 172:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** #       endif
 173:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 174:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(Buffer_destruct)(&me->buffer);
 306              		.loc 7 174 0
 307 005e 83EC0C   		subl	$12, %esp
 308 0061 52       		pushl	%edx
 309 0062 E8FCFFFF 		call	_ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE
 309      FF
 175:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
GAS LISTING /tmp/cc23nfB3.s 			page 36


 176:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( me->__file_handle_allocated_by_constructor != 0x0 ) {
 310              		.loc 7 176 0
 311 0067 8B838000 		movl	128(%ebx), %eax
 311      0000
 312 006d 83C410   		addl	$16, %esp
 313 0070 85C0     		testl	%eax, %eax
 314 0072 740F     		je	.L20
 177:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             __QUEX_STD_fclose(me->__file_handle_allocated_by_constructor); 
 315              		.loc 7 177 0
 316 0074 894508   		movl	%eax, 8(%ebp)
 317              	.LBE346:
 318              	.LBE345:
 143:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(destruct_basic)(me);
 144:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 319              		.loc 4 144 0
 320 0077 8D65F4   		leal	-12(%ebp), %esp
 321 007a 5B       		popl	%ebx
 322              	.LVL10:
 323 007b 5E       		popl	%esi
 324 007c 5F       		popl	%edi
 325 007d 5D       		popl	%ebp
 326              	.LBB359:
 327              	.LBB358:
 328              		.loc 7 177 0
 329              		.cfi_escape 0x2e,0x4
 330 007e E9FCFFFF 		jmp	fclose
 330      FF
 331              	.LVL11:
 332              	.L20:
 333              	.LBE358:
 334              	.LBE359:
 335              		.loc 4 144 0
 336 0083 8D65F4   		leal	-12(%ebp), %esp
 337 0086 5B       		popl	%ebx
 338              	.LVL12:
 339 0087 5E       		popl	%esi
 340 0088 5F       		popl	%edi
 341 0089 5D       		popl	%ebp
 342 008a C3       		ret
 343              		.cfi_endproc
 344              	.LFE1227:
 346              		.section	.text._ZNSbIhSt11char_traitsIhESaIhEED1Ev,"axG",@progbits,_ZNSbIhSt11char_traitsIhESaIhEE
 347              		.align 2
 348              		.weak	_ZNSbIhSt11char_traitsIhESaIhEED1Ev
 350              	_ZNSbIhSt11char_traitsIhESaIhEED1Ev:
 351              	.LFB1323:
 352              		.file 8 "/usr/include/c++/4.4/bits/basic_string.h"
   1:/usr/include/c++/4.4/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/4.4/bits/basic_string.h **** 
   3:/usr/include/c++/4.4/bits/basic_string.h **** // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
   4:/usr/include/c++/4.4/bits/basic_string.h **** // 2006, 2007, 2008, 2009
   5:/usr/include/c++/4.4/bits/basic_string.h **** // Free Software Foundation, Inc.
   6:/usr/include/c++/4.4/bits/basic_string.h **** //
   7:/usr/include/c++/4.4/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   8:/usr/include/c++/4.4/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   9:/usr/include/c++/4.4/bits/basic_string.h **** // terms of the GNU General Public License as published by the
  10:/usr/include/c++/4.4/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
GAS LISTING /tmp/cc23nfB3.s 			page 37


  11:/usr/include/c++/4.4/bits/basic_string.h **** // any later version.
  12:/usr/include/c++/4.4/bits/basic_string.h **** 
  13:/usr/include/c++/4.4/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  14:/usr/include/c++/4.4/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:/usr/include/c++/4.4/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:/usr/include/c++/4.4/bits/basic_string.h **** // GNU General Public License for more details.
  17:/usr/include/c++/4.4/bits/basic_string.h **** 
  18:/usr/include/c++/4.4/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  19:/usr/include/c++/4.4/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  20:/usr/include/c++/4.4/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  21:/usr/include/c++/4.4/bits/basic_string.h **** 
  22:/usr/include/c++/4.4/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  23:/usr/include/c++/4.4/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  24:/usr/include/c++/4.4/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  25:/usr/include/c++/4.4/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  26:/usr/include/c++/4.4/bits/basic_string.h **** 
  27:/usr/include/c++/4.4/bits/basic_string.h **** /** @file basic_string.h
  28:/usr/include/c++/4.4/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  29:/usr/include/c++/4.4/bits/basic_string.h ****  *  You should not attempt to use it directly.
  30:/usr/include/c++/4.4/bits/basic_string.h ****  */
  31:/usr/include/c++/4.4/bits/basic_string.h **** 
  32:/usr/include/c++/4.4/bits/basic_string.h **** //
  33:/usr/include/c++/4.4/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  34:/usr/include/c++/4.4/bits/basic_string.h **** //
  35:/usr/include/c++/4.4/bits/basic_string.h **** 
  36:/usr/include/c++/4.4/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  37:/usr/include/c++/4.4/bits/basic_string.h **** #define _BASIC_STRING_H 1
  38:/usr/include/c++/4.4/bits/basic_string.h **** 
  39:/usr/include/c++/4.4/bits/basic_string.h **** #pragma GCC system_header
  40:/usr/include/c++/4.4/bits/basic_string.h **** 
  41:/usr/include/c++/4.4/bits/basic_string.h **** #include <ext/atomicity.h>
  42:/usr/include/c++/4.4/bits/basic_string.h **** #include <debug/debug.h>
  43:/usr/include/c++/4.4/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/4.4/bits/basic_string.h **** 
  45:/usr/include/c++/4.4/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE(std)
  46:/usr/include/c++/4.4/bits/basic_string.h **** 
  47:/usr/include/c++/4.4/bits/basic_string.h ****   /**
  48:/usr/include/c++/4.4/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  49:/usr/include/c++/4.4/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  50:/usr/include/c++/4.4/bits/basic_string.h ****    *
  51:/usr/include/c++/4.4/bits/basic_string.h ****    *  @ingroup sequences
  52:/usr/include/c++/4.4/bits/basic_string.h ****    *
  53:/usr/include/c++/4.4/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  54:/usr/include/c++/4.4/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  55:/usr/include/c++/4.4/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  56:/usr/include/c++/4.4/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  57:/usr/include/c++/4.4/bits/basic_string.h ****    *  @c push_back, @c at, and array access are supported.
  58:/usr/include/c++/4.4/bits/basic_string.h ****    *
  59:/usr/include/c++/4.4/bits/basic_string.h ****    *  @doctodo
  60:/usr/include/c++/4.4/bits/basic_string.h ****    *
  61:/usr/include/c++/4.4/bits/basic_string.h ****    *
  62:/usr/include/c++/4.4/bits/basic_string.h ****    *  Documentation?  What's that?
  63:/usr/include/c++/4.4/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  64:/usr/include/c++/4.4/bits/basic_string.h ****    *
  65:/usr/include/c++/4.4/bits/basic_string.h ****    *  A string looks like this:
  66:/usr/include/c++/4.4/bits/basic_string.h ****    *
  67:/usr/include/c++/4.4/bits/basic_string.h ****    *  @code
GAS LISTING /tmp/cc23nfB3.s 			page 38


  68:/usr/include/c++/4.4/bits/basic_string.h ****    *                                        [_Rep]
  69:/usr/include/c++/4.4/bits/basic_string.h ****    *                                        _M_length
  70:/usr/include/c++/4.4/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  71:/usr/include/c++/4.4/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  72:/usr/include/c++/4.4/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  73:/usr/include/c++/4.4/bits/basic_string.h ****    *  @endcode
  74:/usr/include/c++/4.4/bits/basic_string.h ****    *
  75:/usr/include/c++/4.4/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  76:/usr/include/c++/4.4/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  77:/usr/include/c++/4.4/bits/basic_string.h ****    *  pointer to the header.
  78:/usr/include/c++/4.4/bits/basic_string.h ****    *
  79:/usr/include/c++/4.4/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  80:/usr/include/c++/4.4/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  81:/usr/include/c++/4.4/bits/basic_string.h ****    *  within a single pair of inline functions, which each compile to
  82:/usr/include/c++/4.4/bits/basic_string.h ****    *  a single "add" instruction: _Rep::_M_data(), and
  83:/usr/include/c++/4.4/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  84:/usr/include/c++/4.4/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  85:/usr/include/c++/4.4/bits/basic_string.h ****    *  object at the front.
  86:/usr/include/c++/4.4/bits/basic_string.h ****    *
  87:/usr/include/c++/4.4/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character array and
  88:/usr/include/c++/4.4/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  89:/usr/include/c++/4.4/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  90:/usr/include/c++/4.4/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  91:/usr/include/c++/4.4/bits/basic_string.h ****    *  string length.)
  92:/usr/include/c++/4.4/bits/basic_string.h ****    *
  93:/usr/include/c++/4.4/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
  94:/usr/include/c++/4.4/bits/basic_string.h ****    *  static "empty string" _Rep object already "constructed" before
  95:/usr/include/c++/4.4/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
  96:/usr/include/c++/4.4/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
  97:/usr/include/c++/4.4/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
  98:/usr/include/c++/4.4/bits/basic_string.h ****    *
  99:/usr/include/c++/4.4/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 100:/usr/include/c++/4.4/bits/basic_string.h ****    *  for a C++ string implementation.
 101:/usr/include/c++/4.4/bits/basic_string.h ****   */
 102:/usr/include/c++/4.4/bits/basic_string.h ****   // 21.3  Template class basic_string
 103:/usr/include/c++/4.4/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 104:/usr/include/c++/4.4/bits/basic_string.h ****     class basic_string
 105:/usr/include/c++/4.4/bits/basic_string.h ****     {
 106:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 107:/usr/include/c++/4.4/bits/basic_string.h **** 
 108:/usr/include/c++/4.4/bits/basic_string.h ****       // Types:
 109:/usr/include/c++/4.4/bits/basic_string.h ****     public:
 110:/usr/include/c++/4.4/bits/basic_string.h ****       typedef _Traits					    traits_type;
 111:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 112:/usr/include/c++/4.4/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 113:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 114:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 115:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 116:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 117:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 118:/usr/include/c++/4.4/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 119:/usr/include/c++/4.4/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 120:/usr/include/c++/4.4/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 121:/usr/include/c++/4.4/bits/basic_string.h ****                                                             const_iterator;
 122:/usr/include/c++/4.4/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 123:/usr/include/c++/4.4/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 124:/usr/include/c++/4.4/bits/basic_string.h **** 
GAS LISTING /tmp/cc23nfB3.s 			page 39


 125:/usr/include/c++/4.4/bits/basic_string.h ****     private:
 126:/usr/include/c++/4.4/bits/basic_string.h ****       // _Rep: string representation
 127:/usr/include/c++/4.4/bits/basic_string.h ****       //   Invariants:
 128:/usr/include/c++/4.4/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 129:/usr/include/c++/4.4/bits/basic_string.h ****       //      must be kept null-terminated.
 130:/usr/include/c++/4.4/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 131:/usr/include/c++/4.4/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 132:/usr/include/c++/4.4/bits/basic_string.h ****       //   3. _M_refcount has three states:
 133:/usr/include/c++/4.4/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 134:/usr/include/c++/4.4/bits/basic_string.h ****       //       0: one reference, non-const.
 135:/usr/include/c++/4.4/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 136:/usr/include/c++/4.4/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 137:/usr/include/c++/4.4/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 138:/usr/include/c++/4.4/bits/basic_string.h ****       //      empty string representation needs no constructor.
 139:/usr/include/c++/4.4/bits/basic_string.h **** 
 140:/usr/include/c++/4.4/bits/basic_string.h ****       struct _Rep_base
 141:/usr/include/c++/4.4/bits/basic_string.h ****       {
 142:/usr/include/c++/4.4/bits/basic_string.h **** 	size_type		_M_length;
 143:/usr/include/c++/4.4/bits/basic_string.h **** 	size_type		_M_capacity;
 144:/usr/include/c++/4.4/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 145:/usr/include/c++/4.4/bits/basic_string.h ****       };
 146:/usr/include/c++/4.4/bits/basic_string.h **** 
 147:/usr/include/c++/4.4/bits/basic_string.h ****       struct _Rep : _Rep_base
 148:/usr/include/c++/4.4/bits/basic_string.h ****       {
 149:/usr/include/c++/4.4/bits/basic_string.h **** 	// Types:
 150:/usr/include/c++/4.4/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 151:/usr/include/c++/4.4/bits/basic_string.h **** 
 152:/usr/include/c++/4.4/bits/basic_string.h **** 	// (Public) Data members:
 153:/usr/include/c++/4.4/bits/basic_string.h **** 
 154:/usr/include/c++/4.4/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 155:/usr/include/c++/4.4/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 156:/usr/include/c++/4.4/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 157:/usr/include/c++/4.4/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 158:/usr/include/c++/4.4/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 159:/usr/include/c++/4.4/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 160:/usr/include/c++/4.4/bits/basic_string.h **** 	// look like this:
 161:/usr/include/c++/4.4/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 162:/usr/include/c++/4.4/bits/basic_string.h **** 	// Solving for m:
 163:/usr/include/c++/4.4/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 164:/usr/include/c++/4.4/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 165:/usr/include/c++/4.4/bits/basic_string.h **** 	static const size_type	_S_max_size;
 166:/usr/include/c++/4.4/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 167:/usr/include/c++/4.4/bits/basic_string.h **** 
 168:/usr/include/c++/4.4/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 169:/usr/include/c++/4.4/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 170:/usr/include/c++/4.4/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 171:/usr/include/c++/4.4/bits/basic_string.h **** 
 172:/usr/include/c++/4.4/bits/basic_string.h ****         static _Rep&
 173:/usr/include/c++/4.4/bits/basic_string.h ****         _S_empty_rep()
 174:/usr/include/c++/4.4/bits/basic_string.h ****         { 
 175:/usr/include/c++/4.4/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 176:/usr/include/c++/4.4/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 177:/usr/include/c++/4.4/bits/basic_string.h **** 	  // be reasonably safe in this case.
 178:/usr/include/c++/4.4/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 179:/usr/include/c++/4.4/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 180:/usr/include/c++/4.4/bits/basic_string.h **** 	}
 181:/usr/include/c++/4.4/bits/basic_string.h **** 
GAS LISTING /tmp/cc23nfB3.s 			page 40


 182:/usr/include/c++/4.4/bits/basic_string.h ****         bool
 183:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_is_leaked() const
 184:/usr/include/c++/4.4/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 185:/usr/include/c++/4.4/bits/basic_string.h **** 
 186:/usr/include/c++/4.4/bits/basic_string.h ****         bool
 187:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_is_shared() const
 188:/usr/include/c++/4.4/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 189:/usr/include/c++/4.4/bits/basic_string.h **** 
 190:/usr/include/c++/4.4/bits/basic_string.h ****         void
 191:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_set_leaked()
 192:/usr/include/c++/4.4/bits/basic_string.h ****         { this->_M_refcount = -1; }
 193:/usr/include/c++/4.4/bits/basic_string.h **** 
 194:/usr/include/c++/4.4/bits/basic_string.h ****         void
 195:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_set_sharable()
 196:/usr/include/c++/4.4/bits/basic_string.h ****         { this->_M_refcount = 0; }
 197:/usr/include/c++/4.4/bits/basic_string.h **** 
 198:/usr/include/c++/4.4/bits/basic_string.h **** 	void
 199:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n)
 200:/usr/include/c++/4.4/bits/basic_string.h **** 	{
 201:/usr/include/c++/4.4/bits/basic_string.h **** #ifndef _GLIBCXX_FULLY_DYNAMIC_STRING
 202:/usr/include/c++/4.4/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 203:/usr/include/c++/4.4/bits/basic_string.h **** #endif
 204:/usr/include/c++/4.4/bits/basic_string.h **** 	    {
 205:/usr/include/c++/4.4/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 206:/usr/include/c++/4.4/bits/basic_string.h **** 	      this->_M_length = __n;
 207:/usr/include/c++/4.4/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 208:/usr/include/c++/4.4/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 209:/usr/include/c++/4.4/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 210:/usr/include/c++/4.4/bits/basic_string.h **** 	    }
 211:/usr/include/c++/4.4/bits/basic_string.h **** 	}
 212:/usr/include/c++/4.4/bits/basic_string.h **** 
 213:/usr/include/c++/4.4/bits/basic_string.h **** 	_CharT*
 214:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_refdata() throw()
 215:/usr/include/c++/4.4/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 216:/usr/include/c++/4.4/bits/basic_string.h **** 
 217:/usr/include/c++/4.4/bits/basic_string.h **** 	_CharT*
 218:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 219:/usr/include/c++/4.4/bits/basic_string.h **** 	{
 220:/usr/include/c++/4.4/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 221:/usr/include/c++/4.4/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 222:/usr/include/c++/4.4/bits/basic_string.h **** 	}
 223:/usr/include/c++/4.4/bits/basic_string.h **** 
 224:/usr/include/c++/4.4/bits/basic_string.h **** 	// Create & Destroy
 225:/usr/include/c++/4.4/bits/basic_string.h **** 	static _Rep*
 226:/usr/include/c++/4.4/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 227:/usr/include/c++/4.4/bits/basic_string.h **** 
 228:/usr/include/c++/4.4/bits/basic_string.h **** 	void
 229:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a)
 230:/usr/include/c++/4.4/bits/basic_string.h **** 	{
 231:/usr/include/c++/4.4/bits/basic_string.h **** #ifndef _GLIBCXX_FULLY_DYNAMIC_STRING
 232:/usr/include/c++/4.4/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 233:/usr/include/c++/4.4/bits/basic_string.h **** #endif
 234:/usr/include/c++/4.4/bits/basic_string.h **** 	    if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 235:/usr/include/c++/4.4/bits/basic_string.h **** 						       -1) <= 0)
 236:/usr/include/c++/4.4/bits/basic_string.h **** 	      _M_destroy(__a);
 237:/usr/include/c++/4.4/bits/basic_string.h **** 	}  // XXX MT
 238:/usr/include/c++/4.4/bits/basic_string.h **** 
GAS LISTING /tmp/cc23nfB3.s 			page 41


 239:/usr/include/c++/4.4/bits/basic_string.h **** 	void
 240:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 241:/usr/include/c++/4.4/bits/basic_string.h **** 
 242:/usr/include/c++/4.4/bits/basic_string.h **** 	_CharT*
 243:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_refcopy() throw()
 244:/usr/include/c++/4.4/bits/basic_string.h **** 	{
 245:/usr/include/c++/4.4/bits/basic_string.h **** #ifndef _GLIBCXX_FULLY_DYNAMIC_STRING
 246:/usr/include/c++/4.4/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 247:/usr/include/c++/4.4/bits/basic_string.h **** #endif
 248:/usr/include/c++/4.4/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 249:/usr/include/c++/4.4/bits/basic_string.h **** 	  return _M_refdata();
 250:/usr/include/c++/4.4/bits/basic_string.h **** 	}  // XXX MT
 251:/usr/include/c++/4.4/bits/basic_string.h **** 
 252:/usr/include/c++/4.4/bits/basic_string.h **** 	_CharT*
 253:/usr/include/c++/4.4/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 254:/usr/include/c++/4.4/bits/basic_string.h ****       };
 255:/usr/include/c++/4.4/bits/basic_string.h **** 
 256:/usr/include/c++/4.4/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 257:/usr/include/c++/4.4/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 258:/usr/include/c++/4.4/bits/basic_string.h ****       {
 259:/usr/include/c++/4.4/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a)
 260:/usr/include/c++/4.4/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 261:/usr/include/c++/4.4/bits/basic_string.h **** 
 262:/usr/include/c++/4.4/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 263:/usr/include/c++/4.4/bits/basic_string.h ****       };
 264:/usr/include/c++/4.4/bits/basic_string.h **** 
 265:/usr/include/c++/4.4/bits/basic_string.h ****     public:
 266:/usr/include/c++/4.4/bits/basic_string.h ****       // Data Members (public):
 267:/usr/include/c++/4.4/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 268:/usr/include/c++/4.4/bits/basic_string.h ****       // size that the allocator can hold.
 269:/usr/include/c++/4.4/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 270:/usr/include/c++/4.4/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 271:/usr/include/c++/4.4/bits/basic_string.h **** 
 272:/usr/include/c++/4.4/bits/basic_string.h ****     private:
 273:/usr/include/c++/4.4/bits/basic_string.h ****       // Data Members (private):
 274:/usr/include/c++/4.4/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 275:/usr/include/c++/4.4/bits/basic_string.h **** 
 276:/usr/include/c++/4.4/bits/basic_string.h ****       _CharT*
 277:/usr/include/c++/4.4/bits/basic_string.h ****       _M_data() const
 278:/usr/include/c++/4.4/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 279:/usr/include/c++/4.4/bits/basic_string.h **** 
 280:/usr/include/c++/4.4/bits/basic_string.h ****       _CharT*
 281:/usr/include/c++/4.4/bits/basic_string.h ****       _M_data(_CharT* __p)
 282:/usr/include/c++/4.4/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 283:/usr/include/c++/4.4/bits/basic_string.h **** 
 284:/usr/include/c++/4.4/bits/basic_string.h ****       _Rep*
 285:/usr/include/c++/4.4/bits/basic_string.h ****       _M_rep() const
 286:/usr/include/c++/4.4/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 287:/usr/include/c++/4.4/bits/basic_string.h **** 
 288:/usr/include/c++/4.4/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
 289:/usr/include/c++/4.4/bits/basic_string.h ****       // but they do not call _M_leak.
 290:/usr/include/c++/4.4/bits/basic_string.h ****       iterator
 291:/usr/include/c++/4.4/bits/basic_string.h ****       _M_ibegin() const
 292:/usr/include/c++/4.4/bits/basic_string.h ****       { return iterator(_M_data()); }
 293:/usr/include/c++/4.4/bits/basic_string.h **** 
 294:/usr/include/c++/4.4/bits/basic_string.h ****       iterator
 295:/usr/include/c++/4.4/bits/basic_string.h ****       _M_iend() const
GAS LISTING /tmp/cc23nfB3.s 			page 42


 296:/usr/include/c++/4.4/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 297:/usr/include/c++/4.4/bits/basic_string.h **** 
 298:/usr/include/c++/4.4/bits/basic_string.h ****       void
 299:/usr/include/c++/4.4/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
 300:/usr/include/c++/4.4/bits/basic_string.h ****       {
 301:/usr/include/c++/4.4/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
 302:/usr/include/c++/4.4/bits/basic_string.h **** 	  _M_leak_hard();
 303:/usr/include/c++/4.4/bits/basic_string.h ****       }
 304:/usr/include/c++/4.4/bits/basic_string.h **** 
 305:/usr/include/c++/4.4/bits/basic_string.h ****       size_type
 306:/usr/include/c++/4.4/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 307:/usr/include/c++/4.4/bits/basic_string.h ****       {
 308:/usr/include/c++/4.4/bits/basic_string.h **** 	if (__pos > this->size())
 309:/usr/include/c++/4.4/bits/basic_string.h **** 	  __throw_out_of_range(__N(__s));
 310:/usr/include/c++/4.4/bits/basic_string.h **** 	return __pos;
 311:/usr/include/c++/4.4/bits/basic_string.h ****       }
 312:/usr/include/c++/4.4/bits/basic_string.h **** 
 313:/usr/include/c++/4.4/bits/basic_string.h ****       void
 314:/usr/include/c++/4.4/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 315:/usr/include/c++/4.4/bits/basic_string.h ****       {
 316:/usr/include/c++/4.4/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 317:/usr/include/c++/4.4/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 318:/usr/include/c++/4.4/bits/basic_string.h ****       }
 319:/usr/include/c++/4.4/bits/basic_string.h **** 
 320:/usr/include/c++/4.4/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 321:/usr/include/c++/4.4/bits/basic_string.h ****       size_type
 322:/usr/include/c++/4.4/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const
 323:/usr/include/c++/4.4/bits/basic_string.h ****       {
 324:/usr/include/c++/4.4/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 325:/usr/include/c++/4.4/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 326:/usr/include/c++/4.4/bits/basic_string.h ****       }
 327:/usr/include/c++/4.4/bits/basic_string.h **** 
 328:/usr/include/c++/4.4/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 329:/usr/include/c++/4.4/bits/basic_string.h ****       bool
 330:/usr/include/c++/4.4/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const
 331:/usr/include/c++/4.4/bits/basic_string.h ****       {
 332:/usr/include/c++/4.4/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 333:/usr/include/c++/4.4/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 334:/usr/include/c++/4.4/bits/basic_string.h ****       }
 335:/usr/include/c++/4.4/bits/basic_string.h **** 
 336:/usr/include/c++/4.4/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 337:/usr/include/c++/4.4/bits/basic_string.h ****       // traits_type::copy/move/assign.
 338:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 339:/usr/include/c++/4.4/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
 340:/usr/include/c++/4.4/bits/basic_string.h ****       {
 341:/usr/include/c++/4.4/bits/basic_string.h **** 	if (__n == 1)
 342:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 343:/usr/include/c++/4.4/bits/basic_string.h **** 	else
 344:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 345:/usr/include/c++/4.4/bits/basic_string.h ****       }
 346:/usr/include/c++/4.4/bits/basic_string.h **** 
 347:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 348:/usr/include/c++/4.4/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n)
 349:/usr/include/c++/4.4/bits/basic_string.h ****       {
 350:/usr/include/c++/4.4/bits/basic_string.h **** 	if (__n == 1)
 351:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 352:/usr/include/c++/4.4/bits/basic_string.h **** 	else
GAS LISTING /tmp/cc23nfB3.s 			page 43


 353:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
 354:/usr/include/c++/4.4/bits/basic_string.h ****       }
 355:/usr/include/c++/4.4/bits/basic_string.h **** 
 356:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 357:/usr/include/c++/4.4/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c)
 358:/usr/include/c++/4.4/bits/basic_string.h ****       {
 359:/usr/include/c++/4.4/bits/basic_string.h **** 	if (__n == 1)
 360:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 361:/usr/include/c++/4.4/bits/basic_string.h **** 	else
 362:/usr/include/c++/4.4/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
 363:/usr/include/c++/4.4/bits/basic_string.h ****       }
 364:/usr/include/c++/4.4/bits/basic_string.h **** 
 365:/usr/include/c++/4.4/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 366:/usr/include/c++/4.4/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 367:/usr/include/c++/4.4/bits/basic_string.h ****       template<class _Iterator>
 368:/usr/include/c++/4.4/bits/basic_string.h ****         static void
 369:/usr/include/c++/4.4/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 370:/usr/include/c++/4.4/bits/basic_string.h ****         {
 371:/usr/include/c++/4.4/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 372:/usr/include/c++/4.4/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 373:/usr/include/c++/4.4/bits/basic_string.h **** 	}
 374:/usr/include/c++/4.4/bits/basic_string.h **** 
 375:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 376:/usr/include/c++/4.4/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
 377:/usr/include/c++/4.4/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 378:/usr/include/c++/4.4/bits/basic_string.h **** 
 379:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 380:/usr/include/c++/4.4/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 381:/usr/include/c++/4.4/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 382:/usr/include/c++/4.4/bits/basic_string.h **** 
 383:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 384:/usr/include/c++/4.4/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
 385:/usr/include/c++/4.4/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 386:/usr/include/c++/4.4/bits/basic_string.h **** 
 387:/usr/include/c++/4.4/bits/basic_string.h ****       static void
 388:/usr/include/c++/4.4/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 389:/usr/include/c++/4.4/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 390:/usr/include/c++/4.4/bits/basic_string.h **** 
 391:/usr/include/c++/4.4/bits/basic_string.h ****       static int
 392:/usr/include/c++/4.4/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2)
 393:/usr/include/c++/4.4/bits/basic_string.h ****       {
 394:/usr/include/c++/4.4/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 395:/usr/include/c++/4.4/bits/basic_string.h **** 
 396:/usr/include/c++/4.4/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 397:/usr/include/c++/4.4/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 398:/usr/include/c++/4.4/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 399:/usr/include/c++/4.4/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 400:/usr/include/c++/4.4/bits/basic_string.h **** 	else
 401:/usr/include/c++/4.4/bits/basic_string.h **** 	  return int(__d);
 402:/usr/include/c++/4.4/bits/basic_string.h ****       }
 403:/usr/include/c++/4.4/bits/basic_string.h **** 
 404:/usr/include/c++/4.4/bits/basic_string.h ****       void
 405:/usr/include/c++/4.4/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
 406:/usr/include/c++/4.4/bits/basic_string.h **** 
 407:/usr/include/c++/4.4/bits/basic_string.h ****       void
 408:/usr/include/c++/4.4/bits/basic_string.h ****       _M_leak_hard();
 409:/usr/include/c++/4.4/bits/basic_string.h **** 
GAS LISTING /tmp/cc23nfB3.s 			page 44


 410:/usr/include/c++/4.4/bits/basic_string.h ****       static _Rep&
 411:/usr/include/c++/4.4/bits/basic_string.h ****       _S_empty_rep()
 412:/usr/include/c++/4.4/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
 413:/usr/include/c++/4.4/bits/basic_string.h **** 
 414:/usr/include/c++/4.4/bits/basic_string.h ****     public:
 415:/usr/include/c++/4.4/bits/basic_string.h ****       // Construct/copy/destroy:
 416:/usr/include/c++/4.4/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 417:/usr/include/c++/4.4/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 418:/usr/include/c++/4.4/bits/basic_string.h **** 
 419:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 420:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 421:/usr/include/c++/4.4/bits/basic_string.h ****        */
 422:/usr/include/c++/4.4/bits/basic_string.h ****       inline
 423:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string();
 424:/usr/include/c++/4.4/bits/basic_string.h **** 
 425:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 426:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 427:/usr/include/c++/4.4/bits/basic_string.h ****        */
 428:/usr/include/c++/4.4/bits/basic_string.h ****       explicit
 429:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const _Alloc& __a);
 430:/usr/include/c++/4.4/bits/basic_string.h **** 
 431:/usr/include/c++/4.4/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
 432:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 433:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
 434:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  str  Source string.
 435:/usr/include/c++/4.4/bits/basic_string.h ****        */
 436:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const basic_string& __str);
 437:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 438:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 439:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  str  Source string.
 440:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  pos  Index of first character to copy from.
 441:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  n  Number of characters to copy (default remainder).
 442:/usr/include/c++/4.4/bits/basic_string.h ****        */
 443:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 444:/usr/include/c++/4.4/bits/basic_string.h **** 		   size_type __n = npos);
 445:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 446:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 447:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  str  Source string.
 448:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  pos  Index of first character to copy from.
 449:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  n  Number of characters to copy.
 450:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use.
 451:/usr/include/c++/4.4/bits/basic_string.h ****        */
 452:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 453:/usr/include/c++/4.4/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
 454:/usr/include/c++/4.4/bits/basic_string.h **** 
 455:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 456:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string initialized by a character array.
 457:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  s  Source character array.
 458:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  n  Number of characters to copy.
 459:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use (default is default allocator).
 460:/usr/include/c++/4.4/bits/basic_string.h ****        *
 461:/usr/include/c++/4.4/bits/basic_string.h ****        *  NB: @a s must have at least @a n characters, '\\0' has no special
 462:/usr/include/c++/4.4/bits/basic_string.h ****        *  meaning.
 463:/usr/include/c++/4.4/bits/basic_string.h ****        */
 464:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 465:/usr/include/c++/4.4/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
 466:/usr/include/c++/4.4/bits/basic_string.h ****       /**
GAS LISTING /tmp/cc23nfB3.s 			page 45


 467:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 468:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  s  Source C string.
 469:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use (default is default allocator).
 470:/usr/include/c++/4.4/bits/basic_string.h ****        */
 471:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
 472:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 473:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 474:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  n  Number of characters.
 475:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  c  Character to use.
 476:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use (default is default allocator).
 477:/usr/include/c++/4.4/bits/basic_string.h ****        */
 478:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
 479:/usr/include/c++/4.4/bits/basic_string.h **** 
 480:/usr/include/c++/4.4/bits/basic_string.h **** #ifdef __GXX_EXPERIMENTAL_CXX0X__
 481:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 482:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string from an initializer list.
 483:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  l  std::initializer_list of characters.
 484:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use (default is default allocator).
 485:/usr/include/c++/4.4/bits/basic_string.h ****        */
 486:/usr/include/c++/4.4/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
 487:/usr/include/c++/4.4/bits/basic_string.h **** #endif // __GXX_EXPERIMENTAL_CXX0X__
 488:/usr/include/c++/4.4/bits/basic_string.h **** 
 489:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 490:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 491:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  beg  Start of range.
 492:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  end  End of range.
 493:/usr/include/c++/4.4/bits/basic_string.h ****        *  @param  a  Allocator to use (default is default allocator).
 494:/usr/include/c++/4.4/bits/basic_string.h ****        */
 495:/usr/include/c++/4.4/bits/basic_string.h ****       template<class _InputIterator>
 496:/usr/include/c++/4.4/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 497:/usr/include/c++/4.4/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
 498:/usr/include/c++/4.4/bits/basic_string.h **** 
 499:/usr/include/c++/4.4/bits/basic_string.h ****       /**
 500:/usr/include/c++/4.4/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 501:/usr/include/c++/4.4/bits/basic_string.h ****        */
 502:/usr/include/c++/4.4/bits/basic_string.h ****       ~basic_string()
 353              		.loc 8 502 0
 354              		.cfi_startproc
 355              		.cfi_personality 0x0,__gxx_personality_v0
 356              	.LVL13:
 357 0000 55       		pushl	%ebp
 358              	.LCFI14:
 359              		.cfi_def_cfa_offset 8
 360 0001 89E5     		movl	%esp, %ebp
 361              		.cfi_offset 5, -8
 362              	.LCFI15:
 363              		.cfi_def_cfa_register 5
 364 0003 83EC08   		subl	$8, %esp
 365              	.LBB360:
 366              	.LBB361:
 286:/usr/include/c++/4.4/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 367              		.loc 8 286 0
 368 0006 8B4508   		movl	8(%ebp), %eax
 369 0009 8B00     		movl	(%eax), %eax
 370 000b 83E80C   		subl	$12, %eax
 371              	.LBE361:
 372              	.LBE360:
GAS LISTING /tmp/cc23nfB3.s 			page 46


 373              	.LBB362:
 374              	.LBB363:
 232:/usr/include/c++/4.4/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 375              		.loc 8 232 0
 376 000e 3D000000 		cmpl	$_ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE, %eax
 376      00
 377 0013 7429     		je	.L25
 378              	.LVL14:
 379              	.LBB371:
 380              	.LBB372:
 381              		.file 9 "/usr/include/c++/4.4/ext/atomicity.h"
   1:/usr/include/c++/4.4/ext/atomicity.h **** // Support for atomic operations -*- C++ -*-
   2:/usr/include/c++/4.4/ext/atomicity.h **** 
   3:/usr/include/c++/4.4/ext/atomicity.h **** // Copyright (C) 2004, 2005, 2006, 2008, 2009 Free Software Foundation, Inc.
   4:/usr/include/c++/4.4/ext/atomicity.h **** //
   5:/usr/include/c++/4.4/ext/atomicity.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.4/ext/atomicity.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.4/ext/atomicity.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.4/ext/atomicity.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.4/ext/atomicity.h **** // any later version.
  10:/usr/include/c++/4.4/ext/atomicity.h **** 
  11:/usr/include/c++/4.4/ext/atomicity.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.4/ext/atomicity.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.4/ext/atomicity.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.4/ext/atomicity.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.4/ext/atomicity.h **** 
  16:/usr/include/c++/4.4/ext/atomicity.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.4/ext/atomicity.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.4/ext/atomicity.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.4/ext/atomicity.h **** 
  20:/usr/include/c++/4.4/ext/atomicity.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.4/ext/atomicity.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.4/ext/atomicity.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.4/ext/atomicity.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.4/ext/atomicity.h **** 
  25:/usr/include/c++/4.4/ext/atomicity.h **** /** @file atomicity.h
  26:/usr/include/c++/4.4/ext/atomicity.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.4/ext/atomicity.h ****  *  You should not attempt to use it directly.
  28:/usr/include/c++/4.4/ext/atomicity.h ****  */
  29:/usr/include/c++/4.4/ext/atomicity.h **** 
  30:/usr/include/c++/4.4/ext/atomicity.h **** #ifndef _GLIBCXX_ATOMICITY_H
  31:/usr/include/c++/4.4/ext/atomicity.h **** #define _GLIBCXX_ATOMICITY_H	1
  32:/usr/include/c++/4.4/ext/atomicity.h **** 
  33:/usr/include/c++/4.4/ext/atomicity.h **** #include <bits/c++config.h>
  34:/usr/include/c++/4.4/ext/atomicity.h **** #include <bits/gthr.h>
  35:/usr/include/c++/4.4/ext/atomicity.h **** #include <bits/atomic_word.h>
  36:/usr/include/c++/4.4/ext/atomicity.h **** 
  37:/usr/include/c++/4.4/ext/atomicity.h **** _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)
  38:/usr/include/c++/4.4/ext/atomicity.h **** 
  39:/usr/include/c++/4.4/ext/atomicity.h ****   // Functions for portable atomic access.
  40:/usr/include/c++/4.4/ext/atomicity.h ****   // To abstract locking primitives across all thread policies, use:
  41:/usr/include/c++/4.4/ext/atomicity.h ****   // __exchange_and_add_dispatch
  42:/usr/include/c++/4.4/ext/atomicity.h ****   // __atomic_add_dispatch
  43:/usr/include/c++/4.4/ext/atomicity.h **** #ifdef _GLIBCXX_ATOMIC_BUILTINS_4
  44:/usr/include/c++/4.4/ext/atomicity.h ****   static inline _Atomic_word 
  45:/usr/include/c++/4.4/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
  46:/usr/include/c++/4.4/ext/atomicity.h ****   { return __sync_fetch_and_add(__mem, __val); }
GAS LISTING /tmp/cc23nfB3.s 			page 47


  47:/usr/include/c++/4.4/ext/atomicity.h **** 
  48:/usr/include/c++/4.4/ext/atomicity.h ****   static inline void
  49:/usr/include/c++/4.4/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word* __mem, int __val)
  50:/usr/include/c++/4.4/ext/atomicity.h ****   { __sync_fetch_and_add(__mem, __val); }
  51:/usr/include/c++/4.4/ext/atomicity.h **** #else
  52:/usr/include/c++/4.4/ext/atomicity.h ****   _Atomic_word
  53:/usr/include/c++/4.4/ext/atomicity.h ****   __attribute__ ((__unused__))
  54:/usr/include/c++/4.4/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word*, int);
  55:/usr/include/c++/4.4/ext/atomicity.h **** 
  56:/usr/include/c++/4.4/ext/atomicity.h ****   void
  57:/usr/include/c++/4.4/ext/atomicity.h ****   __attribute__ ((__unused__))
  58:/usr/include/c++/4.4/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word*, int);
  59:/usr/include/c++/4.4/ext/atomicity.h **** #endif
  60:/usr/include/c++/4.4/ext/atomicity.h **** 
  61:/usr/include/c++/4.4/ext/atomicity.h ****   static inline _Atomic_word
  62:/usr/include/c++/4.4/ext/atomicity.h ****   __exchange_and_add_single(_Atomic_word* __mem, int __val)
  63:/usr/include/c++/4.4/ext/atomicity.h ****   {
  64:/usr/include/c++/4.4/ext/atomicity.h ****     _Atomic_word __result = *__mem;
  65:/usr/include/c++/4.4/ext/atomicity.h ****     *__mem += __val;
  66:/usr/include/c++/4.4/ext/atomicity.h ****     return __result;
  67:/usr/include/c++/4.4/ext/atomicity.h ****   }
  68:/usr/include/c++/4.4/ext/atomicity.h **** 
  69:/usr/include/c++/4.4/ext/atomicity.h ****   static inline void
  70:/usr/include/c++/4.4/ext/atomicity.h ****   __atomic_add_single(_Atomic_word* __mem, int __val)
  71:/usr/include/c++/4.4/ext/atomicity.h ****   { *__mem += __val; }
  72:/usr/include/c++/4.4/ext/atomicity.h **** 
  73:/usr/include/c++/4.4/ext/atomicity.h ****   static inline _Atomic_word
  74:/usr/include/c++/4.4/ext/atomicity.h ****   __attribute__ ((__unused__))
  75:/usr/include/c++/4.4/ext/atomicity.h ****   __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)
  76:/usr/include/c++/4.4/ext/atomicity.h ****   {
  77:/usr/include/c++/4.4/ext/atomicity.h **** #ifdef __GTHREADS
  78:/usr/include/c++/4.4/ext/atomicity.h ****     if (__gthread_active_p())
 382              		.loc 9 78 0
 383 0015 BA000000 		movl	$_ZL22__gthrw_pthread_cancelm, %edx
 383      00
 384 001a 85D2     		testl	%edx, %edx
 385 001c 740A     		je	.L23
 386              	.LBB373:
 387              	.LBB374:
  46:/usr/include/c++/4.4/ext/atomicity.h ****   { return __sync_fetch_and_add(__mem, __val); }
 388              		.loc 9 46 0
 389 001e 83CAFF   		orl	$-1, %edx
 390 0021 F00FC150 		lock xaddl	%edx, 8(%eax)
 390      08
 391 0026 EB09     		jmp	.L24
 392              	.L23:
 393              	.LBE374:
 394              	.LBE373:
 395              	.LBB375:
 396              	.LBB376:
  64:/usr/include/c++/4.4/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 397              		.loc 9 64 0
 398 0028 8B5008   		movl	8(%eax), %edx
 399              	.LVL15:
  65:/usr/include/c++/4.4/ext/atomicity.h ****     *__mem += __val;
 400              		.loc 9 65 0
 401 002b 8D4AFF   		leal	-1(%edx), %ecx
GAS LISTING /tmp/cc23nfB3.s 			page 48


 402 002e 894808   		movl	%ecx, 8(%eax)
 403              	.L24:
 404              	.LBE376:
 405              	.LBE375:
 406              	.LBE372:
 407              	.LBE371:
 234:/usr/include/c++/4.4/bits/basic_string.h **** 	    if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 408              		.loc 8 234 0
 409 0031 85D2     		testl	%edx, %edx
 410 0033 7F09     		jg	.L25
 411              	.LBB364:
 412              	.LBB365:
 413              	.LBB366:
 414              	.LBB367:
 415              		.file 10 "/usr/include/c++/4.4/ext/new_allocator.h"
   1:/usr/include/c++/4.4/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/4.4/ext/new_allocator.h **** 
   3:/usr/include/c++/4.4/ext/new_allocator.h **** // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009
   4:/usr/include/c++/4.4/ext/new_allocator.h **** // Free Software Foundation, Inc.
   5:/usr/include/c++/4.4/ext/new_allocator.h **** //
   6:/usr/include/c++/4.4/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   7:/usr/include/c++/4.4/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   8:/usr/include/c++/4.4/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   9:/usr/include/c++/4.4/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/4.4/ext/new_allocator.h **** // any later version.
  11:/usr/include/c++/4.4/ext/new_allocator.h **** 
  12:/usr/include/c++/4.4/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  13:/usr/include/c++/4.4/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/4.4/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/4.4/ext/new_allocator.h **** // GNU General Public License for more details.
  16:/usr/include/c++/4.4/ext/new_allocator.h **** 
  17:/usr/include/c++/4.4/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/4.4/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/4.4/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/4.4/ext/new_allocator.h **** 
  21:/usr/include/c++/4.4/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/4.4/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/4.4/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/4.4/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/4.4/ext/new_allocator.h **** 
  26:/usr/include/c++/4.4/ext/new_allocator.h **** /** @file ext/new_allocator.h
  27:/usr/include/c++/4.4/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  28:/usr/include/c++/4.4/ext/new_allocator.h ****  */
  29:/usr/include/c++/4.4/ext/new_allocator.h **** 
  30:/usr/include/c++/4.4/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  31:/usr/include/c++/4.4/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  32:/usr/include/c++/4.4/ext/new_allocator.h **** 
  33:/usr/include/c++/4.4/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/4.4/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/4.4/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/4.4/ext/new_allocator.h **** 
  37:/usr/include/c++/4.4/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)
  38:/usr/include/c++/4.4/ext/new_allocator.h **** 
  39:/usr/include/c++/4.4/ext/new_allocator.h ****   using std::size_t;
  40:/usr/include/c++/4.4/ext/new_allocator.h ****   using std::ptrdiff_t;
  41:/usr/include/c++/4.4/ext/new_allocator.h **** 
  42:/usr/include/c++/4.4/ext/new_allocator.h ****   /**
GAS LISTING /tmp/cc23nfB3.s 			page 49


  43:/usr/include/c++/4.4/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  44:/usr/include/c++/4.4/ext/new_allocator.h ****    *  @ingroup allocators
  45:/usr/include/c++/4.4/ext/new_allocator.h ****    *
  46:/usr/include/c++/4.4/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  47:/usr/include/c++/4.4/ext/new_allocator.h ****    *    - all allocation calls operator new
  48:/usr/include/c++/4.4/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  49:/usr/include/c++/4.4/ext/new_allocator.h ****    */
  50:/usr/include/c++/4.4/ext/new_allocator.h ****   template<typename _Tp>
  51:/usr/include/c++/4.4/ext/new_allocator.h ****     class new_allocator
  52:/usr/include/c++/4.4/ext/new_allocator.h ****     {
  53:/usr/include/c++/4.4/ext/new_allocator.h ****     public:
  54:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef size_t     size_type;
  55:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  56:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef _Tp*       pointer;
  57:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  58:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef _Tp&       reference;
  59:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  60:/usr/include/c++/4.4/ext/new_allocator.h ****       typedef _Tp        value_type;
  61:/usr/include/c++/4.4/ext/new_allocator.h **** 
  62:/usr/include/c++/4.4/ext/new_allocator.h ****       template<typename _Tp1>
  63:/usr/include/c++/4.4/ext/new_allocator.h ****         struct rebind
  64:/usr/include/c++/4.4/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  65:/usr/include/c++/4.4/ext/new_allocator.h **** 
  66:/usr/include/c++/4.4/ext/new_allocator.h ****       new_allocator() throw() { }
  67:/usr/include/c++/4.4/ext/new_allocator.h **** 
  68:/usr/include/c++/4.4/ext/new_allocator.h ****       new_allocator(const new_allocator&) throw() { }
  69:/usr/include/c++/4.4/ext/new_allocator.h **** 
  70:/usr/include/c++/4.4/ext/new_allocator.h ****       template<typename _Tp1>
  71:/usr/include/c++/4.4/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) throw() { }
  72:/usr/include/c++/4.4/ext/new_allocator.h **** 
  73:/usr/include/c++/4.4/ext/new_allocator.h ****       ~new_allocator() throw() { }
  74:/usr/include/c++/4.4/ext/new_allocator.h **** 
  75:/usr/include/c++/4.4/ext/new_allocator.h ****       pointer
  76:/usr/include/c++/4.4/ext/new_allocator.h ****       address(reference __x) const { return &__x; }
  77:/usr/include/c++/4.4/ext/new_allocator.h **** 
  78:/usr/include/c++/4.4/ext/new_allocator.h ****       const_pointer
  79:/usr/include/c++/4.4/ext/new_allocator.h ****       address(const_reference __x) const { return &__x; }
  80:/usr/include/c++/4.4/ext/new_allocator.h **** 
  81:/usr/include/c++/4.4/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  82:/usr/include/c++/4.4/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  83:/usr/include/c++/4.4/ext/new_allocator.h ****       pointer
  84:/usr/include/c++/4.4/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
  85:/usr/include/c++/4.4/ext/new_allocator.h ****       { 
  86:/usr/include/c++/4.4/ext/new_allocator.h **** 	if (__builtin_expect(__n > this->max_size(), false))
  87:/usr/include/c++/4.4/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
  88:/usr/include/c++/4.4/ext/new_allocator.h **** 
  89:/usr/include/c++/4.4/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
  90:/usr/include/c++/4.4/ext/new_allocator.h ****       }
  91:/usr/include/c++/4.4/ext/new_allocator.h **** 
  92:/usr/include/c++/4.4/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
  93:/usr/include/c++/4.4/ext/new_allocator.h ****       void
  94:/usr/include/c++/4.4/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
  95:/usr/include/c++/4.4/ext/new_allocator.h ****       { ::operator delete(__p); }
 416              		.loc 10 95 0
 417 0035 894508   		movl	%eax, 8(%ebp)
 418              	.LBE367:
 419              	.LBE366:
GAS LISTING /tmp/cc23nfB3.s 			page 50


 420              	.LBE365:
 421              	.LBE364:
 422              	.LBE363:
 423              	.LBE362:
 503:/usr/include/c++/4.4/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
 424              		.loc 8 503 0
 425 0038 C9       		leave
 426              	.LBB379:
 427              	.LBB378:
 428              	.LBB377:
 429              	.LBB370:
 430              	.LBB369:
 431              	.LBB368:
 432              		.loc 10 95 0
 433              		.cfi_escape 0x2e,0x4
 434 0039 E9FCFFFF 		jmp	_ZdlPv
 434      FF
 435              	.LVL16:
 436              	.L25:
 437              	.LBE368:
 438              	.LBE369:
 439              	.LBE370:
 440              	.LBE377:
 441              	.LBE378:
 442              	.LBE379:
 443              		.loc 8 503 0
 444 003e C9       		leave
 445 003f C3       		ret
 446              		.cfi_endproc
 447              	.LFE1323:
 449              		.section	.text._ZN4quex5TokenD0Ev,"axG",@progbits,_ZN4quex5TokenD0Ev,comdat
 450              		.align 2
 451              		.weak	_ZN4quex5TokenD0Ev
 453              	_ZN4quex5TokenD0Ev:
 454              	.LFB1303:
 480:./out/quex_scan **** 
 481:./out/quex_scan **** #   ifdef QUEX_OPTION_TOKEN_POLICY_QUEUE
 482:./out/quex_scan ****     /* QuexTokenQueueRemainder_restore(&memento->token_queue_remainder, &self._token_queue); */
 483:./out/quex_scan **** #   endif
 484:./out/quex_scan **** 
 485:./out/quex_scan **** /* START: User's memento 'unpack' _____________________________________________*/
 486:./out/quex_scan **** 
 487:./out/quex_scan **** /* END: _______________________________________________________________________*/
 488:./out/quex_scan ****     
 489:./out/quex_scan **** #   ifndef __QUEX_OPTION_PLAIN_C
 490:./out/quex_scan ****     /* Counterpart to placement new: Explicit destructor call.
 491:./out/quex_scan ****      * Necessary in C++: Trigger call to destructor for user defined members.  */
 492:./out/quex_scan ****     memento->~QUEX_NAME(Memento_tag)();
 493:./out/quex_scan **** #   endif
 494:./out/quex_scan **** 
 495:./out/quex_scan ****     QUEX_NAME(MemoryManager_Memento_free)(memento);
 496:./out/quex_scan **** #   undef self
 497:./out/quex_scan **** }
 498:./out/quex_scan **** #endif /* QUEX_OPTION_INCLUDE_STACK */
 499:./out/quex_scan **** 
 500:./out/quex_scan **** QUEX_NAMESPACE_MAIN_CLOSE
 501:./out/quex_scan **** 
GAS LISTING /tmp/cc23nfB3.s 			page 51


 502:./out/quex_scan **** #include <quex/code_base/temporary_macros_off>
 503:./out/quex_scan **** 
 504:./out/quex_scan **** #if defined(__QUEX_OPTION_CONVERTER_HELPER)
 505:./out/quex_scan **** #   include "quex/code_base/converter_helper/unicode.i"
 506:./out/quex_scan **** #endif
 507:./out/quex_scan **** #include <quex/code_base/analyzer/headers.i>
 508:./out/quex_scan **** 
 509:./out/quex_scan **** 
 510:./out/quex_scan **** /* -*- C++ -*-   vim: set syntax=cpp: 
 511:./out/quex_scan ****  * (C) 2004-2009 Frank-Rene Schaefer
 512:./out/quex_scan ****  * ABSOLUTELY NO WARRANTY
 513:./out/quex_scan ****  */
 514:./out/quex_scan **** #ifndef __QUEX_INCLUDE_GUARD__TOKEN__GENERATED____QUEX____TOKEN_I
 515:./out/quex_scan **** #define __QUEX_INCLUDE_GUARD__TOKEN__GENERATED____QUEX____TOKEN_I
 516:./out/quex_scan **** 
 517:./out/quex_scan **** namespace quex {
 518:./out/quex_scan **** 
 519:./out/quex_scan **** 
 520:./out/quex_scan **** inline
 521:./out/quex_scan **** /* NOTE: If you get an error here, then your configuration
 522:./out/quex_scan ****  *       file does not declare QUEX_TYPE0_TOKEN as Token. 
 523:./out/quex_scan ****  *       The following weirdly typed constructor shall break in
 524:./out/quex_scan ****  *       this particular case.                                        */
 525:./out/quex_scan **** Token::QUEX_TYPE0_TOKEN()
 526:./out/quex_scan **** /*****************************************************/
 527:./out/quex_scan **** {
 528:./out/quex_scan **** #   define self (*this)
 529:./out/quex_scan **** 
 530:./out/quex_scan **** #   undef  self
 531:./out/quex_scan **** }
 532:./out/quex_scan **** 
 533:./out/quex_scan **** inline
 534:./out/quex_scan **** Token::Token(const Token& Other)
 535:./out/quex_scan **** {
 536:./out/quex_scan ****    QUEX_NAME_TOKEN(copy)(this, &Other);
 537:./out/quex_scan **** #  define self (*this)
 538:./out/quex_scan **** 
 539:./out/quex_scan **** #  undef  self
 540:./out/quex_scan **** }
 541:./out/quex_scan **** 
 542:./out/quex_scan **** inline
 543:./out/quex_scan **** Token::~Token()
 455              		.loc 6 543 0
 456              		.cfi_startproc
 457              		.cfi_personality 0x0,__gxx_personality_v0
 458              	.LVL17:
 459 0000 55       		pushl	%ebp
 460              	.LCFI16:
 461              		.cfi_def_cfa_offset 8
 462 0001 89E5     		movl	%esp, %ebp
 463              		.cfi_offset 5, -8
 464              	.LCFI17:
 465              		.cfi_def_cfa_register 5
 466 0003 53       		pushl	%ebx
 467 0004 83EC10   		subl	$16, %esp
 468              		.loc 6 543 0
 469 0007 8B5D08   		movl	8(%ebp), %ebx
GAS LISTING /tmp/cc23nfB3.s 			page 52


 470              		.cfi_offset 3, -12
 544:./out/quex_scan **** {
 545:./out/quex_scan **** #  define self (*this)
 546:./out/quex_scan **** 
 547:./out/quex_scan **** #  undef  self
 548:./out/quex_scan **** }
 471              		.loc 6 548 0
 472 000a 8D4304   		leal	4(%ebx), %eax
 543:./out/quex_scan **** Token::~Token()
 473              		.loc 6 543 0
 474 000d C7030800 		movl	$_ZTVN4quex5TokenE+8, (%ebx)
 474      0000
 475              		.loc 6 548 0
 476 0013 50       		pushl	%eax
 477              		.cfi_escape 0x2e,0x10
 478 0014 E8FCFFFF 		call	_ZNSbIhSt11char_traitsIhESaIhEED1Ev
 478      FF
 479 0019 83C410   		addl	$16, %esp
 480 001c 895D08   		movl	%ebx, 8(%ebp)
 481 001f 8B5DFC   		movl	-4(%ebp), %ebx
 482 0022 C9       		leave
 483              		.cfi_escape 0x2e,0x4
 484 0023 E9FCFFFF 		jmp	_ZdlPv
 484      FF
 485              		.cfi_endproc
 486              	.LFE1303:
 488              		.section	.text._ZN4quex5TokenD1Ev,"axG",@progbits,_ZN4quex5TokenD1Ev,comdat
 489              		.align 2
 490              		.weak	_ZN4quex5TokenD1Ev
 492              	_ZN4quex5TokenD1Ev:
 493              	.LFB1302:
 543:./out/quex_scan **** Token::~Token()
 494              		.loc 6 543 0
 495              		.cfi_startproc
 496              		.cfi_personality 0x0,__gxx_personality_v0
 497              	.LVL18:
 498 0000 55       		pushl	%ebp
 499              	.LCFI18:
 500              		.cfi_def_cfa_offset 8
 501 0001 89E5     		movl	%esp, %ebp
 502              		.cfi_offset 5, -8
 503              	.LCFI19:
 504              		.cfi_def_cfa_register 5
 505 0003 83EC08   		subl	$8, %esp
 543:./out/quex_scan **** Token::~Token()
 506              		.loc 6 543 0
 507 0006 8B4508   		movl	8(%ebp), %eax
 508 0009 C7000800 		movl	$_ZTVN4quex5TokenE+8, (%eax)
 508      0000
 509              		.loc 6 548 0
 510 000f 83C004   		addl	$4, %eax
 511 0012 894508   		movl	%eax, 8(%ebp)
 512 0015 C9       		leave
 513              		.cfi_escape 0x2e,0x4
 514 0016 E9FCFFFF 		jmp	_ZNSbIhSt11char_traitsIhESaIhEED1Ev
 514      FF
 515              		.cfi_endproc
GAS LISTING /tmp/cc23nfB3.s 			page 53


 516              	.LFE1302:
 518              	.globl _Unwind_Resume
 519              		.section	.text._ZN4quex9quex_scanD0Ev,"axG",@progbits,_ZN4quex9quex_scanD0Ev,comdat
 520              		.align 2
 521              		.weak	_ZN4quex9quex_scanD0Ev
 523              	_ZN4quex9quex_scanD0Ev:
 524              	.LFB1249:
 145:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 146:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** TEMPLATE_IN(InputHandleT) void
 147:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(reset)(QUEX_TYPE_ANALYZER*  me,
 148:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                  InputHandleT*        input_handle, 
 149:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                  const char*          CharacterEncodingName /* = 0x0 */) 
 150:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 151:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(reset_basic)(me, input_handle, CharacterEncodingName, 
 152:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                            QUEX_SETTING_TRANSLATION_BUFFER_SIZE);
 153:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     me->__current_mode_p = 0x0; /* REQUIRED, for mode transition check */
 154:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(set_mode_brutally_by_id)(me, __QUEX_SETTING_INITIAL_LEXER_MODE_ID);
 155:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 156:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 157:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE QUEX_TYPE_CHARACTER*
 158:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(reset_buffer)(QUEX_TYPE_ANALYZER*   me,
 159:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         QUEX_TYPE_CHARACTER*  BufferMemoryBegin, 
 160:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         size_t                BufferMemorySize,
 161:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         QUEX_TYPE_CHARACTER*  BufferEndOfContentP,  /* = 0x0 */
 162:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         const char*           CharacterEncodingName /* = 0x0 */) 
 163:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 164:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_TYPE_CHARACTER* old_memory = 0x0;
 165:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     /* End of Content **must** lie inside the provided buffer */
 166:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   if defined(QUEX_OPTION_ASSERTS)
 167:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if(    BufferEndOfContentP < BufferMemoryBegin 
 168:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         || BufferEndOfContentP > (BufferMemoryBegin + BufferMemorySize - 1)) {
 169:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****         QUEX_ERROR_EXIT("\nreset_buffer: Argument 'BufferEndOfContentP' must be inside the provided
 170:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         "reset_buffer: buffer (speficied by 'BufferMemoryBegin' and 'BufferMemorySi
 171:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         "reset_buffer: Note, that the last element of the buffer is to be filled wi
 172:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                         "reset_buffer: the buffer limit code character.\n");
 173:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     }
 174:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #   endif
 175:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 176:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     /* reset_basic(...) does not reset the buffer memory itself. This must
 177:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****      * be done by hand.                                                    */
 178:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     old_memory = QUEX_NAME(BufferMemory_reset)(&me->buffer._memory,
 179:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                                BufferMemoryBegin, BufferMemorySize, 
 180:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                                BufferEndOfContentP);
 181:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 182:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( BufferMemoryBegin == 0x0 ) return old_memory;
 183:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 184:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(reset_basic)(me, /* InputHandle */ (FILE*)0x0, CharacterEncodingName, 
 185:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                            QUEX_SETTING_TRANSLATION_BUFFER_SIZE);
 186:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 187:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     me->__current_mode_p = 0x0; /* REQUIRED, for mode transition check */
 188:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(set_mode_brutally_by_id)(me, __QUEX_SETTING_INITIAL_LEXER_MODE_ID);
 189:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 190:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     return old_memory;
 191:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 192:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 193:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE void 
 194:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_NAME(reset_plain)(QUEX_TYPE_ANALYZER*  me,
GAS LISTING /tmp/cc23nfB3.s 			page 54


 195:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                        const char*          CharacterEncodingName /* = 0x0 */)
 196:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(reset)(me, (FILE*)0x0, CharacterEncodingName); }
 197:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 198:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #if ! defined(__QUEX_OPTION_PLAIN_C)
 199:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 200:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(QUEX_TYPE_CHARACTER* BufferMemoryBegin, 
 201:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  size_t               BufferMemorySize,
 202:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  QUEX_TYPE_CHARACTER* BufferEndOfFileP,     /* = 0x0   */
 203:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  const char*          CharacterEncodingName /* = 0x0   */,
 204:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  bool                 ByteOrderReversionF   /* = false */)
 205:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(construct_memory)(this, BufferMemoryBegin, BufferMemorySize, BufferEndOfFileP,
 206:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                               CharacterEncodingName, ByteOrderReversionF); }
 207:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 208:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 209:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(const std::string&  Filename, 
 210:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  const char*         CharacterEncodingName /* = 0x0   */,
 211:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  bool                ByteOrderReversionF   /* = false */)
 212:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(construct_file_name)(this, Filename.c_str(), CharacterEncodingName, ByteOrderReversionF
 213:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 214:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 215:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(std::FILE*   fh, 
 216:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  const char*  CharacterEncodingName /* = 0x0   */,
 217:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  bool         ByteOrderReversionF   /* = false */)
 218:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(construct_FILE)(this, fh, CharacterEncodingName, ByteOrderReversionF); }
 219:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 220:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 221:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(std::istream*   p_input_stream, 
 222:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  const char*     CharacterEncodingName /* = 0x0   */,
 223:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  bool            ByteOrderReversionF   /* = false */)
 224:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(construct_istream)(this, p_input_stream, CharacterEncodingName, ByteOrderReversionF); }
 225:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 226:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #if defined(__QUEX_OPTION_WCHAR_T)
 227:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 228:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(std::wistream*  p_input_stream, 
 229:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  const char*     CharacterEncodingName /* = 0x0   */,
 230:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                  bool            ByteOrderReversionF   /* = false */)
 231:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(construct_wistream)(this, p_input_stream, CharacterEncodingName, ByteOrderReversionF); 
 232:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #endif
 233:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 234:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #if defined(__QUEX_OPTION_UNIT_TEST) && ! defined (__QUEX_OPTION_PLAIN_C)
 235:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** /* StrangeStreams are not for C-language stuff */
 236:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** template<class UnderlyingStreamT> QUEX_INLINE
 237:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(QUEX_TYPE0_ANALYZER)(quex::StrangeStream<UnderlyingStreamT>*  p_input_stream, 
 238:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 const char*      CharacterEncodingName /* = 0x0   */,
 239:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 bool             ByteOrderReversionF   /* = false */)
 240:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** {
 241:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     if( p_input_stream == NULL ) QUEX_ERROR_EXIT("Error: received NULL as pointer to input stream."
 242:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****     QUEX_NAME(constructor_core)(this, p_input_stream, 
 243:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 CharacterEncodingName, ByteOrderReversionF, 
 244:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i ****                                 0x0, QUEX_SETTING_BUFFER_SIZE, 0x0);
 245:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** }
 246:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** #endif
 247:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** 
 248:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_INLINE
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(~QUEX_TYPE0_ANALYZER)() 
 525              		.loc 4 249 0
 526              		.cfi_startproc
GAS LISTING /tmp/cc23nfB3.s 			page 55


 527              		.cfi_personality 0x0,__gxx_personality_v0
 528              		.cfi_lsda 0x0,.LLSDA1249
 529              	.LVL19:
 530 0000 55       		pushl	%ebp
 531              	.LCFI20:
 532              		.cfi_def_cfa_offset 8
 533 0001 89E5     		movl	%esp, %ebp
 534              		.cfi_offset 5, -8
 535              	.LCFI21:
 536              		.cfi_def_cfa_register 5
 537 0003 56       		pushl	%esi
 538 0004 53       		pushl	%ebx
 539              		.loc 4 249 0
 540 0005 8B5D08   		movl	8(%ebp), %ebx
 541              		.cfi_offset 3, -16
 542              		.cfi_offset 6, -12
 250:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** { QUEX_NAME(destruct)(this); }
 543              		.loc 4 250 0
 544 0008 83EC0C   		subl	$12, %esp
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(~QUEX_TYPE0_ANALYZER)() 
 545              		.loc 4 249 0
 546 000b C7030800 		movl	$_ZTVN4quex9quex_scanE+8, (%ebx)
 546      0000
 547 0011 8D7308   		leal	8(%ebx), %esi
 548              		.loc 4 250 0
 549 0014 53       		pushl	%ebx
 550              	.LEHB0:
 551              		.cfi_escape 0x2e,0x10
 552 0015 E8FCFFFF 		call	_ZN4quex18quex_scan_destructEPNS_9quex_scanE
 552      FF
 553              	.LEHE0:
 554              	.LVL20:
 555 001a 893424   		movl	%esi, (%esp)
 556 001d E8FCFFFF 		call	_ZN4quex5TokenD1Ev
 556      FF
 557 0022 83C410   		addl	$16, %esp
 558 0025 895D08   		movl	%ebx, 8(%ebp)
 559 0028 8D65F8   		leal	-8(%ebp), %esp
 560 002b 5B       		popl	%ebx
 561              	.LVL21:
 562 002c 5E       		popl	%esi
 563 002d 5D       		popl	%ebp
 564              		.cfi_escape 0x2e,0x4
 565 002e E9FCFFFF 		jmp	_ZdlPv
 565      FF
 566              	.LVL22:
 567              	.L34:
 568              	.L32:
 569 0033 83EC0C   		subl	$12, %esp
 570 0036 89C3     		movl	%eax, %ebx
 571              	.LVL23:
 572 0038 56       		pushl	%esi
 573              		.cfi_escape 0x2e,0x10
 574 0039 E8FCFFFF 		call	_ZN4quex5TokenD1Ev
 574      FF
 575 003e 891C24   		movl	%ebx, (%esp)
 576              	.LEHB1:
GAS LISTING /tmp/cc23nfB3.s 			page 56


 577 0041 E8FCFFFF 		call	_Unwind_Resume
 577      FF
 578              	.LEHE1:
 579              		.cfi_endproc
 580              	.LFE1249:
 582              	.globl __gxx_personality_v0
 583              		.section	.gcc_except_table,"a",@progbits
 584              	.LLSDA1249:
 585 0000 FF       		.byte	0xff
 586 0001 FF       		.byte	0xff
 587 0002 01       		.byte	0x1
 588 0003 08       		.uleb128 .LLSDACSE1249-.LLSDACSB1249
 589              	.LLSDACSB1249:
 590 0004 15       		.uleb128 .LEHB0-.LFB1249
 591 0005 05       		.uleb128 .LEHE0-.LEHB0
 592 0006 33       		.uleb128 .L34-.LFB1249
 593 0007 00       		.uleb128 0x0
 594 0008 41       		.uleb128 .LEHB1-.LFB1249
 595 0009 05       		.uleb128 .LEHE1-.LEHB1
 596 000a 00       		.uleb128 0x0
 597 000b 00       		.uleb128 0x0
 598              	.LLSDACSE1249:
 599              		.section	.text._ZN4quex9quex_scanD0Ev,"axG",@progbits,_ZN4quex9quex_scanD0Ev,comdat
 600              		.section	.text._ZN4quex9quex_scanD1Ev,"axG",@progbits,_ZN4quex9quex_scanD1Ev,comdat
 601              		.align 2
 602              		.weak	_ZN4quex9quex_scanD1Ev
 604              	_ZN4quex9quex_scanD1Ev:
 605              	.LFB1248:
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(~QUEX_TYPE0_ANALYZER)() 
 606              		.loc 4 249 0
 607              		.cfi_startproc
 608              		.cfi_personality 0x0,__gxx_personality_v0
 609              		.cfi_lsda 0x0,.LLSDA1248
 610              	.LVL24:
 611 0000 55       		pushl	%ebp
 612              	.LCFI22:
 613              		.cfi_def_cfa_offset 8
 614 0001 89E5     		movl	%esp, %ebp
 615              		.cfi_offset 5, -8
 616              	.LCFI23:
 617              		.cfi_def_cfa_register 5
 618 0003 56       		pushl	%esi
 619 0004 53       		pushl	%ebx
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(~QUEX_TYPE0_ANALYZER)() 
 620              		.loc 4 249 0
 621 0005 8B4508   		movl	8(%ebp), %eax
 622              		.loc 4 250 0
 623 0008 83EC0C   		subl	$12, %esp
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/constructor.i **** QUEX_MEMBER(~QUEX_TYPE0_ANALYZER)() 
 624              		.loc 4 249 0
 625 000b C7000800 		movl	$_ZTVN4quex9quex_scanE+8, (%eax)
 625      0000
 626 0011 8D5808   		leal	8(%eax), %ebx
 627              		.cfi_offset 3, -16
 628              		.cfi_offset 6, -12
 629              		.loc 4 250 0
 630 0014 50       		pushl	%eax
GAS LISTING /tmp/cc23nfB3.s 			page 57


 631              	.LEHB2:
 632              		.cfi_escape 0x2e,0x10
 633 0015 E8FCFFFF 		call	_ZN4quex18quex_scan_destructEPNS_9quex_scanE
 633      FF
 634              	.LEHE2:
 635              	.LVL25:
 636 001a 895D08   		movl	%ebx, 8(%ebp)
 637 001d 83C410   		addl	$16, %esp
 638 0020 8D65F8   		leal	-8(%ebp), %esp
 639 0023 5B       		popl	%ebx
 640 0024 5E       		popl	%esi
 641 0025 5D       		popl	%ebp
 642              		.cfi_escape 0x2e,0x4
 643 0026 E9FCFFFF 		jmp	_ZN4quex5TokenD1Ev
 643      FF
 644              	.L39:
 645              	.L37:
 646 002b 83EC0C   		subl	$12, %esp
 647 002e 89C6     		movl	%eax, %esi
 648 0030 53       		pushl	%ebx
 649              		.cfi_escape 0x2e,0x10
 650 0031 E8FCFFFF 		call	_ZN4quex5TokenD1Ev
 650      FF
 651 0036 893424   		movl	%esi, (%esp)
 652              	.LEHB3:
 653 0039 E8FCFFFF 		call	_Unwind_Resume
 653      FF
 654              	.LEHE3:
 655              		.cfi_endproc
 656              	.LFE1248:
 658              		.section	.gcc_except_table
 659              	.LLSDA1248:
 660 000c FF       		.byte	0xff
 661 000d FF       		.byte	0xff
 662 000e 01       		.byte	0x1
 663 000f 08       		.uleb128 .LLSDACSE1248-.LLSDACSB1248
 664              	.LLSDACSB1248:
 665 0010 15       		.uleb128 .LEHB2-.LFB1248
 666 0011 05       		.uleb128 .LEHE2-.LEHB2
 667 0012 2B       		.uleb128 .L39-.LFB1248
 668 0013 00       		.uleb128 0x0
 669 0014 39       		.uleb128 .LEHB3-.LFB1248
 670 0015 05       		.uleb128 .LEHE3-.LEHB3
 671 0016 00       		.uleb128 0x0
 672 0017 00       		.uleb128 0x0
 673              	.LLSDACSE1248:
 674              		.section	.text._ZN4quex9quex_scanD1Ev,"axG",@progbits,_ZN4quex9quex_scanD1Ev,comdat
 675              		.text
 677              	_GLOBAL__I__ZN4quex17quex_scan_PROGRAME:
 678              	.LFB1577:
  63:out/quex_scan.cpp **** #endif    
  64:out/quex_scan.cpp **** #undef self
  65:out/quex_scan.cpp **** #undef __self_result_token_id
  66:out/quex_scan.cpp **** QUEX_NAMESPACE_MAIN_CLOSE
  67:out/quex_scan.cpp **** 
  68:out/quex_scan.cpp **** /* #include "out/quex_scan"*/
  69:out/quex_scan.cpp **** QUEX_NAMESPACE_MAIN_OPEN
GAS LISTING /tmp/cc23nfB3.s 			page 58


  70:out/quex_scan.cpp **** QUEX_TYPE_CHARACTER  QUEX_NAME(LexemeNullObject) = (QUEX_TYPE_CHARACTER)0;
  71:out/quex_scan.cpp **** 
  72:out/quex_scan.cpp **** #include <quex/code_base/analyzer/member/basic>
  73:out/quex_scan.cpp **** #include <quex/code_base/buffer/Buffer>
  74:out/quex_scan.cpp **** #ifdef QUEX_OPTION_TOKEN_POLICY_QUEUE
  75:out/quex_scan.cpp **** #   include <quex/code_base/token/TokenQueue>
  76:out/quex_scan.cpp **** #endif
  77:out/quex_scan.cpp **** 
  78:out/quex_scan.cpp **** #ifdef    CONTINUE
  79:out/quex_scan.cpp **** #   undef CONTINUE
  80:out/quex_scan.cpp **** #endif
  81:out/quex_scan.cpp **** #define   CONTINUE goto __REENTRY_PREPARATION; 
  82:out/quex_scan.cpp **** 
  83:out/quex_scan.cpp **** #ifdef    RETURN
  84:out/quex_scan.cpp **** #   undef RETURN
  85:out/quex_scan.cpp **** #endif
  86:out/quex_scan.cpp **** 
  87:out/quex_scan.cpp **** #if defined(QUEX_OPTION_TOKEN_POLICY_QUEUE)
  88:out/quex_scan.cpp **** #   define RETURN   return
  89:out/quex_scan.cpp **** #else
  90:out/quex_scan.cpp **** #   define RETURN   do { return __self_result_token_id; } while(0)
  91:out/quex_scan.cpp **** #endif
  92:out/quex_scan.cpp **** #include <quex/code_base/temporary_macros_on>
  93:out/quex_scan.cpp **** 
  94:out/quex_scan.cpp **** __QUEX_TYPE_ANALYZER_RETURN_VALUE  
  95:out/quex_scan.cpp **** QUEX_NAME(PROGRAM_analyzer_function)(QUEX_TYPE_ANALYZER* me) 
  96:out/quex_scan.cpp **** {
  97:out/quex_scan.cpp ****     /* NOTE: Different modes correspond to different analyzer functions. The analyzer  
  98:out/quex_scan.cpp ****              functions are all located inside the main class as static functions. That  
  99:out/quex_scan.cpp ****              means, they are something like 'globals'. They receive a pointer to the   
 100:out/quex_scan.cpp ****              lexical analyzer, since static member do not have access to the 'this' pointer.
 101:out/quex_scan.cpp ****      */
 102:out/quex_scan.cpp **** #   if defined(QUEX_OPTION_TOKEN_POLICY_SINGLE)
 103:out/quex_scan.cpp ****     register QUEX_TYPE_TOKEN_ID __self_result_token_id 
 104:out/quex_scan.cpp ****            = (QUEX_TYPE_TOKEN_ID)__QUEX_SETTING_TOKEN_ID_UNINITIALIZED;
 105:out/quex_scan.cpp **** #   endif
 106:out/quex_scan.cpp **** #   ifdef     self
 107:out/quex_scan.cpp **** #       undef self
 108:out/quex_scan.cpp **** #   endif
 109:out/quex_scan.cpp **** #   define self (*((QUEX_TYPE_ANALYZER*)me))
 110:out/quex_scan.cpp ****     /* me = pointer to state of the lexical analyzer */
 111:out/quex_scan.cpp **** #   define PROGRAM    (QUEX_NAME(PROGRAM))
 112:out/quex_scan.cpp ****     QUEX_TYPE_CHARACTER_POSITION*  post_context_start_position    = 0x0;
 113:out/quex_scan.cpp ****     const size_t                   PostContextStartPositionN      = (size_t)0;
 114:out/quex_scan.cpp ****     QUEX_TYPE_GOTO_LABEL           last_acceptance                = QUEX_LABEL(2534);
 115:out/quex_scan.cpp ****     QUEX_TYPE_GOTO_LABEL           target_state_else_index        = (QUEX_TYPE_CHARACTER)(0x00);
 116:out/quex_scan.cpp ****     QUEX_TYPE_CHARACTER            input                          = (QUEX_TYPE_CHARACTER)(0x00);
 117:out/quex_scan.cpp ****     QUEX_TYPE_GOTO_LABEL           target_state_index             = (QUEX_TYPE_CHARACTER)(0x00);
 118:out/quex_scan.cpp ****     QUEX_TYPE_CHARACTER_POSITION   last_acceptance_input_position = (QUEX_TYPE_CHARACTER*)(0x00);
 119:out/quex_scan.cpp **** #   ifdef QUEX_OPTION_COLUMN_NUMBER_COUNTING
 120:out/quex_scan.cpp ****     QUEX_TYPE_CHARACTER_POSITION   reference_p                    = (QUEX_TYPE_CHARACTER_POSITION)0
 121:out/quex_scan.cpp **** #   endif /* QUEX_OPTION_COLUMN_NUMBER_COUNTING */
 122:out/quex_scan.cpp **** #   ifndef QUEX_OPTION_COMPUTED_GOTOS
 123:out/quex_scan.cpp **** #   endif /* QUEX_OPTION_COMPUTED_GOTOS */
 124:out/quex_scan.cpp **** 
 125:out/quex_scan.cpp ****     /* Post context positions do not have to be reset or initialized. If a state
 126:out/quex_scan.cpp ****      * is reached which is associated with 'end of post context' it is clear what
GAS LISTING /tmp/cc23nfB3.s 			page 59


 127:out/quex_scan.cpp ****      * post context is meant. This results from the ways the state machine is 
 128:out/quex_scan.cpp ****      * constructed. A post context positions live time looks like the following:
 129:out/quex_scan.cpp ****      *
 130:out/quex_scan.cpp ****      * (1)   unitialized (don't care)
 131:out/quex_scan.cpp ****      * (1.b) on buffer reload it may, or may not be adapted (don't care)
 132:out/quex_scan.cpp ****      * (2)   when a post context begin state is passed, the it is **SET** (now: take care)
 133:out/quex_scan.cpp ****      * (2.b) on buffer reload it **is adapted**.
 134:out/quex_scan.cpp ****      * (3)   when a terminal state of the post context is reached (which can only be reached
 135:out/quex_scan.cpp ****      *       for that particular post context, then the post context position is used
 136:out/quex_scan.cpp ****      *       to reset the input position.                                              */
 137:out/quex_scan.cpp **** #if    defined(QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE) \
 138:out/quex_scan.cpp ****     || defined(QUEX_OPTION_ASSERTS)
 139:out/quex_scan.cpp ****     me->DEBUG_analyzer_function_at_entry = me->current_analyzer_function;
 140:out/quex_scan.cpp **** #endif
 141:out/quex_scan.cpp **** __REENTRY:
 142:out/quex_scan.cpp ****     me->buffer._lexeme_start_p = me->buffer._input_p;
 143:out/quex_scan.cpp ****     if( me->buffer._character_at_lexeme_start != (QUEX_TYPE_CHARACTER)'\0' ) {
 144:out/quex_scan.cpp ****         *(me->buffer._input_p) = me->buffer._character_at_lexeme_start;
 145:out/quex_scan.cpp ****         me->buffer._character_at_lexeme_start = (QUEX_TYPE_CHARACTER)'\0';
 146:out/quex_scan.cpp ****     }
 147:out/quex_scan.cpp **** INIT_STATE_TRANSITION_BLOCK:
 148:out/quex_scan.cpp ****     __quex_debug_init_state();
 149:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 150:out/quex_scan.cpp ****     switch( input ) {
 151:out/quex_scan.cpp ****         case 0x0:     goto __RELOAD_INIT_STATE;
 152:out/quex_scan.cpp ****         case 0x9:     
 153:out/quex_scan.cpp ****         case 0xA:     
 154:out/quex_scan.cpp ****         case 0xD:     
 155:out/quex_scan.cpp ****         case 0x20:    goto _2519;
 156:out/quex_scan.cpp ****         case 0x21:    goto _2355;
 157:out/quex_scan.cpp ****         case 0x22:    goto _2365;
 158:out/quex_scan.cpp ****         case 0x23:    goto _2376;
 159:out/quex_scan.cpp ****         case 0x25:    goto _2520;
 160:out/quex_scan.cpp ****         case 0x26:    goto _2361;
 161:out/quex_scan.cpp ****         case 0x27:    goto _2352;
 162:out/quex_scan.cpp ****         case 0x28:    goto _2521;
 163:out/quex_scan.cpp ****         case 0x29:    goto _2522;
 164:out/quex_scan.cpp ****         case 0x2A:    goto _2369;
 165:out/quex_scan.cpp ****         case 0x2B:    goto _2368;
 166:out/quex_scan.cpp ****         case 0x2C:    goto _2523;
 167:out/quex_scan.cpp ****         case 0x2D:    goto _2351;
 168:out/quex_scan.cpp ****         case 0x2E:    goto _2524;
 169:out/quex_scan.cpp ****         case 0x2F:    goto _2356;
 170:out/quex_scan.cpp ****         case 0x30:    
 171:out/quex_scan.cpp ****         case 0x31:    
 172:out/quex_scan.cpp ****         case 0x32:    
 173:out/quex_scan.cpp ****         case 0x33:    
 174:out/quex_scan.cpp ****         case 0x34:    
 175:out/quex_scan.cpp ****         case 0x35:    
 176:out/quex_scan.cpp ****         case 0x36:    
 177:out/quex_scan.cpp ****         case 0x37:    
 178:out/quex_scan.cpp ****         case 0x38:    
 179:out/quex_scan.cpp ****         case 0x39:    goto _2370;
 180:out/quex_scan.cpp ****         case 0x3A:    goto _2525;
 181:out/quex_scan.cpp ****         case 0x3B:    goto _2526;
 182:out/quex_scan.cpp ****         case 0x3C:    goto _2342;
 183:out/quex_scan.cpp ****         case 0x3D:    goto _2382;
GAS LISTING /tmp/cc23nfB3.s 			page 60


 184:out/quex_scan.cpp ****         case 0x3E:    goto _2348;
 185:out/quex_scan.cpp ****         case 0x3F:    goto _2527;
 186:out/quex_scan.cpp ****         case 0x41:    
 187:out/quex_scan.cpp ****         case 0x42:    
 188:out/quex_scan.cpp ****         case 0x43:    
 189:out/quex_scan.cpp ****         case 0x44:    
 190:out/quex_scan.cpp ****         case 0x45:    
 191:out/quex_scan.cpp ****         case 0x46:    
 192:out/quex_scan.cpp ****         case 0x47:    
 193:out/quex_scan.cpp ****         case 0x48:    
 194:out/quex_scan.cpp ****         case 0x49:    
 195:out/quex_scan.cpp ****         case 0x4A:    
 196:out/quex_scan.cpp ****         case 0x4B:    
 197:out/quex_scan.cpp ****         case 0x4C:    
 198:out/quex_scan.cpp ****         case 0x4D:    
 199:out/quex_scan.cpp ****         case 0x4E:    
 200:out/quex_scan.cpp ****         case 0x4F:    
 201:out/quex_scan.cpp ****         case 0x50:    
 202:out/quex_scan.cpp ****         case 0x51:    
 203:out/quex_scan.cpp ****         case 0x52:    
 204:out/quex_scan.cpp ****         case 0x53:    
 205:out/quex_scan.cpp ****         case 0x54:    
 206:out/quex_scan.cpp ****         case 0x55:    
 207:out/quex_scan.cpp ****         case 0x56:    
 208:out/quex_scan.cpp ****         case 0x57:    
 209:out/quex_scan.cpp ****         case 0x58:    
 210:out/quex_scan.cpp ****         case 0x59:    
 211:out/quex_scan.cpp ****         case 0x5A:    goto _2364;
 212:out/quex_scan.cpp ****         case 0x5B:    goto _2528;
 213:out/quex_scan.cpp ****         case 0x5C:    goto _2343;
 214:out/quex_scan.cpp ****         case 0x5D:    goto _2529;
 215:out/quex_scan.cpp ****         case 0x5E:    goto _2530;
 216:out/quex_scan.cpp ****         case 0x5F:    
 217:out/quex_scan.cpp ****         case 0x61:    goto _2364;
 218:out/quex_scan.cpp ****         case 0x62:    goto _2353;
 219:out/quex_scan.cpp ****         case 0x63:    goto _2373;
 220:out/quex_scan.cpp ****         case 0x64:    goto _2372;
 221:out/quex_scan.cpp ****         case 0x65:    goto _2380;
 222:out/quex_scan.cpp ****         case 0x66:    goto _2354;
 223:out/quex_scan.cpp ****         case 0x67:    
 224:out/quex_scan.cpp ****         case 0x68:    goto _2364;
 225:out/quex_scan.cpp ****         case 0x69:    goto _2357;
 226:out/quex_scan.cpp ****         case 0x6A:    
 227:out/quex_scan.cpp ****         case 0x6B:    goto _2364;
 228:out/quex_scan.cpp ****         case 0x6C:    goto _2367;
 229:out/quex_scan.cpp ****         case 0x6D:    
 230:out/quex_scan.cpp ****         case 0x6E:    
 231:out/quex_scan.cpp ****         case 0x6F:    
 232:out/quex_scan.cpp ****         case 0x70:    
 233:out/quex_scan.cpp ****         case 0x71:    
 234:out/quex_scan.cpp ****         case 0x72:    goto _2364;
 235:out/quex_scan.cpp ****         case 0x73:    goto _2378;
 236:out/quex_scan.cpp ****         case 0x74:    goto _2364;
 237:out/quex_scan.cpp ****         case 0x75:    goto _2363;
 238:out/quex_scan.cpp ****         case 0x76:    goto _2364;
 239:out/quex_scan.cpp ****         case 0x77:    goto _2374;
 240:out/quex_scan.cpp ****         case 0x78:    
GAS LISTING /tmp/cc23nfB3.s 			page 61


 241:out/quex_scan.cpp ****         case 0x79:    
 242:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
 243:out/quex_scan.cpp ****         case 0x7B:    goto _2531;
 244:out/quex_scan.cpp ****         case 0x7C:    goto _2377;
 245:out/quex_scan.cpp ****         case 0x7D:    goto _2532;
 246:out/quex_scan.cpp ****         case 0x7E:    goto _2533;
 247:out/quex_scan.cpp ****     }
 248:out/quex_scan.cpp **** 
 249:out/quex_scan.cpp ****       
 250:out/quex_scan.cpp ****     goto _2534;
 251:out/quex_scan.cpp **** 
 252:out/quex_scan.cpp **** _2341:
 253:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 254:out/quex_scan.cpp ****     goto INIT_STATE_TRANSITION_BLOCK;
 255:out/quex_scan.cpp **** 
 256:out/quex_scan.cpp ****     __quex_assert_no_passage();
 257:out/quex_scan.cpp **** _2364:
 258:out/quex_scan.cpp ****     __quex_debug_state(2364);
 259:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 260:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 261:out/quex_scan.cpp ****     switch( input ) {
 262:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2364), QUEX_LABEL(2535));
 263:out/quex_scan.cpp ****         case 0x30:    
 264:out/quex_scan.cpp ****         case 0x31:    
 265:out/quex_scan.cpp ****         case 0x32:    
 266:out/quex_scan.cpp ****         case 0x33:    
 267:out/quex_scan.cpp ****         case 0x34:    
 268:out/quex_scan.cpp ****         case 0x35:    
 269:out/quex_scan.cpp ****         case 0x36:    
 270:out/quex_scan.cpp ****         case 0x37:    
 271:out/quex_scan.cpp ****         case 0x38:    
 272:out/quex_scan.cpp ****         case 0x39:    
 273:out/quex_scan.cpp ****         case 0x41:    
 274:out/quex_scan.cpp ****         case 0x42:    
 275:out/quex_scan.cpp ****         case 0x43:    
 276:out/quex_scan.cpp ****         case 0x44:    
 277:out/quex_scan.cpp ****         case 0x45:    
 278:out/quex_scan.cpp ****         case 0x46:    
 279:out/quex_scan.cpp ****         case 0x47:    
 280:out/quex_scan.cpp ****         case 0x48:    
 281:out/quex_scan.cpp ****         case 0x49:    
 282:out/quex_scan.cpp ****         case 0x4A:    
 283:out/quex_scan.cpp ****         case 0x4B:    
 284:out/quex_scan.cpp ****         case 0x4C:    
 285:out/quex_scan.cpp ****         case 0x4D:    
 286:out/quex_scan.cpp ****         case 0x4E:    
 287:out/quex_scan.cpp ****         case 0x4F:    
 288:out/quex_scan.cpp ****         case 0x50:    
 289:out/quex_scan.cpp ****         case 0x51:    
 290:out/quex_scan.cpp ****         case 0x52:    
 291:out/quex_scan.cpp ****         case 0x53:    
 292:out/quex_scan.cpp ****         case 0x54:    
 293:out/quex_scan.cpp ****         case 0x55:    
 294:out/quex_scan.cpp ****         case 0x56:    
 295:out/quex_scan.cpp ****         case 0x57:    
 296:out/quex_scan.cpp ****         case 0x58:    
 297:out/quex_scan.cpp ****         case 0x59:    
GAS LISTING /tmp/cc23nfB3.s 			page 62


 298:out/quex_scan.cpp ****         case 0x5A:    
 299:out/quex_scan.cpp ****         case 0x5F:    
 300:out/quex_scan.cpp ****         case 0x61:    
 301:out/quex_scan.cpp ****         case 0x62:    
 302:out/quex_scan.cpp ****         case 0x63:    
 303:out/quex_scan.cpp ****         case 0x64:    
 304:out/quex_scan.cpp ****         case 0x65:    
 305:out/quex_scan.cpp ****         case 0x66:    
 306:out/quex_scan.cpp ****         case 0x67:    
 307:out/quex_scan.cpp ****         case 0x68:    
 308:out/quex_scan.cpp ****         case 0x69:    
 309:out/quex_scan.cpp ****         case 0x6A:    
 310:out/quex_scan.cpp ****         case 0x6B:    
 311:out/quex_scan.cpp ****         case 0x6C:    
 312:out/quex_scan.cpp ****         case 0x6D:    
 313:out/quex_scan.cpp ****         case 0x6E:    
 314:out/quex_scan.cpp ****         case 0x6F:    
 315:out/quex_scan.cpp ****         case 0x70:    
 316:out/quex_scan.cpp ****         case 0x71:    
 317:out/quex_scan.cpp ****         case 0x72:    
 318:out/quex_scan.cpp ****         case 0x73:    
 319:out/quex_scan.cpp ****         case 0x74:    
 320:out/quex_scan.cpp ****         case 0x75:    
 321:out/quex_scan.cpp ****         case 0x76:    
 322:out/quex_scan.cpp ****         case 0x77:    
 323:out/quex_scan.cpp ****         case 0x78:    
 324:out/quex_scan.cpp ****         case 0x79:    
 325:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
 326:out/quex_scan.cpp ****     }
 327:out/quex_scan.cpp **** 
 328:out/quex_scan.cpp **** _2535:
 329:out/quex_scan.cpp ****         goto _2536;
 330:out/quex_scan.cpp **** 
 331:out/quex_scan.cpp **** 
 332:out/quex_scan.cpp ****     __quex_assert_no_passage();
 333:out/quex_scan.cpp **** _2365:
 334:out/quex_scan.cpp ****     __quex_debug_state(2365);
 335:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 336:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 337:out/quex_scan.cpp ****     if( input < 0x23) {
 338:out/quex_scan.cpp ****         switch( input ) {
 339:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2365), QUEX_LABEL(2538));
 340:out/quex_scan.cpp ****             case 0x2:     
 341:out/quex_scan.cpp ****             case 0x3:     
 342:out/quex_scan.cpp ****             case 0x4:     
 343:out/quex_scan.cpp ****             case 0x5:     
 344:out/quex_scan.cpp ****             case 0x6:     
 345:out/quex_scan.cpp ****             case 0x7:     
 346:out/quex_scan.cpp ****             case 0x8:     
 347:out/quex_scan.cpp ****             case 0x9:     
 348:out/quex_scan.cpp ****             case 0xA:     
 349:out/quex_scan.cpp ****             case 0xB:     
 350:out/quex_scan.cpp ****             case 0xC:     
 351:out/quex_scan.cpp ****             case 0xD:     
 352:out/quex_scan.cpp ****             case 0xE:     
 353:out/quex_scan.cpp ****             case 0xF:     
 354:out/quex_scan.cpp ****             case 0x10:    
GAS LISTING /tmp/cc23nfB3.s 			page 63


 355:out/quex_scan.cpp ****             case 0x11:    
 356:out/quex_scan.cpp ****             case 0x12:    
 357:out/quex_scan.cpp ****             case 0x13:    
 358:out/quex_scan.cpp ****             case 0x14:    
 359:out/quex_scan.cpp ****             case 0x15:    
 360:out/quex_scan.cpp ****             case 0x16:    
 361:out/quex_scan.cpp ****             case 0x17:    
 362:out/quex_scan.cpp ****             case 0x18:    
 363:out/quex_scan.cpp ****             case 0x19:    
 364:out/quex_scan.cpp ****             case 0x1A:    
 365:out/quex_scan.cpp ****             case 0x1B:    
 366:out/quex_scan.cpp ****             case 0x1C:    
 367:out/quex_scan.cpp ****             case 0x1D:    
 368:out/quex_scan.cpp ****             case 0x1E:    
 369:out/quex_scan.cpp ****             case 0x1F:    
 370:out/quex_scan.cpp ****             case 0x20:    
 371:out/quex_scan.cpp ****             case 0x21:    goto _2365;
 372:out/quex_scan.cpp ****             case 0x22:    goto _2539;
 373:out/quex_scan.cpp ****         }
 374:out/quex_scan.cpp ****     } else {
 375:out/quex_scan.cpp ****         if( input < 0x5C ) {
 376:out/quex_scan.cpp ****             goto _2365;    /* ['#', '['] */
 377:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
 378:out/quex_scan.cpp ****             goto _2480;    /* '\' */
 379:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
 380:out/quex_scan.cpp ****             goto _2365;    /* [']', 'ÿ'] */
 381:out/quex_scan.cpp ****         }
 382:out/quex_scan.cpp ****     }
 383:out/quex_scan.cpp **** 
 384:out/quex_scan.cpp **** _2538:
 385:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 386:out/quex_scan.cpp **** 
 387:out/quex_scan.cpp **** 
 388:out/quex_scan.cpp ****     __quex_assert_no_passage();
 389:out/quex_scan.cpp **** _2480:
 390:out/quex_scan.cpp ****     __quex_debug_state(2480);
 391:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 392:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 393:out/quex_scan.cpp ****     if( input < 0x23) {
 394:out/quex_scan.cpp ****         switch( input ) {
 395:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2480), QUEX_LABEL(2540));
 396:out/quex_scan.cpp ****             case 0x2:     
 397:out/quex_scan.cpp ****             case 0x3:     
 398:out/quex_scan.cpp ****             case 0x4:     
 399:out/quex_scan.cpp ****             case 0x5:     
 400:out/quex_scan.cpp ****             case 0x6:     
 401:out/quex_scan.cpp ****             case 0x7:     
 402:out/quex_scan.cpp ****             case 0x8:     
 403:out/quex_scan.cpp ****             case 0x9:     
 404:out/quex_scan.cpp ****             case 0xA:     
 405:out/quex_scan.cpp ****             case 0xB:     
 406:out/quex_scan.cpp ****             case 0xC:     
 407:out/quex_scan.cpp ****             case 0xD:     
 408:out/quex_scan.cpp ****             case 0xE:     
 409:out/quex_scan.cpp ****             case 0xF:     
 410:out/quex_scan.cpp ****             case 0x10:    
 411:out/quex_scan.cpp ****             case 0x11:    
GAS LISTING /tmp/cc23nfB3.s 			page 64


 412:out/quex_scan.cpp ****             case 0x12:    
 413:out/quex_scan.cpp ****             case 0x13:    
 414:out/quex_scan.cpp ****             case 0x14:    
 415:out/quex_scan.cpp ****             case 0x15:    
 416:out/quex_scan.cpp ****             case 0x16:    
 417:out/quex_scan.cpp ****             case 0x17:    
 418:out/quex_scan.cpp ****             case 0x18:    
 419:out/quex_scan.cpp ****             case 0x19:    
 420:out/quex_scan.cpp ****             case 0x1A:    
 421:out/quex_scan.cpp ****             case 0x1B:    
 422:out/quex_scan.cpp ****             case 0x1C:    
 423:out/quex_scan.cpp ****             case 0x1D:    
 424:out/quex_scan.cpp ****             case 0x1E:    
 425:out/quex_scan.cpp ****             case 0x1F:    
 426:out/quex_scan.cpp ****             case 0x20:    
 427:out/quex_scan.cpp ****             case 0x21:    goto _2365;
 428:out/quex_scan.cpp ****             case 0x22:    goto _2481;
 429:out/quex_scan.cpp ****         }
 430:out/quex_scan.cpp ****     } else {
 431:out/quex_scan.cpp ****         if( input < 0x5C ) {
 432:out/quex_scan.cpp ****             goto _2365;    /* ['#', '['] */
 433:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
 434:out/quex_scan.cpp ****             goto _2480;    /* '\' */
 435:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
 436:out/quex_scan.cpp ****             goto _2365;    /* [']', 'ÿ'] */
 437:out/quex_scan.cpp ****         }
 438:out/quex_scan.cpp ****     }
 439:out/quex_scan.cpp **** 
 440:out/quex_scan.cpp **** _2540:
 441:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 442:out/quex_scan.cpp **** 
 443:out/quex_scan.cpp **** 
 444:out/quex_scan.cpp ****     __quex_assert_no_passage();
 445:out/quex_scan.cpp **** _2370:
 446:out/quex_scan.cpp ****     __quex_debug_state(2370);
 447:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 448:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 449:out/quex_scan.cpp ****     switch( input ) {
 450:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2370), QUEX_LABEL(2541));
 451:out/quex_scan.cpp ****         case 0x30:    
 452:out/quex_scan.cpp ****         case 0x31:    
 453:out/quex_scan.cpp ****         case 0x32:    
 454:out/quex_scan.cpp ****         case 0x33:    
 455:out/quex_scan.cpp ****         case 0x34:    
 456:out/quex_scan.cpp ****         case 0x35:    
 457:out/quex_scan.cpp ****         case 0x36:    
 458:out/quex_scan.cpp ****         case 0x37:    
 459:out/quex_scan.cpp ****         case 0x38:    
 460:out/quex_scan.cpp ****         case 0x39:    goto _2370;
 461:out/quex_scan.cpp ****     }
 462:out/quex_scan.cpp **** 
 463:out/quex_scan.cpp **** _2541:
 464:out/quex_scan.cpp ****         goto _2542;
 465:out/quex_scan.cpp **** 
 466:out/quex_scan.cpp **** 
 467:out/quex_scan.cpp ****     __quex_assert_no_passage();
 468:out/quex_scan.cpp **** _2398:
GAS LISTING /tmp/cc23nfB3.s 			page 65


 469:out/quex_scan.cpp ****     __quex_debug_state(2398);
 470:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 471:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 472:out/quex_scan.cpp ****     switch( input ) {
 473:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2398), QUEX_LABEL(2543));
 474:out/quex_scan.cpp ****         case 0x66:    goto _2427;
 475:out/quex_scan.cpp ****         case 0x6E:    goto _2428;
 476:out/quex_scan.cpp ****     }
 477:out/quex_scan.cpp **** 
 478:out/quex_scan.cpp **** _2543:
 479:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 480:out/quex_scan.cpp **** 
 481:out/quex_scan.cpp **** 
 482:out/quex_scan.cpp ****     __quex_assert_no_passage();
 483:out/quex_scan.cpp **** _2399:
 484:out/quex_scan.cpp ****     __quex_debug_state(2399);
 485:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 486:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 487:out/quex_scan.cpp ****     switch( input ) {
 488:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2399), QUEX_LABEL(2544));
 489:out/quex_scan.cpp ****         case 0x6C:    goto _2416;
 490:out/quex_scan.cpp ****         case 0x6E:    goto _2414;
 491:out/quex_scan.cpp ****         case 0x72:    goto _2415;
 492:out/quex_scan.cpp ****     }
 493:out/quex_scan.cpp **** 
 494:out/quex_scan.cpp **** _2544:
 495:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 496:out/quex_scan.cpp **** 
 497:out/quex_scan.cpp **** 
 498:out/quex_scan.cpp ****     __quex_assert_no_passage();
 499:out/quex_scan.cpp **** _2400:
 500:out/quex_scan.cpp ****     __quex_debug_state(2400);
 501:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 502:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 503:out/quex_scan.cpp ****     switch( input ) {
 504:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2400), QUEX_LABEL(2545));
 505:out/quex_scan.cpp ****         case 0x65:    goto _2409;
 506:out/quex_scan.cpp ****     }
 507:out/quex_scan.cpp **** 
 508:out/quex_scan.cpp **** _2545:
 509:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 510:out/quex_scan.cpp **** 
 511:out/quex_scan.cpp **** 
 512:out/quex_scan.cpp ****     __quex_assert_no_passage();
 513:out/quex_scan.cpp **** _2402:
 514:out/quex_scan.cpp ****     __quex_debug_state(2402);
 515:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 516:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 517:out/quex_scan.cpp ****     switch( input ) {
 518:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2402), QUEX_LABEL(2546));
 519:out/quex_scan.cpp ****         case 0x9:     
 520:out/quex_scan.cpp ****         case 0x20:    goto _2402;
 521:out/quex_scan.cpp ****         case 0x64:    goto _2400;
 522:out/quex_scan.cpp ****         case 0x65:    goto _2399;
 523:out/quex_scan.cpp ****         case 0x69:    goto _2398;
 524:out/quex_scan.cpp ****         case 0x70:    goto _2403;
 525:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 66


 526:out/quex_scan.cpp **** 
 527:out/quex_scan.cpp **** _2546:
 528:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 529:out/quex_scan.cpp **** 
 530:out/quex_scan.cpp **** 
 531:out/quex_scan.cpp ****     __quex_assert_no_passage();
 532:out/quex_scan.cpp **** _2403:
 533:out/quex_scan.cpp ****     __quex_debug_state(2403);
 534:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 535:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 536:out/quex_scan.cpp ****     switch( input ) {
 537:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2403), QUEX_LABEL(2547));
 538:out/quex_scan.cpp ****         case 0x72:    goto _2404;
 539:out/quex_scan.cpp ****     }
 540:out/quex_scan.cpp **** 
 541:out/quex_scan.cpp **** _2547:
 542:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 543:out/quex_scan.cpp **** 
 544:out/quex_scan.cpp **** 
 545:out/quex_scan.cpp ****     __quex_assert_no_passage();
 546:out/quex_scan.cpp **** _2433:
 547:out/quex_scan.cpp ****     __quex_debug_state(2433);
 548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 549:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 550:out/quex_scan.cpp ****     switch( input ) {
 551:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2433), QUEX_LABEL(2548));
 552:out/quex_scan.cpp ****         case 0x9:     
 553:out/quex_scan.cpp ****         case 0x20:    goto _2433;
 554:out/quex_scan.cpp ****         case 0x22:    goto _2435;
 555:out/quex_scan.cpp ****         case 0x3C:    goto _2434;
 556:out/quex_scan.cpp ****     }
 557:out/quex_scan.cpp **** 
 558:out/quex_scan.cpp **** _2548:
 559:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 560:out/quex_scan.cpp **** 
 561:out/quex_scan.cpp **** 
 562:out/quex_scan.cpp ****     __quex_assert_no_passage();
 563:out/quex_scan.cpp **** _2436:
 564:out/quex_scan.cpp ****     __quex_debug_state(2436);
 565:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 566:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 567:out/quex_scan.cpp ****     if( input < 0x22) {
 568:out/quex_scan.cpp ****         switch( input ) {
 569:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2436), QUEX_LABEL(2549));
 570:out/quex_scan.cpp ****             case 0x2:     
 571:out/quex_scan.cpp ****             case 0x3:     
 572:out/quex_scan.cpp ****             case 0x4:     
 573:out/quex_scan.cpp ****             case 0x5:     
 574:out/quex_scan.cpp ****             case 0x6:     
 575:out/quex_scan.cpp ****             case 0x7:     
 576:out/quex_scan.cpp ****             case 0x8:     
 577:out/quex_scan.cpp ****             case 0x9:     
 578:out/quex_scan.cpp ****             case 0xA:     
 579:out/quex_scan.cpp ****             case 0xB:     
 580:out/quex_scan.cpp ****             case 0xC:     
 581:out/quex_scan.cpp ****             case 0xD:     
 582:out/quex_scan.cpp ****             case 0xE:     
GAS LISTING /tmp/cc23nfB3.s 			page 67


 583:out/quex_scan.cpp ****             case 0xF:     
 584:out/quex_scan.cpp ****             case 0x10:    
 585:out/quex_scan.cpp ****             case 0x11:    
 586:out/quex_scan.cpp ****             case 0x12:    
 587:out/quex_scan.cpp ****             case 0x13:    
 588:out/quex_scan.cpp ****             case 0x14:    
 589:out/quex_scan.cpp ****             case 0x15:    
 590:out/quex_scan.cpp ****             case 0x16:    
 591:out/quex_scan.cpp ****             case 0x17:    
 592:out/quex_scan.cpp ****             case 0x18:    
 593:out/quex_scan.cpp ****             case 0x19:    
 594:out/quex_scan.cpp ****             case 0x1A:    
 595:out/quex_scan.cpp ****             case 0x1B:    
 596:out/quex_scan.cpp ****             case 0x1C:    
 597:out/quex_scan.cpp ****             case 0x1D:    
 598:out/quex_scan.cpp ****             case 0x1E:    
 599:out/quex_scan.cpp ****             case 0x1F:    
 600:out/quex_scan.cpp ****             case 0x20:    
 601:out/quex_scan.cpp ****             case 0x21:    goto _2436;
 602:out/quex_scan.cpp ****         }
 603:out/quex_scan.cpp ****     } else {
 604:out/quex_scan.cpp ****         if( input == 0x22 ) {
 605:out/quex_scan.cpp ****             goto _2550;    /* '"' */
 606:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
 607:out/quex_scan.cpp ****             goto _2436;    /* ['#', 'ÿ'] */
 608:out/quex_scan.cpp ****         }
 609:out/quex_scan.cpp ****     }
 610:out/quex_scan.cpp **** 
 611:out/quex_scan.cpp **** _2549:
 612:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 613:out/quex_scan.cpp **** 
 614:out/quex_scan.cpp **** 
 615:out/quex_scan.cpp ****     __quex_assert_no_passage();
 616:out/quex_scan.cpp **** _2438:
 617:out/quex_scan.cpp ****     __quex_debug_state(2438);
 618:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 619:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 620:out/quex_scan.cpp ****     if( input < 0x3E) {
 621:out/quex_scan.cpp ****         if( input >= 0x2 ) {
 622:out/quex_scan.cpp ****             goto _2438;    /* [\2, '='] */
 623:out/quex_scan.cpp ****         } else if( input == 0x1 ) {
 624:out/quex_scan.cpp ****         } else {
 625:out/quex_scan.cpp ****             QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2438), QUEX_LABEL(2551));    /* \0 */
 626:out/quex_scan.cpp **** }
 627:out/quex_scan.cpp ****     } else {
 628:out/quex_scan.cpp ****         if( input == 0x3E ) {
 629:out/quex_scan.cpp ****             goto _2552;    /* '>' */
 630:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
 631:out/quex_scan.cpp ****             goto _2438;    /* ['?', 'ÿ'] */
 632:out/quex_scan.cpp ****         }
 633:out/quex_scan.cpp ****     }
 634:out/quex_scan.cpp **** 
 635:out/quex_scan.cpp **** _2551:
 636:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 637:out/quex_scan.cpp **** 
 638:out/quex_scan.cpp **** 
 639:out/quex_scan.cpp ****     __quex_assert_no_passage();
GAS LISTING /tmp/cc23nfB3.s 			page 68


 640:out/quex_scan.cpp **** _2509:
 641:out/quex_scan.cpp ****     __quex_debug_state(2509);
 642:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 643:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 644:out/quex_scan.cpp ****     switch( input ) {
 645:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2509), QUEX_LABEL(2553));
 646:out/quex_scan.cpp ****         case 0x27:    goto _2537;
 647:out/quex_scan.cpp ****     }
 648:out/quex_scan.cpp **** 
 649:out/quex_scan.cpp **** _2553:
 650:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 651:out/quex_scan.cpp **** 
 652:out/quex_scan.cpp **** 
 653:out/quex_scan.cpp ****     __quex_assert_no_passage();
 654:out/quex_scan.cpp **** _2512:
 655:out/quex_scan.cpp ****     __quex_debug_state(2512);
 656:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 657:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 658:out/quex_scan.cpp ****     switch( input ) {
 659:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2512), QUEX_LABEL(2554));
 660:out/quex_scan.cpp ****         case 0x27:    goto _2537;
 661:out/quex_scan.cpp ****         case 0x30:    
 662:out/quex_scan.cpp ****         case 0x31:    
 663:out/quex_scan.cpp ****         case 0x32:    
 664:out/quex_scan.cpp ****         case 0x33:    
 665:out/quex_scan.cpp ****         case 0x34:    
 666:out/quex_scan.cpp ****         case 0x35:    
 667:out/quex_scan.cpp ****         case 0x36:    
 668:out/quex_scan.cpp ****         case 0x37:    goto _2512;
 669:out/quex_scan.cpp ****     }
 670:out/quex_scan.cpp **** 
 671:out/quex_scan.cpp **** _2554:
 672:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 673:out/quex_scan.cpp **** 
 674:out/quex_scan.cpp **** 
 675:out/quex_scan.cpp ****     __quex_assert_no_passage();
 676:out/quex_scan.cpp **** _2513:
 677:out/quex_scan.cpp ****     __quex_debug_state(2513);
 678:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 679:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 680:out/quex_scan.cpp ****     switch( input ) {
 681:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2513), QUEX_LABEL(2555));
 682:out/quex_scan.cpp ****         case 0x27:    goto _2537;
 683:out/quex_scan.cpp ****         case 0x30:    
 684:out/quex_scan.cpp ****         case 0x31:    
 685:out/quex_scan.cpp ****         case 0x32:    
 686:out/quex_scan.cpp ****         case 0x33:    
 687:out/quex_scan.cpp ****         case 0x34:    
 688:out/quex_scan.cpp ****         case 0x35:    
 689:out/quex_scan.cpp ****         case 0x36:    
 690:out/quex_scan.cpp ****         case 0x37:    
 691:out/quex_scan.cpp ****         case 0x38:    
 692:out/quex_scan.cpp ****         case 0x39:    
 693:out/quex_scan.cpp ****         case 0x41:    
 694:out/quex_scan.cpp ****         case 0x42:    
 695:out/quex_scan.cpp ****         case 0x43:    
 696:out/quex_scan.cpp ****         case 0x44:    
GAS LISTING /tmp/cc23nfB3.s 			page 69


 697:out/quex_scan.cpp ****         case 0x45:    
 698:out/quex_scan.cpp ****         case 0x46:    
 699:out/quex_scan.cpp ****         case 0x61:    
 700:out/quex_scan.cpp ****         case 0x62:    
 701:out/quex_scan.cpp ****         case 0x63:    
 702:out/quex_scan.cpp ****         case 0x64:    
 703:out/quex_scan.cpp ****         case 0x65:    
 704:out/quex_scan.cpp ****         case 0x66:    goto _2513;
 705:out/quex_scan.cpp ****     }
 706:out/quex_scan.cpp **** 
 707:out/quex_scan.cpp **** _2555:
 708:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 709:out/quex_scan.cpp **** 
 710:out/quex_scan.cpp **** 
 711:out/quex_scan.cpp ****     __quex_assert_no_passage();
 712:out/quex_scan.cpp **** _2342:
 713:out/quex_scan.cpp ****     __quex_debug_state(2342);
 714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 715:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 716:out/quex_scan.cpp ****     switch( input ) {
 717:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2342), QUEX_LABEL(2556));
 718:out/quex_scan.cpp ****         case 0x3D:    goto _2557;
 719:out/quex_scan.cpp ****     }
 720:out/quex_scan.cpp **** 
 721:out/quex_scan.cpp **** _2556:
 722:out/quex_scan.cpp ****         goto _2558;
 723:out/quex_scan.cpp **** 
 724:out/quex_scan.cpp **** 
 725:out/quex_scan.cpp ****     __quex_assert_no_passage();
 726:out/quex_scan.cpp **** _2343:
 727:out/quex_scan.cpp ****     __quex_debug_state(2343);
 728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 729:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 730:out/quex_scan.cpp ****     switch( input ) {
 731:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2343), QUEX_LABEL(2559));
 732:out/quex_scan.cpp ****         case 0xA:     goto _2560;
 733:out/quex_scan.cpp ****     }
 734:out/quex_scan.cpp **** 
 735:out/quex_scan.cpp **** _2559:
 736:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 737:out/quex_scan.cpp **** 
 738:out/quex_scan.cpp **** 
 739:out/quex_scan.cpp ****     __quex_assert_no_passage();
 740:out/quex_scan.cpp **** _2348:
 741:out/quex_scan.cpp ****     __quex_debug_state(2348);
 742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 743:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 744:out/quex_scan.cpp ****     switch( input ) {
 745:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2348), QUEX_LABEL(2561));
 746:out/quex_scan.cpp ****         case 0x3D:    goto _2562;
 747:out/quex_scan.cpp ****     }
 748:out/quex_scan.cpp **** 
 749:out/quex_scan.cpp **** _2561:
 750:out/quex_scan.cpp ****         goto _2563;
 751:out/quex_scan.cpp **** 
 752:out/quex_scan.cpp **** 
 753:out/quex_scan.cpp ****     __quex_assert_no_passage();
GAS LISTING /tmp/cc23nfB3.s 			page 70


 754:out/quex_scan.cpp **** _2351:
 755:out/quex_scan.cpp ****     __quex_debug_state(2351);
 756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 757:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 758:out/quex_scan.cpp ****     switch( input ) {
 759:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2351), QUEX_LABEL(2564));
 760:out/quex_scan.cpp ****         case 0x3D:    goto _2565;
 761:out/quex_scan.cpp ****     }
 762:out/quex_scan.cpp **** 
 763:out/quex_scan.cpp **** _2564:
 764:out/quex_scan.cpp ****         goto _2566;
 765:out/quex_scan.cpp **** 
 766:out/quex_scan.cpp **** 
 767:out/quex_scan.cpp ****     __quex_assert_no_passage();
 768:out/quex_scan.cpp **** _2352:
 769:out/quex_scan.cpp ****     __quex_debug_state(2352);
 770:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 771:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 772:out/quex_scan.cpp ****     if( input < 0x27) {
 773:out/quex_scan.cpp ****         switch( input ) {
 774:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2352), QUEX_LABEL(2567));
 775:out/quex_scan.cpp ****             case 0x2:     
 776:out/quex_scan.cpp ****             case 0x3:     
 777:out/quex_scan.cpp ****             case 0x4:     
 778:out/quex_scan.cpp ****             case 0x5:     
 779:out/quex_scan.cpp ****             case 0x6:     
 780:out/quex_scan.cpp ****             case 0x7:     
 781:out/quex_scan.cpp ****             case 0x8:     
 782:out/quex_scan.cpp ****             case 0xB:     
 783:out/quex_scan.cpp ****             case 0xC:     
 784:out/quex_scan.cpp ****             case 0xD:     
 785:out/quex_scan.cpp ****             case 0xE:     
 786:out/quex_scan.cpp ****             case 0xF:     
 787:out/quex_scan.cpp ****             case 0x10:    
 788:out/quex_scan.cpp ****             case 0x11:    
 789:out/quex_scan.cpp ****             case 0x12:    
 790:out/quex_scan.cpp ****             case 0x13:    
 791:out/quex_scan.cpp ****             case 0x14:    
 792:out/quex_scan.cpp ****             case 0x15:    
 793:out/quex_scan.cpp ****             case 0x16:    
 794:out/quex_scan.cpp ****             case 0x17:    
 795:out/quex_scan.cpp ****             case 0x18:    
 796:out/quex_scan.cpp ****             case 0x19:    
 797:out/quex_scan.cpp ****             case 0x1A:    
 798:out/quex_scan.cpp ****             case 0x1B:    
 799:out/quex_scan.cpp ****             case 0x1C:    
 800:out/quex_scan.cpp ****             case 0x1D:    
 801:out/quex_scan.cpp ****             case 0x1E:    
 802:out/quex_scan.cpp ****             case 0x1F:    
 803:out/quex_scan.cpp ****             case 0x20:    
 804:out/quex_scan.cpp ****             case 0x21:    
 805:out/quex_scan.cpp ****             case 0x22:    
 806:out/quex_scan.cpp ****             case 0x23:    
 807:out/quex_scan.cpp ****             case 0x24:    
 808:out/quex_scan.cpp ****             case 0x25:    
 809:out/quex_scan.cpp ****             case 0x26:    goto _2509;
 810:out/quex_scan.cpp ****         }
GAS LISTING /tmp/cc23nfB3.s 			page 71


 811:out/quex_scan.cpp ****     } else {
 812:out/quex_scan.cpp ****         if( input == 0x27 ) {
 813:out/quex_scan.cpp ****             goto _2537;    /* ''' */
 814:out/quex_scan.cpp ****         } else if( input < 0x5C ) {
 815:out/quex_scan.cpp ****             goto _2509;    /* ['(', '['] */
 816:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
 817:out/quex_scan.cpp ****             goto _2508;    /* '\' */
 818:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
 819:out/quex_scan.cpp ****             goto _2509;    /* [']', 'ÿ'] */
 820:out/quex_scan.cpp ****         }
 821:out/quex_scan.cpp ****     }
 822:out/quex_scan.cpp **** 
 823:out/quex_scan.cpp **** _2567:
 824:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 825:out/quex_scan.cpp **** 
 826:out/quex_scan.cpp **** 
 827:out/quex_scan.cpp ****     __quex_assert_no_passage();
 828:out/quex_scan.cpp **** _2353:
 829:out/quex_scan.cpp ****     __quex_debug_state(2353);
 830:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 831:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 832:out/quex_scan.cpp ****     switch( input ) {
 833:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2353), QUEX_LABEL(2568));
 834:out/quex_scan.cpp ****         case 0x30:    
 835:out/quex_scan.cpp ****         case 0x31:    
 836:out/quex_scan.cpp ****         case 0x32:    
 837:out/quex_scan.cpp ****         case 0x33:    
 838:out/quex_scan.cpp ****         case 0x34:    
 839:out/quex_scan.cpp ****         case 0x35:    
 840:out/quex_scan.cpp ****         case 0x36:    
 841:out/quex_scan.cpp ****         case 0x37:    
 842:out/quex_scan.cpp ****         case 0x38:    
 843:out/quex_scan.cpp ****         case 0x39:    
 844:out/quex_scan.cpp ****         case 0x41:    
 845:out/quex_scan.cpp ****         case 0x42:    
 846:out/quex_scan.cpp ****         case 0x43:    
 847:out/quex_scan.cpp ****         case 0x44:    
 848:out/quex_scan.cpp ****         case 0x45:    
 849:out/quex_scan.cpp ****         case 0x46:    
 850:out/quex_scan.cpp ****         case 0x47:    
 851:out/quex_scan.cpp ****         case 0x48:    
 852:out/quex_scan.cpp ****         case 0x49:    
 853:out/quex_scan.cpp ****         case 0x4A:    
 854:out/quex_scan.cpp ****         case 0x4B:    
 855:out/quex_scan.cpp ****         case 0x4C:    
 856:out/quex_scan.cpp ****         case 0x4D:    
 857:out/quex_scan.cpp ****         case 0x4E:    
 858:out/quex_scan.cpp ****         case 0x4F:    
 859:out/quex_scan.cpp ****         case 0x50:    
 860:out/quex_scan.cpp ****         case 0x51:    
 861:out/quex_scan.cpp ****         case 0x52:    
 862:out/quex_scan.cpp ****         case 0x53:    
 863:out/quex_scan.cpp ****         case 0x54:    
 864:out/quex_scan.cpp ****         case 0x55:    
 865:out/quex_scan.cpp ****         case 0x56:    
 866:out/quex_scan.cpp ****         case 0x57:    
 867:out/quex_scan.cpp ****         case 0x58:    
GAS LISTING /tmp/cc23nfB3.s 			page 72


 868:out/quex_scan.cpp ****         case 0x59:    
 869:out/quex_scan.cpp ****         case 0x5A:    
 870:out/quex_scan.cpp ****         case 0x5F:    
 871:out/quex_scan.cpp ****         case 0x61:    
 872:out/quex_scan.cpp ****         case 0x62:    
 873:out/quex_scan.cpp ****         case 0x63:    
 874:out/quex_scan.cpp ****         case 0x64:    
 875:out/quex_scan.cpp ****         case 0x65:    
 876:out/quex_scan.cpp ****         case 0x66:    
 877:out/quex_scan.cpp ****         case 0x67:    
 878:out/quex_scan.cpp ****         case 0x68:    
 879:out/quex_scan.cpp ****         case 0x69:    
 880:out/quex_scan.cpp ****         case 0x6A:    
 881:out/quex_scan.cpp ****         case 0x6B:    
 882:out/quex_scan.cpp ****         case 0x6C:    
 883:out/quex_scan.cpp ****         case 0x6D:    
 884:out/quex_scan.cpp ****         case 0x6E:    
 885:out/quex_scan.cpp ****         case 0x6F:    
 886:out/quex_scan.cpp ****         case 0x70:    
 887:out/quex_scan.cpp ****         case 0x71:    goto _2364;
 888:out/quex_scan.cpp ****         case 0x72:    goto _2503;
 889:out/quex_scan.cpp ****         case 0x73:    
 890:out/quex_scan.cpp ****         case 0x74:    
 891:out/quex_scan.cpp ****         case 0x75:    
 892:out/quex_scan.cpp ****         case 0x76:    
 893:out/quex_scan.cpp ****         case 0x77:    
 894:out/quex_scan.cpp ****         case 0x78:    
 895:out/quex_scan.cpp ****         case 0x79:    
 896:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
 897:out/quex_scan.cpp ****     }
 898:out/quex_scan.cpp **** 
 899:out/quex_scan.cpp **** _2568:
 900:out/quex_scan.cpp ****         goto _2536;
 901:out/quex_scan.cpp **** 
 902:out/quex_scan.cpp **** 
 903:out/quex_scan.cpp ****     __quex_assert_no_passage();
 904:out/quex_scan.cpp **** _2354:
 905:out/quex_scan.cpp ****     __quex_debug_state(2354);
 906:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 907:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 908:out/quex_scan.cpp ****     switch( input ) {
 909:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2354), QUEX_LABEL(2569));
 910:out/quex_scan.cpp ****         case 0x30:    
 911:out/quex_scan.cpp ****         case 0x31:    
 912:out/quex_scan.cpp ****         case 0x32:    
 913:out/quex_scan.cpp ****         case 0x33:    
 914:out/quex_scan.cpp ****         case 0x34:    
 915:out/quex_scan.cpp ****         case 0x35:    
 916:out/quex_scan.cpp ****         case 0x36:    
 917:out/quex_scan.cpp ****         case 0x37:    
 918:out/quex_scan.cpp ****         case 0x38:    
 919:out/quex_scan.cpp ****         case 0x39:    
 920:out/quex_scan.cpp ****         case 0x41:    
 921:out/quex_scan.cpp ****         case 0x42:    
 922:out/quex_scan.cpp ****         case 0x43:    
 923:out/quex_scan.cpp ****         case 0x44:    
 924:out/quex_scan.cpp ****         case 0x45:    
GAS LISTING /tmp/cc23nfB3.s 			page 73


 925:out/quex_scan.cpp ****         case 0x46:    
 926:out/quex_scan.cpp ****         case 0x47:    
 927:out/quex_scan.cpp ****         case 0x48:    
 928:out/quex_scan.cpp ****         case 0x49:    
 929:out/quex_scan.cpp ****         case 0x4A:    
 930:out/quex_scan.cpp ****         case 0x4B:    
 931:out/quex_scan.cpp ****         case 0x4C:    
 932:out/quex_scan.cpp ****         case 0x4D:    
 933:out/quex_scan.cpp ****         case 0x4E:    
 934:out/quex_scan.cpp ****         case 0x4F:    
 935:out/quex_scan.cpp ****         case 0x50:    
 936:out/quex_scan.cpp ****         case 0x51:    
 937:out/quex_scan.cpp ****         case 0x52:    
 938:out/quex_scan.cpp ****         case 0x53:    
 939:out/quex_scan.cpp ****         case 0x54:    
 940:out/quex_scan.cpp ****         case 0x55:    
 941:out/quex_scan.cpp ****         case 0x56:    
 942:out/quex_scan.cpp ****         case 0x57:    
 943:out/quex_scan.cpp ****         case 0x58:    
 944:out/quex_scan.cpp ****         case 0x59:    
 945:out/quex_scan.cpp ****         case 0x5A:    
 946:out/quex_scan.cpp ****         case 0x5F:    
 947:out/quex_scan.cpp ****         case 0x61:    
 948:out/quex_scan.cpp ****         case 0x62:    
 949:out/quex_scan.cpp ****         case 0x63:    
 950:out/quex_scan.cpp ****         case 0x64:    
 951:out/quex_scan.cpp ****         case 0x65:    
 952:out/quex_scan.cpp ****         case 0x66:    
 953:out/quex_scan.cpp ****         case 0x67:    
 954:out/quex_scan.cpp ****         case 0x68:    
 955:out/quex_scan.cpp ****         case 0x69:    
 956:out/quex_scan.cpp ****         case 0x6A:    
 957:out/quex_scan.cpp ****         case 0x6B:    goto _2364;
 958:out/quex_scan.cpp ****         case 0x6C:    goto _2498;
 959:out/quex_scan.cpp ****         case 0x6D:    
 960:out/quex_scan.cpp ****         case 0x6E:    goto _2364;
 961:out/quex_scan.cpp ****         case 0x6F:    goto _2497;
 962:out/quex_scan.cpp ****         case 0x70:    
 963:out/quex_scan.cpp ****         case 0x71:    
 964:out/quex_scan.cpp ****         case 0x72:    
 965:out/quex_scan.cpp ****         case 0x73:    
 966:out/quex_scan.cpp ****         case 0x74:    
 967:out/quex_scan.cpp ****         case 0x75:    
 968:out/quex_scan.cpp ****         case 0x76:    
 969:out/quex_scan.cpp ****         case 0x77:    
 970:out/quex_scan.cpp ****         case 0x78:    
 971:out/quex_scan.cpp ****         case 0x79:    
 972:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
 973:out/quex_scan.cpp ****     }
 974:out/quex_scan.cpp **** 
 975:out/quex_scan.cpp **** _2569:
 976:out/quex_scan.cpp ****         goto _2536;
 977:out/quex_scan.cpp **** 
 978:out/quex_scan.cpp **** 
 979:out/quex_scan.cpp ****     __quex_assert_no_passage();
 980:out/quex_scan.cpp **** _2355:
 981:out/quex_scan.cpp ****     __quex_debug_state(2355);
GAS LISTING /tmp/cc23nfB3.s 			page 74


 982:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 983:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 984:out/quex_scan.cpp ****     switch( input ) {
 985:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2355), QUEX_LABEL(2570));
 986:out/quex_scan.cpp ****         case 0x3D:    goto _2571;
 987:out/quex_scan.cpp ****     }
 988:out/quex_scan.cpp **** 
 989:out/quex_scan.cpp **** _2570:
 990:out/quex_scan.cpp ****         goto _2572;
 991:out/quex_scan.cpp **** 
 992:out/quex_scan.cpp **** 
 993:out/quex_scan.cpp ****     __quex_assert_no_passage();
 994:out/quex_scan.cpp **** _2356:
 995:out/quex_scan.cpp ****     __quex_debug_state(2356);
 996:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 997:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 998:out/quex_scan.cpp ****     switch( input ) {
 999:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2356), QUEX_LABEL(2573));
1000:out/quex_scan.cpp ****         case 0x2A:    goto _2574;
1001:out/quex_scan.cpp ****         case 0x2F:    goto _2575;
1002:out/quex_scan.cpp ****         case 0x3D:    goto _2576;
1003:out/quex_scan.cpp ****     }
1004:out/quex_scan.cpp **** 
1005:out/quex_scan.cpp **** _2573:
1006:out/quex_scan.cpp ****         goto _2577;
1007:out/quex_scan.cpp **** 
1008:out/quex_scan.cpp **** 
1009:out/quex_scan.cpp ****     __quex_assert_no_passage();
1010:out/quex_scan.cpp **** _2357:
1011:out/quex_scan.cpp ****     __quex_debug_state(2357);
1012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1013:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1014:out/quex_scan.cpp ****     switch( input ) {
1015:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2357), QUEX_LABEL(2578));
1016:out/quex_scan.cpp ****         case 0x30:    
1017:out/quex_scan.cpp ****         case 0x31:    
1018:out/quex_scan.cpp ****         case 0x32:    
1019:out/quex_scan.cpp ****         case 0x33:    
1020:out/quex_scan.cpp ****         case 0x34:    
1021:out/quex_scan.cpp ****         case 0x35:    
1022:out/quex_scan.cpp ****         case 0x36:    
1023:out/quex_scan.cpp ****         case 0x37:    
1024:out/quex_scan.cpp ****         case 0x38:    
1025:out/quex_scan.cpp ****         case 0x39:    
1026:out/quex_scan.cpp ****         case 0x41:    
1027:out/quex_scan.cpp ****         case 0x42:    
1028:out/quex_scan.cpp ****         case 0x43:    
1029:out/quex_scan.cpp ****         case 0x44:    
1030:out/quex_scan.cpp ****         case 0x45:    
1031:out/quex_scan.cpp ****         case 0x46:    
1032:out/quex_scan.cpp ****         case 0x47:    
1033:out/quex_scan.cpp ****         case 0x48:    
1034:out/quex_scan.cpp ****         case 0x49:    
1035:out/quex_scan.cpp ****         case 0x4A:    
1036:out/quex_scan.cpp ****         case 0x4B:    
1037:out/quex_scan.cpp ****         case 0x4C:    
1038:out/quex_scan.cpp ****         case 0x4D:    
GAS LISTING /tmp/cc23nfB3.s 			page 75


1039:out/quex_scan.cpp ****         case 0x4E:    
1040:out/quex_scan.cpp ****         case 0x4F:    
1041:out/quex_scan.cpp ****         case 0x50:    
1042:out/quex_scan.cpp ****         case 0x51:    
1043:out/quex_scan.cpp ****         case 0x52:    
1044:out/quex_scan.cpp ****         case 0x53:    
1045:out/quex_scan.cpp ****         case 0x54:    
1046:out/quex_scan.cpp ****         case 0x55:    
1047:out/quex_scan.cpp ****         case 0x56:    
1048:out/quex_scan.cpp ****         case 0x57:    
1049:out/quex_scan.cpp ****         case 0x58:    
1050:out/quex_scan.cpp ****         case 0x59:    
1051:out/quex_scan.cpp ****         case 0x5A:    
1052:out/quex_scan.cpp ****         case 0x5F:    
1053:out/quex_scan.cpp ****         case 0x61:    
1054:out/quex_scan.cpp ****         case 0x62:    
1055:out/quex_scan.cpp ****         case 0x63:    
1056:out/quex_scan.cpp ****         case 0x64:    
1057:out/quex_scan.cpp ****         case 0x65:    goto _2364;
1058:out/quex_scan.cpp ****         case 0x66:    goto _2491;
1059:out/quex_scan.cpp ****         case 0x67:    
1060:out/quex_scan.cpp ****         case 0x68:    
1061:out/quex_scan.cpp ****         case 0x69:    
1062:out/quex_scan.cpp ****         case 0x6A:    
1063:out/quex_scan.cpp ****         case 0x6B:    
1064:out/quex_scan.cpp ****         case 0x6C:    
1065:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
1066:out/quex_scan.cpp ****         case 0x6E:    goto _2490;
1067:out/quex_scan.cpp ****         case 0x6F:    
1068:out/quex_scan.cpp ****         case 0x70:    
1069:out/quex_scan.cpp ****         case 0x71:    
1070:out/quex_scan.cpp ****         case 0x72:    
1071:out/quex_scan.cpp ****         case 0x73:    
1072:out/quex_scan.cpp ****         case 0x74:    
1073:out/quex_scan.cpp ****         case 0x75:    
1074:out/quex_scan.cpp ****         case 0x76:    
1075:out/quex_scan.cpp ****         case 0x77:    
1076:out/quex_scan.cpp ****         case 0x78:    
1077:out/quex_scan.cpp ****         case 0x79:    
1078:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1079:out/quex_scan.cpp ****     }
1080:out/quex_scan.cpp **** 
1081:out/quex_scan.cpp **** _2578:
1082:out/quex_scan.cpp ****         goto _2536;
1083:out/quex_scan.cpp **** 
1084:out/quex_scan.cpp **** 
1085:out/quex_scan.cpp ****     __quex_assert_no_passage();
1086:out/quex_scan.cpp **** _2361:
1087:out/quex_scan.cpp ****     __quex_debug_state(2361);
1088:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1089:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1090:out/quex_scan.cpp ****     switch( input ) {
1091:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2361), QUEX_LABEL(2579));
1092:out/quex_scan.cpp ****         case 0x26:    goto _2580;
1093:out/quex_scan.cpp ****     }
1094:out/quex_scan.cpp **** 
1095:out/quex_scan.cpp **** _2579:
GAS LISTING /tmp/cc23nfB3.s 			page 76


1096:out/quex_scan.cpp ****         goto _2581;
1097:out/quex_scan.cpp **** 
1098:out/quex_scan.cpp **** 
1099:out/quex_scan.cpp ****     __quex_assert_no_passage();
1100:out/quex_scan.cpp **** _2363:
1101:out/quex_scan.cpp ****     __quex_debug_state(2363);
1102:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1103:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1104:out/quex_scan.cpp ****     switch( input ) {
1105:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2363), QUEX_LABEL(2582));
1106:out/quex_scan.cpp ****         case 0x30:    
1107:out/quex_scan.cpp ****         case 0x31:    
1108:out/quex_scan.cpp ****         case 0x32:    
1109:out/quex_scan.cpp ****         case 0x33:    
1110:out/quex_scan.cpp ****         case 0x34:    
1111:out/quex_scan.cpp ****         case 0x35:    
1112:out/quex_scan.cpp ****         case 0x36:    
1113:out/quex_scan.cpp ****         case 0x37:    
1114:out/quex_scan.cpp ****         case 0x38:    
1115:out/quex_scan.cpp ****         case 0x39:    
1116:out/quex_scan.cpp ****         case 0x41:    
1117:out/quex_scan.cpp ****         case 0x42:    
1118:out/quex_scan.cpp ****         case 0x43:    
1119:out/quex_scan.cpp ****         case 0x44:    
1120:out/quex_scan.cpp ****         case 0x45:    
1121:out/quex_scan.cpp ****         case 0x46:    
1122:out/quex_scan.cpp ****         case 0x47:    
1123:out/quex_scan.cpp ****         case 0x48:    
1124:out/quex_scan.cpp ****         case 0x49:    
1125:out/quex_scan.cpp ****         case 0x4A:    
1126:out/quex_scan.cpp ****         case 0x4B:    
1127:out/quex_scan.cpp ****         case 0x4C:    
1128:out/quex_scan.cpp ****         case 0x4D:    
1129:out/quex_scan.cpp ****         case 0x4E:    
1130:out/quex_scan.cpp ****         case 0x4F:    
1131:out/quex_scan.cpp ****         case 0x50:    
1132:out/quex_scan.cpp ****         case 0x51:    
1133:out/quex_scan.cpp ****         case 0x52:    
1134:out/quex_scan.cpp ****         case 0x53:    
1135:out/quex_scan.cpp ****         case 0x54:    
1136:out/quex_scan.cpp ****         case 0x55:    
1137:out/quex_scan.cpp ****         case 0x56:    
1138:out/quex_scan.cpp ****         case 0x57:    
1139:out/quex_scan.cpp ****         case 0x58:    
1140:out/quex_scan.cpp ****         case 0x59:    
1141:out/quex_scan.cpp ****         case 0x5A:    
1142:out/quex_scan.cpp ****         case 0x5F:    
1143:out/quex_scan.cpp ****         case 0x61:    
1144:out/quex_scan.cpp ****         case 0x62:    
1145:out/quex_scan.cpp ****         case 0x63:    
1146:out/quex_scan.cpp ****         case 0x64:    
1147:out/quex_scan.cpp ****         case 0x65:    
1148:out/quex_scan.cpp ****         case 0x66:    
1149:out/quex_scan.cpp ****         case 0x67:    
1150:out/quex_scan.cpp ****         case 0x68:    
1151:out/quex_scan.cpp ****         case 0x69:    
1152:out/quex_scan.cpp ****         case 0x6A:    
GAS LISTING /tmp/cc23nfB3.s 			page 77


1153:out/quex_scan.cpp ****         case 0x6B:    
1154:out/quex_scan.cpp ****         case 0x6C:    
1155:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
1156:out/quex_scan.cpp ****         case 0x6E:    goto _2482;
1157:out/quex_scan.cpp ****         case 0x6F:    
1158:out/quex_scan.cpp ****         case 0x70:    
1159:out/quex_scan.cpp ****         case 0x71:    
1160:out/quex_scan.cpp ****         case 0x72:    
1161:out/quex_scan.cpp ****         case 0x73:    
1162:out/quex_scan.cpp ****         case 0x74:    
1163:out/quex_scan.cpp ****         case 0x75:    
1164:out/quex_scan.cpp ****         case 0x76:    
1165:out/quex_scan.cpp ****         case 0x77:    
1166:out/quex_scan.cpp ****         case 0x78:    
1167:out/quex_scan.cpp ****         case 0x79:    
1168:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1169:out/quex_scan.cpp ****     }
1170:out/quex_scan.cpp **** 
1171:out/quex_scan.cpp **** _2582:
1172:out/quex_scan.cpp ****         goto _2536;
1173:out/quex_scan.cpp **** 
1174:out/quex_scan.cpp **** 
1175:out/quex_scan.cpp ****     __quex_assert_no_passage();
1176:out/quex_scan.cpp **** _2367:
1177:out/quex_scan.cpp ****     __quex_debug_state(2367);
1178:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1179:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1180:out/quex_scan.cpp ****     switch( input ) {
1181:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2367), QUEX_LABEL(2583));
1182:out/quex_scan.cpp ****         case 0x30:    
1183:out/quex_scan.cpp ****         case 0x31:    
1184:out/quex_scan.cpp ****         case 0x32:    
1185:out/quex_scan.cpp ****         case 0x33:    
1186:out/quex_scan.cpp ****         case 0x34:    
1187:out/quex_scan.cpp ****         case 0x35:    
1188:out/quex_scan.cpp ****         case 0x36:    
1189:out/quex_scan.cpp ****         case 0x37:    
1190:out/quex_scan.cpp ****         case 0x38:    
1191:out/quex_scan.cpp ****         case 0x39:    
1192:out/quex_scan.cpp ****         case 0x41:    
1193:out/quex_scan.cpp ****         case 0x42:    
1194:out/quex_scan.cpp ****         case 0x43:    
1195:out/quex_scan.cpp ****         case 0x44:    
1196:out/quex_scan.cpp ****         case 0x45:    
1197:out/quex_scan.cpp ****         case 0x46:    
1198:out/quex_scan.cpp ****         case 0x47:    
1199:out/quex_scan.cpp ****         case 0x48:    
1200:out/quex_scan.cpp ****         case 0x49:    
1201:out/quex_scan.cpp ****         case 0x4A:    
1202:out/quex_scan.cpp ****         case 0x4B:    
1203:out/quex_scan.cpp ****         case 0x4C:    
1204:out/quex_scan.cpp ****         case 0x4D:    
1205:out/quex_scan.cpp ****         case 0x4E:    
1206:out/quex_scan.cpp ****         case 0x4F:    
1207:out/quex_scan.cpp ****         case 0x50:    
1208:out/quex_scan.cpp ****         case 0x51:    
1209:out/quex_scan.cpp ****         case 0x52:    
GAS LISTING /tmp/cc23nfB3.s 			page 78


1210:out/quex_scan.cpp ****         case 0x53:    
1211:out/quex_scan.cpp ****         case 0x54:    
1212:out/quex_scan.cpp ****         case 0x55:    
1213:out/quex_scan.cpp ****         case 0x56:    
1214:out/quex_scan.cpp ****         case 0x57:    
1215:out/quex_scan.cpp ****         case 0x58:    
1216:out/quex_scan.cpp ****         case 0x59:    
1217:out/quex_scan.cpp ****         case 0x5A:    
1218:out/quex_scan.cpp ****         case 0x5F:    
1219:out/quex_scan.cpp ****         case 0x61:    
1220:out/quex_scan.cpp ****         case 0x62:    
1221:out/quex_scan.cpp ****         case 0x63:    
1222:out/quex_scan.cpp ****         case 0x64:    
1223:out/quex_scan.cpp ****         case 0x65:    
1224:out/quex_scan.cpp ****         case 0x66:    
1225:out/quex_scan.cpp ****         case 0x67:    
1226:out/quex_scan.cpp ****         case 0x68:    
1227:out/quex_scan.cpp ****         case 0x69:    
1228:out/quex_scan.cpp ****         case 0x6A:    
1229:out/quex_scan.cpp ****         case 0x6B:    
1230:out/quex_scan.cpp ****         case 0x6C:    
1231:out/quex_scan.cpp ****         case 0x6D:    
1232:out/quex_scan.cpp ****         case 0x6E:    goto _2364;
1233:out/quex_scan.cpp ****         case 0x6F:    goto _2476;
1234:out/quex_scan.cpp ****         case 0x70:    
1235:out/quex_scan.cpp ****         case 0x71:    
1236:out/quex_scan.cpp ****         case 0x72:    
1237:out/quex_scan.cpp ****         case 0x73:    
1238:out/quex_scan.cpp ****         case 0x74:    
1239:out/quex_scan.cpp ****         case 0x75:    
1240:out/quex_scan.cpp ****         case 0x76:    
1241:out/quex_scan.cpp ****         case 0x77:    
1242:out/quex_scan.cpp ****         case 0x78:    
1243:out/quex_scan.cpp ****         case 0x79:    
1244:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1245:out/quex_scan.cpp ****     }
1246:out/quex_scan.cpp **** 
1247:out/quex_scan.cpp **** _2583:
1248:out/quex_scan.cpp ****         goto _2536;
1249:out/quex_scan.cpp **** 
1250:out/quex_scan.cpp **** 
1251:out/quex_scan.cpp ****     __quex_assert_no_passage();
1252:out/quex_scan.cpp **** _2368:
1253:out/quex_scan.cpp ****     __quex_debug_state(2368);
1254:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1255:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1256:out/quex_scan.cpp ****     switch( input ) {
1257:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2368), QUEX_LABEL(2584));
1258:out/quex_scan.cpp ****         case 0x3D:    goto _2585;
1259:out/quex_scan.cpp ****     }
1260:out/quex_scan.cpp **** 
1261:out/quex_scan.cpp **** _2584:
1262:out/quex_scan.cpp ****         goto _2586;
1263:out/quex_scan.cpp **** 
1264:out/quex_scan.cpp **** 
1265:out/quex_scan.cpp ****     __quex_assert_no_passage();
1266:out/quex_scan.cpp **** _2369:
GAS LISTING /tmp/cc23nfB3.s 			page 79


1267:out/quex_scan.cpp ****     __quex_debug_state(2369);
1268:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1269:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1270:out/quex_scan.cpp ****     switch( input ) {
1271:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2369), QUEX_LABEL(2587));
1272:out/quex_scan.cpp ****         case 0x3D:    goto _2588;
1273:out/quex_scan.cpp ****     }
1274:out/quex_scan.cpp **** 
1275:out/quex_scan.cpp **** _2587:
1276:out/quex_scan.cpp ****         goto _2589;
1277:out/quex_scan.cpp **** 
1278:out/quex_scan.cpp **** 
1279:out/quex_scan.cpp ****     __quex_assert_no_passage();
1280:out/quex_scan.cpp **** _2372:
1281:out/quex_scan.cpp ****     __quex_debug_state(2372);
1282:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1283:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1284:out/quex_scan.cpp ****     switch( input ) {
1285:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2372), QUEX_LABEL(2590));
1286:out/quex_scan.cpp ****         case 0x30:    
1287:out/quex_scan.cpp ****         case 0x31:    
1288:out/quex_scan.cpp ****         case 0x32:    
1289:out/quex_scan.cpp ****         case 0x33:    
1290:out/quex_scan.cpp ****         case 0x34:    
1291:out/quex_scan.cpp ****         case 0x35:    
1292:out/quex_scan.cpp ****         case 0x36:    
1293:out/quex_scan.cpp ****         case 0x37:    
1294:out/quex_scan.cpp ****         case 0x38:    
1295:out/quex_scan.cpp ****         case 0x39:    
1296:out/quex_scan.cpp ****         case 0x41:    
1297:out/quex_scan.cpp ****         case 0x42:    
1298:out/quex_scan.cpp ****         case 0x43:    
1299:out/quex_scan.cpp ****         case 0x44:    
1300:out/quex_scan.cpp ****         case 0x45:    
1301:out/quex_scan.cpp ****         case 0x46:    
1302:out/quex_scan.cpp ****         case 0x47:    
1303:out/quex_scan.cpp ****         case 0x48:    
1304:out/quex_scan.cpp ****         case 0x49:    
1305:out/quex_scan.cpp ****         case 0x4A:    
1306:out/quex_scan.cpp ****         case 0x4B:    
1307:out/quex_scan.cpp ****         case 0x4C:    
1308:out/quex_scan.cpp ****         case 0x4D:    
1309:out/quex_scan.cpp ****         case 0x4E:    
1310:out/quex_scan.cpp ****         case 0x4F:    
1311:out/quex_scan.cpp ****         case 0x50:    
1312:out/quex_scan.cpp ****         case 0x51:    
1313:out/quex_scan.cpp ****         case 0x52:    
1314:out/quex_scan.cpp ****         case 0x53:    
1315:out/quex_scan.cpp ****         case 0x54:    
1316:out/quex_scan.cpp ****         case 0x55:    
1317:out/quex_scan.cpp ****         case 0x56:    
1318:out/quex_scan.cpp ****         case 0x57:    
1319:out/quex_scan.cpp ****         case 0x58:    
1320:out/quex_scan.cpp ****         case 0x59:    
1321:out/quex_scan.cpp ****         case 0x5A:    
1322:out/quex_scan.cpp ****         case 0x5F:    
1323:out/quex_scan.cpp ****         case 0x61:    
GAS LISTING /tmp/cc23nfB3.s 			page 80


1324:out/quex_scan.cpp ****         case 0x62:    
1325:out/quex_scan.cpp ****         case 0x63:    
1326:out/quex_scan.cpp ****         case 0x64:    goto _2364;
1327:out/quex_scan.cpp ****         case 0x65:    goto _2463;
1328:out/quex_scan.cpp ****         case 0x66:    
1329:out/quex_scan.cpp ****         case 0x67:    
1330:out/quex_scan.cpp ****         case 0x68:    
1331:out/quex_scan.cpp ****         case 0x69:    
1332:out/quex_scan.cpp ****         case 0x6A:    
1333:out/quex_scan.cpp ****         case 0x6B:    
1334:out/quex_scan.cpp ****         case 0x6C:    
1335:out/quex_scan.cpp ****         case 0x6D:    
1336:out/quex_scan.cpp ****         case 0x6E:    goto _2364;
1337:out/quex_scan.cpp ****         case 0x6F:    goto _2464;
1338:out/quex_scan.cpp ****         case 0x70:    
1339:out/quex_scan.cpp ****         case 0x71:    
1340:out/quex_scan.cpp ****         case 0x72:    
1341:out/quex_scan.cpp ****         case 0x73:    
1342:out/quex_scan.cpp ****         case 0x74:    
1343:out/quex_scan.cpp ****         case 0x75:    
1344:out/quex_scan.cpp ****         case 0x76:    
1345:out/quex_scan.cpp ****         case 0x77:    
1346:out/quex_scan.cpp ****         case 0x78:    
1347:out/quex_scan.cpp ****         case 0x79:    
1348:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1349:out/quex_scan.cpp ****     }
1350:out/quex_scan.cpp **** 
1351:out/quex_scan.cpp **** _2590:
1352:out/quex_scan.cpp ****         goto _2536;
1353:out/quex_scan.cpp **** 
1354:out/quex_scan.cpp **** 
1355:out/quex_scan.cpp ****     __quex_assert_no_passage();
1356:out/quex_scan.cpp **** _2373:
1357:out/quex_scan.cpp ****     __quex_debug_state(2373);
1358:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1359:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1360:out/quex_scan.cpp ****     switch( input ) {
1361:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2373), QUEX_LABEL(2591));
1362:out/quex_scan.cpp ****         case 0x30:    
1363:out/quex_scan.cpp ****         case 0x31:    
1364:out/quex_scan.cpp ****         case 0x32:    
1365:out/quex_scan.cpp ****         case 0x33:    
1366:out/quex_scan.cpp ****         case 0x34:    
1367:out/quex_scan.cpp ****         case 0x35:    
1368:out/quex_scan.cpp ****         case 0x36:    
1369:out/quex_scan.cpp ****         case 0x37:    
1370:out/quex_scan.cpp ****         case 0x38:    
1371:out/quex_scan.cpp ****         case 0x39:    
1372:out/quex_scan.cpp ****         case 0x41:    
1373:out/quex_scan.cpp ****         case 0x42:    
1374:out/quex_scan.cpp ****         case 0x43:    
1375:out/quex_scan.cpp ****         case 0x44:    
1376:out/quex_scan.cpp ****         case 0x45:    
1377:out/quex_scan.cpp ****         case 0x46:    
1378:out/quex_scan.cpp ****         case 0x47:    
1379:out/quex_scan.cpp ****         case 0x48:    
1380:out/quex_scan.cpp ****         case 0x49:    
GAS LISTING /tmp/cc23nfB3.s 			page 81


1381:out/quex_scan.cpp ****         case 0x4A:    
1382:out/quex_scan.cpp ****         case 0x4B:    
1383:out/quex_scan.cpp ****         case 0x4C:    
1384:out/quex_scan.cpp ****         case 0x4D:    
1385:out/quex_scan.cpp ****         case 0x4E:    
1386:out/quex_scan.cpp ****         case 0x4F:    
1387:out/quex_scan.cpp ****         case 0x50:    
1388:out/quex_scan.cpp ****         case 0x51:    
1389:out/quex_scan.cpp ****         case 0x52:    
1390:out/quex_scan.cpp ****         case 0x53:    
1391:out/quex_scan.cpp ****         case 0x54:    
1392:out/quex_scan.cpp ****         case 0x55:    
1393:out/quex_scan.cpp ****         case 0x56:    
1394:out/quex_scan.cpp ****         case 0x57:    
1395:out/quex_scan.cpp ****         case 0x58:    
1396:out/quex_scan.cpp ****         case 0x59:    
1397:out/quex_scan.cpp ****         case 0x5A:    
1398:out/quex_scan.cpp ****         case 0x5F:    
1399:out/quex_scan.cpp ****         case 0x61:    
1400:out/quex_scan.cpp ****         case 0x62:    
1401:out/quex_scan.cpp ****         case 0x63:    
1402:out/quex_scan.cpp ****         case 0x64:    
1403:out/quex_scan.cpp ****         case 0x65:    
1404:out/quex_scan.cpp ****         case 0x66:    
1405:out/quex_scan.cpp ****         case 0x67:    goto _2364;
1406:out/quex_scan.cpp ****         case 0x68:    goto _2451;
1407:out/quex_scan.cpp ****         case 0x69:    
1408:out/quex_scan.cpp ****         case 0x6A:    
1409:out/quex_scan.cpp ****         case 0x6B:    
1410:out/quex_scan.cpp ****         case 0x6C:    
1411:out/quex_scan.cpp ****         case 0x6D:    
1412:out/quex_scan.cpp ****         case 0x6E:    goto _2364;
1413:out/quex_scan.cpp ****         case 0x6F:    goto _2452;
1414:out/quex_scan.cpp ****         case 0x70:    
1415:out/quex_scan.cpp ****         case 0x71:    
1416:out/quex_scan.cpp ****         case 0x72:    
1417:out/quex_scan.cpp ****         case 0x73:    
1418:out/quex_scan.cpp ****         case 0x74:    
1419:out/quex_scan.cpp ****         case 0x75:    
1420:out/quex_scan.cpp ****         case 0x76:    
1421:out/quex_scan.cpp ****         case 0x77:    
1422:out/quex_scan.cpp ****         case 0x78:    
1423:out/quex_scan.cpp ****         case 0x79:    
1424:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1425:out/quex_scan.cpp ****     }
1426:out/quex_scan.cpp **** 
1427:out/quex_scan.cpp **** _2591:
1428:out/quex_scan.cpp ****         goto _2536;
1429:out/quex_scan.cpp **** 
1430:out/quex_scan.cpp **** 
1431:out/quex_scan.cpp ****     __quex_assert_no_passage();
1432:out/quex_scan.cpp **** _2374:
1433:out/quex_scan.cpp ****     __quex_debug_state(2374);
1434:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1435:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1436:out/quex_scan.cpp ****     switch( input ) {
1437:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2374), QUEX_LABEL(2592));
GAS LISTING /tmp/cc23nfB3.s 			page 82


1438:out/quex_scan.cpp ****         case 0x30:    
1439:out/quex_scan.cpp ****         case 0x31:    
1440:out/quex_scan.cpp ****         case 0x32:    
1441:out/quex_scan.cpp ****         case 0x33:    
1442:out/quex_scan.cpp ****         case 0x34:    
1443:out/quex_scan.cpp ****         case 0x35:    
1444:out/quex_scan.cpp ****         case 0x36:    
1445:out/quex_scan.cpp ****         case 0x37:    
1446:out/quex_scan.cpp ****         case 0x38:    
1447:out/quex_scan.cpp ****         case 0x39:    
1448:out/quex_scan.cpp ****         case 0x41:    
1449:out/quex_scan.cpp ****         case 0x42:    
1450:out/quex_scan.cpp ****         case 0x43:    
1451:out/quex_scan.cpp ****         case 0x44:    
1452:out/quex_scan.cpp ****         case 0x45:    
1453:out/quex_scan.cpp ****         case 0x46:    
1454:out/quex_scan.cpp ****         case 0x47:    
1455:out/quex_scan.cpp ****         case 0x48:    
1456:out/quex_scan.cpp ****         case 0x49:    
1457:out/quex_scan.cpp ****         case 0x4A:    
1458:out/quex_scan.cpp ****         case 0x4B:    
1459:out/quex_scan.cpp ****         case 0x4C:    
1460:out/quex_scan.cpp ****         case 0x4D:    
1461:out/quex_scan.cpp ****         case 0x4E:    
1462:out/quex_scan.cpp ****         case 0x4F:    
1463:out/quex_scan.cpp ****         case 0x50:    
1464:out/quex_scan.cpp ****         case 0x51:    
1465:out/quex_scan.cpp ****         case 0x52:    
1466:out/quex_scan.cpp ****         case 0x53:    
1467:out/quex_scan.cpp ****         case 0x54:    
1468:out/quex_scan.cpp ****         case 0x55:    
1469:out/quex_scan.cpp ****         case 0x56:    
1470:out/quex_scan.cpp ****         case 0x57:    
1471:out/quex_scan.cpp ****         case 0x58:    
1472:out/quex_scan.cpp ****         case 0x59:    
1473:out/quex_scan.cpp ****         case 0x5A:    
1474:out/quex_scan.cpp ****         case 0x5F:    
1475:out/quex_scan.cpp ****         case 0x61:    
1476:out/quex_scan.cpp ****         case 0x62:    
1477:out/quex_scan.cpp ****         case 0x63:    
1478:out/quex_scan.cpp ****         case 0x64:    
1479:out/quex_scan.cpp ****         case 0x65:    
1480:out/quex_scan.cpp ****         case 0x66:    
1481:out/quex_scan.cpp ****         case 0x67:    goto _2364;
1482:out/quex_scan.cpp ****         case 0x68:    goto _2447;
1483:out/quex_scan.cpp ****         case 0x69:    
1484:out/quex_scan.cpp ****         case 0x6A:    
1485:out/quex_scan.cpp ****         case 0x6B:    
1486:out/quex_scan.cpp ****         case 0x6C:    
1487:out/quex_scan.cpp ****         case 0x6D:    
1488:out/quex_scan.cpp ****         case 0x6E:    
1489:out/quex_scan.cpp ****         case 0x6F:    
1490:out/quex_scan.cpp ****         case 0x70:    
1491:out/quex_scan.cpp ****         case 0x71:    
1492:out/quex_scan.cpp ****         case 0x72:    
1493:out/quex_scan.cpp ****         case 0x73:    
1494:out/quex_scan.cpp ****         case 0x74:    
GAS LISTING /tmp/cc23nfB3.s 			page 83


1495:out/quex_scan.cpp ****         case 0x75:    
1496:out/quex_scan.cpp ****         case 0x76:    
1497:out/quex_scan.cpp ****         case 0x77:    
1498:out/quex_scan.cpp ****         case 0x78:    
1499:out/quex_scan.cpp ****         case 0x79:    
1500:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1501:out/quex_scan.cpp ****     }
1502:out/quex_scan.cpp **** 
1503:out/quex_scan.cpp **** _2592:
1504:out/quex_scan.cpp ****         goto _2536;
1505:out/quex_scan.cpp **** 
1506:out/quex_scan.cpp **** 
1507:out/quex_scan.cpp ****     __quex_assert_no_passage();
1508:out/quex_scan.cpp **** _2376:
1509:out/quex_scan.cpp ****     __quex_debug_state(2376);
1510:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1511:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1512:out/quex_scan.cpp ****     last_acceptance                = QUEX_LABEL(2593); /* Terminal 342 */
1513:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
1514:out/quex_scan.cpp ****     switch( input ) {
1515:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2376), QUEX_LABEL(2594));
1516:out/quex_scan.cpp ****         case 0x9:     
1517:out/quex_scan.cpp ****         case 0x20:    goto _2402;
1518:out/quex_scan.cpp ****         case 0x23:    goto _2595;
1519:out/quex_scan.cpp ****         case 0x64:    goto _2400;
1520:out/quex_scan.cpp ****         case 0x65:    goto _2399;
1521:out/quex_scan.cpp ****         case 0x69:    goto _2398;
1522:out/quex_scan.cpp ****         case 0x70:    goto _2403;
1523:out/quex_scan.cpp ****     }
1524:out/quex_scan.cpp **** 
1525:out/quex_scan.cpp **** _2594:
1526:out/quex_scan.cpp ****         goto _2593;
1527:out/quex_scan.cpp **** 
1528:out/quex_scan.cpp **** 
1529:out/quex_scan.cpp ****     __quex_assert_no_passage();
1530:out/quex_scan.cpp **** _2377:
1531:out/quex_scan.cpp ****     __quex_debug_state(2377);
1532:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1533:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1534:out/quex_scan.cpp ****     switch( input ) {
1535:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2377), QUEX_LABEL(2596));
1536:out/quex_scan.cpp ****         case 0x7C:    goto _2597;
1537:out/quex_scan.cpp ****     }
1538:out/quex_scan.cpp **** 
1539:out/quex_scan.cpp **** _2596:
1540:out/quex_scan.cpp ****         goto _2598;
1541:out/quex_scan.cpp **** 
1542:out/quex_scan.cpp **** 
1543:out/quex_scan.cpp ****     __quex_assert_no_passage();
1544:out/quex_scan.cpp **** _2378:
1545:out/quex_scan.cpp ****     __quex_debug_state(2378);
1546:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1547:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1548:out/quex_scan.cpp ****     switch( input ) {
1549:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2378), QUEX_LABEL(2599));
1550:out/quex_scan.cpp ****         case 0x30:    
1551:out/quex_scan.cpp ****         case 0x31:    
GAS LISTING /tmp/cc23nfB3.s 			page 84


1552:out/quex_scan.cpp ****         case 0x32:    
1553:out/quex_scan.cpp ****         case 0x33:    
1554:out/quex_scan.cpp ****         case 0x34:    
1555:out/quex_scan.cpp ****         case 0x35:    
1556:out/quex_scan.cpp ****         case 0x36:    
1557:out/quex_scan.cpp ****         case 0x37:    
1558:out/quex_scan.cpp ****         case 0x38:    
1559:out/quex_scan.cpp ****         case 0x39:    
1560:out/quex_scan.cpp ****         case 0x41:    
1561:out/quex_scan.cpp ****         case 0x42:    
1562:out/quex_scan.cpp ****         case 0x43:    
1563:out/quex_scan.cpp ****         case 0x44:    
1564:out/quex_scan.cpp ****         case 0x45:    
1565:out/quex_scan.cpp ****         case 0x46:    
1566:out/quex_scan.cpp ****         case 0x47:    
1567:out/quex_scan.cpp ****         case 0x48:    
1568:out/quex_scan.cpp ****         case 0x49:    
1569:out/quex_scan.cpp ****         case 0x4A:    
1570:out/quex_scan.cpp ****         case 0x4B:    
1571:out/quex_scan.cpp ****         case 0x4C:    
1572:out/quex_scan.cpp ****         case 0x4D:    
1573:out/quex_scan.cpp ****         case 0x4E:    
1574:out/quex_scan.cpp ****         case 0x4F:    
1575:out/quex_scan.cpp ****         case 0x50:    
1576:out/quex_scan.cpp ****         case 0x51:    
1577:out/quex_scan.cpp ****         case 0x52:    
1578:out/quex_scan.cpp ****         case 0x53:    
1579:out/quex_scan.cpp ****         case 0x54:    
1580:out/quex_scan.cpp ****         case 0x55:    
1581:out/quex_scan.cpp ****         case 0x56:    
1582:out/quex_scan.cpp ****         case 0x57:    
1583:out/quex_scan.cpp ****         case 0x58:    
1584:out/quex_scan.cpp ****         case 0x59:    
1585:out/quex_scan.cpp ****         case 0x5A:    
1586:out/quex_scan.cpp ****         case 0x5F:    
1587:out/quex_scan.cpp ****         case 0x61:    
1588:out/quex_scan.cpp ****         case 0x62:    
1589:out/quex_scan.cpp ****         case 0x63:    
1590:out/quex_scan.cpp ****         case 0x64:    
1591:out/quex_scan.cpp ****         case 0x65:    
1592:out/quex_scan.cpp ****         case 0x66:    
1593:out/quex_scan.cpp ****         case 0x67:    
1594:out/quex_scan.cpp ****         case 0x68:    
1595:out/quex_scan.cpp ****         case 0x69:    
1596:out/quex_scan.cpp ****         case 0x6A:    
1597:out/quex_scan.cpp ****         case 0x6B:    
1598:out/quex_scan.cpp ****         case 0x6C:    
1599:out/quex_scan.cpp ****         case 0x6D:    
1600:out/quex_scan.cpp ****         case 0x6E:    
1601:out/quex_scan.cpp ****         case 0x6F:    
1602:out/quex_scan.cpp ****         case 0x70:    
1603:out/quex_scan.cpp ****         case 0x71:    
1604:out/quex_scan.cpp ****         case 0x72:    
1605:out/quex_scan.cpp ****         case 0x73:    goto _2364;
1606:out/quex_scan.cpp ****         case 0x74:    goto _2387;
1607:out/quex_scan.cpp ****         case 0x75:    
1608:out/quex_scan.cpp ****         case 0x76:    goto _2364;
GAS LISTING /tmp/cc23nfB3.s 			page 85


1609:out/quex_scan.cpp ****         case 0x77:    goto _2388;
1610:out/quex_scan.cpp ****         case 0x78:    
1611:out/quex_scan.cpp ****         case 0x79:    
1612:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1613:out/quex_scan.cpp ****     }
1614:out/quex_scan.cpp **** 
1615:out/quex_scan.cpp **** _2599:
1616:out/quex_scan.cpp ****         goto _2536;
1617:out/quex_scan.cpp **** 
1618:out/quex_scan.cpp **** 
1619:out/quex_scan.cpp ****     __quex_assert_no_passage();
1620:out/quex_scan.cpp **** _2380:
1621:out/quex_scan.cpp ****     __quex_debug_state(2380);
1622:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1623:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1624:out/quex_scan.cpp ****     switch( input ) {
1625:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2380), QUEX_LABEL(2600));
1626:out/quex_scan.cpp ****         case 0x30:    
1627:out/quex_scan.cpp ****         case 0x31:    
1628:out/quex_scan.cpp ****         case 0x32:    
1629:out/quex_scan.cpp ****         case 0x33:    
1630:out/quex_scan.cpp ****         case 0x34:    
1631:out/quex_scan.cpp ****         case 0x35:    
1632:out/quex_scan.cpp ****         case 0x36:    
1633:out/quex_scan.cpp ****         case 0x37:    
1634:out/quex_scan.cpp ****         case 0x38:    
1635:out/quex_scan.cpp ****         case 0x39:    
1636:out/quex_scan.cpp ****         case 0x41:    
1637:out/quex_scan.cpp ****         case 0x42:    
1638:out/quex_scan.cpp ****         case 0x43:    
1639:out/quex_scan.cpp ****         case 0x44:    
1640:out/quex_scan.cpp ****         case 0x45:    
1641:out/quex_scan.cpp ****         case 0x46:    
1642:out/quex_scan.cpp ****         case 0x47:    
1643:out/quex_scan.cpp ****         case 0x48:    
1644:out/quex_scan.cpp ****         case 0x49:    
1645:out/quex_scan.cpp ****         case 0x4A:    
1646:out/quex_scan.cpp ****         case 0x4B:    
1647:out/quex_scan.cpp ****         case 0x4C:    
1648:out/quex_scan.cpp ****         case 0x4D:    
1649:out/quex_scan.cpp ****         case 0x4E:    
1650:out/quex_scan.cpp ****         case 0x4F:    
1651:out/quex_scan.cpp ****         case 0x50:    
1652:out/quex_scan.cpp ****         case 0x51:    
1653:out/quex_scan.cpp ****         case 0x52:    
1654:out/quex_scan.cpp ****         case 0x53:    
1655:out/quex_scan.cpp ****         case 0x54:    
1656:out/quex_scan.cpp ****         case 0x55:    
1657:out/quex_scan.cpp ****         case 0x56:    
1658:out/quex_scan.cpp ****         case 0x57:    
1659:out/quex_scan.cpp ****         case 0x58:    
1660:out/quex_scan.cpp ****         case 0x59:    
1661:out/quex_scan.cpp ****         case 0x5A:    
1662:out/quex_scan.cpp ****         case 0x5F:    
1663:out/quex_scan.cpp ****         case 0x61:    
1664:out/quex_scan.cpp ****         case 0x62:    
1665:out/quex_scan.cpp ****         case 0x63:    
GAS LISTING /tmp/cc23nfB3.s 			page 86


1666:out/quex_scan.cpp ****         case 0x64:    
1667:out/quex_scan.cpp ****         case 0x65:    
1668:out/quex_scan.cpp ****         case 0x66:    
1669:out/quex_scan.cpp ****         case 0x67:    
1670:out/quex_scan.cpp ****         case 0x68:    
1671:out/quex_scan.cpp ****         case 0x69:    
1672:out/quex_scan.cpp ****         case 0x6A:    
1673:out/quex_scan.cpp ****         case 0x6B:    goto _2364;
1674:out/quex_scan.cpp ****         case 0x6C:    goto _2384;
1675:out/quex_scan.cpp ****         case 0x6D:    
1676:out/quex_scan.cpp ****         case 0x6E:    
1677:out/quex_scan.cpp ****         case 0x6F:    
1678:out/quex_scan.cpp ****         case 0x70:    
1679:out/quex_scan.cpp ****         case 0x71:    
1680:out/quex_scan.cpp ****         case 0x72:    
1681:out/quex_scan.cpp ****         case 0x73:    
1682:out/quex_scan.cpp ****         case 0x74:    
1683:out/quex_scan.cpp ****         case 0x75:    
1684:out/quex_scan.cpp ****         case 0x76:    
1685:out/quex_scan.cpp ****         case 0x77:    
1686:out/quex_scan.cpp ****         case 0x78:    
1687:out/quex_scan.cpp ****         case 0x79:    
1688:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1689:out/quex_scan.cpp ****     }
1690:out/quex_scan.cpp **** 
1691:out/quex_scan.cpp **** _2600:
1692:out/quex_scan.cpp ****         goto _2536;
1693:out/quex_scan.cpp **** 
1694:out/quex_scan.cpp **** 
1695:out/quex_scan.cpp ****     __quex_assert_no_passage();
1696:out/quex_scan.cpp **** _2382:
1697:out/quex_scan.cpp ****     __quex_debug_state(2382);
1698:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1699:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1700:out/quex_scan.cpp ****     switch( input ) {
1701:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2382), QUEX_LABEL(2601));
1702:out/quex_scan.cpp ****         case 0x3D:    goto _2602;
1703:out/quex_scan.cpp ****     }
1704:out/quex_scan.cpp **** 
1705:out/quex_scan.cpp **** _2601:
1706:out/quex_scan.cpp ****         goto _2603;
1707:out/quex_scan.cpp **** 
1708:out/quex_scan.cpp **** 
1709:out/quex_scan.cpp ****     __quex_assert_no_passage();
1710:out/quex_scan.cpp **** _2384:
1711:out/quex_scan.cpp ****     __quex_debug_state(2384);
1712:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1713:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1714:out/quex_scan.cpp ****     switch( input ) {
1715:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2384), QUEX_LABEL(2604));
1716:out/quex_scan.cpp ****         case 0x30:    
1717:out/quex_scan.cpp ****         case 0x31:    
1718:out/quex_scan.cpp ****         case 0x32:    
1719:out/quex_scan.cpp ****         case 0x33:    
1720:out/quex_scan.cpp ****         case 0x34:    
1721:out/quex_scan.cpp ****         case 0x35:    
1722:out/quex_scan.cpp ****         case 0x36:    
GAS LISTING /tmp/cc23nfB3.s 			page 87


1723:out/quex_scan.cpp ****         case 0x37:    
1724:out/quex_scan.cpp ****         case 0x38:    
1725:out/quex_scan.cpp ****         case 0x39:    
1726:out/quex_scan.cpp ****         case 0x41:    
1727:out/quex_scan.cpp ****         case 0x42:    
1728:out/quex_scan.cpp ****         case 0x43:    
1729:out/quex_scan.cpp ****         case 0x44:    
1730:out/quex_scan.cpp ****         case 0x45:    
1731:out/quex_scan.cpp ****         case 0x46:    
1732:out/quex_scan.cpp ****         case 0x47:    
1733:out/quex_scan.cpp ****         case 0x48:    
1734:out/quex_scan.cpp ****         case 0x49:    
1735:out/quex_scan.cpp ****         case 0x4A:    
1736:out/quex_scan.cpp ****         case 0x4B:    
1737:out/quex_scan.cpp ****         case 0x4C:    
1738:out/quex_scan.cpp ****         case 0x4D:    
1739:out/quex_scan.cpp ****         case 0x4E:    
1740:out/quex_scan.cpp ****         case 0x4F:    
1741:out/quex_scan.cpp ****         case 0x50:    
1742:out/quex_scan.cpp ****         case 0x51:    
1743:out/quex_scan.cpp ****         case 0x52:    
1744:out/quex_scan.cpp ****         case 0x53:    
1745:out/quex_scan.cpp ****         case 0x54:    
1746:out/quex_scan.cpp ****         case 0x55:    
1747:out/quex_scan.cpp ****         case 0x56:    
1748:out/quex_scan.cpp ****         case 0x57:    
1749:out/quex_scan.cpp ****         case 0x58:    
1750:out/quex_scan.cpp ****         case 0x59:    
1751:out/quex_scan.cpp ****         case 0x5A:    
1752:out/quex_scan.cpp ****         case 0x5F:    
1753:out/quex_scan.cpp ****         case 0x61:    
1754:out/quex_scan.cpp ****         case 0x62:    
1755:out/quex_scan.cpp ****         case 0x63:    
1756:out/quex_scan.cpp ****         case 0x64:    
1757:out/quex_scan.cpp ****         case 0x65:    
1758:out/quex_scan.cpp ****         case 0x66:    
1759:out/quex_scan.cpp ****         case 0x67:    
1760:out/quex_scan.cpp ****         case 0x68:    
1761:out/quex_scan.cpp ****         case 0x69:    
1762:out/quex_scan.cpp ****         case 0x6A:    
1763:out/quex_scan.cpp ****         case 0x6B:    
1764:out/quex_scan.cpp ****         case 0x6C:    
1765:out/quex_scan.cpp ****         case 0x6D:    
1766:out/quex_scan.cpp ****         case 0x6E:    
1767:out/quex_scan.cpp ****         case 0x6F:    
1768:out/quex_scan.cpp ****         case 0x70:    
1769:out/quex_scan.cpp ****         case 0x71:    
1770:out/quex_scan.cpp ****         case 0x72:    goto _2364;
1771:out/quex_scan.cpp ****         case 0x73:    goto _2385;
1772:out/quex_scan.cpp ****         case 0x74:    
1773:out/quex_scan.cpp ****         case 0x75:    
1774:out/quex_scan.cpp ****         case 0x76:    
1775:out/quex_scan.cpp ****         case 0x77:    
1776:out/quex_scan.cpp ****         case 0x78:    
1777:out/quex_scan.cpp ****         case 0x79:    
1778:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1779:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 88


1780:out/quex_scan.cpp **** 
1781:out/quex_scan.cpp **** _2604:
1782:out/quex_scan.cpp ****         goto _2536;
1783:out/quex_scan.cpp **** 
1784:out/quex_scan.cpp **** 
1785:out/quex_scan.cpp ****     __quex_assert_no_passage();
1786:out/quex_scan.cpp **** _2385:
1787:out/quex_scan.cpp ****     __quex_debug_state(2385);
1788:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1789:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1790:out/quex_scan.cpp ****     switch( input ) {
1791:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2385), QUEX_LABEL(2605));
1792:out/quex_scan.cpp ****         case 0x30:    
1793:out/quex_scan.cpp ****         case 0x31:    
1794:out/quex_scan.cpp ****         case 0x32:    
1795:out/quex_scan.cpp ****         case 0x33:    
1796:out/quex_scan.cpp ****         case 0x34:    
1797:out/quex_scan.cpp ****         case 0x35:    
1798:out/quex_scan.cpp ****         case 0x36:    
1799:out/quex_scan.cpp ****         case 0x37:    
1800:out/quex_scan.cpp ****         case 0x38:    
1801:out/quex_scan.cpp ****         case 0x39:    
1802:out/quex_scan.cpp ****         case 0x41:    
1803:out/quex_scan.cpp ****         case 0x42:    
1804:out/quex_scan.cpp ****         case 0x43:    
1805:out/quex_scan.cpp ****         case 0x44:    
1806:out/quex_scan.cpp ****         case 0x45:    
1807:out/quex_scan.cpp ****         case 0x46:    
1808:out/quex_scan.cpp ****         case 0x47:    
1809:out/quex_scan.cpp ****         case 0x48:    
1810:out/quex_scan.cpp ****         case 0x49:    
1811:out/quex_scan.cpp ****         case 0x4A:    
1812:out/quex_scan.cpp ****         case 0x4B:    
1813:out/quex_scan.cpp ****         case 0x4C:    
1814:out/quex_scan.cpp ****         case 0x4D:    
1815:out/quex_scan.cpp ****         case 0x4E:    
1816:out/quex_scan.cpp ****         case 0x4F:    
1817:out/quex_scan.cpp ****         case 0x50:    
1818:out/quex_scan.cpp ****         case 0x51:    
1819:out/quex_scan.cpp ****         case 0x52:    
1820:out/quex_scan.cpp ****         case 0x53:    
1821:out/quex_scan.cpp ****         case 0x54:    
1822:out/quex_scan.cpp ****         case 0x55:    
1823:out/quex_scan.cpp ****         case 0x56:    
1824:out/quex_scan.cpp ****         case 0x57:    
1825:out/quex_scan.cpp ****         case 0x58:    
1826:out/quex_scan.cpp ****         case 0x59:    
1827:out/quex_scan.cpp ****         case 0x5A:    
1828:out/quex_scan.cpp ****         case 0x5F:    
1829:out/quex_scan.cpp ****         case 0x61:    
1830:out/quex_scan.cpp ****         case 0x62:    
1831:out/quex_scan.cpp ****         case 0x63:    
1832:out/quex_scan.cpp ****         case 0x64:    goto _2364;
1833:out/quex_scan.cpp ****         case 0x65:    goto _2386;
1834:out/quex_scan.cpp ****         case 0x66:    
1835:out/quex_scan.cpp ****         case 0x67:    
1836:out/quex_scan.cpp ****         case 0x68:    
GAS LISTING /tmp/cc23nfB3.s 			page 89


1837:out/quex_scan.cpp ****         case 0x69:    
1838:out/quex_scan.cpp ****         case 0x6A:    
1839:out/quex_scan.cpp ****         case 0x6B:    
1840:out/quex_scan.cpp ****         case 0x6C:    
1841:out/quex_scan.cpp ****         case 0x6D:    
1842:out/quex_scan.cpp ****         case 0x6E:    
1843:out/quex_scan.cpp ****         case 0x6F:    
1844:out/quex_scan.cpp ****         case 0x70:    
1845:out/quex_scan.cpp ****         case 0x71:    
1846:out/quex_scan.cpp ****         case 0x72:    
1847:out/quex_scan.cpp ****         case 0x73:    
1848:out/quex_scan.cpp ****         case 0x74:    
1849:out/quex_scan.cpp ****         case 0x75:    
1850:out/quex_scan.cpp ****         case 0x76:    
1851:out/quex_scan.cpp ****         case 0x77:    
1852:out/quex_scan.cpp ****         case 0x78:    
1853:out/quex_scan.cpp ****         case 0x79:    
1854:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1855:out/quex_scan.cpp ****     }
1856:out/quex_scan.cpp **** 
1857:out/quex_scan.cpp **** _2605:
1858:out/quex_scan.cpp ****         goto _2536;
1859:out/quex_scan.cpp **** 
1860:out/quex_scan.cpp **** 
1861:out/quex_scan.cpp ****     __quex_assert_no_passage();
1862:out/quex_scan.cpp **** _2386:
1863:out/quex_scan.cpp ****     __quex_debug_state(2386);
1864:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1865:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1866:out/quex_scan.cpp ****     switch( input ) {
1867:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2386), QUEX_LABEL(2606));
1868:out/quex_scan.cpp ****         case 0x30:    
1869:out/quex_scan.cpp ****         case 0x31:    
1870:out/quex_scan.cpp ****         case 0x32:    
1871:out/quex_scan.cpp ****         case 0x33:    
1872:out/quex_scan.cpp ****         case 0x34:    
1873:out/quex_scan.cpp ****         case 0x35:    
1874:out/quex_scan.cpp ****         case 0x36:    
1875:out/quex_scan.cpp ****         case 0x37:    
1876:out/quex_scan.cpp ****         case 0x38:    
1877:out/quex_scan.cpp ****         case 0x39:    
1878:out/quex_scan.cpp ****         case 0x41:    
1879:out/quex_scan.cpp ****         case 0x42:    
1880:out/quex_scan.cpp ****         case 0x43:    
1881:out/quex_scan.cpp ****         case 0x44:    
1882:out/quex_scan.cpp ****         case 0x45:    
1883:out/quex_scan.cpp ****         case 0x46:    
1884:out/quex_scan.cpp ****         case 0x47:    
1885:out/quex_scan.cpp ****         case 0x48:    
1886:out/quex_scan.cpp ****         case 0x49:    
1887:out/quex_scan.cpp ****         case 0x4A:    
1888:out/quex_scan.cpp ****         case 0x4B:    
1889:out/quex_scan.cpp ****         case 0x4C:    
1890:out/quex_scan.cpp ****         case 0x4D:    
1891:out/quex_scan.cpp ****         case 0x4E:    
1892:out/quex_scan.cpp ****         case 0x4F:    
1893:out/quex_scan.cpp ****         case 0x50:    
GAS LISTING /tmp/cc23nfB3.s 			page 90


1894:out/quex_scan.cpp ****         case 0x51:    
1895:out/quex_scan.cpp ****         case 0x52:    
1896:out/quex_scan.cpp ****         case 0x53:    
1897:out/quex_scan.cpp ****         case 0x54:    
1898:out/quex_scan.cpp ****         case 0x55:    
1899:out/quex_scan.cpp ****         case 0x56:    
1900:out/quex_scan.cpp ****         case 0x57:    
1901:out/quex_scan.cpp ****         case 0x58:    
1902:out/quex_scan.cpp ****         case 0x59:    
1903:out/quex_scan.cpp ****         case 0x5A:    
1904:out/quex_scan.cpp ****         case 0x5F:    
1905:out/quex_scan.cpp ****         case 0x61:    
1906:out/quex_scan.cpp ****         case 0x62:    
1907:out/quex_scan.cpp ****         case 0x63:    
1908:out/quex_scan.cpp ****         case 0x64:    
1909:out/quex_scan.cpp ****         case 0x65:    
1910:out/quex_scan.cpp ****         case 0x66:    
1911:out/quex_scan.cpp ****         case 0x67:    
1912:out/quex_scan.cpp ****         case 0x68:    
1913:out/quex_scan.cpp ****         case 0x69:    
1914:out/quex_scan.cpp ****         case 0x6A:    
1915:out/quex_scan.cpp ****         case 0x6B:    
1916:out/quex_scan.cpp ****         case 0x6C:    
1917:out/quex_scan.cpp ****         case 0x6D:    
1918:out/quex_scan.cpp ****         case 0x6E:    
1919:out/quex_scan.cpp ****         case 0x6F:    
1920:out/quex_scan.cpp ****         case 0x70:    
1921:out/quex_scan.cpp ****         case 0x71:    
1922:out/quex_scan.cpp ****         case 0x72:    
1923:out/quex_scan.cpp ****         case 0x73:    
1924:out/quex_scan.cpp ****         case 0x74:    
1925:out/quex_scan.cpp ****         case 0x75:    
1926:out/quex_scan.cpp ****         case 0x76:    
1927:out/quex_scan.cpp ****         case 0x77:    
1928:out/quex_scan.cpp ****         case 0x78:    
1929:out/quex_scan.cpp ****         case 0x79:    
1930:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
1931:out/quex_scan.cpp ****     }
1932:out/quex_scan.cpp **** 
1933:out/quex_scan.cpp **** _2606:
1934:out/quex_scan.cpp ****         goto _2607;
1935:out/quex_scan.cpp **** 
1936:out/quex_scan.cpp **** 
1937:out/quex_scan.cpp ****     __quex_assert_no_passage();
1938:out/quex_scan.cpp **** _2387:
1939:out/quex_scan.cpp ****     __quex_debug_state(2387);
1940:out/quex_scan.cpp ****     ++(me->buffer._input_p);
1941:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
1942:out/quex_scan.cpp ****     switch( input ) {
1943:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2387), QUEX_LABEL(2608));
1944:out/quex_scan.cpp ****         case 0x30:    
1945:out/quex_scan.cpp ****         case 0x31:    
1946:out/quex_scan.cpp ****         case 0x32:    
1947:out/quex_scan.cpp ****         case 0x33:    
1948:out/quex_scan.cpp ****         case 0x34:    
1949:out/quex_scan.cpp ****         case 0x35:    
1950:out/quex_scan.cpp ****         case 0x36:    
GAS LISTING /tmp/cc23nfB3.s 			page 91


1951:out/quex_scan.cpp ****         case 0x37:    
1952:out/quex_scan.cpp ****         case 0x38:    
1953:out/quex_scan.cpp ****         case 0x39:    
1954:out/quex_scan.cpp ****         case 0x41:    
1955:out/quex_scan.cpp ****         case 0x42:    
1956:out/quex_scan.cpp ****         case 0x43:    
1957:out/quex_scan.cpp ****         case 0x44:    
1958:out/quex_scan.cpp ****         case 0x45:    
1959:out/quex_scan.cpp ****         case 0x46:    
1960:out/quex_scan.cpp ****         case 0x47:    
1961:out/quex_scan.cpp ****         case 0x48:    
1962:out/quex_scan.cpp ****         case 0x49:    
1963:out/quex_scan.cpp ****         case 0x4A:    
1964:out/quex_scan.cpp ****         case 0x4B:    
1965:out/quex_scan.cpp ****         case 0x4C:    
1966:out/quex_scan.cpp ****         case 0x4D:    
1967:out/quex_scan.cpp ****         case 0x4E:    
1968:out/quex_scan.cpp ****         case 0x4F:    
1969:out/quex_scan.cpp ****         case 0x50:    
1970:out/quex_scan.cpp ****         case 0x51:    
1971:out/quex_scan.cpp ****         case 0x52:    
1972:out/quex_scan.cpp ****         case 0x53:    
1973:out/quex_scan.cpp ****         case 0x54:    
1974:out/quex_scan.cpp ****         case 0x55:    
1975:out/quex_scan.cpp ****         case 0x56:    
1976:out/quex_scan.cpp ****         case 0x57:    
1977:out/quex_scan.cpp ****         case 0x58:    
1978:out/quex_scan.cpp ****         case 0x59:    
1979:out/quex_scan.cpp ****         case 0x5A:    
1980:out/quex_scan.cpp ****         case 0x5F:    
1981:out/quex_scan.cpp ****         case 0x61:    
1982:out/quex_scan.cpp ****         case 0x62:    
1983:out/quex_scan.cpp ****         case 0x63:    
1984:out/quex_scan.cpp ****         case 0x64:    
1985:out/quex_scan.cpp ****         case 0x65:    
1986:out/quex_scan.cpp ****         case 0x66:    
1987:out/quex_scan.cpp ****         case 0x67:    
1988:out/quex_scan.cpp ****         case 0x68:    
1989:out/quex_scan.cpp ****         case 0x69:    
1990:out/quex_scan.cpp ****         case 0x6A:    
1991:out/quex_scan.cpp ****         case 0x6B:    
1992:out/quex_scan.cpp ****         case 0x6C:    
1993:out/quex_scan.cpp ****         case 0x6D:    
1994:out/quex_scan.cpp ****         case 0x6E:    
1995:out/quex_scan.cpp ****         case 0x6F:    
1996:out/quex_scan.cpp ****         case 0x70:    
1997:out/quex_scan.cpp ****         case 0x71:    goto _2364;
1998:out/quex_scan.cpp ****         case 0x72:    goto _2393;
1999:out/quex_scan.cpp ****         case 0x73:    
2000:out/quex_scan.cpp ****         case 0x74:    
2001:out/quex_scan.cpp ****         case 0x75:    
2002:out/quex_scan.cpp ****         case 0x76:    
2003:out/quex_scan.cpp ****         case 0x77:    
2004:out/quex_scan.cpp ****         case 0x78:    
2005:out/quex_scan.cpp ****         case 0x79:    
2006:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2007:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 92


2008:out/quex_scan.cpp **** 
2009:out/quex_scan.cpp **** _2608:
2010:out/quex_scan.cpp ****         goto _2536;
2011:out/quex_scan.cpp **** 
2012:out/quex_scan.cpp **** 
2013:out/quex_scan.cpp ****     __quex_assert_no_passage();
2014:out/quex_scan.cpp **** _2388:
2015:out/quex_scan.cpp ****     __quex_debug_state(2388);
2016:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2017:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2018:out/quex_scan.cpp ****     switch( input ) {
2019:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2388), QUEX_LABEL(2609));
2020:out/quex_scan.cpp ****         case 0x30:    
2021:out/quex_scan.cpp ****         case 0x31:    
2022:out/quex_scan.cpp ****         case 0x32:    
2023:out/quex_scan.cpp ****         case 0x33:    
2024:out/quex_scan.cpp ****         case 0x34:    
2025:out/quex_scan.cpp ****         case 0x35:    
2026:out/quex_scan.cpp ****         case 0x36:    
2027:out/quex_scan.cpp ****         case 0x37:    
2028:out/quex_scan.cpp ****         case 0x38:    
2029:out/quex_scan.cpp ****         case 0x39:    
2030:out/quex_scan.cpp ****         case 0x41:    
2031:out/quex_scan.cpp ****         case 0x42:    
2032:out/quex_scan.cpp ****         case 0x43:    
2033:out/quex_scan.cpp ****         case 0x44:    
2034:out/quex_scan.cpp ****         case 0x45:    
2035:out/quex_scan.cpp ****         case 0x46:    
2036:out/quex_scan.cpp ****         case 0x47:    
2037:out/quex_scan.cpp ****         case 0x48:    
2038:out/quex_scan.cpp ****         case 0x49:    
2039:out/quex_scan.cpp ****         case 0x4A:    
2040:out/quex_scan.cpp ****         case 0x4B:    
2041:out/quex_scan.cpp ****         case 0x4C:    
2042:out/quex_scan.cpp ****         case 0x4D:    
2043:out/quex_scan.cpp ****         case 0x4E:    
2044:out/quex_scan.cpp ****         case 0x4F:    
2045:out/quex_scan.cpp ****         case 0x50:    
2046:out/quex_scan.cpp ****         case 0x51:    
2047:out/quex_scan.cpp ****         case 0x52:    
2048:out/quex_scan.cpp ****         case 0x53:    
2049:out/quex_scan.cpp ****         case 0x54:    
2050:out/quex_scan.cpp ****         case 0x55:    
2051:out/quex_scan.cpp ****         case 0x56:    
2052:out/quex_scan.cpp ****         case 0x57:    
2053:out/quex_scan.cpp ****         case 0x58:    
2054:out/quex_scan.cpp ****         case 0x59:    
2055:out/quex_scan.cpp ****         case 0x5A:    
2056:out/quex_scan.cpp ****         case 0x5F:    
2057:out/quex_scan.cpp ****         case 0x61:    
2058:out/quex_scan.cpp ****         case 0x62:    
2059:out/quex_scan.cpp ****         case 0x63:    
2060:out/quex_scan.cpp ****         case 0x64:    
2061:out/quex_scan.cpp ****         case 0x65:    
2062:out/quex_scan.cpp ****         case 0x66:    
2063:out/quex_scan.cpp ****         case 0x67:    
2064:out/quex_scan.cpp ****         case 0x68:    goto _2364;
GAS LISTING /tmp/cc23nfB3.s 			page 93


2065:out/quex_scan.cpp ****         case 0x69:    goto _2389;
2066:out/quex_scan.cpp ****         case 0x6A:    
2067:out/quex_scan.cpp ****         case 0x6B:    
2068:out/quex_scan.cpp ****         case 0x6C:    
2069:out/quex_scan.cpp ****         case 0x6D:    
2070:out/quex_scan.cpp ****         case 0x6E:    
2071:out/quex_scan.cpp ****         case 0x6F:    
2072:out/quex_scan.cpp ****         case 0x70:    
2073:out/quex_scan.cpp ****         case 0x71:    
2074:out/quex_scan.cpp ****         case 0x72:    
2075:out/quex_scan.cpp ****         case 0x73:    
2076:out/quex_scan.cpp ****         case 0x74:    
2077:out/quex_scan.cpp ****         case 0x75:    
2078:out/quex_scan.cpp ****         case 0x76:    
2079:out/quex_scan.cpp ****         case 0x77:    
2080:out/quex_scan.cpp ****         case 0x78:    
2081:out/quex_scan.cpp ****         case 0x79:    
2082:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2083:out/quex_scan.cpp ****     }
2084:out/quex_scan.cpp **** 
2085:out/quex_scan.cpp **** _2609:
2086:out/quex_scan.cpp ****         goto _2536;
2087:out/quex_scan.cpp **** 
2088:out/quex_scan.cpp **** 
2089:out/quex_scan.cpp ****     __quex_assert_no_passage();
2090:out/quex_scan.cpp **** _2389:
2091:out/quex_scan.cpp ****     __quex_debug_state(2389);
2092:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2093:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2094:out/quex_scan.cpp ****     switch( input ) {
2095:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2389), QUEX_LABEL(2610));
2096:out/quex_scan.cpp ****         case 0x30:    
2097:out/quex_scan.cpp ****         case 0x31:    
2098:out/quex_scan.cpp ****         case 0x32:    
2099:out/quex_scan.cpp ****         case 0x33:    
2100:out/quex_scan.cpp ****         case 0x34:    
2101:out/quex_scan.cpp ****         case 0x35:    
2102:out/quex_scan.cpp ****         case 0x36:    
2103:out/quex_scan.cpp ****         case 0x37:    
2104:out/quex_scan.cpp ****         case 0x38:    
2105:out/quex_scan.cpp ****         case 0x39:    
2106:out/quex_scan.cpp ****         case 0x41:    
2107:out/quex_scan.cpp ****         case 0x42:    
2108:out/quex_scan.cpp ****         case 0x43:    
2109:out/quex_scan.cpp ****         case 0x44:    
2110:out/quex_scan.cpp ****         case 0x45:    
2111:out/quex_scan.cpp ****         case 0x46:    
2112:out/quex_scan.cpp ****         case 0x47:    
2113:out/quex_scan.cpp ****         case 0x48:    
2114:out/quex_scan.cpp ****         case 0x49:    
2115:out/quex_scan.cpp ****         case 0x4A:    
2116:out/quex_scan.cpp ****         case 0x4B:    
2117:out/quex_scan.cpp ****         case 0x4C:    
2118:out/quex_scan.cpp ****         case 0x4D:    
2119:out/quex_scan.cpp ****         case 0x4E:    
2120:out/quex_scan.cpp ****         case 0x4F:    
2121:out/quex_scan.cpp ****         case 0x50:    
GAS LISTING /tmp/cc23nfB3.s 			page 94


2122:out/quex_scan.cpp ****         case 0x51:    
2123:out/quex_scan.cpp ****         case 0x52:    
2124:out/quex_scan.cpp ****         case 0x53:    
2125:out/quex_scan.cpp ****         case 0x54:    
2126:out/quex_scan.cpp ****         case 0x55:    
2127:out/quex_scan.cpp ****         case 0x56:    
2128:out/quex_scan.cpp ****         case 0x57:    
2129:out/quex_scan.cpp ****         case 0x58:    
2130:out/quex_scan.cpp ****         case 0x59:    
2131:out/quex_scan.cpp ****         case 0x5A:    
2132:out/quex_scan.cpp ****         case 0x5F:    
2133:out/quex_scan.cpp ****         case 0x61:    
2134:out/quex_scan.cpp ****         case 0x62:    
2135:out/quex_scan.cpp ****         case 0x63:    
2136:out/quex_scan.cpp ****         case 0x64:    
2137:out/quex_scan.cpp ****         case 0x65:    
2138:out/quex_scan.cpp ****         case 0x66:    
2139:out/quex_scan.cpp ****         case 0x67:    
2140:out/quex_scan.cpp ****         case 0x68:    
2141:out/quex_scan.cpp ****         case 0x69:    
2142:out/quex_scan.cpp ****         case 0x6A:    
2143:out/quex_scan.cpp ****         case 0x6B:    
2144:out/quex_scan.cpp ****         case 0x6C:    
2145:out/quex_scan.cpp ****         case 0x6D:    
2146:out/quex_scan.cpp ****         case 0x6E:    
2147:out/quex_scan.cpp ****         case 0x6F:    
2148:out/quex_scan.cpp ****         case 0x70:    
2149:out/quex_scan.cpp ****         case 0x71:    
2150:out/quex_scan.cpp ****         case 0x72:    
2151:out/quex_scan.cpp ****         case 0x73:    goto _2364;
2152:out/quex_scan.cpp ****         case 0x74:    goto _2390;
2153:out/quex_scan.cpp ****         case 0x75:    
2154:out/quex_scan.cpp ****         case 0x76:    
2155:out/quex_scan.cpp ****         case 0x77:    
2156:out/quex_scan.cpp ****         case 0x78:    
2157:out/quex_scan.cpp ****         case 0x79:    
2158:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2159:out/quex_scan.cpp ****     }
2160:out/quex_scan.cpp **** 
2161:out/quex_scan.cpp **** _2610:
2162:out/quex_scan.cpp ****         goto _2536;
2163:out/quex_scan.cpp **** 
2164:out/quex_scan.cpp **** 
2165:out/quex_scan.cpp ****     __quex_assert_no_passage();
2166:out/quex_scan.cpp **** _2390:
2167:out/quex_scan.cpp ****     __quex_debug_state(2390);
2168:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2169:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2170:out/quex_scan.cpp ****     switch( input ) {
2171:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2390), QUEX_LABEL(2611));
2172:out/quex_scan.cpp ****         case 0x30:    
2173:out/quex_scan.cpp ****         case 0x31:    
2174:out/quex_scan.cpp ****         case 0x32:    
2175:out/quex_scan.cpp ****         case 0x33:    
2176:out/quex_scan.cpp ****         case 0x34:    
2177:out/quex_scan.cpp ****         case 0x35:    
2178:out/quex_scan.cpp ****         case 0x36:    
GAS LISTING /tmp/cc23nfB3.s 			page 95


2179:out/quex_scan.cpp ****         case 0x37:    
2180:out/quex_scan.cpp ****         case 0x38:    
2181:out/quex_scan.cpp ****         case 0x39:    
2182:out/quex_scan.cpp ****         case 0x41:    
2183:out/quex_scan.cpp ****         case 0x42:    
2184:out/quex_scan.cpp ****         case 0x43:    
2185:out/quex_scan.cpp ****         case 0x44:    
2186:out/quex_scan.cpp ****         case 0x45:    
2187:out/quex_scan.cpp ****         case 0x46:    
2188:out/quex_scan.cpp ****         case 0x47:    
2189:out/quex_scan.cpp ****         case 0x48:    
2190:out/quex_scan.cpp ****         case 0x49:    
2191:out/quex_scan.cpp ****         case 0x4A:    
2192:out/quex_scan.cpp ****         case 0x4B:    
2193:out/quex_scan.cpp ****         case 0x4C:    
2194:out/quex_scan.cpp ****         case 0x4D:    
2195:out/quex_scan.cpp ****         case 0x4E:    
2196:out/quex_scan.cpp ****         case 0x4F:    
2197:out/quex_scan.cpp ****         case 0x50:    
2198:out/quex_scan.cpp ****         case 0x51:    
2199:out/quex_scan.cpp ****         case 0x52:    
2200:out/quex_scan.cpp ****         case 0x53:    
2201:out/quex_scan.cpp ****         case 0x54:    
2202:out/quex_scan.cpp ****         case 0x55:    
2203:out/quex_scan.cpp ****         case 0x56:    
2204:out/quex_scan.cpp ****         case 0x57:    
2205:out/quex_scan.cpp ****         case 0x58:    
2206:out/quex_scan.cpp ****         case 0x59:    
2207:out/quex_scan.cpp ****         case 0x5A:    
2208:out/quex_scan.cpp ****         case 0x5F:    
2209:out/quex_scan.cpp ****         case 0x61:    
2210:out/quex_scan.cpp ****         case 0x62:    goto _2364;
2211:out/quex_scan.cpp ****         case 0x63:    goto _2391;
2212:out/quex_scan.cpp ****         case 0x64:    
2213:out/quex_scan.cpp ****         case 0x65:    
2214:out/quex_scan.cpp ****         case 0x66:    
2215:out/quex_scan.cpp ****         case 0x67:    
2216:out/quex_scan.cpp ****         case 0x68:    
2217:out/quex_scan.cpp ****         case 0x69:    
2218:out/quex_scan.cpp ****         case 0x6A:    
2219:out/quex_scan.cpp ****         case 0x6B:    
2220:out/quex_scan.cpp ****         case 0x6C:    
2221:out/quex_scan.cpp ****         case 0x6D:    
2222:out/quex_scan.cpp ****         case 0x6E:    
2223:out/quex_scan.cpp ****         case 0x6F:    
2224:out/quex_scan.cpp ****         case 0x70:    
2225:out/quex_scan.cpp ****         case 0x71:    
2226:out/quex_scan.cpp ****         case 0x72:    
2227:out/quex_scan.cpp ****         case 0x73:    
2228:out/quex_scan.cpp ****         case 0x74:    
2229:out/quex_scan.cpp ****         case 0x75:    
2230:out/quex_scan.cpp ****         case 0x76:    
2231:out/quex_scan.cpp ****         case 0x77:    
2232:out/quex_scan.cpp ****         case 0x78:    
2233:out/quex_scan.cpp ****         case 0x79:    
2234:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2235:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 96


2236:out/quex_scan.cpp **** 
2237:out/quex_scan.cpp **** _2611:
2238:out/quex_scan.cpp ****         goto _2536;
2239:out/quex_scan.cpp **** 
2240:out/quex_scan.cpp **** 
2241:out/quex_scan.cpp ****     __quex_assert_no_passage();
2242:out/quex_scan.cpp **** _2391:
2243:out/quex_scan.cpp ****     __quex_debug_state(2391);
2244:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2245:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2246:out/quex_scan.cpp ****     switch( input ) {
2247:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2391), QUEX_LABEL(2612));
2248:out/quex_scan.cpp ****         case 0x30:    
2249:out/quex_scan.cpp ****         case 0x31:    
2250:out/quex_scan.cpp ****         case 0x32:    
2251:out/quex_scan.cpp ****         case 0x33:    
2252:out/quex_scan.cpp ****         case 0x34:    
2253:out/quex_scan.cpp ****         case 0x35:    
2254:out/quex_scan.cpp ****         case 0x36:    
2255:out/quex_scan.cpp ****         case 0x37:    
2256:out/quex_scan.cpp ****         case 0x38:    
2257:out/quex_scan.cpp ****         case 0x39:    
2258:out/quex_scan.cpp ****         case 0x41:    
2259:out/quex_scan.cpp ****         case 0x42:    
2260:out/quex_scan.cpp ****         case 0x43:    
2261:out/quex_scan.cpp ****         case 0x44:    
2262:out/quex_scan.cpp ****         case 0x45:    
2263:out/quex_scan.cpp ****         case 0x46:    
2264:out/quex_scan.cpp ****         case 0x47:    
2265:out/quex_scan.cpp ****         case 0x48:    
2266:out/quex_scan.cpp ****         case 0x49:    
2267:out/quex_scan.cpp ****         case 0x4A:    
2268:out/quex_scan.cpp ****         case 0x4B:    
2269:out/quex_scan.cpp ****         case 0x4C:    
2270:out/quex_scan.cpp ****         case 0x4D:    
2271:out/quex_scan.cpp ****         case 0x4E:    
2272:out/quex_scan.cpp ****         case 0x4F:    
2273:out/quex_scan.cpp ****         case 0x50:    
2274:out/quex_scan.cpp ****         case 0x51:    
2275:out/quex_scan.cpp ****         case 0x52:    
2276:out/quex_scan.cpp ****         case 0x53:    
2277:out/quex_scan.cpp ****         case 0x54:    
2278:out/quex_scan.cpp ****         case 0x55:    
2279:out/quex_scan.cpp ****         case 0x56:    
2280:out/quex_scan.cpp ****         case 0x57:    
2281:out/quex_scan.cpp ****         case 0x58:    
2282:out/quex_scan.cpp ****         case 0x59:    
2283:out/quex_scan.cpp ****         case 0x5A:    
2284:out/quex_scan.cpp ****         case 0x5F:    
2285:out/quex_scan.cpp ****         case 0x61:    
2286:out/quex_scan.cpp ****         case 0x62:    
2287:out/quex_scan.cpp ****         case 0x63:    
2288:out/quex_scan.cpp ****         case 0x64:    
2289:out/quex_scan.cpp ****         case 0x65:    
2290:out/quex_scan.cpp ****         case 0x66:    
2291:out/quex_scan.cpp ****         case 0x67:    goto _2364;
2292:out/quex_scan.cpp ****         case 0x68:    goto _2392;
GAS LISTING /tmp/cc23nfB3.s 			page 97


2293:out/quex_scan.cpp ****         case 0x69:    
2294:out/quex_scan.cpp ****         case 0x6A:    
2295:out/quex_scan.cpp ****         case 0x6B:    
2296:out/quex_scan.cpp ****         case 0x6C:    
2297:out/quex_scan.cpp ****         case 0x6D:    
2298:out/quex_scan.cpp ****         case 0x6E:    
2299:out/quex_scan.cpp ****         case 0x6F:    
2300:out/quex_scan.cpp ****         case 0x70:    
2301:out/quex_scan.cpp ****         case 0x71:    
2302:out/quex_scan.cpp ****         case 0x72:    
2303:out/quex_scan.cpp ****         case 0x73:    
2304:out/quex_scan.cpp ****         case 0x74:    
2305:out/quex_scan.cpp ****         case 0x75:    
2306:out/quex_scan.cpp ****         case 0x76:    
2307:out/quex_scan.cpp ****         case 0x77:    
2308:out/quex_scan.cpp ****         case 0x78:    
2309:out/quex_scan.cpp ****         case 0x79:    
2310:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2311:out/quex_scan.cpp ****     }
2312:out/quex_scan.cpp **** 
2313:out/quex_scan.cpp **** _2612:
2314:out/quex_scan.cpp ****         goto _2536;
2315:out/quex_scan.cpp **** 
2316:out/quex_scan.cpp **** 
2317:out/quex_scan.cpp ****     __quex_assert_no_passage();
2318:out/quex_scan.cpp **** _2392:
2319:out/quex_scan.cpp ****     __quex_debug_state(2392);
2320:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2321:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2322:out/quex_scan.cpp ****     switch( input ) {
2323:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2392), QUEX_LABEL(2613));
2324:out/quex_scan.cpp ****         case 0x30:    
2325:out/quex_scan.cpp ****         case 0x31:    
2326:out/quex_scan.cpp ****         case 0x32:    
2327:out/quex_scan.cpp ****         case 0x33:    
2328:out/quex_scan.cpp ****         case 0x34:    
2329:out/quex_scan.cpp ****         case 0x35:    
2330:out/quex_scan.cpp ****         case 0x36:    
2331:out/quex_scan.cpp ****         case 0x37:    
2332:out/quex_scan.cpp ****         case 0x38:    
2333:out/quex_scan.cpp ****         case 0x39:    
2334:out/quex_scan.cpp ****         case 0x41:    
2335:out/quex_scan.cpp ****         case 0x42:    
2336:out/quex_scan.cpp ****         case 0x43:    
2337:out/quex_scan.cpp ****         case 0x44:    
2338:out/quex_scan.cpp ****         case 0x45:    
2339:out/quex_scan.cpp ****         case 0x46:    
2340:out/quex_scan.cpp ****         case 0x47:    
2341:out/quex_scan.cpp ****         case 0x48:    
2342:out/quex_scan.cpp ****         case 0x49:    
2343:out/quex_scan.cpp ****         case 0x4A:    
2344:out/quex_scan.cpp ****         case 0x4B:    
2345:out/quex_scan.cpp ****         case 0x4C:    
2346:out/quex_scan.cpp ****         case 0x4D:    
2347:out/quex_scan.cpp ****         case 0x4E:    
2348:out/quex_scan.cpp ****         case 0x4F:    
2349:out/quex_scan.cpp ****         case 0x50:    
GAS LISTING /tmp/cc23nfB3.s 			page 98


2350:out/quex_scan.cpp ****         case 0x51:    
2351:out/quex_scan.cpp ****         case 0x52:    
2352:out/quex_scan.cpp ****         case 0x53:    
2353:out/quex_scan.cpp ****         case 0x54:    
2354:out/quex_scan.cpp ****         case 0x55:    
2355:out/quex_scan.cpp ****         case 0x56:    
2356:out/quex_scan.cpp ****         case 0x57:    
2357:out/quex_scan.cpp ****         case 0x58:    
2358:out/quex_scan.cpp ****         case 0x59:    
2359:out/quex_scan.cpp ****         case 0x5A:    
2360:out/quex_scan.cpp ****         case 0x5F:    
2361:out/quex_scan.cpp ****         case 0x61:    
2362:out/quex_scan.cpp ****         case 0x62:    
2363:out/quex_scan.cpp ****         case 0x63:    
2364:out/quex_scan.cpp ****         case 0x64:    
2365:out/quex_scan.cpp ****         case 0x65:    
2366:out/quex_scan.cpp ****         case 0x66:    
2367:out/quex_scan.cpp ****         case 0x67:    
2368:out/quex_scan.cpp ****         case 0x68:    
2369:out/quex_scan.cpp ****         case 0x69:    
2370:out/quex_scan.cpp ****         case 0x6A:    
2371:out/quex_scan.cpp ****         case 0x6B:    
2372:out/quex_scan.cpp ****         case 0x6C:    
2373:out/quex_scan.cpp ****         case 0x6D:    
2374:out/quex_scan.cpp ****         case 0x6E:    
2375:out/quex_scan.cpp ****         case 0x6F:    
2376:out/quex_scan.cpp ****         case 0x70:    
2377:out/quex_scan.cpp ****         case 0x71:    
2378:out/quex_scan.cpp ****         case 0x72:    
2379:out/quex_scan.cpp ****         case 0x73:    
2380:out/quex_scan.cpp ****         case 0x74:    
2381:out/quex_scan.cpp ****         case 0x75:    
2382:out/quex_scan.cpp ****         case 0x76:    
2383:out/quex_scan.cpp ****         case 0x77:    
2384:out/quex_scan.cpp ****         case 0x78:    
2385:out/quex_scan.cpp ****         case 0x79:    
2386:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2387:out/quex_scan.cpp ****     }
2388:out/quex_scan.cpp **** 
2389:out/quex_scan.cpp **** _2613:
2390:out/quex_scan.cpp ****         goto _2614;
2391:out/quex_scan.cpp **** 
2392:out/quex_scan.cpp **** 
2393:out/quex_scan.cpp ****     __quex_assert_no_passage();
2394:out/quex_scan.cpp **** _2393:
2395:out/quex_scan.cpp ****     __quex_debug_state(2393);
2396:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2397:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2398:out/quex_scan.cpp ****     switch( input ) {
2399:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2393), QUEX_LABEL(2615));
2400:out/quex_scan.cpp ****         case 0x30:    
2401:out/quex_scan.cpp ****         case 0x31:    
2402:out/quex_scan.cpp ****         case 0x32:    
2403:out/quex_scan.cpp ****         case 0x33:    
2404:out/quex_scan.cpp ****         case 0x34:    
2405:out/quex_scan.cpp ****         case 0x35:    
2406:out/quex_scan.cpp ****         case 0x36:    
GAS LISTING /tmp/cc23nfB3.s 			page 99


2407:out/quex_scan.cpp ****         case 0x37:    
2408:out/quex_scan.cpp ****         case 0x38:    
2409:out/quex_scan.cpp ****         case 0x39:    
2410:out/quex_scan.cpp ****         case 0x41:    
2411:out/quex_scan.cpp ****         case 0x42:    
2412:out/quex_scan.cpp ****         case 0x43:    
2413:out/quex_scan.cpp ****         case 0x44:    
2414:out/quex_scan.cpp ****         case 0x45:    
2415:out/quex_scan.cpp ****         case 0x46:    
2416:out/quex_scan.cpp ****         case 0x47:    
2417:out/quex_scan.cpp ****         case 0x48:    
2418:out/quex_scan.cpp ****         case 0x49:    
2419:out/quex_scan.cpp ****         case 0x4A:    
2420:out/quex_scan.cpp ****         case 0x4B:    
2421:out/quex_scan.cpp ****         case 0x4C:    
2422:out/quex_scan.cpp ****         case 0x4D:    
2423:out/quex_scan.cpp ****         case 0x4E:    
2424:out/quex_scan.cpp ****         case 0x4F:    
2425:out/quex_scan.cpp ****         case 0x50:    
2426:out/quex_scan.cpp ****         case 0x51:    
2427:out/quex_scan.cpp ****         case 0x52:    
2428:out/quex_scan.cpp ****         case 0x53:    
2429:out/quex_scan.cpp ****         case 0x54:    
2430:out/quex_scan.cpp ****         case 0x55:    
2431:out/quex_scan.cpp ****         case 0x56:    
2432:out/quex_scan.cpp ****         case 0x57:    
2433:out/quex_scan.cpp ****         case 0x58:    
2434:out/quex_scan.cpp ****         case 0x59:    
2435:out/quex_scan.cpp ****         case 0x5A:    
2436:out/quex_scan.cpp ****         case 0x5F:    
2437:out/quex_scan.cpp ****         case 0x61:    
2438:out/quex_scan.cpp ****         case 0x62:    
2439:out/quex_scan.cpp ****         case 0x63:    
2440:out/quex_scan.cpp ****         case 0x64:    
2441:out/quex_scan.cpp ****         case 0x65:    
2442:out/quex_scan.cpp ****         case 0x66:    
2443:out/quex_scan.cpp ****         case 0x67:    
2444:out/quex_scan.cpp ****         case 0x68:    
2445:out/quex_scan.cpp ****         case 0x69:    
2446:out/quex_scan.cpp ****         case 0x6A:    
2447:out/quex_scan.cpp ****         case 0x6B:    
2448:out/quex_scan.cpp ****         case 0x6C:    
2449:out/quex_scan.cpp ****         case 0x6D:    
2450:out/quex_scan.cpp ****         case 0x6E:    
2451:out/quex_scan.cpp ****         case 0x6F:    
2452:out/quex_scan.cpp ****         case 0x70:    
2453:out/quex_scan.cpp ****         case 0x71:    
2454:out/quex_scan.cpp ****         case 0x72:    
2455:out/quex_scan.cpp ****         case 0x73:    
2456:out/quex_scan.cpp ****         case 0x74:    goto _2364;
2457:out/quex_scan.cpp ****         case 0x75:    goto _2394;
2458:out/quex_scan.cpp ****         case 0x76:    
2459:out/quex_scan.cpp ****         case 0x77:    
2460:out/quex_scan.cpp ****         case 0x78:    
2461:out/quex_scan.cpp ****         case 0x79:    
2462:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2463:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 100


2464:out/quex_scan.cpp **** 
2465:out/quex_scan.cpp **** _2615:
2466:out/quex_scan.cpp ****         goto _2536;
2467:out/quex_scan.cpp **** 
2468:out/quex_scan.cpp **** 
2469:out/quex_scan.cpp ****     __quex_assert_no_passage();
2470:out/quex_scan.cpp **** _2394:
2471:out/quex_scan.cpp ****     __quex_debug_state(2394);
2472:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2473:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2474:out/quex_scan.cpp ****     switch( input ) {
2475:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2394), QUEX_LABEL(2616));
2476:out/quex_scan.cpp ****         case 0x30:    
2477:out/quex_scan.cpp ****         case 0x31:    
2478:out/quex_scan.cpp ****         case 0x32:    
2479:out/quex_scan.cpp ****         case 0x33:    
2480:out/quex_scan.cpp ****         case 0x34:    
2481:out/quex_scan.cpp ****         case 0x35:    
2482:out/quex_scan.cpp ****         case 0x36:    
2483:out/quex_scan.cpp ****         case 0x37:    
2484:out/quex_scan.cpp ****         case 0x38:    
2485:out/quex_scan.cpp ****         case 0x39:    
2486:out/quex_scan.cpp ****         case 0x41:    
2487:out/quex_scan.cpp ****         case 0x42:    
2488:out/quex_scan.cpp ****         case 0x43:    
2489:out/quex_scan.cpp ****         case 0x44:    
2490:out/quex_scan.cpp ****         case 0x45:    
2491:out/quex_scan.cpp ****         case 0x46:    
2492:out/quex_scan.cpp ****         case 0x47:    
2493:out/quex_scan.cpp ****         case 0x48:    
2494:out/quex_scan.cpp ****         case 0x49:    
2495:out/quex_scan.cpp ****         case 0x4A:    
2496:out/quex_scan.cpp ****         case 0x4B:    
2497:out/quex_scan.cpp ****         case 0x4C:    
2498:out/quex_scan.cpp ****         case 0x4D:    
2499:out/quex_scan.cpp ****         case 0x4E:    
2500:out/quex_scan.cpp ****         case 0x4F:    
2501:out/quex_scan.cpp ****         case 0x50:    
2502:out/quex_scan.cpp ****         case 0x51:    
2503:out/quex_scan.cpp ****         case 0x52:    
2504:out/quex_scan.cpp ****         case 0x53:    
2505:out/quex_scan.cpp ****         case 0x54:    
2506:out/quex_scan.cpp ****         case 0x55:    
2507:out/quex_scan.cpp ****         case 0x56:    
2508:out/quex_scan.cpp ****         case 0x57:    
2509:out/quex_scan.cpp ****         case 0x58:    
2510:out/quex_scan.cpp ****         case 0x59:    
2511:out/quex_scan.cpp ****         case 0x5A:    
2512:out/quex_scan.cpp ****         case 0x5F:    
2513:out/quex_scan.cpp ****         case 0x61:    
2514:out/quex_scan.cpp ****         case 0x62:    goto _2364;
2515:out/quex_scan.cpp ****         case 0x63:    goto _2395;
2516:out/quex_scan.cpp ****         case 0x64:    
2517:out/quex_scan.cpp ****         case 0x65:    
2518:out/quex_scan.cpp ****         case 0x66:    
2519:out/quex_scan.cpp ****         case 0x67:    
2520:out/quex_scan.cpp ****         case 0x68:    
GAS LISTING /tmp/cc23nfB3.s 			page 101


2521:out/quex_scan.cpp ****         case 0x69:    
2522:out/quex_scan.cpp ****         case 0x6A:    
2523:out/quex_scan.cpp ****         case 0x6B:    
2524:out/quex_scan.cpp ****         case 0x6C:    
2525:out/quex_scan.cpp ****         case 0x6D:    
2526:out/quex_scan.cpp ****         case 0x6E:    
2527:out/quex_scan.cpp ****         case 0x6F:    
2528:out/quex_scan.cpp ****         case 0x70:    
2529:out/quex_scan.cpp ****         case 0x71:    
2530:out/quex_scan.cpp ****         case 0x72:    
2531:out/quex_scan.cpp ****         case 0x73:    
2532:out/quex_scan.cpp ****         case 0x74:    
2533:out/quex_scan.cpp ****         case 0x75:    
2534:out/quex_scan.cpp ****         case 0x76:    
2535:out/quex_scan.cpp ****         case 0x77:    
2536:out/quex_scan.cpp ****         case 0x78:    
2537:out/quex_scan.cpp ****         case 0x79:    
2538:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2539:out/quex_scan.cpp ****     }
2540:out/quex_scan.cpp **** 
2541:out/quex_scan.cpp **** _2616:
2542:out/quex_scan.cpp ****         goto _2536;
2543:out/quex_scan.cpp **** 
2544:out/quex_scan.cpp **** 
2545:out/quex_scan.cpp ****     __quex_assert_no_passage();
2546:out/quex_scan.cpp **** _2395:
2547:out/quex_scan.cpp ****     __quex_debug_state(2395);
2548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2549:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2550:out/quex_scan.cpp ****     switch( input ) {
2551:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2395), QUEX_LABEL(2617));
2552:out/quex_scan.cpp ****         case 0x30:    
2553:out/quex_scan.cpp ****         case 0x31:    
2554:out/quex_scan.cpp ****         case 0x32:    
2555:out/quex_scan.cpp ****         case 0x33:    
2556:out/quex_scan.cpp ****         case 0x34:    
2557:out/quex_scan.cpp ****         case 0x35:    
2558:out/quex_scan.cpp ****         case 0x36:    
2559:out/quex_scan.cpp ****         case 0x37:    
2560:out/quex_scan.cpp ****         case 0x38:    
2561:out/quex_scan.cpp ****         case 0x39:    
2562:out/quex_scan.cpp ****         case 0x41:    
2563:out/quex_scan.cpp ****         case 0x42:    
2564:out/quex_scan.cpp ****         case 0x43:    
2565:out/quex_scan.cpp ****         case 0x44:    
2566:out/quex_scan.cpp ****         case 0x45:    
2567:out/quex_scan.cpp ****         case 0x46:    
2568:out/quex_scan.cpp ****         case 0x47:    
2569:out/quex_scan.cpp ****         case 0x48:    
2570:out/quex_scan.cpp ****         case 0x49:    
2571:out/quex_scan.cpp ****         case 0x4A:    
2572:out/quex_scan.cpp ****         case 0x4B:    
2573:out/quex_scan.cpp ****         case 0x4C:    
2574:out/quex_scan.cpp ****         case 0x4D:    
2575:out/quex_scan.cpp ****         case 0x4E:    
2576:out/quex_scan.cpp ****         case 0x4F:    
2577:out/quex_scan.cpp ****         case 0x50:    
GAS LISTING /tmp/cc23nfB3.s 			page 102


2578:out/quex_scan.cpp ****         case 0x51:    
2579:out/quex_scan.cpp ****         case 0x52:    
2580:out/quex_scan.cpp ****         case 0x53:    
2581:out/quex_scan.cpp ****         case 0x54:    
2582:out/quex_scan.cpp ****         case 0x55:    
2583:out/quex_scan.cpp ****         case 0x56:    
2584:out/quex_scan.cpp ****         case 0x57:    
2585:out/quex_scan.cpp ****         case 0x58:    
2586:out/quex_scan.cpp ****         case 0x59:    
2587:out/quex_scan.cpp ****         case 0x5A:    
2588:out/quex_scan.cpp ****         case 0x5F:    
2589:out/quex_scan.cpp ****         case 0x61:    
2590:out/quex_scan.cpp ****         case 0x62:    
2591:out/quex_scan.cpp ****         case 0x63:    
2592:out/quex_scan.cpp ****         case 0x64:    
2593:out/quex_scan.cpp ****         case 0x65:    
2594:out/quex_scan.cpp ****         case 0x66:    
2595:out/quex_scan.cpp ****         case 0x67:    
2596:out/quex_scan.cpp ****         case 0x68:    
2597:out/quex_scan.cpp ****         case 0x69:    
2598:out/quex_scan.cpp ****         case 0x6A:    
2599:out/quex_scan.cpp ****         case 0x6B:    
2600:out/quex_scan.cpp ****         case 0x6C:    
2601:out/quex_scan.cpp ****         case 0x6D:    
2602:out/quex_scan.cpp ****         case 0x6E:    
2603:out/quex_scan.cpp ****         case 0x6F:    
2604:out/quex_scan.cpp ****         case 0x70:    
2605:out/quex_scan.cpp ****         case 0x71:    
2606:out/quex_scan.cpp ****         case 0x72:    
2607:out/quex_scan.cpp ****         case 0x73:    goto _2364;
2608:out/quex_scan.cpp ****         case 0x74:    goto _2396;
2609:out/quex_scan.cpp ****         case 0x75:    
2610:out/quex_scan.cpp ****         case 0x76:    
2611:out/quex_scan.cpp ****         case 0x77:    
2612:out/quex_scan.cpp ****         case 0x78:    
2613:out/quex_scan.cpp ****         case 0x79:    
2614:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2615:out/quex_scan.cpp ****     }
2616:out/quex_scan.cpp **** 
2617:out/quex_scan.cpp **** _2617:
2618:out/quex_scan.cpp ****         goto _2536;
2619:out/quex_scan.cpp **** 
2620:out/quex_scan.cpp **** 
2621:out/quex_scan.cpp ****     __quex_assert_no_passage();
2622:out/quex_scan.cpp **** _2396:
2623:out/quex_scan.cpp ****     __quex_debug_state(2396);
2624:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2625:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2626:out/quex_scan.cpp ****     switch( input ) {
2627:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2396), QUEX_LABEL(2618));
2628:out/quex_scan.cpp ****         case 0x30:    
2629:out/quex_scan.cpp ****         case 0x31:    
2630:out/quex_scan.cpp ****         case 0x32:    
2631:out/quex_scan.cpp ****         case 0x33:    
2632:out/quex_scan.cpp ****         case 0x34:    
2633:out/quex_scan.cpp ****         case 0x35:    
2634:out/quex_scan.cpp ****         case 0x36:    
GAS LISTING /tmp/cc23nfB3.s 			page 103


2635:out/quex_scan.cpp ****         case 0x37:    
2636:out/quex_scan.cpp ****         case 0x38:    
2637:out/quex_scan.cpp ****         case 0x39:    
2638:out/quex_scan.cpp ****         case 0x41:    
2639:out/quex_scan.cpp ****         case 0x42:    
2640:out/quex_scan.cpp ****         case 0x43:    
2641:out/quex_scan.cpp ****         case 0x44:    
2642:out/quex_scan.cpp ****         case 0x45:    
2643:out/quex_scan.cpp ****         case 0x46:    
2644:out/quex_scan.cpp ****         case 0x47:    
2645:out/quex_scan.cpp ****         case 0x48:    
2646:out/quex_scan.cpp ****         case 0x49:    
2647:out/quex_scan.cpp ****         case 0x4A:    
2648:out/quex_scan.cpp ****         case 0x4B:    
2649:out/quex_scan.cpp ****         case 0x4C:    
2650:out/quex_scan.cpp ****         case 0x4D:    
2651:out/quex_scan.cpp ****         case 0x4E:    
2652:out/quex_scan.cpp ****         case 0x4F:    
2653:out/quex_scan.cpp ****         case 0x50:    
2654:out/quex_scan.cpp ****         case 0x51:    
2655:out/quex_scan.cpp ****         case 0x52:    
2656:out/quex_scan.cpp ****         case 0x53:    
2657:out/quex_scan.cpp ****         case 0x54:    
2658:out/quex_scan.cpp ****         case 0x55:    
2659:out/quex_scan.cpp ****         case 0x56:    
2660:out/quex_scan.cpp ****         case 0x57:    
2661:out/quex_scan.cpp ****         case 0x58:    
2662:out/quex_scan.cpp ****         case 0x59:    
2663:out/quex_scan.cpp ****         case 0x5A:    
2664:out/quex_scan.cpp ****         case 0x5F:    
2665:out/quex_scan.cpp ****         case 0x61:    
2666:out/quex_scan.cpp ****         case 0x62:    
2667:out/quex_scan.cpp ****         case 0x63:    
2668:out/quex_scan.cpp ****         case 0x64:    
2669:out/quex_scan.cpp ****         case 0x65:    
2670:out/quex_scan.cpp ****         case 0x66:    
2671:out/quex_scan.cpp ****         case 0x67:    
2672:out/quex_scan.cpp ****         case 0x68:    
2673:out/quex_scan.cpp ****         case 0x69:    
2674:out/quex_scan.cpp ****         case 0x6A:    
2675:out/quex_scan.cpp ****         case 0x6B:    
2676:out/quex_scan.cpp ****         case 0x6C:    
2677:out/quex_scan.cpp ****         case 0x6D:    
2678:out/quex_scan.cpp ****         case 0x6E:    
2679:out/quex_scan.cpp ****         case 0x6F:    
2680:out/quex_scan.cpp ****         case 0x70:    
2681:out/quex_scan.cpp ****         case 0x71:    
2682:out/quex_scan.cpp ****         case 0x72:    
2683:out/quex_scan.cpp ****         case 0x73:    
2684:out/quex_scan.cpp ****         case 0x74:    
2685:out/quex_scan.cpp ****         case 0x75:    
2686:out/quex_scan.cpp ****         case 0x76:    
2687:out/quex_scan.cpp ****         case 0x77:    
2688:out/quex_scan.cpp ****         case 0x78:    
2689:out/quex_scan.cpp ****         case 0x79:    
2690:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
2691:out/quex_scan.cpp ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 104


2692:out/quex_scan.cpp **** 
2693:out/quex_scan.cpp **** _2618:
2694:out/quex_scan.cpp ****         goto _2619;
2695:out/quex_scan.cpp **** 
2696:out/quex_scan.cpp **** 
2697:out/quex_scan.cpp ****     __quex_assert_no_passage();
2698:out/quex_scan.cpp **** _2404:
2699:out/quex_scan.cpp ****     __quex_debug_state(2404);
2700:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2701:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2702:out/quex_scan.cpp ****     switch( input ) {
2703:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2404), QUEX_LABEL(2620));
2704:out/quex_scan.cpp ****         case 0x61:    goto _2405;
2705:out/quex_scan.cpp ****     }
2706:out/quex_scan.cpp **** 
2707:out/quex_scan.cpp **** _2620:
2708:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2709:out/quex_scan.cpp **** 
2710:out/quex_scan.cpp **** 
2711:out/quex_scan.cpp ****     __quex_assert_no_passage();
2712:out/quex_scan.cpp **** _2405:
2713:out/quex_scan.cpp ****     __quex_debug_state(2405);
2714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2715:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2716:out/quex_scan.cpp ****     switch( input ) {
2717:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2405), QUEX_LABEL(2621));
2718:out/quex_scan.cpp ****         case 0x67:    goto _2406;
2719:out/quex_scan.cpp ****     }
2720:out/quex_scan.cpp **** 
2721:out/quex_scan.cpp **** _2621:
2722:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2723:out/quex_scan.cpp **** 
2724:out/quex_scan.cpp **** 
2725:out/quex_scan.cpp ****     __quex_assert_no_passage();
2726:out/quex_scan.cpp **** _2406:
2727:out/quex_scan.cpp ****     __quex_debug_state(2406);
2728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2729:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2730:out/quex_scan.cpp ****     switch( input ) {
2731:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2406), QUEX_LABEL(2622));
2732:out/quex_scan.cpp ****         case 0x6D:    goto _2407;
2733:out/quex_scan.cpp ****     }
2734:out/quex_scan.cpp **** 
2735:out/quex_scan.cpp **** _2622:
2736:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2737:out/quex_scan.cpp **** 
2738:out/quex_scan.cpp **** 
2739:out/quex_scan.cpp ****     __quex_assert_no_passage();
2740:out/quex_scan.cpp **** _2407:
2741:out/quex_scan.cpp ****     __quex_debug_state(2407);
2742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2743:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2744:out/quex_scan.cpp ****     switch( input ) {
2745:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2407), QUEX_LABEL(2623));
2746:out/quex_scan.cpp ****         case 0x61:    goto _2624;
2747:out/quex_scan.cpp ****     }
2748:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 105


2749:out/quex_scan.cpp **** _2623:
2750:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2751:out/quex_scan.cpp **** 
2752:out/quex_scan.cpp **** 
2753:out/quex_scan.cpp ****     __quex_assert_no_passage();
2754:out/quex_scan.cpp **** _2409:
2755:out/quex_scan.cpp ****     __quex_debug_state(2409);
2756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2757:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2758:out/quex_scan.cpp ****     switch( input ) {
2759:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2409), QUEX_LABEL(2625));
2760:out/quex_scan.cpp ****         case 0x66:    goto _2410;
2761:out/quex_scan.cpp ****     }
2762:out/quex_scan.cpp **** 
2763:out/quex_scan.cpp **** _2625:
2764:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2765:out/quex_scan.cpp **** 
2766:out/quex_scan.cpp **** 
2767:out/quex_scan.cpp ****     __quex_assert_no_passage();
2768:out/quex_scan.cpp **** _2410:
2769:out/quex_scan.cpp ****     __quex_debug_state(2410);
2770:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2771:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2772:out/quex_scan.cpp ****     switch( input ) {
2773:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2410), QUEX_LABEL(2626));
2774:out/quex_scan.cpp ****         case 0x69:    goto _2411;
2775:out/quex_scan.cpp ****     }
2776:out/quex_scan.cpp **** 
2777:out/quex_scan.cpp **** _2626:
2778:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2779:out/quex_scan.cpp **** 
2780:out/quex_scan.cpp **** 
2781:out/quex_scan.cpp ****     __quex_assert_no_passage();
2782:out/quex_scan.cpp **** _2411:
2783:out/quex_scan.cpp ****     __quex_debug_state(2411);
2784:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2785:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2786:out/quex_scan.cpp ****     switch( input ) {
2787:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2411), QUEX_LABEL(2627));
2788:out/quex_scan.cpp ****         case 0x6E:    goto _2412;
2789:out/quex_scan.cpp ****     }
2790:out/quex_scan.cpp **** 
2791:out/quex_scan.cpp **** _2627:
2792:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2793:out/quex_scan.cpp **** 
2794:out/quex_scan.cpp **** 
2795:out/quex_scan.cpp ****     __quex_assert_no_passage();
2796:out/quex_scan.cpp **** _2412:
2797:out/quex_scan.cpp ****     __quex_debug_state(2412);
2798:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2799:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2800:out/quex_scan.cpp ****     switch( input ) {
2801:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2412), QUEX_LABEL(2628));
2802:out/quex_scan.cpp ****         case 0x65:    goto _2629;
2803:out/quex_scan.cpp ****     }
2804:out/quex_scan.cpp **** 
2805:out/quex_scan.cpp **** _2628:
GAS LISTING /tmp/cc23nfB3.s 			page 106


2806:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2807:out/quex_scan.cpp **** 
2808:out/quex_scan.cpp **** 
2809:out/quex_scan.cpp ****     __quex_assert_no_passage();
2810:out/quex_scan.cpp **** _2414:
2811:out/quex_scan.cpp ****     __quex_debug_state(2414);
2812:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2813:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2814:out/quex_scan.cpp ****     switch( input ) {
2815:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2414), QUEX_LABEL(2630));
2816:out/quex_scan.cpp ****         case 0x64:    goto _2424;
2817:out/quex_scan.cpp ****     }
2818:out/quex_scan.cpp **** 
2819:out/quex_scan.cpp **** _2630:
2820:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2821:out/quex_scan.cpp **** 
2822:out/quex_scan.cpp **** 
2823:out/quex_scan.cpp ****     __quex_assert_no_passage();
2824:out/quex_scan.cpp **** _2415:
2825:out/quex_scan.cpp ****     __quex_debug_state(2415);
2826:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2827:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2828:out/quex_scan.cpp ****     switch( input ) {
2829:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2415), QUEX_LABEL(2631));
2830:out/quex_scan.cpp ****         case 0x72:    goto _2421;
2831:out/quex_scan.cpp ****     }
2832:out/quex_scan.cpp **** 
2833:out/quex_scan.cpp **** _2631:
2834:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2835:out/quex_scan.cpp **** 
2836:out/quex_scan.cpp **** 
2837:out/quex_scan.cpp ****     __quex_assert_no_passage();
2838:out/quex_scan.cpp **** _2416:
2839:out/quex_scan.cpp ****     __quex_debug_state(2416);
2840:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2841:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2842:out/quex_scan.cpp ****     switch( input ) {
2843:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2416), QUEX_LABEL(2632));
2844:out/quex_scan.cpp ****         case 0x69:    goto _2417;
2845:out/quex_scan.cpp ****         case 0x73:    goto _2418;
2846:out/quex_scan.cpp ****     }
2847:out/quex_scan.cpp **** 
2848:out/quex_scan.cpp **** _2632:
2849:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2850:out/quex_scan.cpp **** 
2851:out/quex_scan.cpp **** 
2852:out/quex_scan.cpp ****     __quex_assert_no_passage();
2853:out/quex_scan.cpp **** _2417:
2854:out/quex_scan.cpp ****     __quex_debug_state(2417);
2855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2856:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2857:out/quex_scan.cpp ****     switch( input ) {
2858:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2417), QUEX_LABEL(2633));
2859:out/quex_scan.cpp ****         case 0x66:    goto _2634;
2860:out/quex_scan.cpp ****     }
2861:out/quex_scan.cpp **** 
2862:out/quex_scan.cpp **** _2633:
GAS LISTING /tmp/cc23nfB3.s 			page 107


2863:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2864:out/quex_scan.cpp **** 
2865:out/quex_scan.cpp **** 
2866:out/quex_scan.cpp ****     __quex_assert_no_passage();
2867:out/quex_scan.cpp **** _2418:
2868:out/quex_scan.cpp ****     __quex_debug_state(2418);
2869:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2870:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2871:out/quex_scan.cpp ****     switch( input ) {
2872:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2418), QUEX_LABEL(2635));
2873:out/quex_scan.cpp ****         case 0x65:    goto _2636;
2874:out/quex_scan.cpp ****     }
2875:out/quex_scan.cpp **** 
2876:out/quex_scan.cpp **** _2635:
2877:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2878:out/quex_scan.cpp **** 
2879:out/quex_scan.cpp **** 
2880:out/quex_scan.cpp ****     __quex_assert_no_passage();
2881:out/quex_scan.cpp **** _2421:
2882:out/quex_scan.cpp ****     __quex_debug_state(2421);
2883:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2884:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2885:out/quex_scan.cpp ****     switch( input ) {
2886:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2421), QUEX_LABEL(2637));
2887:out/quex_scan.cpp ****         case 0x6F:    goto _2422;
2888:out/quex_scan.cpp ****     }
2889:out/quex_scan.cpp **** 
2890:out/quex_scan.cpp **** _2637:
2891:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2892:out/quex_scan.cpp **** 
2893:out/quex_scan.cpp **** 
2894:out/quex_scan.cpp ****     __quex_assert_no_passage();
2895:out/quex_scan.cpp **** _2422:
2896:out/quex_scan.cpp ****     __quex_debug_state(2422);
2897:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2898:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2899:out/quex_scan.cpp ****     switch( input ) {
2900:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2422), QUEX_LABEL(2638));
2901:out/quex_scan.cpp ****         case 0x72:    goto _2639;
2902:out/quex_scan.cpp ****     }
2903:out/quex_scan.cpp **** 
2904:out/quex_scan.cpp **** _2638:
2905:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2906:out/quex_scan.cpp **** 
2907:out/quex_scan.cpp **** 
2908:out/quex_scan.cpp ****     __quex_assert_no_passage();
2909:out/quex_scan.cpp **** _2424:
2910:out/quex_scan.cpp ****     __quex_debug_state(2424);
2911:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2912:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2913:out/quex_scan.cpp ****     switch( input ) {
2914:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2424), QUEX_LABEL(2640));
2915:out/quex_scan.cpp ****         case 0x69:    goto _2425;
2916:out/quex_scan.cpp ****     }
2917:out/quex_scan.cpp **** 
2918:out/quex_scan.cpp **** _2640:
2919:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
GAS LISTING /tmp/cc23nfB3.s 			page 108


2920:out/quex_scan.cpp **** 
2921:out/quex_scan.cpp **** 
2922:out/quex_scan.cpp ****     __quex_assert_no_passage();
2923:out/quex_scan.cpp **** _2425:
2924:out/quex_scan.cpp ****     __quex_debug_state(2425);
2925:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2926:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2927:out/quex_scan.cpp ****     switch( input ) {
2928:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2425), QUEX_LABEL(2641));
2929:out/quex_scan.cpp ****         case 0x66:    goto _2642;
2930:out/quex_scan.cpp ****     }
2931:out/quex_scan.cpp **** 
2932:out/quex_scan.cpp **** _2641:
2933:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2934:out/quex_scan.cpp **** 
2935:out/quex_scan.cpp **** 
2936:out/quex_scan.cpp ****     __quex_assert_no_passage();
2937:out/quex_scan.cpp **** _2427:
2938:out/quex_scan.cpp ****     __quex_debug_state(2427);
2939:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2940:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2941:out/quex_scan.cpp ****     last_acceptance                = QUEX_LABEL(2643); /* Terminal 171 */
2942:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
2943:out/quex_scan.cpp ****     switch( input ) {
2944:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2427), QUEX_LABEL(2644));
2945:out/quex_scan.cpp ****         case 0x64:    goto _2441;
2946:out/quex_scan.cpp ****         case 0x6E:    goto _2440;
2947:out/quex_scan.cpp ****     }
2948:out/quex_scan.cpp **** 
2949:out/quex_scan.cpp **** _2644:
2950:out/quex_scan.cpp ****         goto _2643;
2951:out/quex_scan.cpp **** 
2952:out/quex_scan.cpp **** 
2953:out/quex_scan.cpp ****     __quex_assert_no_passage();
2954:out/quex_scan.cpp **** _2428:
2955:out/quex_scan.cpp ****     __quex_debug_state(2428);
2956:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2957:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2958:out/quex_scan.cpp ****     switch( input ) {
2959:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2428), QUEX_LABEL(2645));
2960:out/quex_scan.cpp ****         case 0x63:    goto _2429;
2961:out/quex_scan.cpp ****     }
2962:out/quex_scan.cpp **** 
2963:out/quex_scan.cpp **** _2645:
2964:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2965:out/quex_scan.cpp **** 
2966:out/quex_scan.cpp **** 
2967:out/quex_scan.cpp ****     __quex_assert_no_passage();
2968:out/quex_scan.cpp **** _2429:
2969:out/quex_scan.cpp ****     __quex_debug_state(2429);
2970:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2971:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2972:out/quex_scan.cpp ****     switch( input ) {
2973:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2429), QUEX_LABEL(2646));
2974:out/quex_scan.cpp ****         case 0x6C:    goto _2430;
2975:out/quex_scan.cpp ****     }
2976:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 109


2977:out/quex_scan.cpp **** _2646:
2978:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2979:out/quex_scan.cpp **** 
2980:out/quex_scan.cpp **** 
2981:out/quex_scan.cpp ****     __quex_assert_no_passage();
2982:out/quex_scan.cpp **** _2430:
2983:out/quex_scan.cpp ****     __quex_debug_state(2430);
2984:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2985:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
2986:out/quex_scan.cpp ****     switch( input ) {
2987:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2430), QUEX_LABEL(2647));
2988:out/quex_scan.cpp ****         case 0x75:    goto _2431;
2989:out/quex_scan.cpp ****     }
2990:out/quex_scan.cpp **** 
2991:out/quex_scan.cpp **** _2647:
2992:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
2993:out/quex_scan.cpp **** 
2994:out/quex_scan.cpp **** 
2995:out/quex_scan.cpp ****     __quex_assert_no_passage();
2996:out/quex_scan.cpp **** _2431:
2997:out/quex_scan.cpp ****     __quex_debug_state(2431);
2998:out/quex_scan.cpp ****     ++(me->buffer._input_p);
2999:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3000:out/quex_scan.cpp ****     switch( input ) {
3001:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2431), QUEX_LABEL(2648));
3002:out/quex_scan.cpp ****         case 0x64:    goto _2432;
3003:out/quex_scan.cpp ****     }
3004:out/quex_scan.cpp **** 
3005:out/quex_scan.cpp **** _2648:
3006:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3007:out/quex_scan.cpp **** 
3008:out/quex_scan.cpp **** 
3009:out/quex_scan.cpp ****     __quex_assert_no_passage();
3010:out/quex_scan.cpp **** _2432:
3011:out/quex_scan.cpp ****     __quex_debug_state(2432);
3012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3013:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3014:out/quex_scan.cpp ****     switch( input ) {
3015:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2432), QUEX_LABEL(2649));
3016:out/quex_scan.cpp ****         case 0x65:    goto _2433;
3017:out/quex_scan.cpp ****     }
3018:out/quex_scan.cpp **** 
3019:out/quex_scan.cpp **** _2649:
3020:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3021:out/quex_scan.cpp **** 
3022:out/quex_scan.cpp **** 
3023:out/quex_scan.cpp ****     __quex_assert_no_passage();
3024:out/quex_scan.cpp **** _2434:
3025:out/quex_scan.cpp ****     __quex_debug_state(2434);
3026:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3027:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3028:out/quex_scan.cpp ****     if( input < 0x3E) {
3029:out/quex_scan.cpp ****         if( input >= 0x2 ) {
3030:out/quex_scan.cpp ****             goto _2438;    /* [\2, '='] */
3031:out/quex_scan.cpp ****         } else if( input == 0x1 ) {
3032:out/quex_scan.cpp ****         } else {
3033:out/quex_scan.cpp ****             QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2434), QUEX_LABEL(2650));    /* \0 */
GAS LISTING /tmp/cc23nfB3.s 			page 110


3034:out/quex_scan.cpp **** }
3035:out/quex_scan.cpp ****     } else {
3036:out/quex_scan.cpp ****         if( input == 0x3E ) {
3037:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
3038:out/quex_scan.cpp ****             goto _2438;    /* ['?', 'ÿ'] */
3039:out/quex_scan.cpp ****         }
3040:out/quex_scan.cpp ****     }
3041:out/quex_scan.cpp **** 
3042:out/quex_scan.cpp **** _2650:
3043:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3044:out/quex_scan.cpp **** 
3045:out/quex_scan.cpp **** 
3046:out/quex_scan.cpp ****     __quex_assert_no_passage();
3047:out/quex_scan.cpp **** _2435:
3048:out/quex_scan.cpp ****     __quex_debug_state(2435);
3049:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3050:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3051:out/quex_scan.cpp ****     if( input < 0x22) {
3052:out/quex_scan.cpp ****         switch( input ) {
3053:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2435), QUEX_LABEL(2651));
3054:out/quex_scan.cpp ****             case 0x2:     
3055:out/quex_scan.cpp ****             case 0x3:     
3056:out/quex_scan.cpp ****             case 0x4:     
3057:out/quex_scan.cpp ****             case 0x5:     
3058:out/quex_scan.cpp ****             case 0x6:     
3059:out/quex_scan.cpp ****             case 0x7:     
3060:out/quex_scan.cpp ****             case 0x8:     
3061:out/quex_scan.cpp ****             case 0x9:     
3062:out/quex_scan.cpp ****             case 0xA:     
3063:out/quex_scan.cpp ****             case 0xB:     
3064:out/quex_scan.cpp ****             case 0xC:     
3065:out/quex_scan.cpp ****             case 0xD:     
3066:out/quex_scan.cpp ****             case 0xE:     
3067:out/quex_scan.cpp ****             case 0xF:     
3068:out/quex_scan.cpp ****             case 0x10:    
3069:out/quex_scan.cpp ****             case 0x11:    
3070:out/quex_scan.cpp ****             case 0x12:    
3071:out/quex_scan.cpp ****             case 0x13:    
3072:out/quex_scan.cpp ****             case 0x14:    
3073:out/quex_scan.cpp ****             case 0x15:    
3074:out/quex_scan.cpp ****             case 0x16:    
3075:out/quex_scan.cpp ****             case 0x17:    
3076:out/quex_scan.cpp ****             case 0x18:    
3077:out/quex_scan.cpp ****             case 0x19:    
3078:out/quex_scan.cpp ****             case 0x1A:    
3079:out/quex_scan.cpp ****             case 0x1B:    
3080:out/quex_scan.cpp ****             case 0x1C:    
3081:out/quex_scan.cpp ****             case 0x1D:    
3082:out/quex_scan.cpp ****             case 0x1E:    
3083:out/quex_scan.cpp ****             case 0x1F:    
3084:out/quex_scan.cpp ****             case 0x20:    
3085:out/quex_scan.cpp ****             case 0x21:    goto _2436;
3086:out/quex_scan.cpp ****         }
3087:out/quex_scan.cpp ****     } else {
3088:out/quex_scan.cpp ****         if( input == 0x22 ) {
3089:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
3090:out/quex_scan.cpp ****             goto _2436;    /* ['#', 'ÿ'] */
GAS LISTING /tmp/cc23nfB3.s 			page 111


3091:out/quex_scan.cpp ****         }
3092:out/quex_scan.cpp ****     }
3093:out/quex_scan.cpp **** 
3094:out/quex_scan.cpp **** _2651:
3095:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3096:out/quex_scan.cpp **** 
3097:out/quex_scan.cpp **** 
3098:out/quex_scan.cpp ****     __quex_assert_no_passage();
3099:out/quex_scan.cpp **** _2440:
3100:out/quex_scan.cpp ****     __quex_debug_state(2440);
3101:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3102:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3103:out/quex_scan.cpp ****     switch( input ) {
3104:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2440), QUEX_LABEL(2652));
3105:out/quex_scan.cpp ****         case 0x64:    goto _2444;
3106:out/quex_scan.cpp ****     }
3107:out/quex_scan.cpp **** 
3108:out/quex_scan.cpp **** _2652:
3109:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3110:out/quex_scan.cpp **** 
3111:out/quex_scan.cpp **** 
3112:out/quex_scan.cpp ****     __quex_assert_no_passage();
3113:out/quex_scan.cpp **** _2441:
3114:out/quex_scan.cpp ****     __quex_debug_state(2441);
3115:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3116:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3117:out/quex_scan.cpp ****     switch( input ) {
3118:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2441), QUEX_LABEL(2653));
3119:out/quex_scan.cpp ****         case 0x65:    goto _2442;
3120:out/quex_scan.cpp ****     }
3121:out/quex_scan.cpp **** 
3122:out/quex_scan.cpp **** _2653:
3123:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3124:out/quex_scan.cpp **** 
3125:out/quex_scan.cpp **** 
3126:out/quex_scan.cpp ****     __quex_assert_no_passage();
3127:out/quex_scan.cpp **** _2442:
3128:out/quex_scan.cpp ****     __quex_debug_state(2442);
3129:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3130:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3131:out/quex_scan.cpp ****     switch( input ) {
3132:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2442), QUEX_LABEL(2654));
3133:out/quex_scan.cpp ****         case 0x66:    goto _2655;
3134:out/quex_scan.cpp ****     }
3135:out/quex_scan.cpp **** 
3136:out/quex_scan.cpp **** _2654:
3137:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3138:out/quex_scan.cpp **** 
3139:out/quex_scan.cpp **** 
3140:out/quex_scan.cpp ****     __quex_assert_no_passage();
3141:out/quex_scan.cpp **** _2444:
3142:out/quex_scan.cpp ****     __quex_debug_state(2444);
3143:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3144:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3145:out/quex_scan.cpp ****     switch( input ) {
3146:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2444), QUEX_LABEL(2656));
3147:out/quex_scan.cpp ****         case 0x65:    goto _2445;
GAS LISTING /tmp/cc23nfB3.s 			page 112


3148:out/quex_scan.cpp ****     }
3149:out/quex_scan.cpp **** 
3150:out/quex_scan.cpp **** _2656:
3151:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3152:out/quex_scan.cpp **** 
3153:out/quex_scan.cpp **** 
3154:out/quex_scan.cpp ****     __quex_assert_no_passage();
3155:out/quex_scan.cpp **** _2445:
3156:out/quex_scan.cpp ****     __quex_debug_state(2445);
3157:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3158:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3159:out/quex_scan.cpp ****     switch( input ) {
3160:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2445), QUEX_LABEL(2657));
3161:out/quex_scan.cpp ****         case 0x66:    goto _2658;
3162:out/quex_scan.cpp ****     }
3163:out/quex_scan.cpp **** 
3164:out/quex_scan.cpp **** _2657:
3165:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
3166:out/quex_scan.cpp **** 
3167:out/quex_scan.cpp **** 
3168:out/quex_scan.cpp ****     __quex_assert_no_passage();
3169:out/quex_scan.cpp **** _2447:
3170:out/quex_scan.cpp ****     __quex_debug_state(2447);
3171:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3172:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3173:out/quex_scan.cpp ****     switch( input ) {
3174:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2447), QUEX_LABEL(2659));
3175:out/quex_scan.cpp ****         case 0x30:    
3176:out/quex_scan.cpp ****         case 0x31:    
3177:out/quex_scan.cpp ****         case 0x32:    
3178:out/quex_scan.cpp ****         case 0x33:    
3179:out/quex_scan.cpp ****         case 0x34:    
3180:out/quex_scan.cpp ****         case 0x35:    
3181:out/quex_scan.cpp ****         case 0x36:    
3182:out/quex_scan.cpp ****         case 0x37:    
3183:out/quex_scan.cpp ****         case 0x38:    
3184:out/quex_scan.cpp ****         case 0x39:    
3185:out/quex_scan.cpp ****         case 0x41:    
3186:out/quex_scan.cpp ****         case 0x42:    
3187:out/quex_scan.cpp ****         case 0x43:    
3188:out/quex_scan.cpp ****         case 0x44:    
3189:out/quex_scan.cpp ****         case 0x45:    
3190:out/quex_scan.cpp ****         case 0x46:    
3191:out/quex_scan.cpp ****         case 0x47:    
3192:out/quex_scan.cpp ****         case 0x48:    
3193:out/quex_scan.cpp ****         case 0x49:    
3194:out/quex_scan.cpp ****         case 0x4A:    
3195:out/quex_scan.cpp ****         case 0x4B:    
3196:out/quex_scan.cpp ****         case 0x4C:    
3197:out/quex_scan.cpp ****         case 0x4D:    
3198:out/quex_scan.cpp ****         case 0x4E:    
3199:out/quex_scan.cpp ****         case 0x4F:    
3200:out/quex_scan.cpp ****         case 0x50:    
3201:out/quex_scan.cpp ****         case 0x51:    
3202:out/quex_scan.cpp ****         case 0x52:    
3203:out/quex_scan.cpp ****         case 0x53:    
3204:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 113


3205:out/quex_scan.cpp ****         case 0x55:    
3206:out/quex_scan.cpp ****         case 0x56:    
3207:out/quex_scan.cpp ****         case 0x57:    
3208:out/quex_scan.cpp ****         case 0x58:    
3209:out/quex_scan.cpp ****         case 0x59:    
3210:out/quex_scan.cpp ****         case 0x5A:    
3211:out/quex_scan.cpp ****         case 0x5F:    
3212:out/quex_scan.cpp ****         case 0x61:    
3213:out/quex_scan.cpp ****         case 0x62:    
3214:out/quex_scan.cpp ****         case 0x63:    
3215:out/quex_scan.cpp ****         case 0x64:    
3216:out/quex_scan.cpp ****         case 0x65:    
3217:out/quex_scan.cpp ****         case 0x66:    
3218:out/quex_scan.cpp ****         case 0x67:    
3219:out/quex_scan.cpp ****         case 0x68:    goto _2364;
3220:out/quex_scan.cpp ****         case 0x69:    goto _2448;
3221:out/quex_scan.cpp ****         case 0x6A:    
3222:out/quex_scan.cpp ****         case 0x6B:    
3223:out/quex_scan.cpp ****         case 0x6C:    
3224:out/quex_scan.cpp ****         case 0x6D:    
3225:out/quex_scan.cpp ****         case 0x6E:    
3226:out/quex_scan.cpp ****         case 0x6F:    
3227:out/quex_scan.cpp ****         case 0x70:    
3228:out/quex_scan.cpp ****         case 0x71:    
3229:out/quex_scan.cpp ****         case 0x72:    
3230:out/quex_scan.cpp ****         case 0x73:    
3231:out/quex_scan.cpp ****         case 0x74:    
3232:out/quex_scan.cpp ****         case 0x75:    
3233:out/quex_scan.cpp ****         case 0x76:    
3234:out/quex_scan.cpp ****         case 0x77:    
3235:out/quex_scan.cpp ****         case 0x78:    
3236:out/quex_scan.cpp ****         case 0x79:    
3237:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3238:out/quex_scan.cpp ****     }
3239:out/quex_scan.cpp **** 
3240:out/quex_scan.cpp **** _2659:
3241:out/quex_scan.cpp ****         goto _2536;
3242:out/quex_scan.cpp **** 
3243:out/quex_scan.cpp **** 
3244:out/quex_scan.cpp ****     __quex_assert_no_passage();
3245:out/quex_scan.cpp **** _2448:
3246:out/quex_scan.cpp ****     __quex_debug_state(2448);
3247:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3248:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3249:out/quex_scan.cpp ****     switch( input ) {
3250:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2448), QUEX_LABEL(2660));
3251:out/quex_scan.cpp ****         case 0x30:    
3252:out/quex_scan.cpp ****         case 0x31:    
3253:out/quex_scan.cpp ****         case 0x32:    
3254:out/quex_scan.cpp ****         case 0x33:    
3255:out/quex_scan.cpp ****         case 0x34:    
3256:out/quex_scan.cpp ****         case 0x35:    
3257:out/quex_scan.cpp ****         case 0x36:    
3258:out/quex_scan.cpp ****         case 0x37:    
3259:out/quex_scan.cpp ****         case 0x38:    
3260:out/quex_scan.cpp ****         case 0x39:    
3261:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 114


3262:out/quex_scan.cpp ****         case 0x42:    
3263:out/quex_scan.cpp ****         case 0x43:    
3264:out/quex_scan.cpp ****         case 0x44:    
3265:out/quex_scan.cpp ****         case 0x45:    
3266:out/quex_scan.cpp ****         case 0x46:    
3267:out/quex_scan.cpp ****         case 0x47:    
3268:out/quex_scan.cpp ****         case 0x48:    
3269:out/quex_scan.cpp ****         case 0x49:    
3270:out/quex_scan.cpp ****         case 0x4A:    
3271:out/quex_scan.cpp ****         case 0x4B:    
3272:out/quex_scan.cpp ****         case 0x4C:    
3273:out/quex_scan.cpp ****         case 0x4D:    
3274:out/quex_scan.cpp ****         case 0x4E:    
3275:out/quex_scan.cpp ****         case 0x4F:    
3276:out/quex_scan.cpp ****         case 0x50:    
3277:out/quex_scan.cpp ****         case 0x51:    
3278:out/quex_scan.cpp ****         case 0x52:    
3279:out/quex_scan.cpp ****         case 0x53:    
3280:out/quex_scan.cpp ****         case 0x54:    
3281:out/quex_scan.cpp ****         case 0x55:    
3282:out/quex_scan.cpp ****         case 0x56:    
3283:out/quex_scan.cpp ****         case 0x57:    
3284:out/quex_scan.cpp ****         case 0x58:    
3285:out/quex_scan.cpp ****         case 0x59:    
3286:out/quex_scan.cpp ****         case 0x5A:    
3287:out/quex_scan.cpp ****         case 0x5F:    
3288:out/quex_scan.cpp ****         case 0x61:    
3289:out/quex_scan.cpp ****         case 0x62:    
3290:out/quex_scan.cpp ****         case 0x63:    
3291:out/quex_scan.cpp ****         case 0x64:    
3292:out/quex_scan.cpp ****         case 0x65:    
3293:out/quex_scan.cpp ****         case 0x66:    
3294:out/quex_scan.cpp ****         case 0x67:    
3295:out/quex_scan.cpp ****         case 0x68:    
3296:out/quex_scan.cpp ****         case 0x69:    
3297:out/quex_scan.cpp ****         case 0x6A:    
3298:out/quex_scan.cpp ****         case 0x6B:    goto _2364;
3299:out/quex_scan.cpp ****         case 0x6C:    goto _2449;
3300:out/quex_scan.cpp ****         case 0x6D:    
3301:out/quex_scan.cpp ****         case 0x6E:    
3302:out/quex_scan.cpp ****         case 0x6F:    
3303:out/quex_scan.cpp ****         case 0x70:    
3304:out/quex_scan.cpp ****         case 0x71:    
3305:out/quex_scan.cpp ****         case 0x72:    
3306:out/quex_scan.cpp ****         case 0x73:    
3307:out/quex_scan.cpp ****         case 0x74:    
3308:out/quex_scan.cpp ****         case 0x75:    
3309:out/quex_scan.cpp ****         case 0x76:    
3310:out/quex_scan.cpp ****         case 0x77:    
3311:out/quex_scan.cpp ****         case 0x78:    
3312:out/quex_scan.cpp ****         case 0x79:    
3313:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3314:out/quex_scan.cpp ****     }
3315:out/quex_scan.cpp **** 
3316:out/quex_scan.cpp **** _2660:
3317:out/quex_scan.cpp ****         goto _2536;
3318:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 115


3319:out/quex_scan.cpp **** 
3320:out/quex_scan.cpp ****     __quex_assert_no_passage();
3321:out/quex_scan.cpp **** _2449:
3322:out/quex_scan.cpp ****     __quex_debug_state(2449);
3323:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3324:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3325:out/quex_scan.cpp ****     switch( input ) {
3326:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2449), QUEX_LABEL(2661));
3327:out/quex_scan.cpp ****         case 0x30:    
3328:out/quex_scan.cpp ****         case 0x31:    
3329:out/quex_scan.cpp ****         case 0x32:    
3330:out/quex_scan.cpp ****         case 0x33:    
3331:out/quex_scan.cpp ****         case 0x34:    
3332:out/quex_scan.cpp ****         case 0x35:    
3333:out/quex_scan.cpp ****         case 0x36:    
3334:out/quex_scan.cpp ****         case 0x37:    
3335:out/quex_scan.cpp ****         case 0x38:    
3336:out/quex_scan.cpp ****         case 0x39:    
3337:out/quex_scan.cpp ****         case 0x41:    
3338:out/quex_scan.cpp ****         case 0x42:    
3339:out/quex_scan.cpp ****         case 0x43:    
3340:out/quex_scan.cpp ****         case 0x44:    
3341:out/quex_scan.cpp ****         case 0x45:    
3342:out/quex_scan.cpp ****         case 0x46:    
3343:out/quex_scan.cpp ****         case 0x47:    
3344:out/quex_scan.cpp ****         case 0x48:    
3345:out/quex_scan.cpp ****         case 0x49:    
3346:out/quex_scan.cpp ****         case 0x4A:    
3347:out/quex_scan.cpp ****         case 0x4B:    
3348:out/quex_scan.cpp ****         case 0x4C:    
3349:out/quex_scan.cpp ****         case 0x4D:    
3350:out/quex_scan.cpp ****         case 0x4E:    
3351:out/quex_scan.cpp ****         case 0x4F:    
3352:out/quex_scan.cpp ****         case 0x50:    
3353:out/quex_scan.cpp ****         case 0x51:    
3354:out/quex_scan.cpp ****         case 0x52:    
3355:out/quex_scan.cpp ****         case 0x53:    
3356:out/quex_scan.cpp ****         case 0x54:    
3357:out/quex_scan.cpp ****         case 0x55:    
3358:out/quex_scan.cpp ****         case 0x56:    
3359:out/quex_scan.cpp ****         case 0x57:    
3360:out/quex_scan.cpp ****         case 0x58:    
3361:out/quex_scan.cpp ****         case 0x59:    
3362:out/quex_scan.cpp ****         case 0x5A:    
3363:out/quex_scan.cpp ****         case 0x5F:    
3364:out/quex_scan.cpp ****         case 0x61:    
3365:out/quex_scan.cpp ****         case 0x62:    
3366:out/quex_scan.cpp ****         case 0x63:    
3367:out/quex_scan.cpp ****         case 0x64:    goto _2364;
3368:out/quex_scan.cpp ****         case 0x65:    goto _2450;
3369:out/quex_scan.cpp ****         case 0x66:    
3370:out/quex_scan.cpp ****         case 0x67:    
3371:out/quex_scan.cpp ****         case 0x68:    
3372:out/quex_scan.cpp ****         case 0x69:    
3373:out/quex_scan.cpp ****         case 0x6A:    
3374:out/quex_scan.cpp ****         case 0x6B:    
3375:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 116


3376:out/quex_scan.cpp ****         case 0x6D:    
3377:out/quex_scan.cpp ****         case 0x6E:    
3378:out/quex_scan.cpp ****         case 0x6F:    
3379:out/quex_scan.cpp ****         case 0x70:    
3380:out/quex_scan.cpp ****         case 0x71:    
3381:out/quex_scan.cpp ****         case 0x72:    
3382:out/quex_scan.cpp ****         case 0x73:    
3383:out/quex_scan.cpp ****         case 0x74:    
3384:out/quex_scan.cpp ****         case 0x75:    
3385:out/quex_scan.cpp ****         case 0x76:    
3386:out/quex_scan.cpp ****         case 0x77:    
3387:out/quex_scan.cpp ****         case 0x78:    
3388:out/quex_scan.cpp ****         case 0x79:    
3389:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3390:out/quex_scan.cpp ****     }
3391:out/quex_scan.cpp **** 
3392:out/quex_scan.cpp **** _2661:
3393:out/quex_scan.cpp ****         goto _2536;
3394:out/quex_scan.cpp **** 
3395:out/quex_scan.cpp **** 
3396:out/quex_scan.cpp ****     __quex_assert_no_passage();
3397:out/quex_scan.cpp **** _2450:
3398:out/quex_scan.cpp ****     __quex_debug_state(2450);
3399:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3400:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3401:out/quex_scan.cpp ****     switch( input ) {
3402:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2450), QUEX_LABEL(2662));
3403:out/quex_scan.cpp ****         case 0x30:    
3404:out/quex_scan.cpp ****         case 0x31:    
3405:out/quex_scan.cpp ****         case 0x32:    
3406:out/quex_scan.cpp ****         case 0x33:    
3407:out/quex_scan.cpp ****         case 0x34:    
3408:out/quex_scan.cpp ****         case 0x35:    
3409:out/quex_scan.cpp ****         case 0x36:    
3410:out/quex_scan.cpp ****         case 0x37:    
3411:out/quex_scan.cpp ****         case 0x38:    
3412:out/quex_scan.cpp ****         case 0x39:    
3413:out/quex_scan.cpp ****         case 0x41:    
3414:out/quex_scan.cpp ****         case 0x42:    
3415:out/quex_scan.cpp ****         case 0x43:    
3416:out/quex_scan.cpp ****         case 0x44:    
3417:out/quex_scan.cpp ****         case 0x45:    
3418:out/quex_scan.cpp ****         case 0x46:    
3419:out/quex_scan.cpp ****         case 0x47:    
3420:out/quex_scan.cpp ****         case 0x48:    
3421:out/quex_scan.cpp ****         case 0x49:    
3422:out/quex_scan.cpp ****         case 0x4A:    
3423:out/quex_scan.cpp ****         case 0x4B:    
3424:out/quex_scan.cpp ****         case 0x4C:    
3425:out/quex_scan.cpp ****         case 0x4D:    
3426:out/quex_scan.cpp ****         case 0x4E:    
3427:out/quex_scan.cpp ****         case 0x4F:    
3428:out/quex_scan.cpp ****         case 0x50:    
3429:out/quex_scan.cpp ****         case 0x51:    
3430:out/quex_scan.cpp ****         case 0x52:    
3431:out/quex_scan.cpp ****         case 0x53:    
3432:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 117


3433:out/quex_scan.cpp ****         case 0x55:    
3434:out/quex_scan.cpp ****         case 0x56:    
3435:out/quex_scan.cpp ****         case 0x57:    
3436:out/quex_scan.cpp ****         case 0x58:    
3437:out/quex_scan.cpp ****         case 0x59:    
3438:out/quex_scan.cpp ****         case 0x5A:    
3439:out/quex_scan.cpp ****         case 0x5F:    
3440:out/quex_scan.cpp ****         case 0x61:    
3441:out/quex_scan.cpp ****         case 0x62:    
3442:out/quex_scan.cpp ****         case 0x63:    
3443:out/quex_scan.cpp ****         case 0x64:    
3444:out/quex_scan.cpp ****         case 0x65:    
3445:out/quex_scan.cpp ****         case 0x66:    
3446:out/quex_scan.cpp ****         case 0x67:    
3447:out/quex_scan.cpp ****         case 0x68:    
3448:out/quex_scan.cpp ****         case 0x69:    
3449:out/quex_scan.cpp ****         case 0x6A:    
3450:out/quex_scan.cpp ****         case 0x6B:    
3451:out/quex_scan.cpp ****         case 0x6C:    
3452:out/quex_scan.cpp ****         case 0x6D:    
3453:out/quex_scan.cpp ****         case 0x6E:    
3454:out/quex_scan.cpp ****         case 0x6F:    
3455:out/quex_scan.cpp ****         case 0x70:    
3456:out/quex_scan.cpp ****         case 0x71:    
3457:out/quex_scan.cpp ****         case 0x72:    
3458:out/quex_scan.cpp ****         case 0x73:    
3459:out/quex_scan.cpp ****         case 0x74:    
3460:out/quex_scan.cpp ****         case 0x75:    
3461:out/quex_scan.cpp ****         case 0x76:    
3462:out/quex_scan.cpp ****         case 0x77:    
3463:out/quex_scan.cpp ****         case 0x78:    
3464:out/quex_scan.cpp ****         case 0x79:    
3465:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3466:out/quex_scan.cpp ****     }
3467:out/quex_scan.cpp **** 
3468:out/quex_scan.cpp **** _2662:
3469:out/quex_scan.cpp ****         goto _2663;
3470:out/quex_scan.cpp **** 
3471:out/quex_scan.cpp **** 
3472:out/quex_scan.cpp ****     __quex_assert_no_passage();
3473:out/quex_scan.cpp **** _2451:
3474:out/quex_scan.cpp ****     __quex_debug_state(2451);
3475:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3476:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3477:out/quex_scan.cpp ****     switch( input ) {
3478:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2451), QUEX_LABEL(2664));
3479:out/quex_scan.cpp ****         case 0x30:    
3480:out/quex_scan.cpp ****         case 0x31:    
3481:out/quex_scan.cpp ****         case 0x32:    
3482:out/quex_scan.cpp ****         case 0x33:    
3483:out/quex_scan.cpp ****         case 0x34:    
3484:out/quex_scan.cpp ****         case 0x35:    
3485:out/quex_scan.cpp ****         case 0x36:    
3486:out/quex_scan.cpp ****         case 0x37:    
3487:out/quex_scan.cpp ****         case 0x38:    
3488:out/quex_scan.cpp ****         case 0x39:    
3489:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 118


3490:out/quex_scan.cpp ****         case 0x42:    
3491:out/quex_scan.cpp ****         case 0x43:    
3492:out/quex_scan.cpp ****         case 0x44:    
3493:out/quex_scan.cpp ****         case 0x45:    
3494:out/quex_scan.cpp ****         case 0x46:    
3495:out/quex_scan.cpp ****         case 0x47:    
3496:out/quex_scan.cpp ****         case 0x48:    
3497:out/quex_scan.cpp ****         case 0x49:    
3498:out/quex_scan.cpp ****         case 0x4A:    
3499:out/quex_scan.cpp ****         case 0x4B:    
3500:out/quex_scan.cpp ****         case 0x4C:    
3501:out/quex_scan.cpp ****         case 0x4D:    
3502:out/quex_scan.cpp ****         case 0x4E:    
3503:out/quex_scan.cpp ****         case 0x4F:    
3504:out/quex_scan.cpp ****         case 0x50:    
3505:out/quex_scan.cpp ****         case 0x51:    
3506:out/quex_scan.cpp ****         case 0x52:    
3507:out/quex_scan.cpp ****         case 0x53:    
3508:out/quex_scan.cpp ****         case 0x54:    
3509:out/quex_scan.cpp ****         case 0x55:    
3510:out/quex_scan.cpp ****         case 0x56:    
3511:out/quex_scan.cpp ****         case 0x57:    
3512:out/quex_scan.cpp ****         case 0x58:    
3513:out/quex_scan.cpp ****         case 0x59:    
3514:out/quex_scan.cpp ****         case 0x5A:    
3515:out/quex_scan.cpp ****         case 0x5F:    goto _2364;
3516:out/quex_scan.cpp ****         case 0x61:    goto _2461;
3517:out/quex_scan.cpp ****         case 0x62:    
3518:out/quex_scan.cpp ****         case 0x63:    
3519:out/quex_scan.cpp ****         case 0x64:    
3520:out/quex_scan.cpp ****         case 0x65:    
3521:out/quex_scan.cpp ****         case 0x66:    
3522:out/quex_scan.cpp ****         case 0x67:    
3523:out/quex_scan.cpp ****         case 0x68:    
3524:out/quex_scan.cpp ****         case 0x69:    
3525:out/quex_scan.cpp ****         case 0x6A:    
3526:out/quex_scan.cpp ****         case 0x6B:    
3527:out/quex_scan.cpp ****         case 0x6C:    
3528:out/quex_scan.cpp ****         case 0x6D:    
3529:out/quex_scan.cpp ****         case 0x6E:    
3530:out/quex_scan.cpp ****         case 0x6F:    
3531:out/quex_scan.cpp ****         case 0x70:    
3532:out/quex_scan.cpp ****         case 0x71:    
3533:out/quex_scan.cpp ****         case 0x72:    
3534:out/quex_scan.cpp ****         case 0x73:    
3535:out/quex_scan.cpp ****         case 0x74:    
3536:out/quex_scan.cpp ****         case 0x75:    
3537:out/quex_scan.cpp ****         case 0x76:    
3538:out/quex_scan.cpp ****         case 0x77:    
3539:out/quex_scan.cpp ****         case 0x78:    
3540:out/quex_scan.cpp ****         case 0x79:    
3541:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3542:out/quex_scan.cpp ****     }
3543:out/quex_scan.cpp **** 
3544:out/quex_scan.cpp **** _2664:
3545:out/quex_scan.cpp ****         goto _2536;
3546:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 119


3547:out/quex_scan.cpp **** 
3548:out/quex_scan.cpp ****     __quex_assert_no_passage();
3549:out/quex_scan.cpp **** _2452:
3550:out/quex_scan.cpp ****     __quex_debug_state(2452);
3551:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3552:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3553:out/quex_scan.cpp ****     switch( input ) {
3554:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2452), QUEX_LABEL(2665));
3555:out/quex_scan.cpp ****         case 0x30:    
3556:out/quex_scan.cpp ****         case 0x31:    
3557:out/quex_scan.cpp ****         case 0x32:    
3558:out/quex_scan.cpp ****         case 0x33:    
3559:out/quex_scan.cpp ****         case 0x34:    
3560:out/quex_scan.cpp ****         case 0x35:    
3561:out/quex_scan.cpp ****         case 0x36:    
3562:out/quex_scan.cpp ****         case 0x37:    
3563:out/quex_scan.cpp ****         case 0x38:    
3564:out/quex_scan.cpp ****         case 0x39:    
3565:out/quex_scan.cpp ****         case 0x41:    
3566:out/quex_scan.cpp ****         case 0x42:    
3567:out/quex_scan.cpp ****         case 0x43:    
3568:out/quex_scan.cpp ****         case 0x44:    
3569:out/quex_scan.cpp ****         case 0x45:    
3570:out/quex_scan.cpp ****         case 0x46:    
3571:out/quex_scan.cpp ****         case 0x47:    
3572:out/quex_scan.cpp ****         case 0x48:    
3573:out/quex_scan.cpp ****         case 0x49:    
3574:out/quex_scan.cpp ****         case 0x4A:    
3575:out/quex_scan.cpp ****         case 0x4B:    
3576:out/quex_scan.cpp ****         case 0x4C:    
3577:out/quex_scan.cpp ****         case 0x4D:    
3578:out/quex_scan.cpp ****         case 0x4E:    
3579:out/quex_scan.cpp ****         case 0x4F:    
3580:out/quex_scan.cpp ****         case 0x50:    
3581:out/quex_scan.cpp ****         case 0x51:    
3582:out/quex_scan.cpp ****         case 0x52:    
3583:out/quex_scan.cpp ****         case 0x53:    
3584:out/quex_scan.cpp ****         case 0x54:    
3585:out/quex_scan.cpp ****         case 0x55:    
3586:out/quex_scan.cpp ****         case 0x56:    
3587:out/quex_scan.cpp ****         case 0x57:    
3588:out/quex_scan.cpp ****         case 0x58:    
3589:out/quex_scan.cpp ****         case 0x59:    
3590:out/quex_scan.cpp ****         case 0x5A:    
3591:out/quex_scan.cpp ****         case 0x5F:    
3592:out/quex_scan.cpp ****         case 0x61:    
3593:out/quex_scan.cpp ****         case 0x62:    
3594:out/quex_scan.cpp ****         case 0x63:    
3595:out/quex_scan.cpp ****         case 0x64:    
3596:out/quex_scan.cpp ****         case 0x65:    
3597:out/quex_scan.cpp ****         case 0x66:    
3598:out/quex_scan.cpp ****         case 0x67:    
3599:out/quex_scan.cpp ****         case 0x68:    
3600:out/quex_scan.cpp ****         case 0x69:    
3601:out/quex_scan.cpp ****         case 0x6A:    
3602:out/quex_scan.cpp ****         case 0x6B:    
3603:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 120


3604:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
3605:out/quex_scan.cpp ****         case 0x6E:    goto _2453;
3606:out/quex_scan.cpp ****         case 0x6F:    
3607:out/quex_scan.cpp ****         case 0x70:    
3608:out/quex_scan.cpp ****         case 0x71:    
3609:out/quex_scan.cpp ****         case 0x72:    
3610:out/quex_scan.cpp ****         case 0x73:    
3611:out/quex_scan.cpp ****         case 0x74:    
3612:out/quex_scan.cpp ****         case 0x75:    
3613:out/quex_scan.cpp ****         case 0x76:    
3614:out/quex_scan.cpp ****         case 0x77:    
3615:out/quex_scan.cpp ****         case 0x78:    
3616:out/quex_scan.cpp ****         case 0x79:    
3617:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3618:out/quex_scan.cpp ****     }
3619:out/quex_scan.cpp **** 
3620:out/quex_scan.cpp **** _2665:
3621:out/quex_scan.cpp ****         goto _2536;
3622:out/quex_scan.cpp **** 
3623:out/quex_scan.cpp **** 
3624:out/quex_scan.cpp ****     __quex_assert_no_passage();
3625:out/quex_scan.cpp **** _2453:
3626:out/quex_scan.cpp ****     __quex_debug_state(2453);
3627:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3628:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3629:out/quex_scan.cpp ****     switch( input ) {
3630:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2453), QUEX_LABEL(2666));
3631:out/quex_scan.cpp ****         case 0x30:    
3632:out/quex_scan.cpp ****         case 0x31:    
3633:out/quex_scan.cpp ****         case 0x32:    
3634:out/quex_scan.cpp ****         case 0x33:    
3635:out/quex_scan.cpp ****         case 0x34:    
3636:out/quex_scan.cpp ****         case 0x35:    
3637:out/quex_scan.cpp ****         case 0x36:    
3638:out/quex_scan.cpp ****         case 0x37:    
3639:out/quex_scan.cpp ****         case 0x38:    
3640:out/quex_scan.cpp ****         case 0x39:    
3641:out/quex_scan.cpp ****         case 0x41:    
3642:out/quex_scan.cpp ****         case 0x42:    
3643:out/quex_scan.cpp ****         case 0x43:    
3644:out/quex_scan.cpp ****         case 0x44:    
3645:out/quex_scan.cpp ****         case 0x45:    
3646:out/quex_scan.cpp ****         case 0x46:    
3647:out/quex_scan.cpp ****         case 0x47:    
3648:out/quex_scan.cpp ****         case 0x48:    
3649:out/quex_scan.cpp ****         case 0x49:    
3650:out/quex_scan.cpp ****         case 0x4A:    
3651:out/quex_scan.cpp ****         case 0x4B:    
3652:out/quex_scan.cpp ****         case 0x4C:    
3653:out/quex_scan.cpp ****         case 0x4D:    
3654:out/quex_scan.cpp ****         case 0x4E:    
3655:out/quex_scan.cpp ****         case 0x4F:    
3656:out/quex_scan.cpp ****         case 0x50:    
3657:out/quex_scan.cpp ****         case 0x51:    
3658:out/quex_scan.cpp ****         case 0x52:    
3659:out/quex_scan.cpp ****         case 0x53:    
3660:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 121


3661:out/quex_scan.cpp ****         case 0x55:    
3662:out/quex_scan.cpp ****         case 0x56:    
3663:out/quex_scan.cpp ****         case 0x57:    
3664:out/quex_scan.cpp ****         case 0x58:    
3665:out/quex_scan.cpp ****         case 0x59:    
3666:out/quex_scan.cpp ****         case 0x5A:    
3667:out/quex_scan.cpp ****         case 0x5F:    
3668:out/quex_scan.cpp ****         case 0x61:    
3669:out/quex_scan.cpp ****         case 0x62:    
3670:out/quex_scan.cpp ****         case 0x63:    
3671:out/quex_scan.cpp ****         case 0x64:    
3672:out/quex_scan.cpp ****         case 0x65:    
3673:out/quex_scan.cpp ****         case 0x66:    
3674:out/quex_scan.cpp ****         case 0x67:    
3675:out/quex_scan.cpp ****         case 0x68:    
3676:out/quex_scan.cpp ****         case 0x69:    
3677:out/quex_scan.cpp ****         case 0x6A:    
3678:out/quex_scan.cpp ****         case 0x6B:    
3679:out/quex_scan.cpp ****         case 0x6C:    
3680:out/quex_scan.cpp ****         case 0x6D:    
3681:out/quex_scan.cpp ****         case 0x6E:    
3682:out/quex_scan.cpp ****         case 0x6F:    
3683:out/quex_scan.cpp ****         case 0x70:    
3684:out/quex_scan.cpp ****         case 0x71:    
3685:out/quex_scan.cpp ****         case 0x72:    goto _2364;
3686:out/quex_scan.cpp ****         case 0x73:    goto _2454;
3687:out/quex_scan.cpp ****         case 0x74:    goto _2455;
3688:out/quex_scan.cpp ****         case 0x75:    
3689:out/quex_scan.cpp ****         case 0x76:    
3690:out/quex_scan.cpp ****         case 0x77:    
3691:out/quex_scan.cpp ****         case 0x78:    
3692:out/quex_scan.cpp ****         case 0x79:    
3693:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3694:out/quex_scan.cpp ****     }
3695:out/quex_scan.cpp **** 
3696:out/quex_scan.cpp **** _2666:
3697:out/quex_scan.cpp ****         goto _2536;
3698:out/quex_scan.cpp **** 
3699:out/quex_scan.cpp **** 
3700:out/quex_scan.cpp ****     __quex_assert_no_passage();
3701:out/quex_scan.cpp **** _2454:
3702:out/quex_scan.cpp ****     __quex_debug_state(2454);
3703:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3704:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3705:out/quex_scan.cpp ****     switch( input ) {
3706:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2454), QUEX_LABEL(2667));
3707:out/quex_scan.cpp ****         case 0x30:    
3708:out/quex_scan.cpp ****         case 0x31:    
3709:out/quex_scan.cpp ****         case 0x32:    
3710:out/quex_scan.cpp ****         case 0x33:    
3711:out/quex_scan.cpp ****         case 0x34:    
3712:out/quex_scan.cpp ****         case 0x35:    
3713:out/quex_scan.cpp ****         case 0x36:    
3714:out/quex_scan.cpp ****         case 0x37:    
3715:out/quex_scan.cpp ****         case 0x38:    
3716:out/quex_scan.cpp ****         case 0x39:    
3717:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 122


3718:out/quex_scan.cpp ****         case 0x42:    
3719:out/quex_scan.cpp ****         case 0x43:    
3720:out/quex_scan.cpp ****         case 0x44:    
3721:out/quex_scan.cpp ****         case 0x45:    
3722:out/quex_scan.cpp ****         case 0x46:    
3723:out/quex_scan.cpp ****         case 0x47:    
3724:out/quex_scan.cpp ****         case 0x48:    
3725:out/quex_scan.cpp ****         case 0x49:    
3726:out/quex_scan.cpp ****         case 0x4A:    
3727:out/quex_scan.cpp ****         case 0x4B:    
3728:out/quex_scan.cpp ****         case 0x4C:    
3729:out/quex_scan.cpp ****         case 0x4D:    
3730:out/quex_scan.cpp ****         case 0x4E:    
3731:out/quex_scan.cpp ****         case 0x4F:    
3732:out/quex_scan.cpp ****         case 0x50:    
3733:out/quex_scan.cpp ****         case 0x51:    
3734:out/quex_scan.cpp ****         case 0x52:    
3735:out/quex_scan.cpp ****         case 0x53:    
3736:out/quex_scan.cpp ****         case 0x54:    
3737:out/quex_scan.cpp ****         case 0x55:    
3738:out/quex_scan.cpp ****         case 0x56:    
3739:out/quex_scan.cpp ****         case 0x57:    
3740:out/quex_scan.cpp ****         case 0x58:    
3741:out/quex_scan.cpp ****         case 0x59:    
3742:out/quex_scan.cpp ****         case 0x5A:    
3743:out/quex_scan.cpp ****         case 0x5F:    
3744:out/quex_scan.cpp ****         case 0x61:    
3745:out/quex_scan.cpp ****         case 0x62:    
3746:out/quex_scan.cpp ****         case 0x63:    
3747:out/quex_scan.cpp ****         case 0x64:    
3748:out/quex_scan.cpp ****         case 0x65:    
3749:out/quex_scan.cpp ****         case 0x66:    
3750:out/quex_scan.cpp ****         case 0x67:    
3751:out/quex_scan.cpp ****         case 0x68:    
3752:out/quex_scan.cpp ****         case 0x69:    
3753:out/quex_scan.cpp ****         case 0x6A:    
3754:out/quex_scan.cpp ****         case 0x6B:    
3755:out/quex_scan.cpp ****         case 0x6C:    
3756:out/quex_scan.cpp ****         case 0x6D:    
3757:out/quex_scan.cpp ****         case 0x6E:    
3758:out/quex_scan.cpp ****         case 0x6F:    
3759:out/quex_scan.cpp ****         case 0x70:    
3760:out/quex_scan.cpp ****         case 0x71:    
3761:out/quex_scan.cpp ****         case 0x72:    
3762:out/quex_scan.cpp ****         case 0x73:    goto _2364;
3763:out/quex_scan.cpp ****         case 0x74:    goto _2460;
3764:out/quex_scan.cpp ****         case 0x75:    
3765:out/quex_scan.cpp ****         case 0x76:    
3766:out/quex_scan.cpp ****         case 0x77:    
3767:out/quex_scan.cpp ****         case 0x78:    
3768:out/quex_scan.cpp ****         case 0x79:    
3769:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3770:out/quex_scan.cpp ****     }
3771:out/quex_scan.cpp **** 
3772:out/quex_scan.cpp **** _2667:
3773:out/quex_scan.cpp ****         goto _2536;
3774:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 123


3775:out/quex_scan.cpp **** 
3776:out/quex_scan.cpp ****     __quex_assert_no_passage();
3777:out/quex_scan.cpp **** _2455:
3778:out/quex_scan.cpp ****     __quex_debug_state(2455);
3779:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3780:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3781:out/quex_scan.cpp ****     switch( input ) {
3782:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2455), QUEX_LABEL(2668));
3783:out/quex_scan.cpp ****         case 0x30:    
3784:out/quex_scan.cpp ****         case 0x31:    
3785:out/quex_scan.cpp ****         case 0x32:    
3786:out/quex_scan.cpp ****         case 0x33:    
3787:out/quex_scan.cpp ****         case 0x34:    
3788:out/quex_scan.cpp ****         case 0x35:    
3789:out/quex_scan.cpp ****         case 0x36:    
3790:out/quex_scan.cpp ****         case 0x37:    
3791:out/quex_scan.cpp ****         case 0x38:    
3792:out/quex_scan.cpp ****         case 0x39:    
3793:out/quex_scan.cpp ****         case 0x41:    
3794:out/quex_scan.cpp ****         case 0x42:    
3795:out/quex_scan.cpp ****         case 0x43:    
3796:out/quex_scan.cpp ****         case 0x44:    
3797:out/quex_scan.cpp ****         case 0x45:    
3798:out/quex_scan.cpp ****         case 0x46:    
3799:out/quex_scan.cpp ****         case 0x47:    
3800:out/quex_scan.cpp ****         case 0x48:    
3801:out/quex_scan.cpp ****         case 0x49:    
3802:out/quex_scan.cpp ****         case 0x4A:    
3803:out/quex_scan.cpp ****         case 0x4B:    
3804:out/quex_scan.cpp ****         case 0x4C:    
3805:out/quex_scan.cpp ****         case 0x4D:    
3806:out/quex_scan.cpp ****         case 0x4E:    
3807:out/quex_scan.cpp ****         case 0x4F:    
3808:out/quex_scan.cpp ****         case 0x50:    
3809:out/quex_scan.cpp ****         case 0x51:    
3810:out/quex_scan.cpp ****         case 0x52:    
3811:out/quex_scan.cpp ****         case 0x53:    
3812:out/quex_scan.cpp ****         case 0x54:    
3813:out/quex_scan.cpp ****         case 0x55:    
3814:out/quex_scan.cpp ****         case 0x56:    
3815:out/quex_scan.cpp ****         case 0x57:    
3816:out/quex_scan.cpp ****         case 0x58:    
3817:out/quex_scan.cpp ****         case 0x59:    
3818:out/quex_scan.cpp ****         case 0x5A:    
3819:out/quex_scan.cpp ****         case 0x5F:    
3820:out/quex_scan.cpp ****         case 0x61:    
3821:out/quex_scan.cpp ****         case 0x62:    
3822:out/quex_scan.cpp ****         case 0x63:    
3823:out/quex_scan.cpp ****         case 0x64:    
3824:out/quex_scan.cpp ****         case 0x65:    
3825:out/quex_scan.cpp ****         case 0x66:    
3826:out/quex_scan.cpp ****         case 0x67:    
3827:out/quex_scan.cpp ****         case 0x68:    goto _2364;
3828:out/quex_scan.cpp ****         case 0x69:    goto _2456;
3829:out/quex_scan.cpp ****         case 0x6A:    
3830:out/quex_scan.cpp ****         case 0x6B:    
3831:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 124


3832:out/quex_scan.cpp ****         case 0x6D:    
3833:out/quex_scan.cpp ****         case 0x6E:    
3834:out/quex_scan.cpp ****         case 0x6F:    
3835:out/quex_scan.cpp ****         case 0x70:    
3836:out/quex_scan.cpp ****         case 0x71:    
3837:out/quex_scan.cpp ****         case 0x72:    
3838:out/quex_scan.cpp ****         case 0x73:    
3839:out/quex_scan.cpp ****         case 0x74:    
3840:out/quex_scan.cpp ****         case 0x75:    
3841:out/quex_scan.cpp ****         case 0x76:    
3842:out/quex_scan.cpp ****         case 0x77:    
3843:out/quex_scan.cpp ****         case 0x78:    
3844:out/quex_scan.cpp ****         case 0x79:    
3845:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3846:out/quex_scan.cpp ****     }
3847:out/quex_scan.cpp **** 
3848:out/quex_scan.cpp **** _2668:
3849:out/quex_scan.cpp ****         goto _2536;
3850:out/quex_scan.cpp **** 
3851:out/quex_scan.cpp **** 
3852:out/quex_scan.cpp ****     __quex_assert_no_passage();
3853:out/quex_scan.cpp **** _2456:
3854:out/quex_scan.cpp ****     __quex_debug_state(2456);
3855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3856:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3857:out/quex_scan.cpp ****     switch( input ) {
3858:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2456), QUEX_LABEL(2669));
3859:out/quex_scan.cpp ****         case 0x30:    
3860:out/quex_scan.cpp ****         case 0x31:    
3861:out/quex_scan.cpp ****         case 0x32:    
3862:out/quex_scan.cpp ****         case 0x33:    
3863:out/quex_scan.cpp ****         case 0x34:    
3864:out/quex_scan.cpp ****         case 0x35:    
3865:out/quex_scan.cpp ****         case 0x36:    
3866:out/quex_scan.cpp ****         case 0x37:    
3867:out/quex_scan.cpp ****         case 0x38:    
3868:out/quex_scan.cpp ****         case 0x39:    
3869:out/quex_scan.cpp ****         case 0x41:    
3870:out/quex_scan.cpp ****         case 0x42:    
3871:out/quex_scan.cpp ****         case 0x43:    
3872:out/quex_scan.cpp ****         case 0x44:    
3873:out/quex_scan.cpp ****         case 0x45:    
3874:out/quex_scan.cpp ****         case 0x46:    
3875:out/quex_scan.cpp ****         case 0x47:    
3876:out/quex_scan.cpp ****         case 0x48:    
3877:out/quex_scan.cpp ****         case 0x49:    
3878:out/quex_scan.cpp ****         case 0x4A:    
3879:out/quex_scan.cpp ****         case 0x4B:    
3880:out/quex_scan.cpp ****         case 0x4C:    
3881:out/quex_scan.cpp ****         case 0x4D:    
3882:out/quex_scan.cpp ****         case 0x4E:    
3883:out/quex_scan.cpp ****         case 0x4F:    
3884:out/quex_scan.cpp ****         case 0x50:    
3885:out/quex_scan.cpp ****         case 0x51:    
3886:out/quex_scan.cpp ****         case 0x52:    
3887:out/quex_scan.cpp ****         case 0x53:    
3888:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 125


3889:out/quex_scan.cpp ****         case 0x55:    
3890:out/quex_scan.cpp ****         case 0x56:    
3891:out/quex_scan.cpp ****         case 0x57:    
3892:out/quex_scan.cpp ****         case 0x58:    
3893:out/quex_scan.cpp ****         case 0x59:    
3894:out/quex_scan.cpp ****         case 0x5A:    
3895:out/quex_scan.cpp ****         case 0x5F:    
3896:out/quex_scan.cpp ****         case 0x61:    
3897:out/quex_scan.cpp ****         case 0x62:    
3898:out/quex_scan.cpp ****         case 0x63:    
3899:out/quex_scan.cpp ****         case 0x64:    
3900:out/quex_scan.cpp ****         case 0x65:    
3901:out/quex_scan.cpp ****         case 0x66:    
3902:out/quex_scan.cpp ****         case 0x67:    
3903:out/quex_scan.cpp ****         case 0x68:    
3904:out/quex_scan.cpp ****         case 0x69:    
3905:out/quex_scan.cpp ****         case 0x6A:    
3906:out/quex_scan.cpp ****         case 0x6B:    
3907:out/quex_scan.cpp ****         case 0x6C:    
3908:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
3909:out/quex_scan.cpp ****         case 0x6E:    goto _2457;
3910:out/quex_scan.cpp ****         case 0x6F:    
3911:out/quex_scan.cpp ****         case 0x70:    
3912:out/quex_scan.cpp ****         case 0x71:    
3913:out/quex_scan.cpp ****         case 0x72:    
3914:out/quex_scan.cpp ****         case 0x73:    
3915:out/quex_scan.cpp ****         case 0x74:    
3916:out/quex_scan.cpp ****         case 0x75:    
3917:out/quex_scan.cpp ****         case 0x76:    
3918:out/quex_scan.cpp ****         case 0x77:    
3919:out/quex_scan.cpp ****         case 0x78:    
3920:out/quex_scan.cpp ****         case 0x79:    
3921:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3922:out/quex_scan.cpp ****     }
3923:out/quex_scan.cpp **** 
3924:out/quex_scan.cpp **** _2669:
3925:out/quex_scan.cpp ****         goto _2536;
3926:out/quex_scan.cpp **** 
3927:out/quex_scan.cpp **** 
3928:out/quex_scan.cpp ****     __quex_assert_no_passage();
3929:out/quex_scan.cpp **** _2457:
3930:out/quex_scan.cpp ****     __quex_debug_state(2457);
3931:out/quex_scan.cpp ****     ++(me->buffer._input_p);
3932:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
3933:out/quex_scan.cpp ****     switch( input ) {
3934:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2457), QUEX_LABEL(2670));
3935:out/quex_scan.cpp ****         case 0x30:    
3936:out/quex_scan.cpp ****         case 0x31:    
3937:out/quex_scan.cpp ****         case 0x32:    
3938:out/quex_scan.cpp ****         case 0x33:    
3939:out/quex_scan.cpp ****         case 0x34:    
3940:out/quex_scan.cpp ****         case 0x35:    
3941:out/quex_scan.cpp ****         case 0x36:    
3942:out/quex_scan.cpp ****         case 0x37:    
3943:out/quex_scan.cpp ****         case 0x38:    
3944:out/quex_scan.cpp ****         case 0x39:    
3945:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 126


3946:out/quex_scan.cpp ****         case 0x42:    
3947:out/quex_scan.cpp ****         case 0x43:    
3948:out/quex_scan.cpp ****         case 0x44:    
3949:out/quex_scan.cpp ****         case 0x45:    
3950:out/quex_scan.cpp ****         case 0x46:    
3951:out/quex_scan.cpp ****         case 0x47:    
3952:out/quex_scan.cpp ****         case 0x48:    
3953:out/quex_scan.cpp ****         case 0x49:    
3954:out/quex_scan.cpp ****         case 0x4A:    
3955:out/quex_scan.cpp ****         case 0x4B:    
3956:out/quex_scan.cpp ****         case 0x4C:    
3957:out/quex_scan.cpp ****         case 0x4D:    
3958:out/quex_scan.cpp ****         case 0x4E:    
3959:out/quex_scan.cpp ****         case 0x4F:    
3960:out/quex_scan.cpp ****         case 0x50:    
3961:out/quex_scan.cpp ****         case 0x51:    
3962:out/quex_scan.cpp ****         case 0x52:    
3963:out/quex_scan.cpp ****         case 0x53:    
3964:out/quex_scan.cpp ****         case 0x54:    
3965:out/quex_scan.cpp ****         case 0x55:    
3966:out/quex_scan.cpp ****         case 0x56:    
3967:out/quex_scan.cpp ****         case 0x57:    
3968:out/quex_scan.cpp ****         case 0x58:    
3969:out/quex_scan.cpp ****         case 0x59:    
3970:out/quex_scan.cpp ****         case 0x5A:    
3971:out/quex_scan.cpp ****         case 0x5F:    
3972:out/quex_scan.cpp ****         case 0x61:    
3973:out/quex_scan.cpp ****         case 0x62:    
3974:out/quex_scan.cpp ****         case 0x63:    
3975:out/quex_scan.cpp ****         case 0x64:    
3976:out/quex_scan.cpp ****         case 0x65:    
3977:out/quex_scan.cpp ****         case 0x66:    
3978:out/quex_scan.cpp ****         case 0x67:    
3979:out/quex_scan.cpp ****         case 0x68:    
3980:out/quex_scan.cpp ****         case 0x69:    
3981:out/quex_scan.cpp ****         case 0x6A:    
3982:out/quex_scan.cpp ****         case 0x6B:    
3983:out/quex_scan.cpp ****         case 0x6C:    
3984:out/quex_scan.cpp ****         case 0x6D:    
3985:out/quex_scan.cpp ****         case 0x6E:    
3986:out/quex_scan.cpp ****         case 0x6F:    
3987:out/quex_scan.cpp ****         case 0x70:    
3988:out/quex_scan.cpp ****         case 0x71:    
3989:out/quex_scan.cpp ****         case 0x72:    
3990:out/quex_scan.cpp ****         case 0x73:    
3991:out/quex_scan.cpp ****         case 0x74:    goto _2364;
3992:out/quex_scan.cpp ****         case 0x75:    goto _2458;
3993:out/quex_scan.cpp ****         case 0x76:    
3994:out/quex_scan.cpp ****         case 0x77:    
3995:out/quex_scan.cpp ****         case 0x78:    
3996:out/quex_scan.cpp ****         case 0x79:    
3997:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
3998:out/quex_scan.cpp ****     }
3999:out/quex_scan.cpp **** 
4000:out/quex_scan.cpp **** _2670:
4001:out/quex_scan.cpp ****         goto _2536;
4002:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 127


4003:out/quex_scan.cpp **** 
4004:out/quex_scan.cpp ****     __quex_assert_no_passage();
4005:out/quex_scan.cpp **** _2458:
4006:out/quex_scan.cpp ****     __quex_debug_state(2458);
4007:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4008:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4009:out/quex_scan.cpp ****     switch( input ) {
4010:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2458), QUEX_LABEL(2671));
4011:out/quex_scan.cpp ****         case 0x30:    
4012:out/quex_scan.cpp ****         case 0x31:    
4013:out/quex_scan.cpp ****         case 0x32:    
4014:out/quex_scan.cpp ****         case 0x33:    
4015:out/quex_scan.cpp ****         case 0x34:    
4016:out/quex_scan.cpp ****         case 0x35:    
4017:out/quex_scan.cpp ****         case 0x36:    
4018:out/quex_scan.cpp ****         case 0x37:    
4019:out/quex_scan.cpp ****         case 0x38:    
4020:out/quex_scan.cpp ****         case 0x39:    
4021:out/quex_scan.cpp ****         case 0x41:    
4022:out/quex_scan.cpp ****         case 0x42:    
4023:out/quex_scan.cpp ****         case 0x43:    
4024:out/quex_scan.cpp ****         case 0x44:    
4025:out/quex_scan.cpp ****         case 0x45:    
4026:out/quex_scan.cpp ****         case 0x46:    
4027:out/quex_scan.cpp ****         case 0x47:    
4028:out/quex_scan.cpp ****         case 0x48:    
4029:out/quex_scan.cpp ****         case 0x49:    
4030:out/quex_scan.cpp ****         case 0x4A:    
4031:out/quex_scan.cpp ****         case 0x4B:    
4032:out/quex_scan.cpp ****         case 0x4C:    
4033:out/quex_scan.cpp ****         case 0x4D:    
4034:out/quex_scan.cpp ****         case 0x4E:    
4035:out/quex_scan.cpp ****         case 0x4F:    
4036:out/quex_scan.cpp ****         case 0x50:    
4037:out/quex_scan.cpp ****         case 0x51:    
4038:out/quex_scan.cpp ****         case 0x52:    
4039:out/quex_scan.cpp ****         case 0x53:    
4040:out/quex_scan.cpp ****         case 0x54:    
4041:out/quex_scan.cpp ****         case 0x55:    
4042:out/quex_scan.cpp ****         case 0x56:    
4043:out/quex_scan.cpp ****         case 0x57:    
4044:out/quex_scan.cpp ****         case 0x58:    
4045:out/quex_scan.cpp ****         case 0x59:    
4046:out/quex_scan.cpp ****         case 0x5A:    
4047:out/quex_scan.cpp ****         case 0x5F:    
4048:out/quex_scan.cpp ****         case 0x61:    
4049:out/quex_scan.cpp ****         case 0x62:    
4050:out/quex_scan.cpp ****         case 0x63:    
4051:out/quex_scan.cpp ****         case 0x64:    goto _2364;
4052:out/quex_scan.cpp ****         case 0x65:    goto _2459;
4053:out/quex_scan.cpp ****         case 0x66:    
4054:out/quex_scan.cpp ****         case 0x67:    
4055:out/quex_scan.cpp ****         case 0x68:    
4056:out/quex_scan.cpp ****         case 0x69:    
4057:out/quex_scan.cpp ****         case 0x6A:    
4058:out/quex_scan.cpp ****         case 0x6B:    
4059:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 128


4060:out/quex_scan.cpp ****         case 0x6D:    
4061:out/quex_scan.cpp ****         case 0x6E:    
4062:out/quex_scan.cpp ****         case 0x6F:    
4063:out/quex_scan.cpp ****         case 0x70:    
4064:out/quex_scan.cpp ****         case 0x71:    
4065:out/quex_scan.cpp ****         case 0x72:    
4066:out/quex_scan.cpp ****         case 0x73:    
4067:out/quex_scan.cpp ****         case 0x74:    
4068:out/quex_scan.cpp ****         case 0x75:    
4069:out/quex_scan.cpp ****         case 0x76:    
4070:out/quex_scan.cpp ****         case 0x77:    
4071:out/quex_scan.cpp ****         case 0x78:    
4072:out/quex_scan.cpp ****         case 0x79:    
4073:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4074:out/quex_scan.cpp ****     }
4075:out/quex_scan.cpp **** 
4076:out/quex_scan.cpp **** _2671:
4077:out/quex_scan.cpp ****         goto _2536;
4078:out/quex_scan.cpp **** 
4079:out/quex_scan.cpp **** 
4080:out/quex_scan.cpp ****     __quex_assert_no_passage();
4081:out/quex_scan.cpp **** _2459:
4082:out/quex_scan.cpp ****     __quex_debug_state(2459);
4083:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4084:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4085:out/quex_scan.cpp ****     switch( input ) {
4086:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2459), QUEX_LABEL(2672));
4087:out/quex_scan.cpp ****         case 0x30:    
4088:out/quex_scan.cpp ****         case 0x31:    
4089:out/quex_scan.cpp ****         case 0x32:    
4090:out/quex_scan.cpp ****         case 0x33:    
4091:out/quex_scan.cpp ****         case 0x34:    
4092:out/quex_scan.cpp ****         case 0x35:    
4093:out/quex_scan.cpp ****         case 0x36:    
4094:out/quex_scan.cpp ****         case 0x37:    
4095:out/quex_scan.cpp ****         case 0x38:    
4096:out/quex_scan.cpp ****         case 0x39:    
4097:out/quex_scan.cpp ****         case 0x41:    
4098:out/quex_scan.cpp ****         case 0x42:    
4099:out/quex_scan.cpp ****         case 0x43:    
4100:out/quex_scan.cpp ****         case 0x44:    
4101:out/quex_scan.cpp ****         case 0x45:    
4102:out/quex_scan.cpp ****         case 0x46:    
4103:out/quex_scan.cpp ****         case 0x47:    
4104:out/quex_scan.cpp ****         case 0x48:    
4105:out/quex_scan.cpp ****         case 0x49:    
4106:out/quex_scan.cpp ****         case 0x4A:    
4107:out/quex_scan.cpp ****         case 0x4B:    
4108:out/quex_scan.cpp ****         case 0x4C:    
4109:out/quex_scan.cpp ****         case 0x4D:    
4110:out/quex_scan.cpp ****         case 0x4E:    
4111:out/quex_scan.cpp ****         case 0x4F:    
4112:out/quex_scan.cpp ****         case 0x50:    
4113:out/quex_scan.cpp ****         case 0x51:    
4114:out/quex_scan.cpp ****         case 0x52:    
4115:out/quex_scan.cpp ****         case 0x53:    
4116:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 129


4117:out/quex_scan.cpp ****         case 0x55:    
4118:out/quex_scan.cpp ****         case 0x56:    
4119:out/quex_scan.cpp ****         case 0x57:    
4120:out/quex_scan.cpp ****         case 0x58:    
4121:out/quex_scan.cpp ****         case 0x59:    
4122:out/quex_scan.cpp ****         case 0x5A:    
4123:out/quex_scan.cpp ****         case 0x5F:    
4124:out/quex_scan.cpp ****         case 0x61:    
4125:out/quex_scan.cpp ****         case 0x62:    
4126:out/quex_scan.cpp ****         case 0x63:    
4127:out/quex_scan.cpp ****         case 0x64:    
4128:out/quex_scan.cpp ****         case 0x65:    
4129:out/quex_scan.cpp ****         case 0x66:    
4130:out/quex_scan.cpp ****         case 0x67:    
4131:out/quex_scan.cpp ****         case 0x68:    
4132:out/quex_scan.cpp ****         case 0x69:    
4133:out/quex_scan.cpp ****         case 0x6A:    
4134:out/quex_scan.cpp ****         case 0x6B:    
4135:out/quex_scan.cpp ****         case 0x6C:    
4136:out/quex_scan.cpp ****         case 0x6D:    
4137:out/quex_scan.cpp ****         case 0x6E:    
4138:out/quex_scan.cpp ****         case 0x6F:    
4139:out/quex_scan.cpp ****         case 0x70:    
4140:out/quex_scan.cpp ****         case 0x71:    
4141:out/quex_scan.cpp ****         case 0x72:    
4142:out/quex_scan.cpp ****         case 0x73:    
4143:out/quex_scan.cpp ****         case 0x74:    
4144:out/quex_scan.cpp ****         case 0x75:    
4145:out/quex_scan.cpp ****         case 0x76:    
4146:out/quex_scan.cpp ****         case 0x77:    
4147:out/quex_scan.cpp ****         case 0x78:    
4148:out/quex_scan.cpp ****         case 0x79:    
4149:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4150:out/quex_scan.cpp ****     }
4151:out/quex_scan.cpp **** 
4152:out/quex_scan.cpp **** _2672:
4153:out/quex_scan.cpp ****         goto _2673;
4154:out/quex_scan.cpp **** 
4155:out/quex_scan.cpp **** 
4156:out/quex_scan.cpp ****     __quex_assert_no_passage();
4157:out/quex_scan.cpp **** _2460:
4158:out/quex_scan.cpp ****     __quex_debug_state(2460);
4159:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4160:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4161:out/quex_scan.cpp ****     switch( input ) {
4162:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2460), QUEX_LABEL(2674));
4163:out/quex_scan.cpp ****         case 0x30:    
4164:out/quex_scan.cpp ****         case 0x31:    
4165:out/quex_scan.cpp ****         case 0x32:    
4166:out/quex_scan.cpp ****         case 0x33:    
4167:out/quex_scan.cpp ****         case 0x34:    
4168:out/quex_scan.cpp ****         case 0x35:    
4169:out/quex_scan.cpp ****         case 0x36:    
4170:out/quex_scan.cpp ****         case 0x37:    
4171:out/quex_scan.cpp ****         case 0x38:    
4172:out/quex_scan.cpp ****         case 0x39:    
4173:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 130


4174:out/quex_scan.cpp ****         case 0x42:    
4175:out/quex_scan.cpp ****         case 0x43:    
4176:out/quex_scan.cpp ****         case 0x44:    
4177:out/quex_scan.cpp ****         case 0x45:    
4178:out/quex_scan.cpp ****         case 0x46:    
4179:out/quex_scan.cpp ****         case 0x47:    
4180:out/quex_scan.cpp ****         case 0x48:    
4181:out/quex_scan.cpp ****         case 0x49:    
4182:out/quex_scan.cpp ****         case 0x4A:    
4183:out/quex_scan.cpp ****         case 0x4B:    
4184:out/quex_scan.cpp ****         case 0x4C:    
4185:out/quex_scan.cpp ****         case 0x4D:    
4186:out/quex_scan.cpp ****         case 0x4E:    
4187:out/quex_scan.cpp ****         case 0x4F:    
4188:out/quex_scan.cpp ****         case 0x50:    
4189:out/quex_scan.cpp ****         case 0x51:    
4190:out/quex_scan.cpp ****         case 0x52:    
4191:out/quex_scan.cpp ****         case 0x53:    
4192:out/quex_scan.cpp ****         case 0x54:    
4193:out/quex_scan.cpp ****         case 0x55:    
4194:out/quex_scan.cpp ****         case 0x56:    
4195:out/quex_scan.cpp ****         case 0x57:    
4196:out/quex_scan.cpp ****         case 0x58:    
4197:out/quex_scan.cpp ****         case 0x59:    
4198:out/quex_scan.cpp ****         case 0x5A:    
4199:out/quex_scan.cpp ****         case 0x5F:    
4200:out/quex_scan.cpp ****         case 0x61:    
4201:out/quex_scan.cpp ****         case 0x62:    
4202:out/quex_scan.cpp ****         case 0x63:    
4203:out/quex_scan.cpp ****         case 0x64:    
4204:out/quex_scan.cpp ****         case 0x65:    
4205:out/quex_scan.cpp ****         case 0x66:    
4206:out/quex_scan.cpp ****         case 0x67:    
4207:out/quex_scan.cpp ****         case 0x68:    
4208:out/quex_scan.cpp ****         case 0x69:    
4209:out/quex_scan.cpp ****         case 0x6A:    
4210:out/quex_scan.cpp ****         case 0x6B:    
4211:out/quex_scan.cpp ****         case 0x6C:    
4212:out/quex_scan.cpp ****         case 0x6D:    
4213:out/quex_scan.cpp ****         case 0x6E:    
4214:out/quex_scan.cpp ****         case 0x6F:    
4215:out/quex_scan.cpp ****         case 0x70:    
4216:out/quex_scan.cpp ****         case 0x71:    
4217:out/quex_scan.cpp ****         case 0x72:    
4218:out/quex_scan.cpp ****         case 0x73:    
4219:out/quex_scan.cpp ****         case 0x74:    
4220:out/quex_scan.cpp ****         case 0x75:    
4221:out/quex_scan.cpp ****         case 0x76:    
4222:out/quex_scan.cpp ****         case 0x77:    
4223:out/quex_scan.cpp ****         case 0x78:    
4224:out/quex_scan.cpp ****         case 0x79:    
4225:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4226:out/quex_scan.cpp ****     }
4227:out/quex_scan.cpp **** 
4228:out/quex_scan.cpp **** _2674:
4229:out/quex_scan.cpp ****         goto _2675;
4230:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 131


4231:out/quex_scan.cpp **** 
4232:out/quex_scan.cpp ****     __quex_assert_no_passage();
4233:out/quex_scan.cpp **** _2461:
4234:out/quex_scan.cpp ****     __quex_debug_state(2461);
4235:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4236:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4237:out/quex_scan.cpp ****     switch( input ) {
4238:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2461), QUEX_LABEL(2676));
4239:out/quex_scan.cpp ****         case 0x30:    
4240:out/quex_scan.cpp ****         case 0x31:    
4241:out/quex_scan.cpp ****         case 0x32:    
4242:out/quex_scan.cpp ****         case 0x33:    
4243:out/quex_scan.cpp ****         case 0x34:    
4244:out/quex_scan.cpp ****         case 0x35:    
4245:out/quex_scan.cpp ****         case 0x36:    
4246:out/quex_scan.cpp ****         case 0x37:    
4247:out/quex_scan.cpp ****         case 0x38:    
4248:out/quex_scan.cpp ****         case 0x39:    
4249:out/quex_scan.cpp ****         case 0x41:    
4250:out/quex_scan.cpp ****         case 0x42:    
4251:out/quex_scan.cpp ****         case 0x43:    
4252:out/quex_scan.cpp ****         case 0x44:    
4253:out/quex_scan.cpp ****         case 0x45:    
4254:out/quex_scan.cpp ****         case 0x46:    
4255:out/quex_scan.cpp ****         case 0x47:    
4256:out/quex_scan.cpp ****         case 0x48:    
4257:out/quex_scan.cpp ****         case 0x49:    
4258:out/quex_scan.cpp ****         case 0x4A:    
4259:out/quex_scan.cpp ****         case 0x4B:    
4260:out/quex_scan.cpp ****         case 0x4C:    
4261:out/quex_scan.cpp ****         case 0x4D:    
4262:out/quex_scan.cpp ****         case 0x4E:    
4263:out/quex_scan.cpp ****         case 0x4F:    
4264:out/quex_scan.cpp ****         case 0x50:    
4265:out/quex_scan.cpp ****         case 0x51:    
4266:out/quex_scan.cpp ****         case 0x52:    
4267:out/quex_scan.cpp ****         case 0x53:    
4268:out/quex_scan.cpp ****         case 0x54:    
4269:out/quex_scan.cpp ****         case 0x55:    
4270:out/quex_scan.cpp ****         case 0x56:    
4271:out/quex_scan.cpp ****         case 0x57:    
4272:out/quex_scan.cpp ****         case 0x58:    
4273:out/quex_scan.cpp ****         case 0x59:    
4274:out/quex_scan.cpp ****         case 0x5A:    
4275:out/quex_scan.cpp ****         case 0x5F:    
4276:out/quex_scan.cpp ****         case 0x61:    
4277:out/quex_scan.cpp ****         case 0x62:    
4278:out/quex_scan.cpp ****         case 0x63:    
4279:out/quex_scan.cpp ****         case 0x64:    
4280:out/quex_scan.cpp ****         case 0x65:    
4281:out/quex_scan.cpp ****         case 0x66:    
4282:out/quex_scan.cpp ****         case 0x67:    
4283:out/quex_scan.cpp ****         case 0x68:    
4284:out/quex_scan.cpp ****         case 0x69:    
4285:out/quex_scan.cpp ****         case 0x6A:    
4286:out/quex_scan.cpp ****         case 0x6B:    
4287:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 132


4288:out/quex_scan.cpp ****         case 0x6D:    
4289:out/quex_scan.cpp ****         case 0x6E:    
4290:out/quex_scan.cpp ****         case 0x6F:    
4291:out/quex_scan.cpp ****         case 0x70:    
4292:out/quex_scan.cpp ****         case 0x71:    goto _2364;
4293:out/quex_scan.cpp ****         case 0x72:    goto _2462;
4294:out/quex_scan.cpp ****         case 0x73:    
4295:out/quex_scan.cpp ****         case 0x74:    
4296:out/quex_scan.cpp ****         case 0x75:    
4297:out/quex_scan.cpp ****         case 0x76:    
4298:out/quex_scan.cpp ****         case 0x77:    
4299:out/quex_scan.cpp ****         case 0x78:    
4300:out/quex_scan.cpp ****         case 0x79:    
4301:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4302:out/quex_scan.cpp ****     }
4303:out/quex_scan.cpp **** 
4304:out/quex_scan.cpp **** _2676:
4305:out/quex_scan.cpp ****         goto _2536;
4306:out/quex_scan.cpp **** 
4307:out/quex_scan.cpp **** 
4308:out/quex_scan.cpp ****     __quex_assert_no_passage();
4309:out/quex_scan.cpp **** _2462:
4310:out/quex_scan.cpp ****     __quex_debug_state(2462);
4311:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4312:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4313:out/quex_scan.cpp ****     switch( input ) {
4314:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2462), QUEX_LABEL(2677));
4315:out/quex_scan.cpp ****         case 0x30:    
4316:out/quex_scan.cpp ****         case 0x31:    
4317:out/quex_scan.cpp ****         case 0x32:    
4318:out/quex_scan.cpp ****         case 0x33:    
4319:out/quex_scan.cpp ****         case 0x34:    
4320:out/quex_scan.cpp ****         case 0x35:    
4321:out/quex_scan.cpp ****         case 0x36:    
4322:out/quex_scan.cpp ****         case 0x37:    
4323:out/quex_scan.cpp ****         case 0x38:    
4324:out/quex_scan.cpp ****         case 0x39:    
4325:out/quex_scan.cpp ****         case 0x41:    
4326:out/quex_scan.cpp ****         case 0x42:    
4327:out/quex_scan.cpp ****         case 0x43:    
4328:out/quex_scan.cpp ****         case 0x44:    
4329:out/quex_scan.cpp ****         case 0x45:    
4330:out/quex_scan.cpp ****         case 0x46:    
4331:out/quex_scan.cpp ****         case 0x47:    
4332:out/quex_scan.cpp ****         case 0x48:    
4333:out/quex_scan.cpp ****         case 0x49:    
4334:out/quex_scan.cpp ****         case 0x4A:    
4335:out/quex_scan.cpp ****         case 0x4B:    
4336:out/quex_scan.cpp ****         case 0x4C:    
4337:out/quex_scan.cpp ****         case 0x4D:    
4338:out/quex_scan.cpp ****         case 0x4E:    
4339:out/quex_scan.cpp ****         case 0x4F:    
4340:out/quex_scan.cpp ****         case 0x50:    
4341:out/quex_scan.cpp ****         case 0x51:    
4342:out/quex_scan.cpp ****         case 0x52:    
4343:out/quex_scan.cpp ****         case 0x53:    
4344:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 133


4345:out/quex_scan.cpp ****         case 0x55:    
4346:out/quex_scan.cpp ****         case 0x56:    
4347:out/quex_scan.cpp ****         case 0x57:    
4348:out/quex_scan.cpp ****         case 0x58:    
4349:out/quex_scan.cpp ****         case 0x59:    
4350:out/quex_scan.cpp ****         case 0x5A:    
4351:out/quex_scan.cpp ****         case 0x5F:    
4352:out/quex_scan.cpp ****         case 0x61:    
4353:out/quex_scan.cpp ****         case 0x62:    
4354:out/quex_scan.cpp ****         case 0x63:    
4355:out/quex_scan.cpp ****         case 0x64:    
4356:out/quex_scan.cpp ****         case 0x65:    
4357:out/quex_scan.cpp ****         case 0x66:    
4358:out/quex_scan.cpp ****         case 0x67:    
4359:out/quex_scan.cpp ****         case 0x68:    
4360:out/quex_scan.cpp ****         case 0x69:    
4361:out/quex_scan.cpp ****         case 0x6A:    
4362:out/quex_scan.cpp ****         case 0x6B:    
4363:out/quex_scan.cpp ****         case 0x6C:    
4364:out/quex_scan.cpp ****         case 0x6D:    
4365:out/quex_scan.cpp ****         case 0x6E:    
4366:out/quex_scan.cpp ****         case 0x6F:    
4367:out/quex_scan.cpp ****         case 0x70:    
4368:out/quex_scan.cpp ****         case 0x71:    
4369:out/quex_scan.cpp ****         case 0x72:    
4370:out/quex_scan.cpp ****         case 0x73:    
4371:out/quex_scan.cpp ****         case 0x74:    
4372:out/quex_scan.cpp ****         case 0x75:    
4373:out/quex_scan.cpp ****         case 0x76:    
4374:out/quex_scan.cpp ****         case 0x77:    
4375:out/quex_scan.cpp ****         case 0x78:    
4376:out/quex_scan.cpp ****         case 0x79:    
4377:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4378:out/quex_scan.cpp ****     }
4379:out/quex_scan.cpp **** 
4380:out/quex_scan.cpp **** _2677:
4381:out/quex_scan.cpp ****         goto _2678;
4382:out/quex_scan.cpp **** 
4383:out/quex_scan.cpp **** 
4384:out/quex_scan.cpp ****     __quex_assert_no_passage();
4385:out/quex_scan.cpp **** _2463:
4386:out/quex_scan.cpp ****     __quex_debug_state(2463);
4387:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4388:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4389:out/quex_scan.cpp ****     switch( input ) {
4390:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2463), QUEX_LABEL(2679));
4391:out/quex_scan.cpp ****         case 0x30:    
4392:out/quex_scan.cpp ****         case 0x31:    
4393:out/quex_scan.cpp ****         case 0x32:    
4394:out/quex_scan.cpp ****         case 0x33:    
4395:out/quex_scan.cpp ****         case 0x34:    
4396:out/quex_scan.cpp ****         case 0x35:    
4397:out/quex_scan.cpp ****         case 0x36:    
4398:out/quex_scan.cpp ****         case 0x37:    
4399:out/quex_scan.cpp ****         case 0x38:    
4400:out/quex_scan.cpp ****         case 0x39:    
4401:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 134


4402:out/quex_scan.cpp ****         case 0x42:    
4403:out/quex_scan.cpp ****         case 0x43:    
4404:out/quex_scan.cpp ****         case 0x44:    
4405:out/quex_scan.cpp ****         case 0x45:    
4406:out/quex_scan.cpp ****         case 0x46:    
4407:out/quex_scan.cpp ****         case 0x47:    
4408:out/quex_scan.cpp ****         case 0x48:    
4409:out/quex_scan.cpp ****         case 0x49:    
4410:out/quex_scan.cpp ****         case 0x4A:    
4411:out/quex_scan.cpp ****         case 0x4B:    
4412:out/quex_scan.cpp ****         case 0x4C:    
4413:out/quex_scan.cpp ****         case 0x4D:    
4414:out/quex_scan.cpp ****         case 0x4E:    
4415:out/quex_scan.cpp ****         case 0x4F:    
4416:out/quex_scan.cpp ****         case 0x50:    
4417:out/quex_scan.cpp ****         case 0x51:    
4418:out/quex_scan.cpp ****         case 0x52:    
4419:out/quex_scan.cpp ****         case 0x53:    
4420:out/quex_scan.cpp ****         case 0x54:    
4421:out/quex_scan.cpp ****         case 0x55:    
4422:out/quex_scan.cpp ****         case 0x56:    
4423:out/quex_scan.cpp ****         case 0x57:    
4424:out/quex_scan.cpp ****         case 0x58:    
4425:out/quex_scan.cpp ****         case 0x59:    
4426:out/quex_scan.cpp ****         case 0x5A:    
4427:out/quex_scan.cpp ****         case 0x5F:    
4428:out/quex_scan.cpp ****         case 0x61:    
4429:out/quex_scan.cpp ****         case 0x62:    
4430:out/quex_scan.cpp ****         case 0x63:    
4431:out/quex_scan.cpp ****         case 0x64:    
4432:out/quex_scan.cpp ****         case 0x65:    goto _2364;
4433:out/quex_scan.cpp ****         case 0x66:    goto _2469;
4434:out/quex_scan.cpp ****         case 0x67:    
4435:out/quex_scan.cpp ****         case 0x68:    
4436:out/quex_scan.cpp ****         case 0x69:    
4437:out/quex_scan.cpp ****         case 0x6A:    
4438:out/quex_scan.cpp ****         case 0x6B:    
4439:out/quex_scan.cpp ****         case 0x6C:    
4440:out/quex_scan.cpp ****         case 0x6D:    
4441:out/quex_scan.cpp ****         case 0x6E:    
4442:out/quex_scan.cpp ****         case 0x6F:    
4443:out/quex_scan.cpp ****         case 0x70:    
4444:out/quex_scan.cpp ****         case 0x71:    
4445:out/quex_scan.cpp ****         case 0x72:    
4446:out/quex_scan.cpp ****         case 0x73:    
4447:out/quex_scan.cpp ****         case 0x74:    
4448:out/quex_scan.cpp ****         case 0x75:    
4449:out/quex_scan.cpp ****         case 0x76:    
4450:out/quex_scan.cpp ****         case 0x77:    
4451:out/quex_scan.cpp ****         case 0x78:    
4452:out/quex_scan.cpp ****         case 0x79:    
4453:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4454:out/quex_scan.cpp ****     }
4455:out/quex_scan.cpp **** 
4456:out/quex_scan.cpp **** _2679:
4457:out/quex_scan.cpp ****         goto _2536;
4458:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 135


4459:out/quex_scan.cpp **** 
4460:out/quex_scan.cpp ****     __quex_assert_no_passage();
4461:out/quex_scan.cpp **** _2464:
4462:out/quex_scan.cpp ****     __quex_debug_state(2464);
4463:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4464:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4465:out/quex_scan.cpp ****     switch( input ) {
4466:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2464), QUEX_LABEL(2680));
4467:out/quex_scan.cpp ****         case 0x30:    
4468:out/quex_scan.cpp ****         case 0x31:    
4469:out/quex_scan.cpp ****         case 0x32:    
4470:out/quex_scan.cpp ****         case 0x33:    
4471:out/quex_scan.cpp ****         case 0x34:    
4472:out/quex_scan.cpp ****         case 0x35:    
4473:out/quex_scan.cpp ****         case 0x36:    
4474:out/quex_scan.cpp ****         case 0x37:    
4475:out/quex_scan.cpp ****         case 0x38:    
4476:out/quex_scan.cpp ****         case 0x39:    
4477:out/quex_scan.cpp ****         case 0x41:    
4478:out/quex_scan.cpp ****         case 0x42:    
4479:out/quex_scan.cpp ****         case 0x43:    
4480:out/quex_scan.cpp ****         case 0x44:    
4481:out/quex_scan.cpp ****         case 0x45:    
4482:out/quex_scan.cpp ****         case 0x46:    
4483:out/quex_scan.cpp ****         case 0x47:    
4484:out/quex_scan.cpp ****         case 0x48:    
4485:out/quex_scan.cpp ****         case 0x49:    
4486:out/quex_scan.cpp ****         case 0x4A:    
4487:out/quex_scan.cpp ****         case 0x4B:    
4488:out/quex_scan.cpp ****         case 0x4C:    
4489:out/quex_scan.cpp ****         case 0x4D:    
4490:out/quex_scan.cpp ****         case 0x4E:    
4491:out/quex_scan.cpp ****         case 0x4F:    
4492:out/quex_scan.cpp ****         case 0x50:    
4493:out/quex_scan.cpp ****         case 0x51:    
4494:out/quex_scan.cpp ****         case 0x52:    
4495:out/quex_scan.cpp ****         case 0x53:    
4496:out/quex_scan.cpp ****         case 0x54:    
4497:out/quex_scan.cpp ****         case 0x55:    
4498:out/quex_scan.cpp ****         case 0x56:    
4499:out/quex_scan.cpp ****         case 0x57:    
4500:out/quex_scan.cpp ****         case 0x58:    
4501:out/quex_scan.cpp ****         case 0x59:    
4502:out/quex_scan.cpp ****         case 0x5A:    
4503:out/quex_scan.cpp ****         case 0x5F:    
4504:out/quex_scan.cpp ****         case 0x61:    
4505:out/quex_scan.cpp ****         case 0x62:    
4506:out/quex_scan.cpp ****         case 0x63:    
4507:out/quex_scan.cpp ****         case 0x64:    
4508:out/quex_scan.cpp ****         case 0x65:    
4509:out/quex_scan.cpp ****         case 0x66:    
4510:out/quex_scan.cpp ****         case 0x67:    
4511:out/quex_scan.cpp ****         case 0x68:    
4512:out/quex_scan.cpp ****         case 0x69:    
4513:out/quex_scan.cpp ****         case 0x6A:    
4514:out/quex_scan.cpp ****         case 0x6B:    
4515:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 136


4516:out/quex_scan.cpp ****         case 0x6D:    
4517:out/quex_scan.cpp ****         case 0x6E:    
4518:out/quex_scan.cpp ****         case 0x6F:    
4519:out/quex_scan.cpp ****         case 0x70:    
4520:out/quex_scan.cpp ****         case 0x71:    
4521:out/quex_scan.cpp ****         case 0x72:    
4522:out/quex_scan.cpp ****         case 0x73:    
4523:out/quex_scan.cpp ****         case 0x74:    goto _2364;
4524:out/quex_scan.cpp ****         case 0x75:    goto _2465;
4525:out/quex_scan.cpp ****         case 0x76:    
4526:out/quex_scan.cpp ****         case 0x77:    
4527:out/quex_scan.cpp ****         case 0x78:    
4528:out/quex_scan.cpp ****         case 0x79:    
4529:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4530:out/quex_scan.cpp ****     }
4531:out/quex_scan.cpp **** 
4532:out/quex_scan.cpp **** _2680:
4533:out/quex_scan.cpp ****         goto _2681;
4534:out/quex_scan.cpp **** 
4535:out/quex_scan.cpp **** 
4536:out/quex_scan.cpp ****     __quex_assert_no_passage();
4537:out/quex_scan.cpp **** _2465:
4538:out/quex_scan.cpp ****     __quex_debug_state(2465);
4539:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4540:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4541:out/quex_scan.cpp ****     switch( input ) {
4542:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2465), QUEX_LABEL(2682));
4543:out/quex_scan.cpp ****         case 0x30:    
4544:out/quex_scan.cpp ****         case 0x31:    
4545:out/quex_scan.cpp ****         case 0x32:    
4546:out/quex_scan.cpp ****         case 0x33:    
4547:out/quex_scan.cpp ****         case 0x34:    
4548:out/quex_scan.cpp ****         case 0x35:    
4549:out/quex_scan.cpp ****         case 0x36:    
4550:out/quex_scan.cpp ****         case 0x37:    
4551:out/quex_scan.cpp ****         case 0x38:    
4552:out/quex_scan.cpp ****         case 0x39:    
4553:out/quex_scan.cpp ****         case 0x41:    
4554:out/quex_scan.cpp ****         case 0x42:    
4555:out/quex_scan.cpp ****         case 0x43:    
4556:out/quex_scan.cpp ****         case 0x44:    
4557:out/quex_scan.cpp ****         case 0x45:    
4558:out/quex_scan.cpp ****         case 0x46:    
4559:out/quex_scan.cpp ****         case 0x47:    
4560:out/quex_scan.cpp ****         case 0x48:    
4561:out/quex_scan.cpp ****         case 0x49:    
4562:out/quex_scan.cpp ****         case 0x4A:    
4563:out/quex_scan.cpp ****         case 0x4B:    
4564:out/quex_scan.cpp ****         case 0x4C:    
4565:out/quex_scan.cpp ****         case 0x4D:    
4566:out/quex_scan.cpp ****         case 0x4E:    
4567:out/quex_scan.cpp ****         case 0x4F:    
4568:out/quex_scan.cpp ****         case 0x50:    
4569:out/quex_scan.cpp ****         case 0x51:    
4570:out/quex_scan.cpp ****         case 0x52:    
4571:out/quex_scan.cpp ****         case 0x53:    
4572:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 137


4573:out/quex_scan.cpp ****         case 0x55:    
4574:out/quex_scan.cpp ****         case 0x56:    
4575:out/quex_scan.cpp ****         case 0x57:    
4576:out/quex_scan.cpp ****         case 0x58:    
4577:out/quex_scan.cpp ****         case 0x59:    
4578:out/quex_scan.cpp ****         case 0x5A:    
4579:out/quex_scan.cpp ****         case 0x5F:    
4580:out/quex_scan.cpp ****         case 0x61:    goto _2364;
4581:out/quex_scan.cpp ****         case 0x62:    goto _2466;
4582:out/quex_scan.cpp ****         case 0x63:    
4583:out/quex_scan.cpp ****         case 0x64:    
4584:out/quex_scan.cpp ****         case 0x65:    
4585:out/quex_scan.cpp ****         case 0x66:    
4586:out/quex_scan.cpp ****         case 0x67:    
4587:out/quex_scan.cpp ****         case 0x68:    
4588:out/quex_scan.cpp ****         case 0x69:    
4589:out/quex_scan.cpp ****         case 0x6A:    
4590:out/quex_scan.cpp ****         case 0x6B:    
4591:out/quex_scan.cpp ****         case 0x6C:    
4592:out/quex_scan.cpp ****         case 0x6D:    
4593:out/quex_scan.cpp ****         case 0x6E:    
4594:out/quex_scan.cpp ****         case 0x6F:    
4595:out/quex_scan.cpp ****         case 0x70:    
4596:out/quex_scan.cpp ****         case 0x71:    
4597:out/quex_scan.cpp ****         case 0x72:    
4598:out/quex_scan.cpp ****         case 0x73:    
4599:out/quex_scan.cpp ****         case 0x74:    
4600:out/quex_scan.cpp ****         case 0x75:    
4601:out/quex_scan.cpp ****         case 0x76:    
4602:out/quex_scan.cpp ****         case 0x77:    
4603:out/quex_scan.cpp ****         case 0x78:    
4604:out/quex_scan.cpp ****         case 0x79:    
4605:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4606:out/quex_scan.cpp ****     }
4607:out/quex_scan.cpp **** 
4608:out/quex_scan.cpp **** _2682:
4609:out/quex_scan.cpp ****         goto _2536;
4610:out/quex_scan.cpp **** 
4611:out/quex_scan.cpp **** 
4612:out/quex_scan.cpp ****     __quex_assert_no_passage();
4613:out/quex_scan.cpp **** _2466:
4614:out/quex_scan.cpp ****     __quex_debug_state(2466);
4615:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4616:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4617:out/quex_scan.cpp ****     switch( input ) {
4618:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2466), QUEX_LABEL(2683));
4619:out/quex_scan.cpp ****         case 0x30:    
4620:out/quex_scan.cpp ****         case 0x31:    
4621:out/quex_scan.cpp ****         case 0x32:    
4622:out/quex_scan.cpp ****         case 0x33:    
4623:out/quex_scan.cpp ****         case 0x34:    
4624:out/quex_scan.cpp ****         case 0x35:    
4625:out/quex_scan.cpp ****         case 0x36:    
4626:out/quex_scan.cpp ****         case 0x37:    
4627:out/quex_scan.cpp ****         case 0x38:    
4628:out/quex_scan.cpp ****         case 0x39:    
4629:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 138


4630:out/quex_scan.cpp ****         case 0x42:    
4631:out/quex_scan.cpp ****         case 0x43:    
4632:out/quex_scan.cpp ****         case 0x44:    
4633:out/quex_scan.cpp ****         case 0x45:    
4634:out/quex_scan.cpp ****         case 0x46:    
4635:out/quex_scan.cpp ****         case 0x47:    
4636:out/quex_scan.cpp ****         case 0x48:    
4637:out/quex_scan.cpp ****         case 0x49:    
4638:out/quex_scan.cpp ****         case 0x4A:    
4639:out/quex_scan.cpp ****         case 0x4B:    
4640:out/quex_scan.cpp ****         case 0x4C:    
4641:out/quex_scan.cpp ****         case 0x4D:    
4642:out/quex_scan.cpp ****         case 0x4E:    
4643:out/quex_scan.cpp ****         case 0x4F:    
4644:out/quex_scan.cpp ****         case 0x50:    
4645:out/quex_scan.cpp ****         case 0x51:    
4646:out/quex_scan.cpp ****         case 0x52:    
4647:out/quex_scan.cpp ****         case 0x53:    
4648:out/quex_scan.cpp ****         case 0x54:    
4649:out/quex_scan.cpp ****         case 0x55:    
4650:out/quex_scan.cpp ****         case 0x56:    
4651:out/quex_scan.cpp ****         case 0x57:    
4652:out/quex_scan.cpp ****         case 0x58:    
4653:out/quex_scan.cpp ****         case 0x59:    
4654:out/quex_scan.cpp ****         case 0x5A:    
4655:out/quex_scan.cpp ****         case 0x5F:    
4656:out/quex_scan.cpp ****         case 0x61:    
4657:out/quex_scan.cpp ****         case 0x62:    
4658:out/quex_scan.cpp ****         case 0x63:    
4659:out/quex_scan.cpp ****         case 0x64:    
4660:out/quex_scan.cpp ****         case 0x65:    
4661:out/quex_scan.cpp ****         case 0x66:    
4662:out/quex_scan.cpp ****         case 0x67:    
4663:out/quex_scan.cpp ****         case 0x68:    
4664:out/quex_scan.cpp ****         case 0x69:    
4665:out/quex_scan.cpp ****         case 0x6A:    
4666:out/quex_scan.cpp ****         case 0x6B:    goto _2364;
4667:out/quex_scan.cpp ****         case 0x6C:    goto _2467;
4668:out/quex_scan.cpp ****         case 0x6D:    
4669:out/quex_scan.cpp ****         case 0x6E:    
4670:out/quex_scan.cpp ****         case 0x6F:    
4671:out/quex_scan.cpp ****         case 0x70:    
4672:out/quex_scan.cpp ****         case 0x71:    
4673:out/quex_scan.cpp ****         case 0x72:    
4674:out/quex_scan.cpp ****         case 0x73:    
4675:out/quex_scan.cpp ****         case 0x74:    
4676:out/quex_scan.cpp ****         case 0x75:    
4677:out/quex_scan.cpp ****         case 0x76:    
4678:out/quex_scan.cpp ****         case 0x77:    
4679:out/quex_scan.cpp ****         case 0x78:    
4680:out/quex_scan.cpp ****         case 0x79:    
4681:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4682:out/quex_scan.cpp ****     }
4683:out/quex_scan.cpp **** 
4684:out/quex_scan.cpp **** _2683:
4685:out/quex_scan.cpp ****         goto _2536;
4686:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 139


4687:out/quex_scan.cpp **** 
4688:out/quex_scan.cpp ****     __quex_assert_no_passage();
4689:out/quex_scan.cpp **** _2467:
4690:out/quex_scan.cpp ****     __quex_debug_state(2467);
4691:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4692:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4693:out/quex_scan.cpp ****     switch( input ) {
4694:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2467), QUEX_LABEL(2684));
4695:out/quex_scan.cpp ****         case 0x30:    
4696:out/quex_scan.cpp ****         case 0x31:    
4697:out/quex_scan.cpp ****         case 0x32:    
4698:out/quex_scan.cpp ****         case 0x33:    
4699:out/quex_scan.cpp ****         case 0x34:    
4700:out/quex_scan.cpp ****         case 0x35:    
4701:out/quex_scan.cpp ****         case 0x36:    
4702:out/quex_scan.cpp ****         case 0x37:    
4703:out/quex_scan.cpp ****         case 0x38:    
4704:out/quex_scan.cpp ****         case 0x39:    
4705:out/quex_scan.cpp ****         case 0x41:    
4706:out/quex_scan.cpp ****         case 0x42:    
4707:out/quex_scan.cpp ****         case 0x43:    
4708:out/quex_scan.cpp ****         case 0x44:    
4709:out/quex_scan.cpp ****         case 0x45:    
4710:out/quex_scan.cpp ****         case 0x46:    
4711:out/quex_scan.cpp ****         case 0x47:    
4712:out/quex_scan.cpp ****         case 0x48:    
4713:out/quex_scan.cpp ****         case 0x49:    
4714:out/quex_scan.cpp ****         case 0x4A:    
4715:out/quex_scan.cpp ****         case 0x4B:    
4716:out/quex_scan.cpp ****         case 0x4C:    
4717:out/quex_scan.cpp ****         case 0x4D:    
4718:out/quex_scan.cpp ****         case 0x4E:    
4719:out/quex_scan.cpp ****         case 0x4F:    
4720:out/quex_scan.cpp ****         case 0x50:    
4721:out/quex_scan.cpp ****         case 0x51:    
4722:out/quex_scan.cpp ****         case 0x52:    
4723:out/quex_scan.cpp ****         case 0x53:    
4724:out/quex_scan.cpp ****         case 0x54:    
4725:out/quex_scan.cpp ****         case 0x55:    
4726:out/quex_scan.cpp ****         case 0x56:    
4727:out/quex_scan.cpp ****         case 0x57:    
4728:out/quex_scan.cpp ****         case 0x58:    
4729:out/quex_scan.cpp ****         case 0x59:    
4730:out/quex_scan.cpp ****         case 0x5A:    
4731:out/quex_scan.cpp ****         case 0x5F:    
4732:out/quex_scan.cpp ****         case 0x61:    
4733:out/quex_scan.cpp ****         case 0x62:    
4734:out/quex_scan.cpp ****         case 0x63:    
4735:out/quex_scan.cpp ****         case 0x64:    goto _2364;
4736:out/quex_scan.cpp ****         case 0x65:    goto _2468;
4737:out/quex_scan.cpp ****         case 0x66:    
4738:out/quex_scan.cpp ****         case 0x67:    
4739:out/quex_scan.cpp ****         case 0x68:    
4740:out/quex_scan.cpp ****         case 0x69:    
4741:out/quex_scan.cpp ****         case 0x6A:    
4742:out/quex_scan.cpp ****         case 0x6B:    
4743:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 140


4744:out/quex_scan.cpp ****         case 0x6D:    
4745:out/quex_scan.cpp ****         case 0x6E:    
4746:out/quex_scan.cpp ****         case 0x6F:    
4747:out/quex_scan.cpp ****         case 0x70:    
4748:out/quex_scan.cpp ****         case 0x71:    
4749:out/quex_scan.cpp ****         case 0x72:    
4750:out/quex_scan.cpp ****         case 0x73:    
4751:out/quex_scan.cpp ****         case 0x74:    
4752:out/quex_scan.cpp ****         case 0x75:    
4753:out/quex_scan.cpp ****         case 0x76:    
4754:out/quex_scan.cpp ****         case 0x77:    
4755:out/quex_scan.cpp ****         case 0x78:    
4756:out/quex_scan.cpp ****         case 0x79:    
4757:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4758:out/quex_scan.cpp ****     }
4759:out/quex_scan.cpp **** 
4760:out/quex_scan.cpp **** _2684:
4761:out/quex_scan.cpp ****         goto _2536;
4762:out/quex_scan.cpp **** 
4763:out/quex_scan.cpp **** 
4764:out/quex_scan.cpp ****     __quex_assert_no_passage();
4765:out/quex_scan.cpp **** _2468:
4766:out/quex_scan.cpp ****     __quex_debug_state(2468);
4767:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4768:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4769:out/quex_scan.cpp ****     switch( input ) {
4770:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2468), QUEX_LABEL(2685));
4771:out/quex_scan.cpp ****         case 0x30:    
4772:out/quex_scan.cpp ****         case 0x31:    
4773:out/quex_scan.cpp ****         case 0x32:    
4774:out/quex_scan.cpp ****         case 0x33:    
4775:out/quex_scan.cpp ****         case 0x34:    
4776:out/quex_scan.cpp ****         case 0x35:    
4777:out/quex_scan.cpp ****         case 0x36:    
4778:out/quex_scan.cpp ****         case 0x37:    
4779:out/quex_scan.cpp ****         case 0x38:    
4780:out/quex_scan.cpp ****         case 0x39:    
4781:out/quex_scan.cpp ****         case 0x41:    
4782:out/quex_scan.cpp ****         case 0x42:    
4783:out/quex_scan.cpp ****         case 0x43:    
4784:out/quex_scan.cpp ****         case 0x44:    
4785:out/quex_scan.cpp ****         case 0x45:    
4786:out/quex_scan.cpp ****         case 0x46:    
4787:out/quex_scan.cpp ****         case 0x47:    
4788:out/quex_scan.cpp ****         case 0x48:    
4789:out/quex_scan.cpp ****         case 0x49:    
4790:out/quex_scan.cpp ****         case 0x4A:    
4791:out/quex_scan.cpp ****         case 0x4B:    
4792:out/quex_scan.cpp ****         case 0x4C:    
4793:out/quex_scan.cpp ****         case 0x4D:    
4794:out/quex_scan.cpp ****         case 0x4E:    
4795:out/quex_scan.cpp ****         case 0x4F:    
4796:out/quex_scan.cpp ****         case 0x50:    
4797:out/quex_scan.cpp ****         case 0x51:    
4798:out/quex_scan.cpp ****         case 0x52:    
4799:out/quex_scan.cpp ****         case 0x53:    
4800:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 141


4801:out/quex_scan.cpp ****         case 0x55:    
4802:out/quex_scan.cpp ****         case 0x56:    
4803:out/quex_scan.cpp ****         case 0x57:    
4804:out/quex_scan.cpp ****         case 0x58:    
4805:out/quex_scan.cpp ****         case 0x59:    
4806:out/quex_scan.cpp ****         case 0x5A:    
4807:out/quex_scan.cpp ****         case 0x5F:    
4808:out/quex_scan.cpp ****         case 0x61:    
4809:out/quex_scan.cpp ****         case 0x62:    
4810:out/quex_scan.cpp ****         case 0x63:    
4811:out/quex_scan.cpp ****         case 0x64:    
4812:out/quex_scan.cpp ****         case 0x65:    
4813:out/quex_scan.cpp ****         case 0x66:    
4814:out/quex_scan.cpp ****         case 0x67:    
4815:out/quex_scan.cpp ****         case 0x68:    
4816:out/quex_scan.cpp ****         case 0x69:    
4817:out/quex_scan.cpp ****         case 0x6A:    
4818:out/quex_scan.cpp ****         case 0x6B:    
4819:out/quex_scan.cpp ****         case 0x6C:    
4820:out/quex_scan.cpp ****         case 0x6D:    
4821:out/quex_scan.cpp ****         case 0x6E:    
4822:out/quex_scan.cpp ****         case 0x6F:    
4823:out/quex_scan.cpp ****         case 0x70:    
4824:out/quex_scan.cpp ****         case 0x71:    
4825:out/quex_scan.cpp ****         case 0x72:    
4826:out/quex_scan.cpp ****         case 0x73:    
4827:out/quex_scan.cpp ****         case 0x74:    
4828:out/quex_scan.cpp ****         case 0x75:    
4829:out/quex_scan.cpp ****         case 0x76:    
4830:out/quex_scan.cpp ****         case 0x77:    
4831:out/quex_scan.cpp ****         case 0x78:    
4832:out/quex_scan.cpp ****         case 0x79:    
4833:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4834:out/quex_scan.cpp ****     }
4835:out/quex_scan.cpp **** 
4836:out/quex_scan.cpp **** _2685:
4837:out/quex_scan.cpp ****         goto _2686;
4838:out/quex_scan.cpp **** 
4839:out/quex_scan.cpp **** 
4840:out/quex_scan.cpp ****     __quex_assert_no_passage();
4841:out/quex_scan.cpp **** _2469:
4842:out/quex_scan.cpp ****     __quex_debug_state(2469);
4843:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4844:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4845:out/quex_scan.cpp ****     switch( input ) {
4846:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2469), QUEX_LABEL(2687));
4847:out/quex_scan.cpp ****         case 0x30:    
4848:out/quex_scan.cpp ****         case 0x31:    
4849:out/quex_scan.cpp ****         case 0x32:    
4850:out/quex_scan.cpp ****         case 0x33:    
4851:out/quex_scan.cpp ****         case 0x34:    
4852:out/quex_scan.cpp ****         case 0x35:    
4853:out/quex_scan.cpp ****         case 0x36:    
4854:out/quex_scan.cpp ****         case 0x37:    
4855:out/quex_scan.cpp ****         case 0x38:    
4856:out/quex_scan.cpp ****         case 0x39:    
4857:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 142


4858:out/quex_scan.cpp ****         case 0x42:    
4859:out/quex_scan.cpp ****         case 0x43:    
4860:out/quex_scan.cpp ****         case 0x44:    
4861:out/quex_scan.cpp ****         case 0x45:    
4862:out/quex_scan.cpp ****         case 0x46:    
4863:out/quex_scan.cpp ****         case 0x47:    
4864:out/quex_scan.cpp ****         case 0x48:    
4865:out/quex_scan.cpp ****         case 0x49:    
4866:out/quex_scan.cpp ****         case 0x4A:    
4867:out/quex_scan.cpp ****         case 0x4B:    
4868:out/quex_scan.cpp ****         case 0x4C:    
4869:out/quex_scan.cpp ****         case 0x4D:    
4870:out/quex_scan.cpp ****         case 0x4E:    
4871:out/quex_scan.cpp ****         case 0x4F:    
4872:out/quex_scan.cpp ****         case 0x50:    
4873:out/quex_scan.cpp ****         case 0x51:    
4874:out/quex_scan.cpp ****         case 0x52:    
4875:out/quex_scan.cpp ****         case 0x53:    
4876:out/quex_scan.cpp ****         case 0x54:    
4877:out/quex_scan.cpp ****         case 0x55:    
4878:out/quex_scan.cpp ****         case 0x56:    
4879:out/quex_scan.cpp ****         case 0x57:    
4880:out/quex_scan.cpp ****         case 0x58:    
4881:out/quex_scan.cpp ****         case 0x59:    
4882:out/quex_scan.cpp ****         case 0x5A:    
4883:out/quex_scan.cpp ****         case 0x5F:    
4884:out/quex_scan.cpp ****         case 0x61:    
4885:out/quex_scan.cpp ****         case 0x62:    
4886:out/quex_scan.cpp ****         case 0x63:    
4887:out/quex_scan.cpp ****         case 0x64:    
4888:out/quex_scan.cpp ****         case 0x65:    
4889:out/quex_scan.cpp ****         case 0x66:    
4890:out/quex_scan.cpp ****         case 0x67:    
4891:out/quex_scan.cpp ****         case 0x68:    goto _2364;
4892:out/quex_scan.cpp ****         case 0x69:    goto _2470;
4893:out/quex_scan.cpp ****         case 0x6A:    
4894:out/quex_scan.cpp ****         case 0x6B:    
4895:out/quex_scan.cpp ****         case 0x6C:    
4896:out/quex_scan.cpp ****         case 0x6D:    
4897:out/quex_scan.cpp ****         case 0x6E:    
4898:out/quex_scan.cpp ****         case 0x6F:    
4899:out/quex_scan.cpp ****         case 0x70:    
4900:out/quex_scan.cpp ****         case 0x71:    
4901:out/quex_scan.cpp ****         case 0x72:    
4902:out/quex_scan.cpp ****         case 0x73:    
4903:out/quex_scan.cpp ****         case 0x74:    
4904:out/quex_scan.cpp ****         case 0x75:    
4905:out/quex_scan.cpp ****         case 0x76:    
4906:out/quex_scan.cpp ****         case 0x77:    
4907:out/quex_scan.cpp ****         case 0x78:    
4908:out/quex_scan.cpp ****         case 0x79:    
4909:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4910:out/quex_scan.cpp ****     }
4911:out/quex_scan.cpp **** 
4912:out/quex_scan.cpp **** _2687:
4913:out/quex_scan.cpp ****         goto _2536;
4914:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 143


4915:out/quex_scan.cpp **** 
4916:out/quex_scan.cpp ****     __quex_assert_no_passage();
4917:out/quex_scan.cpp **** _2470:
4918:out/quex_scan.cpp ****     __quex_debug_state(2470);
4919:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4920:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4921:out/quex_scan.cpp ****     switch( input ) {
4922:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2470), QUEX_LABEL(2688));
4923:out/quex_scan.cpp ****         case 0x30:    
4924:out/quex_scan.cpp ****         case 0x31:    
4925:out/quex_scan.cpp ****         case 0x32:    
4926:out/quex_scan.cpp ****         case 0x33:    
4927:out/quex_scan.cpp ****         case 0x34:    
4928:out/quex_scan.cpp ****         case 0x35:    
4929:out/quex_scan.cpp ****         case 0x36:    
4930:out/quex_scan.cpp ****         case 0x37:    
4931:out/quex_scan.cpp ****         case 0x38:    
4932:out/quex_scan.cpp ****         case 0x39:    
4933:out/quex_scan.cpp ****         case 0x41:    
4934:out/quex_scan.cpp ****         case 0x42:    
4935:out/quex_scan.cpp ****         case 0x43:    
4936:out/quex_scan.cpp ****         case 0x44:    
4937:out/quex_scan.cpp ****         case 0x45:    
4938:out/quex_scan.cpp ****         case 0x46:    
4939:out/quex_scan.cpp ****         case 0x47:    
4940:out/quex_scan.cpp ****         case 0x48:    
4941:out/quex_scan.cpp ****         case 0x49:    
4942:out/quex_scan.cpp ****         case 0x4A:    
4943:out/quex_scan.cpp ****         case 0x4B:    
4944:out/quex_scan.cpp ****         case 0x4C:    
4945:out/quex_scan.cpp ****         case 0x4D:    
4946:out/quex_scan.cpp ****         case 0x4E:    
4947:out/quex_scan.cpp ****         case 0x4F:    
4948:out/quex_scan.cpp ****         case 0x50:    
4949:out/quex_scan.cpp ****         case 0x51:    
4950:out/quex_scan.cpp ****         case 0x52:    
4951:out/quex_scan.cpp ****         case 0x53:    
4952:out/quex_scan.cpp ****         case 0x54:    
4953:out/quex_scan.cpp ****         case 0x55:    
4954:out/quex_scan.cpp ****         case 0x56:    
4955:out/quex_scan.cpp ****         case 0x57:    
4956:out/quex_scan.cpp ****         case 0x58:    
4957:out/quex_scan.cpp ****         case 0x59:    
4958:out/quex_scan.cpp ****         case 0x5A:    
4959:out/quex_scan.cpp ****         case 0x5F:    
4960:out/quex_scan.cpp ****         case 0x61:    
4961:out/quex_scan.cpp ****         case 0x62:    
4962:out/quex_scan.cpp ****         case 0x63:    
4963:out/quex_scan.cpp ****         case 0x64:    
4964:out/quex_scan.cpp ****         case 0x65:    
4965:out/quex_scan.cpp ****         case 0x66:    
4966:out/quex_scan.cpp ****         case 0x67:    
4967:out/quex_scan.cpp ****         case 0x68:    
4968:out/quex_scan.cpp ****         case 0x69:    
4969:out/quex_scan.cpp ****         case 0x6A:    
4970:out/quex_scan.cpp ****         case 0x6B:    
4971:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 144


4972:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
4973:out/quex_scan.cpp ****         case 0x6E:    goto _2471;
4974:out/quex_scan.cpp ****         case 0x6F:    
4975:out/quex_scan.cpp ****         case 0x70:    
4976:out/quex_scan.cpp ****         case 0x71:    
4977:out/quex_scan.cpp ****         case 0x72:    
4978:out/quex_scan.cpp ****         case 0x73:    
4979:out/quex_scan.cpp ****         case 0x74:    
4980:out/quex_scan.cpp ****         case 0x75:    
4981:out/quex_scan.cpp ****         case 0x76:    
4982:out/quex_scan.cpp ****         case 0x77:    
4983:out/quex_scan.cpp ****         case 0x78:    
4984:out/quex_scan.cpp ****         case 0x79:    
4985:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
4986:out/quex_scan.cpp ****     }
4987:out/quex_scan.cpp **** 
4988:out/quex_scan.cpp **** _2688:
4989:out/quex_scan.cpp ****         goto _2536;
4990:out/quex_scan.cpp **** 
4991:out/quex_scan.cpp **** 
4992:out/quex_scan.cpp ****     __quex_assert_no_passage();
4993:out/quex_scan.cpp **** _2471:
4994:out/quex_scan.cpp ****     __quex_debug_state(2471);
4995:out/quex_scan.cpp ****     ++(me->buffer._input_p);
4996:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
4997:out/quex_scan.cpp ****     switch( input ) {
4998:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2471), QUEX_LABEL(2689));
4999:out/quex_scan.cpp ****         case 0x30:    
5000:out/quex_scan.cpp ****         case 0x31:    
5001:out/quex_scan.cpp ****         case 0x32:    
5002:out/quex_scan.cpp ****         case 0x33:    
5003:out/quex_scan.cpp ****         case 0x34:    
5004:out/quex_scan.cpp ****         case 0x35:    
5005:out/quex_scan.cpp ****         case 0x36:    
5006:out/quex_scan.cpp ****         case 0x37:    
5007:out/quex_scan.cpp ****         case 0x38:    
5008:out/quex_scan.cpp ****         case 0x39:    
5009:out/quex_scan.cpp ****         case 0x41:    
5010:out/quex_scan.cpp ****         case 0x42:    
5011:out/quex_scan.cpp ****         case 0x43:    
5012:out/quex_scan.cpp ****         case 0x44:    
5013:out/quex_scan.cpp ****         case 0x45:    
5014:out/quex_scan.cpp ****         case 0x46:    
5015:out/quex_scan.cpp ****         case 0x47:    
5016:out/quex_scan.cpp ****         case 0x48:    
5017:out/quex_scan.cpp ****         case 0x49:    
5018:out/quex_scan.cpp ****         case 0x4A:    
5019:out/quex_scan.cpp ****         case 0x4B:    
5020:out/quex_scan.cpp ****         case 0x4C:    
5021:out/quex_scan.cpp ****         case 0x4D:    
5022:out/quex_scan.cpp ****         case 0x4E:    
5023:out/quex_scan.cpp ****         case 0x4F:    
5024:out/quex_scan.cpp ****         case 0x50:    
5025:out/quex_scan.cpp ****         case 0x51:    
5026:out/quex_scan.cpp ****         case 0x52:    
5027:out/quex_scan.cpp ****         case 0x53:    
5028:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 145


5029:out/quex_scan.cpp ****         case 0x55:    
5030:out/quex_scan.cpp ****         case 0x56:    
5031:out/quex_scan.cpp ****         case 0x57:    
5032:out/quex_scan.cpp ****         case 0x58:    
5033:out/quex_scan.cpp ****         case 0x59:    
5034:out/quex_scan.cpp ****         case 0x5A:    
5035:out/quex_scan.cpp ****         case 0x5F:    
5036:out/quex_scan.cpp ****         case 0x61:    
5037:out/quex_scan.cpp ****         case 0x62:    
5038:out/quex_scan.cpp ****         case 0x63:    
5039:out/quex_scan.cpp ****         case 0x64:    goto _2364;
5040:out/quex_scan.cpp ****         case 0x65:    goto _2472;
5041:out/quex_scan.cpp ****         case 0x66:    
5042:out/quex_scan.cpp ****         case 0x67:    
5043:out/quex_scan.cpp ****         case 0x68:    
5044:out/quex_scan.cpp ****         case 0x69:    
5045:out/quex_scan.cpp ****         case 0x6A:    
5046:out/quex_scan.cpp ****         case 0x6B:    
5047:out/quex_scan.cpp ****         case 0x6C:    
5048:out/quex_scan.cpp ****         case 0x6D:    
5049:out/quex_scan.cpp ****         case 0x6E:    
5050:out/quex_scan.cpp ****         case 0x6F:    
5051:out/quex_scan.cpp ****         case 0x70:    
5052:out/quex_scan.cpp ****         case 0x71:    
5053:out/quex_scan.cpp ****         case 0x72:    
5054:out/quex_scan.cpp ****         case 0x73:    
5055:out/quex_scan.cpp ****         case 0x74:    
5056:out/quex_scan.cpp ****         case 0x75:    
5057:out/quex_scan.cpp ****         case 0x76:    
5058:out/quex_scan.cpp ****         case 0x77:    
5059:out/quex_scan.cpp ****         case 0x78:    
5060:out/quex_scan.cpp ****         case 0x79:    
5061:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5062:out/quex_scan.cpp ****     }
5063:out/quex_scan.cpp **** 
5064:out/quex_scan.cpp **** _2689:
5065:out/quex_scan.cpp ****         goto _2536;
5066:out/quex_scan.cpp **** 
5067:out/quex_scan.cpp **** 
5068:out/quex_scan.cpp ****     __quex_assert_no_passage();
5069:out/quex_scan.cpp **** _2472:
5070:out/quex_scan.cpp ****     __quex_debug_state(2472);
5071:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5072:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5073:out/quex_scan.cpp ****     switch( input ) {
5074:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2472), QUEX_LABEL(2690));
5075:out/quex_scan.cpp ****         case 0x30:    
5076:out/quex_scan.cpp ****         case 0x31:    
5077:out/quex_scan.cpp ****         case 0x32:    
5078:out/quex_scan.cpp ****         case 0x33:    
5079:out/quex_scan.cpp ****         case 0x34:    
5080:out/quex_scan.cpp ****         case 0x35:    
5081:out/quex_scan.cpp ****         case 0x36:    
5082:out/quex_scan.cpp ****         case 0x37:    
5083:out/quex_scan.cpp ****         case 0x38:    
5084:out/quex_scan.cpp ****         case 0x39:    
5085:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 146


5086:out/quex_scan.cpp ****         case 0x42:    
5087:out/quex_scan.cpp ****         case 0x43:    
5088:out/quex_scan.cpp ****         case 0x44:    
5089:out/quex_scan.cpp ****         case 0x45:    
5090:out/quex_scan.cpp ****         case 0x46:    
5091:out/quex_scan.cpp ****         case 0x47:    
5092:out/quex_scan.cpp ****         case 0x48:    
5093:out/quex_scan.cpp ****         case 0x49:    
5094:out/quex_scan.cpp ****         case 0x4A:    
5095:out/quex_scan.cpp ****         case 0x4B:    
5096:out/quex_scan.cpp ****         case 0x4C:    
5097:out/quex_scan.cpp ****         case 0x4D:    
5098:out/quex_scan.cpp ****         case 0x4E:    
5099:out/quex_scan.cpp ****         case 0x4F:    
5100:out/quex_scan.cpp ****         case 0x50:    
5101:out/quex_scan.cpp ****         case 0x51:    
5102:out/quex_scan.cpp ****         case 0x52:    
5103:out/quex_scan.cpp ****         case 0x53:    
5104:out/quex_scan.cpp ****         case 0x54:    
5105:out/quex_scan.cpp ****         case 0x55:    
5106:out/quex_scan.cpp ****         case 0x56:    
5107:out/quex_scan.cpp ****         case 0x57:    
5108:out/quex_scan.cpp ****         case 0x58:    
5109:out/quex_scan.cpp ****         case 0x59:    
5110:out/quex_scan.cpp ****         case 0x5A:    
5111:out/quex_scan.cpp ****         case 0x5F:    
5112:out/quex_scan.cpp ****         case 0x61:    
5113:out/quex_scan.cpp ****         case 0x62:    
5114:out/quex_scan.cpp ****         case 0x63:    goto _2364;
5115:out/quex_scan.cpp ****         case 0x64:    goto _2473;
5116:out/quex_scan.cpp ****         case 0x65:    
5117:out/quex_scan.cpp ****         case 0x66:    
5118:out/quex_scan.cpp ****         case 0x67:    
5119:out/quex_scan.cpp ****         case 0x68:    
5120:out/quex_scan.cpp ****         case 0x69:    
5121:out/quex_scan.cpp ****         case 0x6A:    
5122:out/quex_scan.cpp ****         case 0x6B:    
5123:out/quex_scan.cpp ****         case 0x6C:    
5124:out/quex_scan.cpp ****         case 0x6D:    
5125:out/quex_scan.cpp ****         case 0x6E:    
5126:out/quex_scan.cpp ****         case 0x6F:    
5127:out/quex_scan.cpp ****         case 0x70:    
5128:out/quex_scan.cpp ****         case 0x71:    
5129:out/quex_scan.cpp ****         case 0x72:    
5130:out/quex_scan.cpp ****         case 0x73:    
5131:out/quex_scan.cpp ****         case 0x74:    
5132:out/quex_scan.cpp ****         case 0x75:    
5133:out/quex_scan.cpp ****         case 0x76:    
5134:out/quex_scan.cpp ****         case 0x77:    
5135:out/quex_scan.cpp ****         case 0x78:    
5136:out/quex_scan.cpp ****         case 0x79:    
5137:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5138:out/quex_scan.cpp ****     }
5139:out/quex_scan.cpp **** 
5140:out/quex_scan.cpp **** _2690:
5141:out/quex_scan.cpp ****         goto _2536;
5142:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 147


5143:out/quex_scan.cpp **** 
5144:out/quex_scan.cpp ****     __quex_assert_no_passage();
5145:out/quex_scan.cpp **** _2473:
5146:out/quex_scan.cpp ****     __quex_debug_state(2473);
5147:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5148:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5149:out/quex_scan.cpp ****     switch( input ) {
5150:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2473), QUEX_LABEL(2691));
5151:out/quex_scan.cpp ****         case 0x30:    
5152:out/quex_scan.cpp ****         case 0x31:    
5153:out/quex_scan.cpp ****         case 0x32:    
5154:out/quex_scan.cpp ****         case 0x33:    
5155:out/quex_scan.cpp ****         case 0x34:    
5156:out/quex_scan.cpp ****         case 0x35:    
5157:out/quex_scan.cpp ****         case 0x36:    
5158:out/quex_scan.cpp ****         case 0x37:    
5159:out/quex_scan.cpp ****         case 0x38:    
5160:out/quex_scan.cpp ****         case 0x39:    
5161:out/quex_scan.cpp ****         case 0x41:    
5162:out/quex_scan.cpp ****         case 0x42:    
5163:out/quex_scan.cpp ****         case 0x43:    
5164:out/quex_scan.cpp ****         case 0x44:    
5165:out/quex_scan.cpp ****         case 0x45:    
5166:out/quex_scan.cpp ****         case 0x46:    
5167:out/quex_scan.cpp ****         case 0x47:    
5168:out/quex_scan.cpp ****         case 0x48:    
5169:out/quex_scan.cpp ****         case 0x49:    
5170:out/quex_scan.cpp ****         case 0x4A:    
5171:out/quex_scan.cpp ****         case 0x4B:    
5172:out/quex_scan.cpp ****         case 0x4C:    
5173:out/quex_scan.cpp ****         case 0x4D:    
5174:out/quex_scan.cpp ****         case 0x4E:    
5175:out/quex_scan.cpp ****         case 0x4F:    
5176:out/quex_scan.cpp ****         case 0x50:    
5177:out/quex_scan.cpp ****         case 0x51:    
5178:out/quex_scan.cpp ****         case 0x52:    
5179:out/quex_scan.cpp ****         case 0x53:    
5180:out/quex_scan.cpp ****         case 0x54:    
5181:out/quex_scan.cpp ****         case 0x55:    
5182:out/quex_scan.cpp ****         case 0x56:    
5183:out/quex_scan.cpp ****         case 0x57:    
5184:out/quex_scan.cpp ****         case 0x58:    
5185:out/quex_scan.cpp ****         case 0x59:    
5186:out/quex_scan.cpp ****         case 0x5A:    
5187:out/quex_scan.cpp ****         case 0x5F:    
5188:out/quex_scan.cpp ****         case 0x61:    
5189:out/quex_scan.cpp ****         case 0x62:    
5190:out/quex_scan.cpp ****         case 0x63:    
5191:out/quex_scan.cpp ****         case 0x64:    
5192:out/quex_scan.cpp ****         case 0x65:    
5193:out/quex_scan.cpp ****         case 0x66:    
5194:out/quex_scan.cpp ****         case 0x67:    
5195:out/quex_scan.cpp ****         case 0x68:    
5196:out/quex_scan.cpp ****         case 0x69:    
5197:out/quex_scan.cpp ****         case 0x6A:    
5198:out/quex_scan.cpp ****         case 0x6B:    
5199:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 148


5200:out/quex_scan.cpp ****         case 0x6D:    
5201:out/quex_scan.cpp ****         case 0x6E:    
5202:out/quex_scan.cpp ****         case 0x6F:    
5203:out/quex_scan.cpp ****         case 0x70:    
5204:out/quex_scan.cpp ****         case 0x71:    
5205:out/quex_scan.cpp ****         case 0x72:    
5206:out/quex_scan.cpp ****         case 0x73:    
5207:out/quex_scan.cpp ****         case 0x74:    
5208:out/quex_scan.cpp ****         case 0x75:    
5209:out/quex_scan.cpp ****         case 0x76:    
5210:out/quex_scan.cpp ****         case 0x77:    
5211:out/quex_scan.cpp ****         case 0x78:    
5212:out/quex_scan.cpp ****         case 0x79:    
5213:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5214:out/quex_scan.cpp ****     }
5215:out/quex_scan.cpp **** 
5216:out/quex_scan.cpp **** _2691:
5217:out/quex_scan.cpp ****         goto _2692;
5218:out/quex_scan.cpp **** 
5219:out/quex_scan.cpp **** 
5220:out/quex_scan.cpp ****     __quex_assert_no_passage();
5221:out/quex_scan.cpp **** _2476:
5222:out/quex_scan.cpp ****     __quex_debug_state(2476);
5223:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5224:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5225:out/quex_scan.cpp ****     switch( input ) {
5226:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2476), QUEX_LABEL(2693));
5227:out/quex_scan.cpp ****         case 0x30:    
5228:out/quex_scan.cpp ****         case 0x31:    
5229:out/quex_scan.cpp ****         case 0x32:    
5230:out/quex_scan.cpp ****         case 0x33:    
5231:out/quex_scan.cpp ****         case 0x34:    
5232:out/quex_scan.cpp ****         case 0x35:    
5233:out/quex_scan.cpp ****         case 0x36:    
5234:out/quex_scan.cpp ****         case 0x37:    
5235:out/quex_scan.cpp ****         case 0x38:    
5236:out/quex_scan.cpp ****         case 0x39:    
5237:out/quex_scan.cpp ****         case 0x41:    
5238:out/quex_scan.cpp ****         case 0x42:    
5239:out/quex_scan.cpp ****         case 0x43:    
5240:out/quex_scan.cpp ****         case 0x44:    
5241:out/quex_scan.cpp ****         case 0x45:    
5242:out/quex_scan.cpp ****         case 0x46:    
5243:out/quex_scan.cpp ****         case 0x47:    
5244:out/quex_scan.cpp ****         case 0x48:    
5245:out/quex_scan.cpp ****         case 0x49:    
5246:out/quex_scan.cpp ****         case 0x4A:    
5247:out/quex_scan.cpp ****         case 0x4B:    
5248:out/quex_scan.cpp ****         case 0x4C:    
5249:out/quex_scan.cpp ****         case 0x4D:    
5250:out/quex_scan.cpp ****         case 0x4E:    
5251:out/quex_scan.cpp ****         case 0x4F:    
5252:out/quex_scan.cpp ****         case 0x50:    
5253:out/quex_scan.cpp ****         case 0x51:    
5254:out/quex_scan.cpp ****         case 0x52:    
5255:out/quex_scan.cpp ****         case 0x53:    
5256:out/quex_scan.cpp ****         case 0x54:    
GAS LISTING /tmp/cc23nfB3.s 			page 149


5257:out/quex_scan.cpp ****         case 0x55:    
5258:out/quex_scan.cpp ****         case 0x56:    
5259:out/quex_scan.cpp ****         case 0x57:    
5260:out/quex_scan.cpp ****         case 0x58:    
5261:out/quex_scan.cpp ****         case 0x59:    
5262:out/quex_scan.cpp ****         case 0x5A:    
5263:out/quex_scan.cpp ****         case 0x5F:    
5264:out/quex_scan.cpp ****         case 0x61:    
5265:out/quex_scan.cpp ****         case 0x62:    
5266:out/quex_scan.cpp ****         case 0x63:    
5267:out/quex_scan.cpp ****         case 0x64:    
5268:out/quex_scan.cpp ****         case 0x65:    
5269:out/quex_scan.cpp ****         case 0x66:    
5270:out/quex_scan.cpp ****         case 0x67:    
5271:out/quex_scan.cpp ****         case 0x68:    
5272:out/quex_scan.cpp ****         case 0x69:    
5273:out/quex_scan.cpp ****         case 0x6A:    
5274:out/quex_scan.cpp ****         case 0x6B:    
5275:out/quex_scan.cpp ****         case 0x6C:    
5276:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
5277:out/quex_scan.cpp ****         case 0x6E:    goto _2477;
5278:out/quex_scan.cpp ****         case 0x6F:    
5279:out/quex_scan.cpp ****         case 0x70:    
5280:out/quex_scan.cpp ****         case 0x71:    
5281:out/quex_scan.cpp ****         case 0x72:    
5282:out/quex_scan.cpp ****         case 0x73:    
5283:out/quex_scan.cpp ****         case 0x74:    
5284:out/quex_scan.cpp ****         case 0x75:    
5285:out/quex_scan.cpp ****         case 0x76:    
5286:out/quex_scan.cpp ****         case 0x77:    
5287:out/quex_scan.cpp ****         case 0x78:    
5288:out/quex_scan.cpp ****         case 0x79:    
5289:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5290:out/quex_scan.cpp ****     }
5291:out/quex_scan.cpp **** 
5292:out/quex_scan.cpp **** _2693:
5293:out/quex_scan.cpp ****         goto _2536;
5294:out/quex_scan.cpp **** 
5295:out/quex_scan.cpp **** 
5296:out/quex_scan.cpp ****     __quex_assert_no_passage();
5297:out/quex_scan.cpp **** _2477:
5298:out/quex_scan.cpp ****     __quex_debug_state(2477);
5299:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5300:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5301:out/quex_scan.cpp ****     switch( input ) {
5302:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2477), QUEX_LABEL(2694));
5303:out/quex_scan.cpp ****         case 0x30:    
5304:out/quex_scan.cpp ****         case 0x31:    
5305:out/quex_scan.cpp ****         case 0x32:    
5306:out/quex_scan.cpp ****         case 0x33:    
5307:out/quex_scan.cpp ****         case 0x34:    
5308:out/quex_scan.cpp ****         case 0x35:    
5309:out/quex_scan.cpp ****         case 0x36:    
5310:out/quex_scan.cpp ****         case 0x37:    
5311:out/quex_scan.cpp ****         case 0x38:    
5312:out/quex_scan.cpp ****         case 0x39:    
5313:out/quex_scan.cpp ****         case 0x41:    
GAS LISTING /tmp/cc23nfB3.s 			page 150


5314:out/quex_scan.cpp ****         case 0x42:    
5315:out/quex_scan.cpp ****         case 0x43:    
5316:out/quex_scan.cpp ****         case 0x44:    
5317:out/quex_scan.cpp ****         case 0x45:    
5318:out/quex_scan.cpp ****         case 0x46:    
5319:out/quex_scan.cpp ****         case 0x47:    
5320:out/quex_scan.cpp ****         case 0x48:    
5321:out/quex_scan.cpp ****         case 0x49:    
5322:out/quex_scan.cpp ****         case 0x4A:    
5323:out/quex_scan.cpp ****         case 0x4B:    
5324:out/quex_scan.cpp ****         case 0x4C:    
5325:out/quex_scan.cpp ****         case 0x4D:    
5326:out/quex_scan.cpp ****         case 0x4E:    
5327:out/quex_scan.cpp ****         case 0x4F:    
5328:out/quex_scan.cpp ****         case 0x50:    
5329:out/quex_scan.cpp ****         case 0x51:    
5330:out/quex_scan.cpp ****         case 0x52:    
5331:out/quex_scan.cpp ****         case 0x53:    
5332:out/quex_scan.cpp ****         case 0x54:    
5333:out/quex_scan.cpp ****         case 0x55:    
5334:out/quex_scan.cpp ****         case 0x56:    
5335:out/quex_scan.cpp ****         case 0x57:    
5336:out/quex_scan.cpp ****         case 0x58:    
5337:out/quex_scan.cpp ****         case 0x59:    
5338:out/quex_scan.cpp ****         case 0x5A:    
5339:out/quex_scan.cpp ****         case 0x5F:    
5340:out/quex_scan.cpp ****         case 0x61:    
5341:out/quex_scan.cpp ****         case 0x62:    
5342:out/quex_scan.cpp ****         case 0x63:    
5343:out/quex_scan.cpp ****         case 0x64:    
5344:out/quex_scan.cpp ****         case 0x65:    
5345:out/quex_scan.cpp ****         case 0x66:    goto _2364;
5346:out/quex_scan.cpp ****         case 0x67:    goto _2478;
5347:out/quex_scan.cpp ****         case 0x68:    
5348:out/quex_scan.cpp ****         case 0x69:    
5349:out/quex_scan.cpp ****         case 0x6A:    
5350:out/quex_scan.cpp ****         case 0x6B:    
5351:out/quex_scan.cpp ****         case 0x6C:    
5352:out/quex_scan.cpp ****         case 0x6D:    
5353:out/quex_scan.cpp ****         case 0x6E:    
5354:out/quex_scan.cpp ****         case 0x6F:    
5355:out/quex_scan.cpp ****         case 0x70:    
5356:out/quex_scan.cpp ****         case 0x71:    
5357:out/quex_scan.cpp ****         case 0x72:    
5358:out/quex_scan.cpp ****         case 0x73:    
5359:out/quex_scan.cpp ****         case 0x74:    
5360:out/quex_scan.cpp ****         case 0x75:    
5361:out/quex_scan.cpp ****         case 0x76:    
5362:out/quex_scan.cpp ****         case 0x77:    
5363:out/quex_scan.cpp ****         case 0x78:    
5364:out/quex_scan.cpp ****         case 0x79:    
5365:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5366:out/quex_scan.cpp ****     }
5367:out/quex_scan.cpp **** 
5368:out/quex_scan.cpp **** _2694:
5369:out/quex_scan.cpp ****         goto _2536;
5370:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 151


5371:out/quex_scan.cpp **** 
5372:out/quex_scan.cpp ****     __quex_assert_no_passage();
5373:out/quex_scan.cpp **** _2478:
5374:out/quex_scan.cpp ****     __quex_debug_state(2478);
5375:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5376:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5377:out/quex_scan.cpp ****     switch( input ) {
5378:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2478), QUEX_LABEL(2695));
5379:out/quex_scan.cpp ****         case 0x30:    
5380:out/quex_scan.cpp ****         case 0x31:    
5381:out/quex_scan.cpp ****         case 0x32:    
5382:out/quex_scan.cpp ****         case 0x33:    
5383:out/quex_scan.cpp ****         case 0x34:    
5384:out/quex_scan.cpp ****         case 0x35:    
5385:out/quex_scan.cpp ****         case 0x36:    
5386:out/quex_scan.cpp ****         case 0x37:    
5387:out/quex_scan.cpp ****         case 0x38:    
5388:out/quex_scan.cpp ****         case 0x39:    
5389:out/quex_scan.cpp ****         case 0x41:    
5390:out/quex_scan.cpp ****         case 0x42:    
5391:out/quex_scan.cpp ****         case 0x43:    
5392:out/quex_scan.cpp ****         case 0x44:    
5393:out/quex_scan.cpp ****         case 0x45:    
5394:out/quex_scan.cpp ****         case 0x46:    
5395:out/quex_scan.cpp ****         case 0x47:    
5396:out/quex_scan.cpp ****         case 0x48:    
5397:out/quex_scan.cpp ****         case 0x49:    
5398:out/quex_scan.cpp ****         case 0x4A:    
5399:out/quex_scan.cpp ****         case 0x4B:    
5400:out/quex_scan.cpp ****         case 0x4C:    
5401:out/quex_scan.cpp ****         case 0x4D:    
5402:out/quex_scan.cpp ****         case 0x4E:    
5403:out/quex_scan.cpp ****         case 0x4F:    
5404:out/quex_scan.cpp ****         case 0x50:    
5405:out/quex_scan.cpp ****         case 0x51:    
5406:out/quex_scan.cpp ****         case 0x52:    
5407:out/quex_scan.cpp ****         case 0x53:    
5408:out/quex_scan.cpp ****         case 0x54:    
5409:out/quex_scan.cpp ****         case 0x55:    
5410:out/quex_scan.cpp ****         case 0x56:    
5411:out/quex_scan.cpp ****         case 0x57:    
5412:out/quex_scan.cpp ****         case 0x58:    
5413:out/quex_scan.cpp ****         case 0x59:    
5414:out/quex_scan.cpp ****         case 0x5A:    
5415:out/quex_scan.cpp ****         case 0x5F:    
5416:out/quex_scan.cpp ****         case 0x61:    
5417:out/quex_scan.cpp ****         case 0x62:    
5418:out/quex_scan.cpp ****         case 0x63:    
5419:out/quex_scan.cpp ****         case 0x64:    
5420:out/quex_scan.cpp ****         case 0x65:    
5421:out/quex_scan.cpp ****         case 0x66:    
5422:out/quex_scan.cpp ****         case 0x67:    
5423:out/quex_scan.cpp ****         case 0x68:    
5424:out/quex_scan.cpp ****         case 0x69:    
5425:out/quex_scan.cpp ****         case 0x6A:    
5426:out/quex_scan.cpp ****         case 0x6B:    
5427:out/quex_scan.cpp ****         case 0x6C:    
GAS LISTING /tmp/cc23nfB3.s 			page 152


5428:out/quex_scan.cpp ****         case 0x6D:    
5429:out/quex_scan.cpp ****         case 0x6E:    
5430:out/quex_scan.cpp ****         case 0x6F:    
5431:out/quex_scan.cpp ****         case 0x70:    
5432:out/quex_scan.cpp ****         case 0x71:    
5433:out/quex_scan.cpp ****         case 0x72:    
5434:out/quex_scan.cpp ****         case 0x73:    
5435:out/quex_scan.cpp ****         case 0x74:    
5436:out/quex_scan.cpp ****         case 0x75:    
5437:out/quex_scan.cpp ****         case 0x76:    
5438:out/quex_scan.cpp ****         case 0x77:    
5439:out/quex_scan.cpp ****         case 0x78:    
5440:out/quex_scan.cpp ****         case 0x79:    
5441:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5442:out/quex_scan.cpp ****     }
5443:out/quex_scan.cpp **** 
5444:out/quex_scan.cpp **** _2695:
5445:out/quex_scan.cpp ****         goto _2696;
5446:out/quex_scan.cpp **** 
5447:out/quex_scan.cpp **** 
5448:out/quex_scan.cpp ****     __quex_assert_no_passage();
5449:out/quex_scan.cpp **** _2481:
5450:out/quex_scan.cpp ****     __quex_debug_state(2481);
5451:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5452:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5453:out/quex_scan.cpp ****     last_acceptance                = QUEX_LABEL(2697); /* Terminal 546 */
5454:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
5455:out/quex_scan.cpp ****     if( input < 0x23) {
5456:out/quex_scan.cpp ****         switch( input ) {
5457:out/quex_scan.cpp ****             case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2481), QUEX_LABEL(2698));
5458:out/quex_scan.cpp ****             case 0x2:     
5459:out/quex_scan.cpp ****             case 0x3:     
5460:out/quex_scan.cpp ****             case 0x4:     
5461:out/quex_scan.cpp ****             case 0x5:     
5462:out/quex_scan.cpp ****             case 0x6:     
5463:out/quex_scan.cpp ****             case 0x7:     
5464:out/quex_scan.cpp ****             case 0x8:     
5465:out/quex_scan.cpp ****             case 0x9:     
5466:out/quex_scan.cpp ****             case 0xA:     
5467:out/quex_scan.cpp ****             case 0xB:     
5468:out/quex_scan.cpp ****             case 0xC:     
5469:out/quex_scan.cpp ****             case 0xD:     
5470:out/quex_scan.cpp ****             case 0xE:     
5471:out/quex_scan.cpp ****             case 0xF:     
5472:out/quex_scan.cpp ****             case 0x10:    
5473:out/quex_scan.cpp ****             case 0x11:    
5474:out/quex_scan.cpp ****             case 0x12:    
5475:out/quex_scan.cpp ****             case 0x13:    
5476:out/quex_scan.cpp ****             case 0x14:    
5477:out/quex_scan.cpp ****             case 0x15:    
5478:out/quex_scan.cpp ****             case 0x16:    
5479:out/quex_scan.cpp ****             case 0x17:    
5480:out/quex_scan.cpp ****             case 0x18:    
5481:out/quex_scan.cpp ****             case 0x19:    
5482:out/quex_scan.cpp ****             case 0x1A:    
5483:out/quex_scan.cpp ****             case 0x1B:    
5484:out/quex_scan.cpp ****             case 0x1C:    
GAS LISTING /tmp/cc23nfB3.s 			page 153


5485:out/quex_scan.cpp ****             case 0x1D:    
5486:out/quex_scan.cpp ****             case 0x1E:    
5487:out/quex_scan.cpp ****             case 0x1F:    
5488:out/quex_scan.cpp ****             case 0x20:    
5489:out/quex_scan.cpp ****             case 0x21:    goto _2365;
5490:out/quex_scan.cpp ****             case 0x22:    goto _2539;
5491:out/quex_scan.cpp ****         }
5492:out/quex_scan.cpp ****     } else {
5493:out/quex_scan.cpp ****         if( input < 0x5C ) {
5494:out/quex_scan.cpp ****             goto _2365;    /* ['#', '['] */
5495:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
5496:out/quex_scan.cpp ****             goto _2480;    /* '\' */
5497:out/quex_scan.cpp ****         } else if( input < 0x100 ) {
5498:out/quex_scan.cpp ****             goto _2365;    /* [']', 'ÿ'] */
5499:out/quex_scan.cpp ****         }
5500:out/quex_scan.cpp ****     }
5501:out/quex_scan.cpp **** 
5502:out/quex_scan.cpp **** _2698:
5503:out/quex_scan.cpp ****         goto _2697;
5504:out/quex_scan.cpp **** 
5505:out/quex_scan.cpp **** 
5506:out/quex_scan.cpp ****     __quex_assert_no_passage();
5507:out/quex_scan.cpp **** _2482:
5508:out/quex_scan.cpp ****     __quex_debug_state(2482);
5509:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5510:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5511:out/quex_scan.cpp ****     switch( input ) {
5512:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2482), QUEX_LABEL(2699));
5513:out/quex_scan.cpp ****         case 0x30:    
5514:out/quex_scan.cpp ****         case 0x31:    
5515:out/quex_scan.cpp ****         case 0x32:    
5516:out/quex_scan.cpp ****         case 0x33:    
5517:out/quex_scan.cpp ****         case 0x34:    
5518:out/quex_scan.cpp ****         case 0x35:    
5519:out/quex_scan.cpp ****         case 0x36:    
5520:out/quex_scan.cpp ****         case 0x37:    
5521:out/quex_scan.cpp ****         case 0x38:    
5522:out/quex_scan.cpp ****         case 0x39:    
5523:out/quex_scan.cpp ****         case 0x41:    
5524:out/quex_scan.cpp ****         case 0x42:    
5525:out/quex_scan.cpp ****         case 0x43:    
5526:out/quex_scan.cpp ****         case 0x44:    
5527:out/quex_scan.cpp ****         case 0x45:    
5528:out/quex_scan.cpp ****         case 0x46:    
5529:out/quex_scan.cpp ****         case 0x47:    
5530:out/quex_scan.cpp ****         case 0x48:    
5531:out/quex_scan.cpp ****         case 0x49:    
5532:out/quex_scan.cpp ****         case 0x4A:    
5533:out/quex_scan.cpp ****         case 0x4B:    
5534:out/quex_scan.cpp ****         case 0x4C:    
5535:out/quex_scan.cpp ****         case 0x4D:    
5536:out/quex_scan.cpp ****         case 0x4E:    
5537:out/quex_scan.cpp ****         case 0x4F:    
5538:out/quex_scan.cpp ****         case 0x50:    
5539:out/quex_scan.cpp ****         case 0x51:    
5540:out/quex_scan.cpp ****         case 0x52:    
5541:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 154


5542:out/quex_scan.cpp ****         case 0x54:    
5543:out/quex_scan.cpp ****         case 0x55:    
5544:out/quex_scan.cpp ****         case 0x56:    
5545:out/quex_scan.cpp ****         case 0x57:    
5546:out/quex_scan.cpp ****         case 0x58:    
5547:out/quex_scan.cpp ****         case 0x59:    
5548:out/quex_scan.cpp ****         case 0x5A:    
5549:out/quex_scan.cpp ****         case 0x5F:    
5550:out/quex_scan.cpp ****         case 0x61:    
5551:out/quex_scan.cpp ****         case 0x62:    
5552:out/quex_scan.cpp ****         case 0x63:    
5553:out/quex_scan.cpp ****         case 0x64:    
5554:out/quex_scan.cpp ****         case 0x65:    
5555:out/quex_scan.cpp ****         case 0x66:    
5556:out/quex_scan.cpp ****         case 0x67:    
5557:out/quex_scan.cpp ****         case 0x68:    
5558:out/quex_scan.cpp ****         case 0x69:    
5559:out/quex_scan.cpp ****         case 0x6A:    
5560:out/quex_scan.cpp ****         case 0x6B:    
5561:out/quex_scan.cpp ****         case 0x6C:    
5562:out/quex_scan.cpp ****         case 0x6D:    
5563:out/quex_scan.cpp ****         case 0x6E:    
5564:out/quex_scan.cpp ****         case 0x6F:    
5565:out/quex_scan.cpp ****         case 0x70:    
5566:out/quex_scan.cpp ****         case 0x71:    
5567:out/quex_scan.cpp ****         case 0x72:    goto _2364;
5568:out/quex_scan.cpp ****         case 0x73:    goto _2483;
5569:out/quex_scan.cpp ****         case 0x74:    
5570:out/quex_scan.cpp ****         case 0x75:    
5571:out/quex_scan.cpp ****         case 0x76:    
5572:out/quex_scan.cpp ****         case 0x77:    
5573:out/quex_scan.cpp ****         case 0x78:    
5574:out/quex_scan.cpp ****         case 0x79:    
5575:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5576:out/quex_scan.cpp ****     }
5577:out/quex_scan.cpp **** 
5578:out/quex_scan.cpp **** _2699:
5579:out/quex_scan.cpp ****         goto _2536;
5580:out/quex_scan.cpp **** 
5581:out/quex_scan.cpp **** 
5582:out/quex_scan.cpp ****     __quex_assert_no_passage();
5583:out/quex_scan.cpp **** _2483:
5584:out/quex_scan.cpp ****     __quex_debug_state(2483);
5585:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5586:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5587:out/quex_scan.cpp ****     switch( input ) {
5588:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2483), QUEX_LABEL(2700));
5589:out/quex_scan.cpp ****         case 0x30:    
5590:out/quex_scan.cpp ****         case 0x31:    
5591:out/quex_scan.cpp ****         case 0x32:    
5592:out/quex_scan.cpp ****         case 0x33:    
5593:out/quex_scan.cpp ****         case 0x34:    
5594:out/quex_scan.cpp ****         case 0x35:    
5595:out/quex_scan.cpp ****         case 0x36:    
5596:out/quex_scan.cpp ****         case 0x37:    
5597:out/quex_scan.cpp ****         case 0x38:    
5598:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 155


5599:out/quex_scan.cpp ****         case 0x41:    
5600:out/quex_scan.cpp ****         case 0x42:    
5601:out/quex_scan.cpp ****         case 0x43:    
5602:out/quex_scan.cpp ****         case 0x44:    
5603:out/quex_scan.cpp ****         case 0x45:    
5604:out/quex_scan.cpp ****         case 0x46:    
5605:out/quex_scan.cpp ****         case 0x47:    
5606:out/quex_scan.cpp ****         case 0x48:    
5607:out/quex_scan.cpp ****         case 0x49:    
5608:out/quex_scan.cpp ****         case 0x4A:    
5609:out/quex_scan.cpp ****         case 0x4B:    
5610:out/quex_scan.cpp ****         case 0x4C:    
5611:out/quex_scan.cpp ****         case 0x4D:    
5612:out/quex_scan.cpp ****         case 0x4E:    
5613:out/quex_scan.cpp ****         case 0x4F:    
5614:out/quex_scan.cpp ****         case 0x50:    
5615:out/quex_scan.cpp ****         case 0x51:    
5616:out/quex_scan.cpp ****         case 0x52:    
5617:out/quex_scan.cpp ****         case 0x53:    
5618:out/quex_scan.cpp ****         case 0x54:    
5619:out/quex_scan.cpp ****         case 0x55:    
5620:out/quex_scan.cpp ****         case 0x56:    
5621:out/quex_scan.cpp ****         case 0x57:    
5622:out/quex_scan.cpp ****         case 0x58:    
5623:out/quex_scan.cpp ****         case 0x59:    
5624:out/quex_scan.cpp ****         case 0x5A:    
5625:out/quex_scan.cpp ****         case 0x5F:    
5626:out/quex_scan.cpp ****         case 0x61:    
5627:out/quex_scan.cpp ****         case 0x62:    
5628:out/quex_scan.cpp ****         case 0x63:    
5629:out/quex_scan.cpp ****         case 0x64:    
5630:out/quex_scan.cpp ****         case 0x65:    
5631:out/quex_scan.cpp ****         case 0x66:    
5632:out/quex_scan.cpp ****         case 0x67:    
5633:out/quex_scan.cpp ****         case 0x68:    goto _2364;
5634:out/quex_scan.cpp ****         case 0x69:    goto _2484;
5635:out/quex_scan.cpp ****         case 0x6A:    
5636:out/quex_scan.cpp ****         case 0x6B:    
5637:out/quex_scan.cpp ****         case 0x6C:    
5638:out/quex_scan.cpp ****         case 0x6D:    
5639:out/quex_scan.cpp ****         case 0x6E:    
5640:out/quex_scan.cpp ****         case 0x6F:    
5641:out/quex_scan.cpp ****         case 0x70:    
5642:out/quex_scan.cpp ****         case 0x71:    
5643:out/quex_scan.cpp ****         case 0x72:    
5644:out/quex_scan.cpp ****         case 0x73:    
5645:out/quex_scan.cpp ****         case 0x74:    
5646:out/quex_scan.cpp ****         case 0x75:    
5647:out/quex_scan.cpp ****         case 0x76:    
5648:out/quex_scan.cpp ****         case 0x77:    
5649:out/quex_scan.cpp ****         case 0x78:    
5650:out/quex_scan.cpp ****         case 0x79:    
5651:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5652:out/quex_scan.cpp ****     }
5653:out/quex_scan.cpp **** 
5654:out/quex_scan.cpp **** _2700:
5655:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 156


5656:out/quex_scan.cpp **** 
5657:out/quex_scan.cpp **** 
5658:out/quex_scan.cpp ****     __quex_assert_no_passage();
5659:out/quex_scan.cpp **** _2484:
5660:out/quex_scan.cpp ****     __quex_debug_state(2484);
5661:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5662:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5663:out/quex_scan.cpp ****     switch( input ) {
5664:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2484), QUEX_LABEL(2701));
5665:out/quex_scan.cpp ****         case 0x30:    
5666:out/quex_scan.cpp ****         case 0x31:    
5667:out/quex_scan.cpp ****         case 0x32:    
5668:out/quex_scan.cpp ****         case 0x33:    
5669:out/quex_scan.cpp ****         case 0x34:    
5670:out/quex_scan.cpp ****         case 0x35:    
5671:out/quex_scan.cpp ****         case 0x36:    
5672:out/quex_scan.cpp ****         case 0x37:    
5673:out/quex_scan.cpp ****         case 0x38:    
5674:out/quex_scan.cpp ****         case 0x39:    
5675:out/quex_scan.cpp ****         case 0x41:    
5676:out/quex_scan.cpp ****         case 0x42:    
5677:out/quex_scan.cpp ****         case 0x43:    
5678:out/quex_scan.cpp ****         case 0x44:    
5679:out/quex_scan.cpp ****         case 0x45:    
5680:out/quex_scan.cpp ****         case 0x46:    
5681:out/quex_scan.cpp ****         case 0x47:    
5682:out/quex_scan.cpp ****         case 0x48:    
5683:out/quex_scan.cpp ****         case 0x49:    
5684:out/quex_scan.cpp ****         case 0x4A:    
5685:out/quex_scan.cpp ****         case 0x4B:    
5686:out/quex_scan.cpp ****         case 0x4C:    
5687:out/quex_scan.cpp ****         case 0x4D:    
5688:out/quex_scan.cpp ****         case 0x4E:    
5689:out/quex_scan.cpp ****         case 0x4F:    
5690:out/quex_scan.cpp ****         case 0x50:    
5691:out/quex_scan.cpp ****         case 0x51:    
5692:out/quex_scan.cpp ****         case 0x52:    
5693:out/quex_scan.cpp ****         case 0x53:    
5694:out/quex_scan.cpp ****         case 0x54:    
5695:out/quex_scan.cpp ****         case 0x55:    
5696:out/quex_scan.cpp ****         case 0x56:    
5697:out/quex_scan.cpp ****         case 0x57:    
5698:out/quex_scan.cpp ****         case 0x58:    
5699:out/quex_scan.cpp ****         case 0x59:    
5700:out/quex_scan.cpp ****         case 0x5A:    
5701:out/quex_scan.cpp ****         case 0x5F:    
5702:out/quex_scan.cpp ****         case 0x61:    
5703:out/quex_scan.cpp ****         case 0x62:    
5704:out/quex_scan.cpp ****         case 0x63:    
5705:out/quex_scan.cpp ****         case 0x64:    
5706:out/quex_scan.cpp ****         case 0x65:    
5707:out/quex_scan.cpp ****         case 0x66:    goto _2364;
5708:out/quex_scan.cpp ****         case 0x67:    goto _2485;
5709:out/quex_scan.cpp ****         case 0x68:    
5710:out/quex_scan.cpp ****         case 0x69:    
5711:out/quex_scan.cpp ****         case 0x6A:    
5712:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 157


5713:out/quex_scan.cpp ****         case 0x6C:    
5714:out/quex_scan.cpp ****         case 0x6D:    
5715:out/quex_scan.cpp ****         case 0x6E:    
5716:out/quex_scan.cpp ****         case 0x6F:    
5717:out/quex_scan.cpp ****         case 0x70:    
5718:out/quex_scan.cpp ****         case 0x71:    
5719:out/quex_scan.cpp ****         case 0x72:    
5720:out/quex_scan.cpp ****         case 0x73:    
5721:out/quex_scan.cpp ****         case 0x74:    
5722:out/quex_scan.cpp ****         case 0x75:    
5723:out/quex_scan.cpp ****         case 0x76:    
5724:out/quex_scan.cpp ****         case 0x77:    
5725:out/quex_scan.cpp ****         case 0x78:    
5726:out/quex_scan.cpp ****         case 0x79:    
5727:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5728:out/quex_scan.cpp ****     }
5729:out/quex_scan.cpp **** 
5730:out/quex_scan.cpp **** _2701:
5731:out/quex_scan.cpp ****         goto _2536;
5732:out/quex_scan.cpp **** 
5733:out/quex_scan.cpp **** 
5734:out/quex_scan.cpp ****     __quex_assert_no_passage();
5735:out/quex_scan.cpp **** _2485:
5736:out/quex_scan.cpp ****     __quex_debug_state(2485);
5737:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5738:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5739:out/quex_scan.cpp ****     switch( input ) {
5740:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2485), QUEX_LABEL(2702));
5741:out/quex_scan.cpp ****         case 0x30:    
5742:out/quex_scan.cpp ****         case 0x31:    
5743:out/quex_scan.cpp ****         case 0x32:    
5744:out/quex_scan.cpp ****         case 0x33:    
5745:out/quex_scan.cpp ****         case 0x34:    
5746:out/quex_scan.cpp ****         case 0x35:    
5747:out/quex_scan.cpp ****         case 0x36:    
5748:out/quex_scan.cpp ****         case 0x37:    
5749:out/quex_scan.cpp ****         case 0x38:    
5750:out/quex_scan.cpp ****         case 0x39:    
5751:out/quex_scan.cpp ****         case 0x41:    
5752:out/quex_scan.cpp ****         case 0x42:    
5753:out/quex_scan.cpp ****         case 0x43:    
5754:out/quex_scan.cpp ****         case 0x44:    
5755:out/quex_scan.cpp ****         case 0x45:    
5756:out/quex_scan.cpp ****         case 0x46:    
5757:out/quex_scan.cpp ****         case 0x47:    
5758:out/quex_scan.cpp ****         case 0x48:    
5759:out/quex_scan.cpp ****         case 0x49:    
5760:out/quex_scan.cpp ****         case 0x4A:    
5761:out/quex_scan.cpp ****         case 0x4B:    
5762:out/quex_scan.cpp ****         case 0x4C:    
5763:out/quex_scan.cpp ****         case 0x4D:    
5764:out/quex_scan.cpp ****         case 0x4E:    
5765:out/quex_scan.cpp ****         case 0x4F:    
5766:out/quex_scan.cpp ****         case 0x50:    
5767:out/quex_scan.cpp ****         case 0x51:    
5768:out/quex_scan.cpp ****         case 0x52:    
5769:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 158


5770:out/quex_scan.cpp ****         case 0x54:    
5771:out/quex_scan.cpp ****         case 0x55:    
5772:out/quex_scan.cpp ****         case 0x56:    
5773:out/quex_scan.cpp ****         case 0x57:    
5774:out/quex_scan.cpp ****         case 0x58:    
5775:out/quex_scan.cpp ****         case 0x59:    
5776:out/quex_scan.cpp ****         case 0x5A:    
5777:out/quex_scan.cpp ****         case 0x5F:    
5778:out/quex_scan.cpp ****         case 0x61:    
5779:out/quex_scan.cpp ****         case 0x62:    
5780:out/quex_scan.cpp ****         case 0x63:    
5781:out/quex_scan.cpp ****         case 0x64:    
5782:out/quex_scan.cpp ****         case 0x65:    
5783:out/quex_scan.cpp ****         case 0x66:    
5784:out/quex_scan.cpp ****         case 0x67:    
5785:out/quex_scan.cpp ****         case 0x68:    
5786:out/quex_scan.cpp ****         case 0x69:    
5787:out/quex_scan.cpp ****         case 0x6A:    
5788:out/quex_scan.cpp ****         case 0x6B:    
5789:out/quex_scan.cpp ****         case 0x6C:    
5790:out/quex_scan.cpp ****         case 0x6D:    goto _2364;
5791:out/quex_scan.cpp ****         case 0x6E:    goto _2486;
5792:out/quex_scan.cpp ****         case 0x6F:    
5793:out/quex_scan.cpp ****         case 0x70:    
5794:out/quex_scan.cpp ****         case 0x71:    
5795:out/quex_scan.cpp ****         case 0x72:    
5796:out/quex_scan.cpp ****         case 0x73:    
5797:out/quex_scan.cpp ****         case 0x74:    
5798:out/quex_scan.cpp ****         case 0x75:    
5799:out/quex_scan.cpp ****         case 0x76:    
5800:out/quex_scan.cpp ****         case 0x77:    
5801:out/quex_scan.cpp ****         case 0x78:    
5802:out/quex_scan.cpp ****         case 0x79:    
5803:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5804:out/quex_scan.cpp ****     }
5805:out/quex_scan.cpp **** 
5806:out/quex_scan.cpp **** _2702:
5807:out/quex_scan.cpp ****         goto _2536;
5808:out/quex_scan.cpp **** 
5809:out/quex_scan.cpp **** 
5810:out/quex_scan.cpp ****     __quex_assert_no_passage();
5811:out/quex_scan.cpp **** _2486:
5812:out/quex_scan.cpp ****     __quex_debug_state(2486);
5813:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5814:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5815:out/quex_scan.cpp ****     switch( input ) {
5816:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2486), QUEX_LABEL(2703));
5817:out/quex_scan.cpp ****         case 0x30:    
5818:out/quex_scan.cpp ****         case 0x31:    
5819:out/quex_scan.cpp ****         case 0x32:    
5820:out/quex_scan.cpp ****         case 0x33:    
5821:out/quex_scan.cpp ****         case 0x34:    
5822:out/quex_scan.cpp ****         case 0x35:    
5823:out/quex_scan.cpp ****         case 0x36:    
5824:out/quex_scan.cpp ****         case 0x37:    
5825:out/quex_scan.cpp ****         case 0x38:    
5826:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 159


5827:out/quex_scan.cpp ****         case 0x41:    
5828:out/quex_scan.cpp ****         case 0x42:    
5829:out/quex_scan.cpp ****         case 0x43:    
5830:out/quex_scan.cpp ****         case 0x44:    
5831:out/quex_scan.cpp ****         case 0x45:    
5832:out/quex_scan.cpp ****         case 0x46:    
5833:out/quex_scan.cpp ****         case 0x47:    
5834:out/quex_scan.cpp ****         case 0x48:    
5835:out/quex_scan.cpp ****         case 0x49:    
5836:out/quex_scan.cpp ****         case 0x4A:    
5837:out/quex_scan.cpp ****         case 0x4B:    
5838:out/quex_scan.cpp ****         case 0x4C:    
5839:out/quex_scan.cpp ****         case 0x4D:    
5840:out/quex_scan.cpp ****         case 0x4E:    
5841:out/quex_scan.cpp ****         case 0x4F:    
5842:out/quex_scan.cpp ****         case 0x50:    
5843:out/quex_scan.cpp ****         case 0x51:    
5844:out/quex_scan.cpp ****         case 0x52:    
5845:out/quex_scan.cpp ****         case 0x53:    
5846:out/quex_scan.cpp ****         case 0x54:    
5847:out/quex_scan.cpp ****         case 0x55:    
5848:out/quex_scan.cpp ****         case 0x56:    
5849:out/quex_scan.cpp ****         case 0x57:    
5850:out/quex_scan.cpp ****         case 0x58:    
5851:out/quex_scan.cpp ****         case 0x59:    
5852:out/quex_scan.cpp ****         case 0x5A:    
5853:out/quex_scan.cpp ****         case 0x5F:    
5854:out/quex_scan.cpp ****         case 0x61:    
5855:out/quex_scan.cpp ****         case 0x62:    
5856:out/quex_scan.cpp ****         case 0x63:    
5857:out/quex_scan.cpp ****         case 0x64:    goto _2364;
5858:out/quex_scan.cpp ****         case 0x65:    goto _2487;
5859:out/quex_scan.cpp ****         case 0x66:    
5860:out/quex_scan.cpp ****         case 0x67:    
5861:out/quex_scan.cpp ****         case 0x68:    
5862:out/quex_scan.cpp ****         case 0x69:    
5863:out/quex_scan.cpp ****         case 0x6A:    
5864:out/quex_scan.cpp ****         case 0x6B:    
5865:out/quex_scan.cpp ****         case 0x6C:    
5866:out/quex_scan.cpp ****         case 0x6D:    
5867:out/quex_scan.cpp ****         case 0x6E:    
5868:out/quex_scan.cpp ****         case 0x6F:    
5869:out/quex_scan.cpp ****         case 0x70:    
5870:out/quex_scan.cpp ****         case 0x71:    
5871:out/quex_scan.cpp ****         case 0x72:    
5872:out/quex_scan.cpp ****         case 0x73:    
5873:out/quex_scan.cpp ****         case 0x74:    
5874:out/quex_scan.cpp ****         case 0x75:    
5875:out/quex_scan.cpp ****         case 0x76:    
5876:out/quex_scan.cpp ****         case 0x77:    
5877:out/quex_scan.cpp ****         case 0x78:    
5878:out/quex_scan.cpp ****         case 0x79:    
5879:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5880:out/quex_scan.cpp ****     }
5881:out/quex_scan.cpp **** 
5882:out/quex_scan.cpp **** _2703:
5883:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 160


5884:out/quex_scan.cpp **** 
5885:out/quex_scan.cpp **** 
5886:out/quex_scan.cpp ****     __quex_assert_no_passage();
5887:out/quex_scan.cpp **** _2487:
5888:out/quex_scan.cpp ****     __quex_debug_state(2487);
5889:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5890:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5891:out/quex_scan.cpp ****     switch( input ) {
5892:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2487), QUEX_LABEL(2704));
5893:out/quex_scan.cpp ****         case 0x30:    
5894:out/quex_scan.cpp ****         case 0x31:    
5895:out/quex_scan.cpp ****         case 0x32:    
5896:out/quex_scan.cpp ****         case 0x33:    
5897:out/quex_scan.cpp ****         case 0x34:    
5898:out/quex_scan.cpp ****         case 0x35:    
5899:out/quex_scan.cpp ****         case 0x36:    
5900:out/quex_scan.cpp ****         case 0x37:    
5901:out/quex_scan.cpp ****         case 0x38:    
5902:out/quex_scan.cpp ****         case 0x39:    
5903:out/quex_scan.cpp ****         case 0x41:    
5904:out/quex_scan.cpp ****         case 0x42:    
5905:out/quex_scan.cpp ****         case 0x43:    
5906:out/quex_scan.cpp ****         case 0x44:    
5907:out/quex_scan.cpp ****         case 0x45:    
5908:out/quex_scan.cpp ****         case 0x46:    
5909:out/quex_scan.cpp ****         case 0x47:    
5910:out/quex_scan.cpp ****         case 0x48:    
5911:out/quex_scan.cpp ****         case 0x49:    
5912:out/quex_scan.cpp ****         case 0x4A:    
5913:out/quex_scan.cpp ****         case 0x4B:    
5914:out/quex_scan.cpp ****         case 0x4C:    
5915:out/quex_scan.cpp ****         case 0x4D:    
5916:out/quex_scan.cpp ****         case 0x4E:    
5917:out/quex_scan.cpp ****         case 0x4F:    
5918:out/quex_scan.cpp ****         case 0x50:    
5919:out/quex_scan.cpp ****         case 0x51:    
5920:out/quex_scan.cpp ****         case 0x52:    
5921:out/quex_scan.cpp ****         case 0x53:    
5922:out/quex_scan.cpp ****         case 0x54:    
5923:out/quex_scan.cpp ****         case 0x55:    
5924:out/quex_scan.cpp ****         case 0x56:    
5925:out/quex_scan.cpp ****         case 0x57:    
5926:out/quex_scan.cpp ****         case 0x58:    
5927:out/quex_scan.cpp ****         case 0x59:    
5928:out/quex_scan.cpp ****         case 0x5A:    
5929:out/quex_scan.cpp ****         case 0x5F:    
5930:out/quex_scan.cpp ****         case 0x61:    
5931:out/quex_scan.cpp ****         case 0x62:    
5932:out/quex_scan.cpp ****         case 0x63:    goto _2364;
5933:out/quex_scan.cpp ****         case 0x64:    goto _2488;
5934:out/quex_scan.cpp ****         case 0x65:    
5935:out/quex_scan.cpp ****         case 0x66:    
5936:out/quex_scan.cpp ****         case 0x67:    
5937:out/quex_scan.cpp ****         case 0x68:    
5938:out/quex_scan.cpp ****         case 0x69:    
5939:out/quex_scan.cpp ****         case 0x6A:    
5940:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 161


5941:out/quex_scan.cpp ****         case 0x6C:    
5942:out/quex_scan.cpp ****         case 0x6D:    
5943:out/quex_scan.cpp ****         case 0x6E:    
5944:out/quex_scan.cpp ****         case 0x6F:    
5945:out/quex_scan.cpp ****         case 0x70:    
5946:out/quex_scan.cpp ****         case 0x71:    
5947:out/quex_scan.cpp ****         case 0x72:    
5948:out/quex_scan.cpp ****         case 0x73:    
5949:out/quex_scan.cpp ****         case 0x74:    
5950:out/quex_scan.cpp ****         case 0x75:    
5951:out/quex_scan.cpp ****         case 0x76:    
5952:out/quex_scan.cpp ****         case 0x77:    
5953:out/quex_scan.cpp ****         case 0x78:    
5954:out/quex_scan.cpp ****         case 0x79:    
5955:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
5956:out/quex_scan.cpp ****     }
5957:out/quex_scan.cpp **** 
5958:out/quex_scan.cpp **** _2704:
5959:out/quex_scan.cpp ****         goto _2536;
5960:out/quex_scan.cpp **** 
5961:out/quex_scan.cpp **** 
5962:out/quex_scan.cpp ****     __quex_assert_no_passage();
5963:out/quex_scan.cpp **** _2488:
5964:out/quex_scan.cpp ****     __quex_debug_state(2488);
5965:out/quex_scan.cpp ****     ++(me->buffer._input_p);
5966:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
5967:out/quex_scan.cpp ****     switch( input ) {
5968:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2488), QUEX_LABEL(2705));
5969:out/quex_scan.cpp ****         case 0x30:    
5970:out/quex_scan.cpp ****         case 0x31:    
5971:out/quex_scan.cpp ****         case 0x32:    
5972:out/quex_scan.cpp ****         case 0x33:    
5973:out/quex_scan.cpp ****         case 0x34:    
5974:out/quex_scan.cpp ****         case 0x35:    
5975:out/quex_scan.cpp ****         case 0x36:    
5976:out/quex_scan.cpp ****         case 0x37:    
5977:out/quex_scan.cpp ****         case 0x38:    
5978:out/quex_scan.cpp ****         case 0x39:    
5979:out/quex_scan.cpp ****         case 0x41:    
5980:out/quex_scan.cpp ****         case 0x42:    
5981:out/quex_scan.cpp ****         case 0x43:    
5982:out/quex_scan.cpp ****         case 0x44:    
5983:out/quex_scan.cpp ****         case 0x45:    
5984:out/quex_scan.cpp ****         case 0x46:    
5985:out/quex_scan.cpp ****         case 0x47:    
5986:out/quex_scan.cpp ****         case 0x48:    
5987:out/quex_scan.cpp ****         case 0x49:    
5988:out/quex_scan.cpp ****         case 0x4A:    
5989:out/quex_scan.cpp ****         case 0x4B:    
5990:out/quex_scan.cpp ****         case 0x4C:    
5991:out/quex_scan.cpp ****         case 0x4D:    
5992:out/quex_scan.cpp ****         case 0x4E:    
5993:out/quex_scan.cpp ****         case 0x4F:    
5994:out/quex_scan.cpp ****         case 0x50:    
5995:out/quex_scan.cpp ****         case 0x51:    
5996:out/quex_scan.cpp ****         case 0x52:    
5997:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 162


5998:out/quex_scan.cpp ****         case 0x54:    
5999:out/quex_scan.cpp ****         case 0x55:    
6000:out/quex_scan.cpp ****         case 0x56:    
6001:out/quex_scan.cpp ****         case 0x57:    
6002:out/quex_scan.cpp ****         case 0x58:    
6003:out/quex_scan.cpp ****         case 0x59:    
6004:out/quex_scan.cpp ****         case 0x5A:    
6005:out/quex_scan.cpp ****         case 0x5F:    
6006:out/quex_scan.cpp ****         case 0x61:    
6007:out/quex_scan.cpp ****         case 0x62:    
6008:out/quex_scan.cpp ****         case 0x63:    
6009:out/quex_scan.cpp ****         case 0x64:    
6010:out/quex_scan.cpp ****         case 0x65:    
6011:out/quex_scan.cpp ****         case 0x66:    
6012:out/quex_scan.cpp ****         case 0x67:    
6013:out/quex_scan.cpp ****         case 0x68:    
6014:out/quex_scan.cpp ****         case 0x69:    
6015:out/quex_scan.cpp ****         case 0x6A:    
6016:out/quex_scan.cpp ****         case 0x6B:    
6017:out/quex_scan.cpp ****         case 0x6C:    
6018:out/quex_scan.cpp ****         case 0x6D:    
6019:out/quex_scan.cpp ****         case 0x6E:    
6020:out/quex_scan.cpp ****         case 0x6F:    
6021:out/quex_scan.cpp ****         case 0x70:    
6022:out/quex_scan.cpp ****         case 0x71:    
6023:out/quex_scan.cpp ****         case 0x72:    
6024:out/quex_scan.cpp ****         case 0x73:    
6025:out/quex_scan.cpp ****         case 0x74:    
6026:out/quex_scan.cpp ****         case 0x75:    
6027:out/quex_scan.cpp ****         case 0x76:    
6028:out/quex_scan.cpp ****         case 0x77:    
6029:out/quex_scan.cpp ****         case 0x78:    
6030:out/quex_scan.cpp ****         case 0x79:    
6031:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6032:out/quex_scan.cpp ****     }
6033:out/quex_scan.cpp **** 
6034:out/quex_scan.cpp **** _2705:
6035:out/quex_scan.cpp ****         goto _2706;
6036:out/quex_scan.cpp **** 
6037:out/quex_scan.cpp **** 
6038:out/quex_scan.cpp ****     __quex_assert_no_passage();
6039:out/quex_scan.cpp **** _2490:
6040:out/quex_scan.cpp ****     __quex_debug_state(2490);
6041:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6042:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6043:out/quex_scan.cpp ****     switch( input ) {
6044:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2490), QUEX_LABEL(2707));
6045:out/quex_scan.cpp ****         case 0x30:    
6046:out/quex_scan.cpp ****         case 0x31:    
6047:out/quex_scan.cpp ****         case 0x32:    
6048:out/quex_scan.cpp ****         case 0x33:    
6049:out/quex_scan.cpp ****         case 0x34:    
6050:out/quex_scan.cpp ****         case 0x35:    
6051:out/quex_scan.cpp ****         case 0x36:    
6052:out/quex_scan.cpp ****         case 0x37:    
6053:out/quex_scan.cpp ****         case 0x38:    
6054:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 163


6055:out/quex_scan.cpp ****         case 0x41:    
6056:out/quex_scan.cpp ****         case 0x42:    
6057:out/quex_scan.cpp ****         case 0x43:    
6058:out/quex_scan.cpp ****         case 0x44:    
6059:out/quex_scan.cpp ****         case 0x45:    
6060:out/quex_scan.cpp ****         case 0x46:    
6061:out/quex_scan.cpp ****         case 0x47:    
6062:out/quex_scan.cpp ****         case 0x48:    
6063:out/quex_scan.cpp ****         case 0x49:    
6064:out/quex_scan.cpp ****         case 0x4A:    
6065:out/quex_scan.cpp ****         case 0x4B:    
6066:out/quex_scan.cpp ****         case 0x4C:    
6067:out/quex_scan.cpp ****         case 0x4D:    
6068:out/quex_scan.cpp ****         case 0x4E:    
6069:out/quex_scan.cpp ****         case 0x4F:    
6070:out/quex_scan.cpp ****         case 0x50:    
6071:out/quex_scan.cpp ****         case 0x51:    
6072:out/quex_scan.cpp ****         case 0x52:    
6073:out/quex_scan.cpp ****         case 0x53:    
6074:out/quex_scan.cpp ****         case 0x54:    
6075:out/quex_scan.cpp ****         case 0x55:    
6076:out/quex_scan.cpp ****         case 0x56:    
6077:out/quex_scan.cpp ****         case 0x57:    
6078:out/quex_scan.cpp ****         case 0x58:    
6079:out/quex_scan.cpp ****         case 0x59:    
6080:out/quex_scan.cpp ****         case 0x5A:    
6081:out/quex_scan.cpp ****         case 0x5F:    
6082:out/quex_scan.cpp ****         case 0x61:    
6083:out/quex_scan.cpp ****         case 0x62:    
6084:out/quex_scan.cpp ****         case 0x63:    
6085:out/quex_scan.cpp ****         case 0x64:    
6086:out/quex_scan.cpp ****         case 0x65:    
6087:out/quex_scan.cpp ****         case 0x66:    
6088:out/quex_scan.cpp ****         case 0x67:    
6089:out/quex_scan.cpp ****         case 0x68:    
6090:out/quex_scan.cpp ****         case 0x69:    
6091:out/quex_scan.cpp ****         case 0x6A:    
6092:out/quex_scan.cpp ****         case 0x6B:    
6093:out/quex_scan.cpp ****         case 0x6C:    
6094:out/quex_scan.cpp ****         case 0x6D:    
6095:out/quex_scan.cpp ****         case 0x6E:    
6096:out/quex_scan.cpp ****         case 0x6F:    
6097:out/quex_scan.cpp ****         case 0x70:    
6098:out/quex_scan.cpp ****         case 0x71:    
6099:out/quex_scan.cpp ****         case 0x72:    
6100:out/quex_scan.cpp ****         case 0x73:    goto _2364;
6101:out/quex_scan.cpp ****         case 0x74:    goto _2492;
6102:out/quex_scan.cpp ****         case 0x75:    
6103:out/quex_scan.cpp ****         case 0x76:    
6104:out/quex_scan.cpp ****         case 0x77:    
6105:out/quex_scan.cpp ****         case 0x78:    
6106:out/quex_scan.cpp ****         case 0x79:    
6107:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6108:out/quex_scan.cpp ****     }
6109:out/quex_scan.cpp **** 
6110:out/quex_scan.cpp **** _2707:
6111:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 164


6112:out/quex_scan.cpp **** 
6113:out/quex_scan.cpp **** 
6114:out/quex_scan.cpp ****     __quex_assert_no_passage();
6115:out/quex_scan.cpp **** _2491:
6116:out/quex_scan.cpp ****     __quex_debug_state(2491);
6117:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6118:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6119:out/quex_scan.cpp ****     switch( input ) {
6120:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2491), QUEX_LABEL(2708));
6121:out/quex_scan.cpp ****         case 0x30:    
6122:out/quex_scan.cpp ****         case 0x31:    
6123:out/quex_scan.cpp ****         case 0x32:    
6124:out/quex_scan.cpp ****         case 0x33:    
6125:out/quex_scan.cpp ****         case 0x34:    
6126:out/quex_scan.cpp ****         case 0x35:    
6127:out/quex_scan.cpp ****         case 0x36:    
6128:out/quex_scan.cpp ****         case 0x37:    
6129:out/quex_scan.cpp ****         case 0x38:    
6130:out/quex_scan.cpp ****         case 0x39:    
6131:out/quex_scan.cpp ****         case 0x41:    
6132:out/quex_scan.cpp ****         case 0x42:    
6133:out/quex_scan.cpp ****         case 0x43:    
6134:out/quex_scan.cpp ****         case 0x44:    
6135:out/quex_scan.cpp ****         case 0x45:    
6136:out/quex_scan.cpp ****         case 0x46:    
6137:out/quex_scan.cpp ****         case 0x47:    
6138:out/quex_scan.cpp ****         case 0x48:    
6139:out/quex_scan.cpp ****         case 0x49:    
6140:out/quex_scan.cpp ****         case 0x4A:    
6141:out/quex_scan.cpp ****         case 0x4B:    
6142:out/quex_scan.cpp ****         case 0x4C:    
6143:out/quex_scan.cpp ****         case 0x4D:    
6144:out/quex_scan.cpp ****         case 0x4E:    
6145:out/quex_scan.cpp ****         case 0x4F:    
6146:out/quex_scan.cpp ****         case 0x50:    
6147:out/quex_scan.cpp ****         case 0x51:    
6148:out/quex_scan.cpp ****         case 0x52:    
6149:out/quex_scan.cpp ****         case 0x53:    
6150:out/quex_scan.cpp ****         case 0x54:    
6151:out/quex_scan.cpp ****         case 0x55:    
6152:out/quex_scan.cpp ****         case 0x56:    
6153:out/quex_scan.cpp ****         case 0x57:    
6154:out/quex_scan.cpp ****         case 0x58:    
6155:out/quex_scan.cpp ****         case 0x59:    
6156:out/quex_scan.cpp ****         case 0x5A:    
6157:out/quex_scan.cpp ****         case 0x5F:    
6158:out/quex_scan.cpp ****         case 0x61:    
6159:out/quex_scan.cpp ****         case 0x62:    
6160:out/quex_scan.cpp ****         case 0x63:    
6161:out/quex_scan.cpp ****         case 0x64:    
6162:out/quex_scan.cpp ****         case 0x65:    
6163:out/quex_scan.cpp ****         case 0x66:    
6164:out/quex_scan.cpp ****         case 0x67:    
6165:out/quex_scan.cpp ****         case 0x68:    
6166:out/quex_scan.cpp ****         case 0x69:    
6167:out/quex_scan.cpp ****         case 0x6A:    
6168:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 165


6169:out/quex_scan.cpp ****         case 0x6C:    
6170:out/quex_scan.cpp ****         case 0x6D:    
6171:out/quex_scan.cpp ****         case 0x6E:    
6172:out/quex_scan.cpp ****         case 0x6F:    
6173:out/quex_scan.cpp ****         case 0x70:    
6174:out/quex_scan.cpp ****         case 0x71:    
6175:out/quex_scan.cpp ****         case 0x72:    
6176:out/quex_scan.cpp ****         case 0x73:    
6177:out/quex_scan.cpp ****         case 0x74:    
6178:out/quex_scan.cpp ****         case 0x75:    
6179:out/quex_scan.cpp ****         case 0x76:    
6180:out/quex_scan.cpp ****         case 0x77:    
6181:out/quex_scan.cpp ****         case 0x78:    
6182:out/quex_scan.cpp ****         case 0x79:    
6183:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6184:out/quex_scan.cpp ****     }
6185:out/quex_scan.cpp **** 
6186:out/quex_scan.cpp **** _2708:
6187:out/quex_scan.cpp ****         goto _2709;
6188:out/quex_scan.cpp **** 
6189:out/quex_scan.cpp **** 
6190:out/quex_scan.cpp ****     __quex_assert_no_passage();
6191:out/quex_scan.cpp **** _2492:
6192:out/quex_scan.cpp ****     __quex_debug_state(2492);
6193:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6194:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6195:out/quex_scan.cpp ****     switch( input ) {
6196:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2492), QUEX_LABEL(2710));
6197:out/quex_scan.cpp ****         case 0x30:    
6198:out/quex_scan.cpp ****         case 0x31:    
6199:out/quex_scan.cpp ****         case 0x32:    
6200:out/quex_scan.cpp ****         case 0x33:    
6201:out/quex_scan.cpp ****         case 0x34:    
6202:out/quex_scan.cpp ****         case 0x35:    
6203:out/quex_scan.cpp ****         case 0x36:    
6204:out/quex_scan.cpp ****         case 0x37:    
6205:out/quex_scan.cpp ****         case 0x38:    
6206:out/quex_scan.cpp ****         case 0x39:    
6207:out/quex_scan.cpp ****         case 0x41:    
6208:out/quex_scan.cpp ****         case 0x42:    
6209:out/quex_scan.cpp ****         case 0x43:    
6210:out/quex_scan.cpp ****         case 0x44:    
6211:out/quex_scan.cpp ****         case 0x45:    
6212:out/quex_scan.cpp ****         case 0x46:    
6213:out/quex_scan.cpp ****         case 0x47:    
6214:out/quex_scan.cpp ****         case 0x48:    
6215:out/quex_scan.cpp ****         case 0x49:    
6216:out/quex_scan.cpp ****         case 0x4A:    
6217:out/quex_scan.cpp ****         case 0x4B:    
6218:out/quex_scan.cpp ****         case 0x4C:    
6219:out/quex_scan.cpp ****         case 0x4D:    
6220:out/quex_scan.cpp ****         case 0x4E:    
6221:out/quex_scan.cpp ****         case 0x4F:    
6222:out/quex_scan.cpp ****         case 0x50:    
6223:out/quex_scan.cpp ****         case 0x51:    
6224:out/quex_scan.cpp ****         case 0x52:    
6225:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 166


6226:out/quex_scan.cpp ****         case 0x54:    
6227:out/quex_scan.cpp ****         case 0x55:    
6228:out/quex_scan.cpp ****         case 0x56:    
6229:out/quex_scan.cpp ****         case 0x57:    
6230:out/quex_scan.cpp ****         case 0x58:    
6231:out/quex_scan.cpp ****         case 0x59:    
6232:out/quex_scan.cpp ****         case 0x5A:    
6233:out/quex_scan.cpp ****         case 0x5F:    
6234:out/quex_scan.cpp ****         case 0x61:    
6235:out/quex_scan.cpp ****         case 0x62:    
6236:out/quex_scan.cpp ****         case 0x63:    
6237:out/quex_scan.cpp ****         case 0x64:    
6238:out/quex_scan.cpp ****         case 0x65:    
6239:out/quex_scan.cpp ****         case 0x66:    
6240:out/quex_scan.cpp ****         case 0x67:    
6241:out/quex_scan.cpp ****         case 0x68:    
6242:out/quex_scan.cpp ****         case 0x69:    
6243:out/quex_scan.cpp ****         case 0x6A:    
6244:out/quex_scan.cpp ****         case 0x6B:    
6245:out/quex_scan.cpp ****         case 0x6C:    
6246:out/quex_scan.cpp ****         case 0x6D:    
6247:out/quex_scan.cpp ****         case 0x6E:    
6248:out/quex_scan.cpp ****         case 0x6F:    
6249:out/quex_scan.cpp ****         case 0x70:    
6250:out/quex_scan.cpp ****         case 0x71:    
6251:out/quex_scan.cpp ****         case 0x72:    
6252:out/quex_scan.cpp ****         case 0x73:    
6253:out/quex_scan.cpp ****         case 0x74:    
6254:out/quex_scan.cpp ****         case 0x75:    
6255:out/quex_scan.cpp ****         case 0x76:    
6256:out/quex_scan.cpp ****         case 0x77:    
6257:out/quex_scan.cpp ****         case 0x78:    
6258:out/quex_scan.cpp ****         case 0x79:    
6259:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6260:out/quex_scan.cpp ****     }
6261:out/quex_scan.cpp **** 
6262:out/quex_scan.cpp **** _2710:
6263:out/quex_scan.cpp ****         goto _2711;
6264:out/quex_scan.cpp **** 
6265:out/quex_scan.cpp **** 
6266:out/quex_scan.cpp ****     __quex_assert_no_passage();
6267:out/quex_scan.cpp **** _2497:
6268:out/quex_scan.cpp ****     __quex_debug_state(2497);
6269:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6270:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6271:out/quex_scan.cpp ****     switch( input ) {
6272:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2497), QUEX_LABEL(2712));
6273:out/quex_scan.cpp ****         case 0x30:    
6274:out/quex_scan.cpp ****         case 0x31:    
6275:out/quex_scan.cpp ****         case 0x32:    
6276:out/quex_scan.cpp ****         case 0x33:    
6277:out/quex_scan.cpp ****         case 0x34:    
6278:out/quex_scan.cpp ****         case 0x35:    
6279:out/quex_scan.cpp ****         case 0x36:    
6280:out/quex_scan.cpp ****         case 0x37:    
6281:out/quex_scan.cpp ****         case 0x38:    
6282:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 167


6283:out/quex_scan.cpp ****         case 0x41:    
6284:out/quex_scan.cpp ****         case 0x42:    
6285:out/quex_scan.cpp ****         case 0x43:    
6286:out/quex_scan.cpp ****         case 0x44:    
6287:out/quex_scan.cpp ****         case 0x45:    
6288:out/quex_scan.cpp ****         case 0x46:    
6289:out/quex_scan.cpp ****         case 0x47:    
6290:out/quex_scan.cpp ****         case 0x48:    
6291:out/quex_scan.cpp ****         case 0x49:    
6292:out/quex_scan.cpp ****         case 0x4A:    
6293:out/quex_scan.cpp ****         case 0x4B:    
6294:out/quex_scan.cpp ****         case 0x4C:    
6295:out/quex_scan.cpp ****         case 0x4D:    
6296:out/quex_scan.cpp ****         case 0x4E:    
6297:out/quex_scan.cpp ****         case 0x4F:    
6298:out/quex_scan.cpp ****         case 0x50:    
6299:out/quex_scan.cpp ****         case 0x51:    
6300:out/quex_scan.cpp ****         case 0x52:    
6301:out/quex_scan.cpp ****         case 0x53:    
6302:out/quex_scan.cpp ****         case 0x54:    
6303:out/quex_scan.cpp ****         case 0x55:    
6304:out/quex_scan.cpp ****         case 0x56:    
6305:out/quex_scan.cpp ****         case 0x57:    
6306:out/quex_scan.cpp ****         case 0x58:    
6307:out/quex_scan.cpp ****         case 0x59:    
6308:out/quex_scan.cpp ****         case 0x5A:    
6309:out/quex_scan.cpp ****         case 0x5F:    
6310:out/quex_scan.cpp ****         case 0x61:    
6311:out/quex_scan.cpp ****         case 0x62:    
6312:out/quex_scan.cpp ****         case 0x63:    
6313:out/quex_scan.cpp ****         case 0x64:    
6314:out/quex_scan.cpp ****         case 0x65:    
6315:out/quex_scan.cpp ****         case 0x66:    
6316:out/quex_scan.cpp ****         case 0x67:    
6317:out/quex_scan.cpp ****         case 0x68:    
6318:out/quex_scan.cpp ****         case 0x69:    
6319:out/quex_scan.cpp ****         case 0x6A:    
6320:out/quex_scan.cpp ****         case 0x6B:    
6321:out/quex_scan.cpp ****         case 0x6C:    
6322:out/quex_scan.cpp ****         case 0x6D:    
6323:out/quex_scan.cpp ****         case 0x6E:    
6324:out/quex_scan.cpp ****         case 0x6F:    
6325:out/quex_scan.cpp ****         case 0x70:    
6326:out/quex_scan.cpp ****         case 0x71:    goto _2364;
6327:out/quex_scan.cpp ****         case 0x72:    goto _2502;
6328:out/quex_scan.cpp ****         case 0x73:    
6329:out/quex_scan.cpp ****         case 0x74:    
6330:out/quex_scan.cpp ****         case 0x75:    
6331:out/quex_scan.cpp ****         case 0x76:    
6332:out/quex_scan.cpp ****         case 0x77:    
6333:out/quex_scan.cpp ****         case 0x78:    
6334:out/quex_scan.cpp ****         case 0x79:    
6335:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6336:out/quex_scan.cpp ****     }
6337:out/quex_scan.cpp **** 
6338:out/quex_scan.cpp **** _2712:
6339:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 168


6340:out/quex_scan.cpp **** 
6341:out/quex_scan.cpp **** 
6342:out/quex_scan.cpp ****     __quex_assert_no_passage();
6343:out/quex_scan.cpp **** _2498:
6344:out/quex_scan.cpp ****     __quex_debug_state(2498);
6345:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6346:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6347:out/quex_scan.cpp ****     switch( input ) {
6348:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2498), QUEX_LABEL(2713));
6349:out/quex_scan.cpp ****         case 0x30:    
6350:out/quex_scan.cpp ****         case 0x31:    
6351:out/quex_scan.cpp ****         case 0x32:    
6352:out/quex_scan.cpp ****         case 0x33:    
6353:out/quex_scan.cpp ****         case 0x34:    
6354:out/quex_scan.cpp ****         case 0x35:    
6355:out/quex_scan.cpp ****         case 0x36:    
6356:out/quex_scan.cpp ****         case 0x37:    
6357:out/quex_scan.cpp ****         case 0x38:    
6358:out/quex_scan.cpp ****         case 0x39:    
6359:out/quex_scan.cpp ****         case 0x41:    
6360:out/quex_scan.cpp ****         case 0x42:    
6361:out/quex_scan.cpp ****         case 0x43:    
6362:out/quex_scan.cpp ****         case 0x44:    
6363:out/quex_scan.cpp ****         case 0x45:    
6364:out/quex_scan.cpp ****         case 0x46:    
6365:out/quex_scan.cpp ****         case 0x47:    
6366:out/quex_scan.cpp ****         case 0x48:    
6367:out/quex_scan.cpp ****         case 0x49:    
6368:out/quex_scan.cpp ****         case 0x4A:    
6369:out/quex_scan.cpp ****         case 0x4B:    
6370:out/quex_scan.cpp ****         case 0x4C:    
6371:out/quex_scan.cpp ****         case 0x4D:    
6372:out/quex_scan.cpp ****         case 0x4E:    
6373:out/quex_scan.cpp ****         case 0x4F:    
6374:out/quex_scan.cpp ****         case 0x50:    
6375:out/quex_scan.cpp ****         case 0x51:    
6376:out/quex_scan.cpp ****         case 0x52:    
6377:out/quex_scan.cpp ****         case 0x53:    
6378:out/quex_scan.cpp ****         case 0x54:    
6379:out/quex_scan.cpp ****         case 0x55:    
6380:out/quex_scan.cpp ****         case 0x56:    
6381:out/quex_scan.cpp ****         case 0x57:    
6382:out/quex_scan.cpp ****         case 0x58:    
6383:out/quex_scan.cpp ****         case 0x59:    
6384:out/quex_scan.cpp ****         case 0x5A:    
6385:out/quex_scan.cpp ****         case 0x5F:    
6386:out/quex_scan.cpp ****         case 0x61:    
6387:out/quex_scan.cpp ****         case 0x62:    
6388:out/quex_scan.cpp ****         case 0x63:    
6389:out/quex_scan.cpp ****         case 0x64:    
6390:out/quex_scan.cpp ****         case 0x65:    
6391:out/quex_scan.cpp ****         case 0x66:    
6392:out/quex_scan.cpp ****         case 0x67:    
6393:out/quex_scan.cpp ****         case 0x68:    
6394:out/quex_scan.cpp ****         case 0x69:    
6395:out/quex_scan.cpp ****         case 0x6A:    
6396:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 169


6397:out/quex_scan.cpp ****         case 0x6C:    
6398:out/quex_scan.cpp ****         case 0x6D:    
6399:out/quex_scan.cpp ****         case 0x6E:    goto _2364;
6400:out/quex_scan.cpp ****         case 0x6F:    goto _2499;
6401:out/quex_scan.cpp ****         case 0x70:    
6402:out/quex_scan.cpp ****         case 0x71:    
6403:out/quex_scan.cpp ****         case 0x72:    
6404:out/quex_scan.cpp ****         case 0x73:    
6405:out/quex_scan.cpp ****         case 0x74:    
6406:out/quex_scan.cpp ****         case 0x75:    
6407:out/quex_scan.cpp ****         case 0x76:    
6408:out/quex_scan.cpp ****         case 0x77:    
6409:out/quex_scan.cpp ****         case 0x78:    
6410:out/quex_scan.cpp ****         case 0x79:    
6411:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6412:out/quex_scan.cpp ****     }
6413:out/quex_scan.cpp **** 
6414:out/quex_scan.cpp **** _2713:
6415:out/quex_scan.cpp ****         goto _2536;
6416:out/quex_scan.cpp **** 
6417:out/quex_scan.cpp **** 
6418:out/quex_scan.cpp ****     __quex_assert_no_passage();
6419:out/quex_scan.cpp **** _2499:
6420:out/quex_scan.cpp ****     __quex_debug_state(2499);
6421:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6422:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6423:out/quex_scan.cpp ****     switch( input ) {
6424:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2499), QUEX_LABEL(2714));
6425:out/quex_scan.cpp ****         case 0x30:    
6426:out/quex_scan.cpp ****         case 0x31:    
6427:out/quex_scan.cpp ****         case 0x32:    
6428:out/quex_scan.cpp ****         case 0x33:    
6429:out/quex_scan.cpp ****         case 0x34:    
6430:out/quex_scan.cpp ****         case 0x35:    
6431:out/quex_scan.cpp ****         case 0x36:    
6432:out/quex_scan.cpp ****         case 0x37:    
6433:out/quex_scan.cpp ****         case 0x38:    
6434:out/quex_scan.cpp ****         case 0x39:    
6435:out/quex_scan.cpp ****         case 0x41:    
6436:out/quex_scan.cpp ****         case 0x42:    
6437:out/quex_scan.cpp ****         case 0x43:    
6438:out/quex_scan.cpp ****         case 0x44:    
6439:out/quex_scan.cpp ****         case 0x45:    
6440:out/quex_scan.cpp ****         case 0x46:    
6441:out/quex_scan.cpp ****         case 0x47:    
6442:out/quex_scan.cpp ****         case 0x48:    
6443:out/quex_scan.cpp ****         case 0x49:    
6444:out/quex_scan.cpp ****         case 0x4A:    
6445:out/quex_scan.cpp ****         case 0x4B:    
6446:out/quex_scan.cpp ****         case 0x4C:    
6447:out/quex_scan.cpp ****         case 0x4D:    
6448:out/quex_scan.cpp ****         case 0x4E:    
6449:out/quex_scan.cpp ****         case 0x4F:    
6450:out/quex_scan.cpp ****         case 0x50:    
6451:out/quex_scan.cpp ****         case 0x51:    
6452:out/quex_scan.cpp ****         case 0x52:    
6453:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 170


6454:out/quex_scan.cpp ****         case 0x54:    
6455:out/quex_scan.cpp ****         case 0x55:    
6456:out/quex_scan.cpp ****         case 0x56:    
6457:out/quex_scan.cpp ****         case 0x57:    
6458:out/quex_scan.cpp ****         case 0x58:    
6459:out/quex_scan.cpp ****         case 0x59:    
6460:out/quex_scan.cpp ****         case 0x5A:    
6461:out/quex_scan.cpp ****         case 0x5F:    goto _2364;
6462:out/quex_scan.cpp ****         case 0x61:    goto _2500;
6463:out/quex_scan.cpp ****         case 0x62:    
6464:out/quex_scan.cpp ****         case 0x63:    
6465:out/quex_scan.cpp ****         case 0x64:    
6466:out/quex_scan.cpp ****         case 0x65:    
6467:out/quex_scan.cpp ****         case 0x66:    
6468:out/quex_scan.cpp ****         case 0x67:    
6469:out/quex_scan.cpp ****         case 0x68:    
6470:out/quex_scan.cpp ****         case 0x69:    
6471:out/quex_scan.cpp ****         case 0x6A:    
6472:out/quex_scan.cpp ****         case 0x6B:    
6473:out/quex_scan.cpp ****         case 0x6C:    
6474:out/quex_scan.cpp ****         case 0x6D:    
6475:out/quex_scan.cpp ****         case 0x6E:    
6476:out/quex_scan.cpp ****         case 0x6F:    
6477:out/quex_scan.cpp ****         case 0x70:    
6478:out/quex_scan.cpp ****         case 0x71:    
6479:out/quex_scan.cpp ****         case 0x72:    
6480:out/quex_scan.cpp ****         case 0x73:    
6481:out/quex_scan.cpp ****         case 0x74:    
6482:out/quex_scan.cpp ****         case 0x75:    
6483:out/quex_scan.cpp ****         case 0x76:    
6484:out/quex_scan.cpp ****         case 0x77:    
6485:out/quex_scan.cpp ****         case 0x78:    
6486:out/quex_scan.cpp ****         case 0x79:    
6487:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6488:out/quex_scan.cpp ****     }
6489:out/quex_scan.cpp **** 
6490:out/quex_scan.cpp **** _2714:
6491:out/quex_scan.cpp ****         goto _2536;
6492:out/quex_scan.cpp **** 
6493:out/quex_scan.cpp **** 
6494:out/quex_scan.cpp ****     __quex_assert_no_passage();
6495:out/quex_scan.cpp **** _2500:
6496:out/quex_scan.cpp ****     __quex_debug_state(2500);
6497:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6498:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6499:out/quex_scan.cpp ****     switch( input ) {
6500:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2500), QUEX_LABEL(2715));
6501:out/quex_scan.cpp ****         case 0x30:    
6502:out/quex_scan.cpp ****         case 0x31:    
6503:out/quex_scan.cpp ****         case 0x32:    
6504:out/quex_scan.cpp ****         case 0x33:    
6505:out/quex_scan.cpp ****         case 0x34:    
6506:out/quex_scan.cpp ****         case 0x35:    
6507:out/quex_scan.cpp ****         case 0x36:    
6508:out/quex_scan.cpp ****         case 0x37:    
6509:out/quex_scan.cpp ****         case 0x38:    
6510:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 171


6511:out/quex_scan.cpp ****         case 0x41:    
6512:out/quex_scan.cpp ****         case 0x42:    
6513:out/quex_scan.cpp ****         case 0x43:    
6514:out/quex_scan.cpp ****         case 0x44:    
6515:out/quex_scan.cpp ****         case 0x45:    
6516:out/quex_scan.cpp ****         case 0x46:    
6517:out/quex_scan.cpp ****         case 0x47:    
6518:out/quex_scan.cpp ****         case 0x48:    
6519:out/quex_scan.cpp ****         case 0x49:    
6520:out/quex_scan.cpp ****         case 0x4A:    
6521:out/quex_scan.cpp ****         case 0x4B:    
6522:out/quex_scan.cpp ****         case 0x4C:    
6523:out/quex_scan.cpp ****         case 0x4D:    
6524:out/quex_scan.cpp ****         case 0x4E:    
6525:out/quex_scan.cpp ****         case 0x4F:    
6526:out/quex_scan.cpp ****         case 0x50:    
6527:out/quex_scan.cpp ****         case 0x51:    
6528:out/quex_scan.cpp ****         case 0x52:    
6529:out/quex_scan.cpp ****         case 0x53:    
6530:out/quex_scan.cpp ****         case 0x54:    
6531:out/quex_scan.cpp ****         case 0x55:    
6532:out/quex_scan.cpp ****         case 0x56:    
6533:out/quex_scan.cpp ****         case 0x57:    
6534:out/quex_scan.cpp ****         case 0x58:    
6535:out/quex_scan.cpp ****         case 0x59:    
6536:out/quex_scan.cpp ****         case 0x5A:    
6537:out/quex_scan.cpp ****         case 0x5F:    
6538:out/quex_scan.cpp ****         case 0x61:    
6539:out/quex_scan.cpp ****         case 0x62:    
6540:out/quex_scan.cpp ****         case 0x63:    
6541:out/quex_scan.cpp ****         case 0x64:    
6542:out/quex_scan.cpp ****         case 0x65:    
6543:out/quex_scan.cpp ****         case 0x66:    
6544:out/quex_scan.cpp ****         case 0x67:    
6545:out/quex_scan.cpp ****         case 0x68:    
6546:out/quex_scan.cpp ****         case 0x69:    
6547:out/quex_scan.cpp ****         case 0x6A:    
6548:out/quex_scan.cpp ****         case 0x6B:    
6549:out/quex_scan.cpp ****         case 0x6C:    
6550:out/quex_scan.cpp ****         case 0x6D:    
6551:out/quex_scan.cpp ****         case 0x6E:    
6552:out/quex_scan.cpp ****         case 0x6F:    
6553:out/quex_scan.cpp ****         case 0x70:    
6554:out/quex_scan.cpp ****         case 0x71:    
6555:out/quex_scan.cpp ****         case 0x72:    
6556:out/quex_scan.cpp ****         case 0x73:    goto _2364;
6557:out/quex_scan.cpp ****         case 0x74:    goto _2501;
6558:out/quex_scan.cpp ****         case 0x75:    
6559:out/quex_scan.cpp ****         case 0x76:    
6560:out/quex_scan.cpp ****         case 0x77:    
6561:out/quex_scan.cpp ****         case 0x78:    
6562:out/quex_scan.cpp ****         case 0x79:    
6563:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6564:out/quex_scan.cpp ****     }
6565:out/quex_scan.cpp **** 
6566:out/quex_scan.cpp **** _2715:
6567:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 172


6568:out/quex_scan.cpp **** 
6569:out/quex_scan.cpp **** 
6570:out/quex_scan.cpp ****     __quex_assert_no_passage();
6571:out/quex_scan.cpp **** _2501:
6572:out/quex_scan.cpp ****     __quex_debug_state(2501);
6573:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6574:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6575:out/quex_scan.cpp ****     switch( input ) {
6576:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2501), QUEX_LABEL(2716));
6577:out/quex_scan.cpp ****         case 0x30:    
6578:out/quex_scan.cpp ****         case 0x31:    
6579:out/quex_scan.cpp ****         case 0x32:    
6580:out/quex_scan.cpp ****         case 0x33:    
6581:out/quex_scan.cpp ****         case 0x34:    
6582:out/quex_scan.cpp ****         case 0x35:    
6583:out/quex_scan.cpp ****         case 0x36:    
6584:out/quex_scan.cpp ****         case 0x37:    
6585:out/quex_scan.cpp ****         case 0x38:    
6586:out/quex_scan.cpp ****         case 0x39:    
6587:out/quex_scan.cpp ****         case 0x41:    
6588:out/quex_scan.cpp ****         case 0x42:    
6589:out/quex_scan.cpp ****         case 0x43:    
6590:out/quex_scan.cpp ****         case 0x44:    
6591:out/quex_scan.cpp ****         case 0x45:    
6592:out/quex_scan.cpp ****         case 0x46:    
6593:out/quex_scan.cpp ****         case 0x47:    
6594:out/quex_scan.cpp ****         case 0x48:    
6595:out/quex_scan.cpp ****         case 0x49:    
6596:out/quex_scan.cpp ****         case 0x4A:    
6597:out/quex_scan.cpp ****         case 0x4B:    
6598:out/quex_scan.cpp ****         case 0x4C:    
6599:out/quex_scan.cpp ****         case 0x4D:    
6600:out/quex_scan.cpp ****         case 0x4E:    
6601:out/quex_scan.cpp ****         case 0x4F:    
6602:out/quex_scan.cpp ****         case 0x50:    
6603:out/quex_scan.cpp ****         case 0x51:    
6604:out/quex_scan.cpp ****         case 0x52:    
6605:out/quex_scan.cpp ****         case 0x53:    
6606:out/quex_scan.cpp ****         case 0x54:    
6607:out/quex_scan.cpp ****         case 0x55:    
6608:out/quex_scan.cpp ****         case 0x56:    
6609:out/quex_scan.cpp ****         case 0x57:    
6610:out/quex_scan.cpp ****         case 0x58:    
6611:out/quex_scan.cpp ****         case 0x59:    
6612:out/quex_scan.cpp ****         case 0x5A:    
6613:out/quex_scan.cpp ****         case 0x5F:    
6614:out/quex_scan.cpp ****         case 0x61:    
6615:out/quex_scan.cpp ****         case 0x62:    
6616:out/quex_scan.cpp ****         case 0x63:    
6617:out/quex_scan.cpp ****         case 0x64:    
6618:out/quex_scan.cpp ****         case 0x65:    
6619:out/quex_scan.cpp ****         case 0x66:    
6620:out/quex_scan.cpp ****         case 0x67:    
6621:out/quex_scan.cpp ****         case 0x68:    
6622:out/quex_scan.cpp ****         case 0x69:    
6623:out/quex_scan.cpp ****         case 0x6A:    
6624:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 173


6625:out/quex_scan.cpp ****         case 0x6C:    
6626:out/quex_scan.cpp ****         case 0x6D:    
6627:out/quex_scan.cpp ****         case 0x6E:    
6628:out/quex_scan.cpp ****         case 0x6F:    
6629:out/quex_scan.cpp ****         case 0x70:    
6630:out/quex_scan.cpp ****         case 0x71:    
6631:out/quex_scan.cpp ****         case 0x72:    
6632:out/quex_scan.cpp ****         case 0x73:    
6633:out/quex_scan.cpp ****         case 0x74:    
6634:out/quex_scan.cpp ****         case 0x75:    
6635:out/quex_scan.cpp ****         case 0x76:    
6636:out/quex_scan.cpp ****         case 0x77:    
6637:out/quex_scan.cpp ****         case 0x78:    
6638:out/quex_scan.cpp ****         case 0x79:    
6639:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6640:out/quex_scan.cpp ****     }
6641:out/quex_scan.cpp **** 
6642:out/quex_scan.cpp **** _2716:
6643:out/quex_scan.cpp ****         goto _2717;
6644:out/quex_scan.cpp **** 
6645:out/quex_scan.cpp **** 
6646:out/quex_scan.cpp ****     __quex_assert_no_passage();
6647:out/quex_scan.cpp **** _2502:
6648:out/quex_scan.cpp ****     __quex_debug_state(2502);
6649:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6650:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6651:out/quex_scan.cpp ****     switch( input ) {
6652:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2502), QUEX_LABEL(2718));
6653:out/quex_scan.cpp ****         case 0x30:    
6654:out/quex_scan.cpp ****         case 0x31:    
6655:out/quex_scan.cpp ****         case 0x32:    
6656:out/quex_scan.cpp ****         case 0x33:    
6657:out/quex_scan.cpp ****         case 0x34:    
6658:out/quex_scan.cpp ****         case 0x35:    
6659:out/quex_scan.cpp ****         case 0x36:    
6660:out/quex_scan.cpp ****         case 0x37:    
6661:out/quex_scan.cpp ****         case 0x38:    
6662:out/quex_scan.cpp ****         case 0x39:    
6663:out/quex_scan.cpp ****         case 0x41:    
6664:out/quex_scan.cpp ****         case 0x42:    
6665:out/quex_scan.cpp ****         case 0x43:    
6666:out/quex_scan.cpp ****         case 0x44:    
6667:out/quex_scan.cpp ****         case 0x45:    
6668:out/quex_scan.cpp ****         case 0x46:    
6669:out/quex_scan.cpp ****         case 0x47:    
6670:out/quex_scan.cpp ****         case 0x48:    
6671:out/quex_scan.cpp ****         case 0x49:    
6672:out/quex_scan.cpp ****         case 0x4A:    
6673:out/quex_scan.cpp ****         case 0x4B:    
6674:out/quex_scan.cpp ****         case 0x4C:    
6675:out/quex_scan.cpp ****         case 0x4D:    
6676:out/quex_scan.cpp ****         case 0x4E:    
6677:out/quex_scan.cpp ****         case 0x4F:    
6678:out/quex_scan.cpp ****         case 0x50:    
6679:out/quex_scan.cpp ****         case 0x51:    
6680:out/quex_scan.cpp ****         case 0x52:    
6681:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 174


6682:out/quex_scan.cpp ****         case 0x54:    
6683:out/quex_scan.cpp ****         case 0x55:    
6684:out/quex_scan.cpp ****         case 0x56:    
6685:out/quex_scan.cpp ****         case 0x57:    
6686:out/quex_scan.cpp ****         case 0x58:    
6687:out/quex_scan.cpp ****         case 0x59:    
6688:out/quex_scan.cpp ****         case 0x5A:    
6689:out/quex_scan.cpp ****         case 0x5F:    
6690:out/quex_scan.cpp ****         case 0x61:    
6691:out/quex_scan.cpp ****         case 0x62:    
6692:out/quex_scan.cpp ****         case 0x63:    
6693:out/quex_scan.cpp ****         case 0x64:    
6694:out/quex_scan.cpp ****         case 0x65:    
6695:out/quex_scan.cpp ****         case 0x66:    
6696:out/quex_scan.cpp ****         case 0x67:    
6697:out/quex_scan.cpp ****         case 0x68:    
6698:out/quex_scan.cpp ****         case 0x69:    
6699:out/quex_scan.cpp ****         case 0x6A:    
6700:out/quex_scan.cpp ****         case 0x6B:    
6701:out/quex_scan.cpp ****         case 0x6C:    
6702:out/quex_scan.cpp ****         case 0x6D:    
6703:out/quex_scan.cpp ****         case 0x6E:    
6704:out/quex_scan.cpp ****         case 0x6F:    
6705:out/quex_scan.cpp ****         case 0x70:    
6706:out/quex_scan.cpp ****         case 0x71:    
6707:out/quex_scan.cpp ****         case 0x72:    
6708:out/quex_scan.cpp ****         case 0x73:    
6709:out/quex_scan.cpp ****         case 0x74:    
6710:out/quex_scan.cpp ****         case 0x75:    
6711:out/quex_scan.cpp ****         case 0x76:    
6712:out/quex_scan.cpp ****         case 0x77:    
6713:out/quex_scan.cpp ****         case 0x78:    
6714:out/quex_scan.cpp ****         case 0x79:    
6715:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6716:out/quex_scan.cpp ****     }
6717:out/quex_scan.cpp **** 
6718:out/quex_scan.cpp **** _2718:
6719:out/quex_scan.cpp ****         goto _2719;
6720:out/quex_scan.cpp **** 
6721:out/quex_scan.cpp **** 
6722:out/quex_scan.cpp ****     __quex_assert_no_passage();
6723:out/quex_scan.cpp **** _2503:
6724:out/quex_scan.cpp ****     __quex_debug_state(2503);
6725:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6726:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6727:out/quex_scan.cpp ****     switch( input ) {
6728:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2503), QUEX_LABEL(2720));
6729:out/quex_scan.cpp ****         case 0x30:    
6730:out/quex_scan.cpp ****         case 0x31:    
6731:out/quex_scan.cpp ****         case 0x32:    
6732:out/quex_scan.cpp ****         case 0x33:    
6733:out/quex_scan.cpp ****         case 0x34:    
6734:out/quex_scan.cpp ****         case 0x35:    
6735:out/quex_scan.cpp ****         case 0x36:    
6736:out/quex_scan.cpp ****         case 0x37:    
6737:out/quex_scan.cpp ****         case 0x38:    
6738:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 175


6739:out/quex_scan.cpp ****         case 0x41:    
6740:out/quex_scan.cpp ****         case 0x42:    
6741:out/quex_scan.cpp ****         case 0x43:    
6742:out/quex_scan.cpp ****         case 0x44:    
6743:out/quex_scan.cpp ****         case 0x45:    
6744:out/quex_scan.cpp ****         case 0x46:    
6745:out/quex_scan.cpp ****         case 0x47:    
6746:out/quex_scan.cpp ****         case 0x48:    
6747:out/quex_scan.cpp ****         case 0x49:    
6748:out/quex_scan.cpp ****         case 0x4A:    
6749:out/quex_scan.cpp ****         case 0x4B:    
6750:out/quex_scan.cpp ****         case 0x4C:    
6751:out/quex_scan.cpp ****         case 0x4D:    
6752:out/quex_scan.cpp ****         case 0x4E:    
6753:out/quex_scan.cpp ****         case 0x4F:    
6754:out/quex_scan.cpp ****         case 0x50:    
6755:out/quex_scan.cpp ****         case 0x51:    
6756:out/quex_scan.cpp ****         case 0x52:    
6757:out/quex_scan.cpp ****         case 0x53:    
6758:out/quex_scan.cpp ****         case 0x54:    
6759:out/quex_scan.cpp ****         case 0x55:    
6760:out/quex_scan.cpp ****         case 0x56:    
6761:out/quex_scan.cpp ****         case 0x57:    
6762:out/quex_scan.cpp ****         case 0x58:    
6763:out/quex_scan.cpp ****         case 0x59:    
6764:out/quex_scan.cpp ****         case 0x5A:    
6765:out/quex_scan.cpp ****         case 0x5F:    
6766:out/quex_scan.cpp ****         case 0x61:    
6767:out/quex_scan.cpp ****         case 0x62:    
6768:out/quex_scan.cpp ****         case 0x63:    
6769:out/quex_scan.cpp ****         case 0x64:    goto _2364;
6770:out/quex_scan.cpp ****         case 0x65:    goto _2504;
6771:out/quex_scan.cpp ****         case 0x66:    
6772:out/quex_scan.cpp ****         case 0x67:    
6773:out/quex_scan.cpp ****         case 0x68:    
6774:out/quex_scan.cpp ****         case 0x69:    
6775:out/quex_scan.cpp ****         case 0x6A:    
6776:out/quex_scan.cpp ****         case 0x6B:    
6777:out/quex_scan.cpp ****         case 0x6C:    
6778:out/quex_scan.cpp ****         case 0x6D:    
6779:out/quex_scan.cpp ****         case 0x6E:    
6780:out/quex_scan.cpp ****         case 0x6F:    
6781:out/quex_scan.cpp ****         case 0x70:    
6782:out/quex_scan.cpp ****         case 0x71:    
6783:out/quex_scan.cpp ****         case 0x72:    
6784:out/quex_scan.cpp ****         case 0x73:    
6785:out/quex_scan.cpp ****         case 0x74:    
6786:out/quex_scan.cpp ****         case 0x75:    
6787:out/quex_scan.cpp ****         case 0x76:    
6788:out/quex_scan.cpp ****         case 0x77:    
6789:out/quex_scan.cpp ****         case 0x78:    
6790:out/quex_scan.cpp ****         case 0x79:    
6791:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6792:out/quex_scan.cpp ****     }
6793:out/quex_scan.cpp **** 
6794:out/quex_scan.cpp **** _2720:
6795:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 176


6796:out/quex_scan.cpp **** 
6797:out/quex_scan.cpp **** 
6798:out/quex_scan.cpp ****     __quex_assert_no_passage();
6799:out/quex_scan.cpp **** _2504:
6800:out/quex_scan.cpp ****     __quex_debug_state(2504);
6801:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6802:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6803:out/quex_scan.cpp ****     switch( input ) {
6804:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2504), QUEX_LABEL(2721));
6805:out/quex_scan.cpp ****         case 0x30:    
6806:out/quex_scan.cpp ****         case 0x31:    
6807:out/quex_scan.cpp ****         case 0x32:    
6808:out/quex_scan.cpp ****         case 0x33:    
6809:out/quex_scan.cpp ****         case 0x34:    
6810:out/quex_scan.cpp ****         case 0x35:    
6811:out/quex_scan.cpp ****         case 0x36:    
6812:out/quex_scan.cpp ****         case 0x37:    
6813:out/quex_scan.cpp ****         case 0x38:    
6814:out/quex_scan.cpp ****         case 0x39:    
6815:out/quex_scan.cpp ****         case 0x41:    
6816:out/quex_scan.cpp ****         case 0x42:    
6817:out/quex_scan.cpp ****         case 0x43:    
6818:out/quex_scan.cpp ****         case 0x44:    
6819:out/quex_scan.cpp ****         case 0x45:    
6820:out/quex_scan.cpp ****         case 0x46:    
6821:out/quex_scan.cpp ****         case 0x47:    
6822:out/quex_scan.cpp ****         case 0x48:    
6823:out/quex_scan.cpp ****         case 0x49:    
6824:out/quex_scan.cpp ****         case 0x4A:    
6825:out/quex_scan.cpp ****         case 0x4B:    
6826:out/quex_scan.cpp ****         case 0x4C:    
6827:out/quex_scan.cpp ****         case 0x4D:    
6828:out/quex_scan.cpp ****         case 0x4E:    
6829:out/quex_scan.cpp ****         case 0x4F:    
6830:out/quex_scan.cpp ****         case 0x50:    
6831:out/quex_scan.cpp ****         case 0x51:    
6832:out/quex_scan.cpp ****         case 0x52:    
6833:out/quex_scan.cpp ****         case 0x53:    
6834:out/quex_scan.cpp ****         case 0x54:    
6835:out/quex_scan.cpp ****         case 0x55:    
6836:out/quex_scan.cpp ****         case 0x56:    
6837:out/quex_scan.cpp ****         case 0x57:    
6838:out/quex_scan.cpp ****         case 0x58:    
6839:out/quex_scan.cpp ****         case 0x59:    
6840:out/quex_scan.cpp ****         case 0x5A:    
6841:out/quex_scan.cpp ****         case 0x5F:    goto _2364;
6842:out/quex_scan.cpp ****         case 0x61:    goto _2505;
6843:out/quex_scan.cpp ****         case 0x62:    
6844:out/quex_scan.cpp ****         case 0x63:    
6845:out/quex_scan.cpp ****         case 0x64:    
6846:out/quex_scan.cpp ****         case 0x65:    
6847:out/quex_scan.cpp ****         case 0x66:    
6848:out/quex_scan.cpp ****         case 0x67:    
6849:out/quex_scan.cpp ****         case 0x68:    
6850:out/quex_scan.cpp ****         case 0x69:    
6851:out/quex_scan.cpp ****         case 0x6A:    
6852:out/quex_scan.cpp ****         case 0x6B:    
GAS LISTING /tmp/cc23nfB3.s 			page 177


6853:out/quex_scan.cpp ****         case 0x6C:    
6854:out/quex_scan.cpp ****         case 0x6D:    
6855:out/quex_scan.cpp ****         case 0x6E:    
6856:out/quex_scan.cpp ****         case 0x6F:    
6857:out/quex_scan.cpp ****         case 0x70:    
6858:out/quex_scan.cpp ****         case 0x71:    
6859:out/quex_scan.cpp ****         case 0x72:    
6860:out/quex_scan.cpp ****         case 0x73:    
6861:out/quex_scan.cpp ****         case 0x74:    
6862:out/quex_scan.cpp ****         case 0x75:    
6863:out/quex_scan.cpp ****         case 0x76:    
6864:out/quex_scan.cpp ****         case 0x77:    
6865:out/quex_scan.cpp ****         case 0x78:    
6866:out/quex_scan.cpp ****         case 0x79:    
6867:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6868:out/quex_scan.cpp ****     }
6869:out/quex_scan.cpp **** 
6870:out/quex_scan.cpp **** _2721:
6871:out/quex_scan.cpp ****         goto _2536;
6872:out/quex_scan.cpp **** 
6873:out/quex_scan.cpp **** 
6874:out/quex_scan.cpp ****     __quex_assert_no_passage();
6875:out/quex_scan.cpp **** _2505:
6876:out/quex_scan.cpp ****     __quex_debug_state(2505);
6877:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6878:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6879:out/quex_scan.cpp ****     switch( input ) {
6880:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2505), QUEX_LABEL(2722));
6881:out/quex_scan.cpp ****         case 0x30:    
6882:out/quex_scan.cpp ****         case 0x31:    
6883:out/quex_scan.cpp ****         case 0x32:    
6884:out/quex_scan.cpp ****         case 0x33:    
6885:out/quex_scan.cpp ****         case 0x34:    
6886:out/quex_scan.cpp ****         case 0x35:    
6887:out/quex_scan.cpp ****         case 0x36:    
6888:out/quex_scan.cpp ****         case 0x37:    
6889:out/quex_scan.cpp ****         case 0x38:    
6890:out/quex_scan.cpp ****         case 0x39:    
6891:out/quex_scan.cpp ****         case 0x41:    
6892:out/quex_scan.cpp ****         case 0x42:    
6893:out/quex_scan.cpp ****         case 0x43:    
6894:out/quex_scan.cpp ****         case 0x44:    
6895:out/quex_scan.cpp ****         case 0x45:    
6896:out/quex_scan.cpp ****         case 0x46:    
6897:out/quex_scan.cpp ****         case 0x47:    
6898:out/quex_scan.cpp ****         case 0x48:    
6899:out/quex_scan.cpp ****         case 0x49:    
6900:out/quex_scan.cpp ****         case 0x4A:    
6901:out/quex_scan.cpp ****         case 0x4B:    
6902:out/quex_scan.cpp ****         case 0x4C:    
6903:out/quex_scan.cpp ****         case 0x4D:    
6904:out/quex_scan.cpp ****         case 0x4E:    
6905:out/quex_scan.cpp ****         case 0x4F:    
6906:out/quex_scan.cpp ****         case 0x50:    
6907:out/quex_scan.cpp ****         case 0x51:    
6908:out/quex_scan.cpp ****         case 0x52:    
6909:out/quex_scan.cpp ****         case 0x53:    
GAS LISTING /tmp/cc23nfB3.s 			page 178


6910:out/quex_scan.cpp ****         case 0x54:    
6911:out/quex_scan.cpp ****         case 0x55:    
6912:out/quex_scan.cpp ****         case 0x56:    
6913:out/quex_scan.cpp ****         case 0x57:    
6914:out/quex_scan.cpp ****         case 0x58:    
6915:out/quex_scan.cpp ****         case 0x59:    
6916:out/quex_scan.cpp ****         case 0x5A:    
6917:out/quex_scan.cpp ****         case 0x5F:    
6918:out/quex_scan.cpp ****         case 0x61:    
6919:out/quex_scan.cpp ****         case 0x62:    
6920:out/quex_scan.cpp ****         case 0x63:    
6921:out/quex_scan.cpp ****         case 0x64:    
6922:out/quex_scan.cpp ****         case 0x65:    
6923:out/quex_scan.cpp ****         case 0x66:    
6924:out/quex_scan.cpp ****         case 0x67:    
6925:out/quex_scan.cpp ****         case 0x68:    
6926:out/quex_scan.cpp ****         case 0x69:    
6927:out/quex_scan.cpp ****         case 0x6A:    goto _2364;
6928:out/quex_scan.cpp ****         case 0x6B:    goto _2506;
6929:out/quex_scan.cpp ****         case 0x6C:    
6930:out/quex_scan.cpp ****         case 0x6D:    
6931:out/quex_scan.cpp ****         case 0x6E:    
6932:out/quex_scan.cpp ****         case 0x6F:    
6933:out/quex_scan.cpp ****         case 0x70:    
6934:out/quex_scan.cpp ****         case 0x71:    
6935:out/quex_scan.cpp ****         case 0x72:    
6936:out/quex_scan.cpp ****         case 0x73:    
6937:out/quex_scan.cpp ****         case 0x74:    
6938:out/quex_scan.cpp ****         case 0x75:    
6939:out/quex_scan.cpp ****         case 0x76:    
6940:out/quex_scan.cpp ****         case 0x77:    
6941:out/quex_scan.cpp ****         case 0x78:    
6942:out/quex_scan.cpp ****         case 0x79:    
6943:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
6944:out/quex_scan.cpp ****     }
6945:out/quex_scan.cpp **** 
6946:out/quex_scan.cpp **** _2722:
6947:out/quex_scan.cpp ****         goto _2536;
6948:out/quex_scan.cpp **** 
6949:out/quex_scan.cpp **** 
6950:out/quex_scan.cpp ****     __quex_assert_no_passage();
6951:out/quex_scan.cpp **** _2506:
6952:out/quex_scan.cpp ****     __quex_debug_state(2506);
6953:out/quex_scan.cpp ****     ++(me->buffer._input_p);
6954:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
6955:out/quex_scan.cpp ****     switch( input ) {
6956:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2506), QUEX_LABEL(2723));
6957:out/quex_scan.cpp ****         case 0x30:    
6958:out/quex_scan.cpp ****         case 0x31:    
6959:out/quex_scan.cpp ****         case 0x32:    
6960:out/quex_scan.cpp ****         case 0x33:    
6961:out/quex_scan.cpp ****         case 0x34:    
6962:out/quex_scan.cpp ****         case 0x35:    
6963:out/quex_scan.cpp ****         case 0x36:    
6964:out/quex_scan.cpp ****         case 0x37:    
6965:out/quex_scan.cpp ****         case 0x38:    
6966:out/quex_scan.cpp ****         case 0x39:    
GAS LISTING /tmp/cc23nfB3.s 			page 179


6967:out/quex_scan.cpp ****         case 0x41:    
6968:out/quex_scan.cpp ****         case 0x42:    
6969:out/quex_scan.cpp ****         case 0x43:    
6970:out/quex_scan.cpp ****         case 0x44:    
6971:out/quex_scan.cpp ****         case 0x45:    
6972:out/quex_scan.cpp ****         case 0x46:    
6973:out/quex_scan.cpp ****         case 0x47:    
6974:out/quex_scan.cpp ****         case 0x48:    
6975:out/quex_scan.cpp ****         case 0x49:    
6976:out/quex_scan.cpp ****         case 0x4A:    
6977:out/quex_scan.cpp ****         case 0x4B:    
6978:out/quex_scan.cpp ****         case 0x4C:    
6979:out/quex_scan.cpp ****         case 0x4D:    
6980:out/quex_scan.cpp ****         case 0x4E:    
6981:out/quex_scan.cpp ****         case 0x4F:    
6982:out/quex_scan.cpp ****         case 0x50:    
6983:out/quex_scan.cpp ****         case 0x51:    
6984:out/quex_scan.cpp ****         case 0x52:    
6985:out/quex_scan.cpp ****         case 0x53:    
6986:out/quex_scan.cpp ****         case 0x54:    
6987:out/quex_scan.cpp ****         case 0x55:    
6988:out/quex_scan.cpp ****         case 0x56:    
6989:out/quex_scan.cpp ****         case 0x57:    
6990:out/quex_scan.cpp ****         case 0x58:    
6991:out/quex_scan.cpp ****         case 0x59:    
6992:out/quex_scan.cpp ****         case 0x5A:    
6993:out/quex_scan.cpp ****         case 0x5F:    
6994:out/quex_scan.cpp ****         case 0x61:    
6995:out/quex_scan.cpp ****         case 0x62:    
6996:out/quex_scan.cpp ****         case 0x63:    
6997:out/quex_scan.cpp ****         case 0x64:    
6998:out/quex_scan.cpp ****         case 0x65:    
6999:out/quex_scan.cpp ****         case 0x66:    
7000:out/quex_scan.cpp ****         case 0x67:    
7001:out/quex_scan.cpp ****         case 0x68:    
7002:out/quex_scan.cpp ****         case 0x69:    
7003:out/quex_scan.cpp ****         case 0x6A:    
7004:out/quex_scan.cpp ****         case 0x6B:    
7005:out/quex_scan.cpp ****         case 0x6C:    
7006:out/quex_scan.cpp ****         case 0x6D:    
7007:out/quex_scan.cpp ****         case 0x6E:    
7008:out/quex_scan.cpp ****         case 0x6F:    
7009:out/quex_scan.cpp ****         case 0x70:    
7010:out/quex_scan.cpp ****         case 0x71:    
7011:out/quex_scan.cpp ****         case 0x72:    
7012:out/quex_scan.cpp ****         case 0x73:    
7013:out/quex_scan.cpp ****         case 0x74:    
7014:out/quex_scan.cpp ****         case 0x75:    
7015:out/quex_scan.cpp ****         case 0x76:    
7016:out/quex_scan.cpp ****         case 0x77:    
7017:out/quex_scan.cpp ****         case 0x78:    
7018:out/quex_scan.cpp ****         case 0x79:    
7019:out/quex_scan.cpp ****         case 0x7A:    goto _2364;
7020:out/quex_scan.cpp ****     }
7021:out/quex_scan.cpp **** 
7022:out/quex_scan.cpp **** _2723:
7023:out/quex_scan.cpp ****         goto _2724;
GAS LISTING /tmp/cc23nfB3.s 			page 180


7024:out/quex_scan.cpp **** 
7025:out/quex_scan.cpp **** 
7026:out/quex_scan.cpp ****     __quex_assert_no_passage();
7027:out/quex_scan.cpp **** _2508:
7028:out/quex_scan.cpp ****     __quex_debug_state(2508);
7029:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7030:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
7031:out/quex_scan.cpp ****     switch( input ) {
7032:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2508), QUEX_LABEL(2725));
7033:out/quex_scan.cpp ****         case 0x27:    goto _2511;
7034:out/quex_scan.cpp ****         case 0x30:    
7035:out/quex_scan.cpp ****         case 0x31:    
7036:out/quex_scan.cpp ****         case 0x32:    
7037:out/quex_scan.cpp ****         case 0x33:    
7038:out/quex_scan.cpp ****         case 0x34:    
7039:out/quex_scan.cpp ****         case 0x35:    
7040:out/quex_scan.cpp ****         case 0x36:    
7041:out/quex_scan.cpp ****         case 0x37:    goto _2512;
7042:out/quex_scan.cpp ****         case 0x5C:    
7043:out/quex_scan.cpp ****         case 0x61:    
7044:out/quex_scan.cpp ****         case 0x62:    
7045:out/quex_scan.cpp ****         case 0x63:    
7046:out/quex_scan.cpp ****         case 0x66:    
7047:out/quex_scan.cpp ****         case 0x6E:    
7048:out/quex_scan.cpp ****         case 0x72:    
7049:out/quex_scan.cpp ****         case 0x74:    
7050:out/quex_scan.cpp ****         case 0x76:    goto _2509;
7051:out/quex_scan.cpp ****         case 0x78:    goto _2510;
7052:out/quex_scan.cpp ****     }
7053:out/quex_scan.cpp **** 
7054:out/quex_scan.cpp **** _2725:
7055:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
7056:out/quex_scan.cpp **** 
7057:out/quex_scan.cpp **** 
7058:out/quex_scan.cpp ****     __quex_assert_no_passage();
7059:out/quex_scan.cpp **** _2510:
7060:out/quex_scan.cpp ****     __quex_debug_state(2510);
7061:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7062:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
7063:out/quex_scan.cpp ****     switch( input ) {
7064:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2510), QUEX_LABEL(2726));
7065:out/quex_scan.cpp ****         case 0x30:    
7066:out/quex_scan.cpp ****         case 0x31:    
7067:out/quex_scan.cpp ****         case 0x32:    
7068:out/quex_scan.cpp ****         case 0x33:    
7069:out/quex_scan.cpp ****         case 0x34:    
7070:out/quex_scan.cpp ****         case 0x35:    
7071:out/quex_scan.cpp ****         case 0x36:    
7072:out/quex_scan.cpp ****         case 0x37:    
7073:out/quex_scan.cpp ****         case 0x38:    
7074:out/quex_scan.cpp ****         case 0x39:    
7075:out/quex_scan.cpp ****         case 0x41:    
7076:out/quex_scan.cpp ****         case 0x42:    
7077:out/quex_scan.cpp ****         case 0x43:    
7078:out/quex_scan.cpp ****         case 0x44:    
7079:out/quex_scan.cpp ****         case 0x45:    
7080:out/quex_scan.cpp ****         case 0x46:    
GAS LISTING /tmp/cc23nfB3.s 			page 181


7081:out/quex_scan.cpp ****         case 0x61:    
7082:out/quex_scan.cpp ****         case 0x62:    
7083:out/quex_scan.cpp ****         case 0x63:    
7084:out/quex_scan.cpp ****         case 0x64:    
7085:out/quex_scan.cpp ****         case 0x65:    
7086:out/quex_scan.cpp ****         case 0x66:    goto _2513;
7087:out/quex_scan.cpp ****     }
7088:out/quex_scan.cpp **** 
7089:out/quex_scan.cpp **** _2726:
7090:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
7091:out/quex_scan.cpp **** 
7092:out/quex_scan.cpp **** 
7093:out/quex_scan.cpp ****     __quex_assert_no_passage();
7094:out/quex_scan.cpp **** _2511:
7095:out/quex_scan.cpp ****     __quex_debug_state(2511);
7096:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7097:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
7098:out/quex_scan.cpp ****     switch( input ) {
7099:out/quex_scan.cpp ****         case 0x0:     QUEX_GOTO_RELOAD(FORWARD, QUEX_LABEL(2511), QUEX_LABEL(2727));
7100:out/quex_scan.cpp ****         case 0x27:    goto _2537;
7101:out/quex_scan.cpp ****     }
7102:out/quex_scan.cpp **** 
7103:out/quex_scan.cpp **** _2727:
7104:out/quex_scan.cpp ****         goto _2728;
7105:out/quex_scan.cpp **** 
7106:out/quex_scan.cpp **** 
7107:out/quex_scan.cpp ****     __quex_assert_no_passage(); 
7108:out/quex_scan.cpp **** __TERMINAL_ROUTER: 
7109:out/quex_scan.cpp ****     __quex_debug("terminal router");
7110:out/quex_scan.cpp ****     /*  if last_acceptance => goto correspondent acceptance terminal state */
7111:out/quex_scan.cpp ****     /*  else               => execute defaul action                        */
7112:out/quex_scan.cpp ****     if( last_acceptance == QUEX_LABEL(2534) ) {
7113:out/quex_scan.cpp ****         goto _2534; /* TERMINAL: FAILURE */
7114:out/quex_scan.cpp ****     }
7115:out/quex_scan.cpp ****     /* When a terminal router is used, the terminal is determined dynamically,
7116:out/quex_scan.cpp ****      * thus the last_acceptance_input_position **must** be set. 
7117:out/quex_scan.cpp ****      * Exception: Template States, where acceptance states of post conditions
7118:out/quex_scan.cpp ****      *            do not set the acceptance position (because its retrieved
7119:out/quex_scan.cpp ****      *            anyway from post_context_start_position[i]).               */
7120:out/quex_scan.cpp ****     if(last_acceptance_input_position != 0x0) {
7121:out/quex_scan.cpp ****         QUEX_NAME(Buffer_seek_memory_adr)(&me->buffer, last_acceptance_input_position);
7122:out/quex_scan.cpp ****     }
7123:out/quex_scan.cpp **** #   ifdef  QUEX_OPTION_COMPUTED_GOTOS
7124:out/quex_scan.cpp ****     goto *last_acceptance;
7125:out/quex_scan.cpp **** #   else
7126:out/quex_scan.cpp ****     /* Route according variable 'last_acceptance'. */
7127:out/quex_scan.cpp ****     switch( last_acceptance ) {
7128:out/quex_scan.cpp ****         case 2729: goto _2729;
7129:out/quex_scan.cpp ****         case 2730: goto _2730;
7130:out/quex_scan.cpp ****         case 2563: goto _2563;
7131:out/quex_scan.cpp ****         case 2732: goto _2732;
7132:out/quex_scan.cpp ****         case 2673: goto _2673;
7133:out/quex_scan.cpp ****         case 2558: goto _2558;
7134:out/quex_scan.cpp ****         case 2735: goto _2735;
7135:out/quex_scan.cpp ****         case 2736: goto _2736;
7136:out/quex_scan.cpp ****         case 2572: goto _2572;
7137:out/quex_scan.cpp ****         case 2598: goto _2598;
GAS LISTING /tmp/cc23nfB3.s 			page 182


7138:out/quex_scan.cpp ****         case 2739: goto _2739;
7139:out/quex_scan.cpp ****         case 2740: goto _2740;
7140:out/quex_scan.cpp ****         case 2741: goto _2741;
7141:out/quex_scan.cpp ****         case 2581: goto _2581;
7142:out/quex_scan.cpp ****         case 2743: goto _2743;
7143:out/quex_scan.cpp ****         case 2744: goto _2744;
7144:out/quex_scan.cpp ****         case 2706: goto _2706;
7145:out/quex_scan.cpp ****         case 2746: goto _2746;
7146:out/quex_scan.cpp ****         case 2747: goto _2747;
7147:out/quex_scan.cpp ****         case 2748: goto _2748;
7148:out/quex_scan.cpp ****         case 2749: goto _2749;
7149:out/quex_scan.cpp ****         case 2536: goto _2536;
7150:out/quex_scan.cpp ****         case 2711: goto _2711;
7151:out/quex_scan.cpp ****         case 2542: goto _2542;
7152:out/quex_scan.cpp ****         case 2753: goto _2753;
7153:out/quex_scan.cpp ****         case 2728: goto _2728;
7154:out/quex_scan.cpp ****         case 2619: goto _2619;
7155:out/quex_scan.cpp ****         case 2614: goto _2614;
7156:out/quex_scan.cpp ****         case 2696: goto _2696;
7157:out/quex_scan.cpp ****         case 2643: goto _2643;
7158:out/quex_scan.cpp ****         case 2758: goto _2758;
7159:out/quex_scan.cpp ****         case 2675: goto _2675;
7160:out/quex_scan.cpp ****         case 2717: goto _2717;
7161:out/quex_scan.cpp ****         case 2709: goto _2709;
7162:out/quex_scan.cpp ****         case 2762: goto _2762;
7163:out/quex_scan.cpp ****         case 2607: goto _2607;
7164:out/quex_scan.cpp ****         case 2764: goto _2764;
7165:out/quex_scan.cpp ****         case 2686: goto _2686;
7166:out/quex_scan.cpp ****         case 2697: goto _2697;
7167:out/quex_scan.cpp ****         case 2766: goto _2766;
7168:out/quex_scan.cpp ****         case 2678: goto _2678;
7169:out/quex_scan.cpp ****         case 2768: goto _2768;
7170:out/quex_scan.cpp ****         case 2593: goto _2593;
7171:out/quex_scan.cpp ****         case 2770: goto _2770;
7172:out/quex_scan.cpp ****         case 2771: goto _2771;
7173:out/quex_scan.cpp ****         case 2772: goto _2772;
7174:out/quex_scan.cpp ****         case 2719: goto _2719;
7175:out/quex_scan.cpp ****         case 2774: goto _2774;
7176:out/quex_scan.cpp ****         case 2775: goto _2775;
7177:out/quex_scan.cpp ****         case 2776: goto _2776;
7178:out/quex_scan.cpp ****         case 2681: goto _2681;
7179:out/quex_scan.cpp ****         case 2778: goto _2778;
7180:out/quex_scan.cpp ****         case 2779: goto _2779;
7181:out/quex_scan.cpp ****         case 2780: goto _2780;
7182:out/quex_scan.cpp ****         case 2781: goto _2781;
7183:out/quex_scan.cpp ****         case 2782: goto _2782;
7184:out/quex_scan.cpp ****         case 2586: goto _2586;
7185:out/quex_scan.cpp ****         case 2566: goto _2566;
7186:out/quex_scan.cpp ****         case 2589: goto _2589;
7187:out/quex_scan.cpp ****         case 2663: goto _2663;
7188:out/quex_scan.cpp ****         case 2577: goto _2577;
7189:out/quex_scan.cpp ****         case 2788: goto _2788;
7190:out/quex_scan.cpp ****         case 2789: goto _2789;
7191:out/quex_scan.cpp ****         case 2790: goto _2790;
7192:out/quex_scan.cpp ****         case 2791: goto _2791;
7193:out/quex_scan.cpp ****         case 2792: goto _2792;
7194:out/quex_scan.cpp ****         case 2793: goto _2793;
GAS LISTING /tmp/cc23nfB3.s 			page 183


7195:out/quex_scan.cpp ****         case 2794: goto _2794;
7196:out/quex_scan.cpp ****         case 2795: goto _2795;
7197:out/quex_scan.cpp ****         case 2603: goto _2603;
7198:out/quex_scan.cpp ****         case 2692: goto _2692;
7199:out/quex_scan.cpp ****         case 2724: goto _2724;
7200:out/quex_scan.cpp **** 
7201:out/quex_scan.cpp ****         default: QUEX_ERROR_EXIT("Terminal router: unknown index.");
7202:out/quex_scan.cpp ****     }
7203:out/quex_scan.cpp **** #   endif /* QUEX_OPTION_COMPUTED_GOTOS */
7204:out/quex_scan.cpp **** 
7205:out/quex_scan.cpp ****     /* (*) Terminal states _______________________________________________________
7206:out/quex_scan.cpp ****      *
7207:out/quex_scan.cpp ****      * States that implement actions of the 'winner patterns.                     */
7208:out/quex_scan.cpp **** 
7209:out/quex_scan.cpp ****     /* Lexeme setup: 
7210:out/quex_scan.cpp ****      *
7211:out/quex_scan.cpp ****      * There is a temporary zero stored at the end of each lexeme, if the action 
7212:out/quex_scan.cpp ****      * references to the 'Lexeme'. 'LexemeNull' provides a reference to an empty
7213:out/quex_scan.cpp ****      * zero terminated string.                                                    */
7214:out/quex_scan.cpp **** 
7215:out/quex_scan.cpp **** #if defined(QUEX_OPTION_ASSERTS)
7216:out/quex_scan.cpp **** #   define Lexeme       QUEX_NAME(access_Lexeme)((const char*)__FILE__, (size_t)__LINE__, &me->buff
7217:out/quex_scan.cpp **** #   define LexemeBegin  QUEX_NAME(access_Lexeme)((const char*)__FILE__, (size_t)__LINE__, &me->buff
7218:out/quex_scan.cpp **** #   define LexemeL      QUEX_NAME(access_LexemeL)((const char*)__FILE__, (size_t)__LINE__, &me->buf
7219:out/quex_scan.cpp **** #   define LexemeEnd    QUEX_NAME(access_LexemeEnd)((const char*)__FILE__, (size_t)__LINE__, &me->b
7220:out/quex_scan.cpp **** #else
7221:out/quex_scan.cpp **** #   define Lexeme       (me->buffer._lexeme_start_p)
7222:out/quex_scan.cpp **** #   define LexemeBegin  (me->buffer._lexeme_start_p)
7223:out/quex_scan.cpp **** #   define LexemeL      ((size_t)(me->buffer._input_p - me->buffer._lexeme_start_p))
7224:out/quex_scan.cpp **** #   define LexemeEnd    (me->buffer._input_p)
7225:out/quex_scan.cpp **** #endif
7226:out/quex_scan.cpp **** 
7227:out/quex_scan.cpp **** #define LexemeNull   (&QUEX_NAME(LexemeNullObject))
7228:out/quex_scan.cpp **** 
7229:out/quex_scan.cpp **** _2571:
7230:out/quex_scan.cpp ****     __quex_debug("pre-terminal 384: double-quote!=double-quote");
7231:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7232:out/quex_scan.cpp **** _2729:
7233:out/quex_scan.cpp ****     __quex_debug("* terminal 384:   double-quote!=double-quote");
7234:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7235:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7236:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7237:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
7238:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7239:out/quex_scan.cpp ****     #   endif
7240:out/quex_scan.cpp ****         __quex_debug_counter();
7241:out/quex_scan.cpp ****     {
7242:out/quex_scan.cpp ****     
7243:out/quex_scan.cpp ****     #   line 71 "in/quex/c.qx"
7244:out/quex_scan.cpp ****     self_send(TKN_NOT_EQ);
7245:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7246:out/quex_scan.cpp ****     
7247:out/quex_scan.cpp **** #   line 7248 "out/quex_scan.cpp"
7248:out/quex_scan.cpp ****     
7249:out/quex_scan.cpp ****     }
7250:out/quex_scan.cpp **** 
7251:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
GAS LISTING /tmp/cc23nfB3.s 			page 184


7252:out/quex_scan.cpp **** 
7253:out/quex_scan.cpp **** _2560:
7254:out/quex_scan.cpp ****     __quex_debug("pre-terminal 256: double-quote\\\\ndouble-quote");
7255:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7256:out/quex_scan.cpp **** _2730:
7257:out/quex_scan.cpp ****     __quex_debug("* terminal 256:   double-quote\\\\ndouble-quote");
7258:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7259:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7260:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7261:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_end += 1);
7262:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
7263:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7264:out/quex_scan.cpp ****     #   endif
7265:out/quex_scan.cpp ****         __quex_debug_counter();
7266:out/quex_scan.cpp ****     {
7267:out/quex_scan.cpp ****     
7268:out/quex_scan.cpp ****     #   line 41 "in/quex/c.qx"
7269:out/quex_scan.cpp ****     self_send(TKN_BACKLASHED_NEWLINE);
7270:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7271:out/quex_scan.cpp ****     
7272:out/quex_scan.cpp **** #   line 7273 "out/quex_scan.cpp"
7273:out/quex_scan.cpp ****     
7274:out/quex_scan.cpp ****     }
7275:out/quex_scan.cpp **** 
7276:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7277:out/quex_scan.cpp **** 
7278:out/quex_scan.cpp ****       
7279:out/quex_scan.cpp ****     __quex_debug("pre-terminal 386: double-quote>double-quote");
7280:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7281:out/quex_scan.cpp **** _2563:
7282:out/quex_scan.cpp ****     __quex_debug("* terminal 386:   double-quote>double-quote");
7283:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7284:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7285:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7286:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7287:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7288:out/quex_scan.cpp ****     #   endif
7289:out/quex_scan.cpp ****         __quex_debug_counter();
7290:out/quex_scan.cpp ****     {
7291:out/quex_scan.cpp ****     
7292:out/quex_scan.cpp ****     #   line 72 "in/quex/c.qx"
7293:out/quex_scan.cpp ****     self_send(TKN_GREATER);
7294:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7295:out/quex_scan.cpp ****     
7296:out/quex_scan.cpp **** #   line 7297 "out/quex_scan.cpp"
7297:out/quex_scan.cpp ****     
7298:out/quex_scan.cpp ****     }
7299:out/quex_scan.cpp **** 
7300:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7301:out/quex_scan.cpp **** 
7302:out/quex_scan.cpp **** _2562:
7303:out/quex_scan.cpp ****     __quex_debug("pre-terminal 388: double-quote>=double-quote");
7304:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7305:out/quex_scan.cpp **** _2732:
7306:out/quex_scan.cpp ****     __quex_debug("* terminal 388:   double-quote>=double-quote");
7307:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7308:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
GAS LISTING /tmp/cc23nfB3.s 			page 185


7309:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7310:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
7311:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7312:out/quex_scan.cpp ****     #   endif
7313:out/quex_scan.cpp ****         __quex_debug_counter();
7314:out/quex_scan.cpp ****     {
7315:out/quex_scan.cpp ****     
7316:out/quex_scan.cpp ****     #   line 73 "in/quex/c.qx"
7317:out/quex_scan.cpp ****     self_send(TKN_GR_EQ);
7318:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7319:out/quex_scan.cpp ****     
7320:out/quex_scan.cpp **** #   line 7321 "out/quex_scan.cpp"
7321:out/quex_scan.cpp ****     
7322:out/quex_scan.cpp ****     }
7323:out/quex_scan.cpp **** 
7324:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7325:out/quex_scan.cpp **** 
7326:out/quex_scan.cpp ****       
7327:out/quex_scan.cpp ****     __quex_debug("pre-terminal 534: continue");
7328:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7329:out/quex_scan.cpp **** _2673:
7330:out/quex_scan.cpp ****     __quex_debug("* terminal 534:   continue");
7331:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7332:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7333:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7334:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 8);
7335:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7336:out/quex_scan.cpp ****     #   endif
7337:out/quex_scan.cpp ****         __quex_debug_counter();
7338:out/quex_scan.cpp ****     {
7339:out/quex_scan.cpp ****     
7340:out/quex_scan.cpp ****     #   line 92 "in/quex/c.qx"
7341:out/quex_scan.cpp ****     self_send(TKN_CONTINUE);
7342:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7343:out/quex_scan.cpp ****     
7344:out/quex_scan.cpp **** #   line 7345 "out/quex_scan.cpp"
7345:out/quex_scan.cpp ****     
7346:out/quex_scan.cpp ****     }
7347:out/quex_scan.cpp **** 
7348:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7349:out/quex_scan.cpp **** 
7350:out/quex_scan.cpp ****       
7351:out/quex_scan.cpp ****     __quex_debug("pre-terminal 390: double-quote<double-quote");
7352:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7353:out/quex_scan.cpp **** _2558:
7354:out/quex_scan.cpp ****     __quex_debug("* terminal 390:   double-quote<double-quote");
7355:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7356:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7357:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7358:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7359:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7360:out/quex_scan.cpp ****     #   endif
7361:out/quex_scan.cpp ****         __quex_debug_counter();
7362:out/quex_scan.cpp ****     {
7363:out/quex_scan.cpp ****     
7364:out/quex_scan.cpp ****     #   line 74 "in/quex/c.qx"
7365:out/quex_scan.cpp ****     self_send(TKN_LESS);
GAS LISTING /tmp/cc23nfB3.s 			page 186


7366:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7367:out/quex_scan.cpp ****     
7368:out/quex_scan.cpp **** #   line 7369 "out/quex_scan.cpp"
7369:out/quex_scan.cpp ****     
7370:out/quex_scan.cpp ****     }
7371:out/quex_scan.cpp **** 
7372:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7373:out/quex_scan.cpp **** 
7374:out/quex_scan.cpp **** _2557:
7375:out/quex_scan.cpp ****     __quex_debug("pre-terminal 392: double-quote<=double-quote");
7376:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7377:out/quex_scan.cpp **** _2735:
7378:out/quex_scan.cpp ****     __quex_debug("* terminal 392:   double-quote<=double-quote");
7379:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7380:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7381:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7382:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
7383:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7384:out/quex_scan.cpp ****     #   endif
7385:out/quex_scan.cpp ****         __quex_debug_counter();
7386:out/quex_scan.cpp ****     {
7387:out/quex_scan.cpp ****     
7388:out/quex_scan.cpp ****     #   line 75 "in/quex/c.qx"
7389:out/quex_scan.cpp ****     self_send(TKN_LE_EQ);
7390:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7391:out/quex_scan.cpp ****     
7392:out/quex_scan.cpp **** #   line 7393 "out/quex_scan.cpp"
7393:out/quex_scan.cpp ****     
7394:out/quex_scan.cpp ****     }
7395:out/quex_scan.cpp **** 
7396:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7397:out/quex_scan.cpp **** 
7398:out/quex_scan.cpp **** _2550:
7399:out/quex_scan.cpp ****     __quex_debug("pre-terminal 137: double-quote#double-quote[ \\t]*double-quoteincludedouble-quote
7400:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7401:out/quex_scan.cpp **** _2736:
7402:out/quex_scan.cpp ****     __quex_debug("* terminal 137:   double-quote#double-quote[ \\t]*double-quoteincludedouble-quote
7403:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7404:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7405:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7406:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
7407:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7408:out/quex_scan.cpp ****     #   endif
7409:out/quex_scan.cpp ****         __quex_debug_counter();
7410:out/quex_scan.cpp ****     {
7411:out/quex_scan.cpp ****     
7412:out/quex_scan.cpp ****     #   line 29 "in/quex/c.qx"
7413:out/quex_scan.cpp ****     self_send(TKN_PP_INCLUDE);
7414:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7415:out/quex_scan.cpp ****     
7416:out/quex_scan.cpp **** #   line 7417 "out/quex_scan.cpp"
7417:out/quex_scan.cpp ****     
7418:out/quex_scan.cpp ****     }
7419:out/quex_scan.cpp **** 
7420:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7421:out/quex_scan.cpp **** 
7422:out/quex_scan.cpp ****       
GAS LISTING /tmp/cc23nfB3.s 			page 187


7423:out/quex_scan.cpp ****     __quex_debug("pre-terminal 394: double-quote!double-quote");
7424:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7425:out/quex_scan.cpp **** _2572:
7426:out/quex_scan.cpp ****     __quex_debug("* terminal 394:   double-quote!double-quote");
7427:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7428:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7429:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7430:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7431:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7432:out/quex_scan.cpp ****     #   endif
7433:out/quex_scan.cpp ****         __quex_debug_counter();
7434:out/quex_scan.cpp ****     {
7435:out/quex_scan.cpp ****     
7436:out/quex_scan.cpp ****     #   line 76 "in/quex/c.qx"
7437:out/quex_scan.cpp ****     self_send(TKN_NOT);
7438:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7439:out/quex_scan.cpp ****     
7440:out/quex_scan.cpp **** #   line 7441 "out/quex_scan.cpp"
7441:out/quex_scan.cpp ****     
7442:out/quex_scan.cpp ****     }
7443:out/quex_scan.cpp **** 
7444:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7445:out/quex_scan.cpp **** 
7446:out/quex_scan.cpp ****       
7447:out/quex_scan.cpp ****     __quex_debug("pre-terminal 396: double-quote|double-quote");
7448:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7449:out/quex_scan.cpp **** _2598:
7450:out/quex_scan.cpp ****     __quex_debug("* terminal 396:   double-quote|double-quote");
7451:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7452:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7453:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7454:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7455:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7456:out/quex_scan.cpp ****     #   endif
7457:out/quex_scan.cpp ****         __quex_debug_counter();
7458:out/quex_scan.cpp ****     {
7459:out/quex_scan.cpp ****     
7460:out/quex_scan.cpp ****     #   line 77 "in/quex/c.qx"
7461:out/quex_scan.cpp ****     self_send(TKN_LOGICAL_OR);
7462:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7463:out/quex_scan.cpp ****     
7464:out/quex_scan.cpp **** #   line 7465 "out/quex_scan.cpp"
7465:out/quex_scan.cpp ****     
7466:out/quex_scan.cpp ****     }
7467:out/quex_scan.cpp **** 
7468:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7469:out/quex_scan.cpp **** 
7470:out/quex_scan.cpp **** _2530:
7471:out/quex_scan.cpp ****     __quex_debug("pre-terminal 398: double-quote^double-quote");
7472:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7473:out/quex_scan.cpp **** _2739:
7474:out/quex_scan.cpp ****     __quex_debug("* terminal 398:   double-quote^double-quote");
7475:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7476:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7477:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7478:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7479:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
GAS LISTING /tmp/cc23nfB3.s 			page 188


7480:out/quex_scan.cpp ****     #   endif
7481:out/quex_scan.cpp ****         __quex_debug_counter();
7482:out/quex_scan.cpp ****     {
7483:out/quex_scan.cpp ****     
7484:out/quex_scan.cpp ****     #   line 78 "in/quex/c.qx"
7485:out/quex_scan.cpp ****     self_send(TKN_EXCLUSIVE_OR);
7486:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7487:out/quex_scan.cpp ****     
7488:out/quex_scan.cpp **** #   line 7489 "out/quex_scan.cpp"
7489:out/quex_scan.cpp ****     
7490:out/quex_scan.cpp ****     }
7491:out/quex_scan.cpp **** 
7492:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7493:out/quex_scan.cpp **** 
7494:out/quex_scan.cpp **** _2597:
7495:out/quex_scan.cpp ****     __quex_debug("pre-terminal 400: double-quote||double-quote");
7496:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7497:out/quex_scan.cpp **** _2740:
7498:out/quex_scan.cpp ****     __quex_debug("* terminal 400:   double-quote||double-quote");
7499:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7500:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7501:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7502:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
7503:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7504:out/quex_scan.cpp ****     #   endif
7505:out/quex_scan.cpp ****         __quex_debug_counter();
7506:out/quex_scan.cpp ****     {
7507:out/quex_scan.cpp ****     
7508:out/quex_scan.cpp ****     #   line 79 "in/quex/c.qx"
7509:out/quex_scan.cpp ****     self_send(TKN_OR);
7510:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7511:out/quex_scan.cpp ****     
7512:out/quex_scan.cpp **** #   line 7513 "out/quex_scan.cpp"
7513:out/quex_scan.cpp ****     
7514:out/quex_scan.cpp ****     }
7515:out/quex_scan.cpp **** 
7516:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7517:out/quex_scan.cpp **** 
7518:out/quex_scan.cpp **** _2636:
7519:out/quex_scan.cpp ****     __quex_debug("pre-terminal 216: double-quote#double-quote[ \\t]*double-quoteelsedouble-quote");
7520:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7521:out/quex_scan.cpp **** _2741:
7522:out/quex_scan.cpp ****     __quex_debug("* terminal 216:   double-quote#double-quote[ \\t]*double-quoteelsedouble-quote");
7523:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7524:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7525:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7526:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7527:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7528:out/quex_scan.cpp ****     #   endif
7529:out/quex_scan.cpp ****         __quex_debug_counter();
7530:out/quex_scan.cpp ****     {
7531:out/quex_scan.cpp ****     
7532:out/quex_scan.cpp ****     #   line 37 "in/quex/c.qx"
7533:out/quex_scan.cpp ****     self_send(TKN_PP_ELSE);
7534:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7535:out/quex_scan.cpp ****     
7536:out/quex_scan.cpp **** #   line 7537 "out/quex_scan.cpp"
GAS LISTING /tmp/cc23nfB3.s 			page 189


7537:out/quex_scan.cpp ****     
7538:out/quex_scan.cpp ****     }
7539:out/quex_scan.cpp **** 
7540:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7541:out/quex_scan.cpp **** 
7542:out/quex_scan.cpp ****       
7543:out/quex_scan.cpp ****     __quex_debug("pre-terminal 402: double-quote&double-quote");
7544:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7545:out/quex_scan.cpp **** _2581:
7546:out/quex_scan.cpp ****     __quex_debug("* terminal 402:   double-quote&double-quote");
7547:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7548:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7549:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7550:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7551:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7552:out/quex_scan.cpp ****     #   endif
7553:out/quex_scan.cpp ****         __quex_debug_counter();
7554:out/quex_scan.cpp ****     {
7555:out/quex_scan.cpp ****     
7556:out/quex_scan.cpp ****     #   line 80 "in/quex/c.qx"
7557:out/quex_scan.cpp ****     self_send(TKN_AMPERSANT);
7558:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7559:out/quex_scan.cpp ****     
7560:out/quex_scan.cpp **** #   line 7561 "out/quex_scan.cpp"
7561:out/quex_scan.cpp ****     
7562:out/quex_scan.cpp ****     }
7563:out/quex_scan.cpp **** 
7564:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7565:out/quex_scan.cpp **** 
7566:out/quex_scan.cpp **** _2580:
7567:out/quex_scan.cpp ****     __quex_debug("pre-terminal 404: double-quote&&double-quote");
7568:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7569:out/quex_scan.cpp **** _2743:
7570:out/quex_scan.cpp ****     __quex_debug("* terminal 404:   double-quote&&double-quote");
7571:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7572:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7573:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7574:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
7575:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7576:out/quex_scan.cpp ****     #   endif
7577:out/quex_scan.cpp ****         __quex_debug_counter();
7578:out/quex_scan.cpp ****     {
7579:out/quex_scan.cpp ****     
7580:out/quex_scan.cpp ****     #   line 81 "in/quex/c.qx"
7581:out/quex_scan.cpp ****     self_send(TKN_AND);
7582:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7583:out/quex_scan.cpp ****     
7584:out/quex_scan.cpp **** #   line 7585 "out/quex_scan.cpp"
7585:out/quex_scan.cpp ****     
7586:out/quex_scan.cpp ****     }
7587:out/quex_scan.cpp **** 
7588:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7589:out/quex_scan.cpp **** 
7590:out/quex_scan.cpp **** _2525:
7591:out/quex_scan.cpp ****     __quex_debug("pre-terminal 406: double-quote:double-quote");
7592:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7593:out/quex_scan.cpp **** _2744:
GAS LISTING /tmp/cc23nfB3.s 			page 190


7594:out/quex_scan.cpp ****     __quex_debug("* terminal 406:   double-quote:double-quote");
7595:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7596:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7597:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7598:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7599:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7600:out/quex_scan.cpp ****     #   endif
7601:out/quex_scan.cpp ****         __quex_debug_counter();
7602:out/quex_scan.cpp ****     {
7603:out/quex_scan.cpp ****     
7604:out/quex_scan.cpp ****     #   line 82 "in/quex/c.qx"
7605:out/quex_scan.cpp ****     self_send(TKN_COLON);
7606:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7607:out/quex_scan.cpp ****     
7608:out/quex_scan.cpp **** #   line 7609 "out/quex_scan.cpp"
7609:out/quex_scan.cpp ****     
7610:out/quex_scan.cpp ****     }
7611:out/quex_scan.cpp **** 
7612:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7613:out/quex_scan.cpp **** 
7614:out/quex_scan.cpp ****       
7615:out/quex_scan.cpp ****     __quex_debug("pre-terminal 279: unsigned");
7616:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7617:out/quex_scan.cpp **** _2706:
7618:out/quex_scan.cpp ****     __quex_debug("* terminal 279:   unsigned");
7619:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7620:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7621:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7622:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 8);
7623:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7624:out/quex_scan.cpp ****     #   endif
7625:out/quex_scan.cpp ****         __quex_debug_counter();
7626:out/quex_scan.cpp ****     {
7627:out/quex_scan.cpp ****     
7628:out/quex_scan.cpp ****     #   line 43 "in/quex/c.qx"
7629:out/quex_scan.cpp ****     self_send(TKN_TYPE_UNSIGNED);
7630:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7631:out/quex_scan.cpp ****     
7632:out/quex_scan.cpp **** #   line 7633 "out/quex_scan.cpp"
7633:out/quex_scan.cpp ****     
7634:out/quex_scan.cpp ****     }
7635:out/quex_scan.cpp **** 
7636:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7637:out/quex_scan.cpp **** 
7638:out/quex_scan.cpp **** _2526:
7639:out/quex_scan.cpp ****     __quex_debug("pre-terminal 536: double-quote;double-quote");
7640:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7641:out/quex_scan.cpp **** _2746:
7642:out/quex_scan.cpp ****     __quex_debug("* terminal 536:   double-quote;double-quote");
7643:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7644:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7645:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7646:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7647:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7648:out/quex_scan.cpp ****     #   endif
7649:out/quex_scan.cpp ****         __quex_debug_counter();
7650:out/quex_scan.cpp ****     {
GAS LISTING /tmp/cc23nfB3.s 			page 191


7651:out/quex_scan.cpp ****     
7652:out/quex_scan.cpp ****     #   line 93 "in/quex/c.qx"
7653:out/quex_scan.cpp ****     self_send(TKN_SEMICOLON);
7654:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7655:out/quex_scan.cpp ****     
7656:out/quex_scan.cpp **** #   line 7657 "out/quex_scan.cpp"
7657:out/quex_scan.cpp ****     
7658:out/quex_scan.cpp ****     }
7659:out/quex_scan.cpp **** 
7660:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7661:out/quex_scan.cpp **** 
7662:out/quex_scan.cpp **** _2552:
7663:out/quex_scan.cpp ****     __quex_debug("pre-terminal 153: double-quote#double-quote[ \\t]*double-quoteincludedouble-quote
7664:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7665:out/quex_scan.cpp **** _2747:
7666:out/quex_scan.cpp ****     __quex_debug("* terminal 153:   double-quote#double-quote[ \\t]*double-quoteincludedouble-quote
7667:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7668:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7669:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7670:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
7671:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7672:out/quex_scan.cpp ****     #   endif
7673:out/quex_scan.cpp ****         __quex_debug_counter();
7674:out/quex_scan.cpp ****     {
7675:out/quex_scan.cpp ****     
7676:out/quex_scan.cpp ****     #   line 30 "in/quex/c.qx"
7677:out/quex_scan.cpp ****     self_send(TKN_PP_INCLUDE);
7678:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7679:out/quex_scan.cpp ****     
7680:out/quex_scan.cpp **** #   line 7681 "out/quex_scan.cpp"
7681:out/quex_scan.cpp ****     
7682:out/quex_scan.cpp ****     }
7683:out/quex_scan.cpp **** 
7684:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7685:out/quex_scan.cpp **** 
7686:out/quex_scan.cpp **** _2524:
7687:out/quex_scan.cpp ****     __quex_debug("pre-terminal 538: double-quote.double-quote");
7688:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7689:out/quex_scan.cpp **** _2748:
7690:out/quex_scan.cpp ****     __quex_debug("* terminal 538:   double-quote.double-quote");
7691:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7692:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7693:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7694:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7695:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7696:out/quex_scan.cpp ****     #   endif
7697:out/quex_scan.cpp ****         __quex_debug_counter();
7698:out/quex_scan.cpp ****     {
7699:out/quex_scan.cpp ****     
7700:out/quex_scan.cpp ****     #   line 94 "in/quex/c.qx"
7701:out/quex_scan.cpp ****     self_send(TKN_DOT);
7702:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7703:out/quex_scan.cpp ****     
7704:out/quex_scan.cpp **** #   line 7705 "out/quex_scan.cpp"
7705:out/quex_scan.cpp ****     
7706:out/quex_scan.cpp ****     }
7707:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 192


7708:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7709:out/quex_scan.cpp **** 
7710:out/quex_scan.cpp **** _2523:
7711:out/quex_scan.cpp ****     __quex_debug("pre-terminal 540: double-quote,double-quote");
7712:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7713:out/quex_scan.cpp **** _2749:
7714:out/quex_scan.cpp ****     __quex_debug("* terminal 540:   double-quote,double-quote");
7715:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7716:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7717:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7718:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
7719:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7720:out/quex_scan.cpp ****     #   endif
7721:out/quex_scan.cpp ****         __quex_debug_counter();
7722:out/quex_scan.cpp ****     {
7723:out/quex_scan.cpp ****     
7724:out/quex_scan.cpp ****     #   line 95 "in/quex/c.qx"
7725:out/quex_scan.cpp ****     self_send(TKN_COMMA);
7726:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7727:out/quex_scan.cpp ****     
7728:out/quex_scan.cpp **** #   line 7729 "out/quex_scan.cpp"
7729:out/quex_scan.cpp ****     
7730:out/quex_scan.cpp ****     }
7731:out/quex_scan.cpp **** 
7732:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7733:out/quex_scan.cpp **** 
7734:out/quex_scan.cpp ****       
7735:out/quex_scan.cpp ****     __quex_debug("pre-terminal 542: {P_IDENTIFIER}");
7736:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7737:out/quex_scan.cpp **** _2536:
7738:out/quex_scan.cpp ****     __quex_debug("* terminal 542:   {P_IDENTIFIER}");
7739:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7740:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7741:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7742:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7743:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7744:out/quex_scan.cpp ****     #   endif
7745:out/quex_scan.cpp ****         __quex_debug_counter();
7746:out/quex_scan.cpp ****     {
7747:out/quex_scan.cpp ****     
7748:out/quex_scan.cpp ****     #   line 97 "in/quex/c.qx"
7749:out/quex_scan.cpp ****     self_send(TKN_IDENTIFIER);
7750:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7751:out/quex_scan.cpp ****     
7752:out/quex_scan.cpp **** #   line 7753 "out/quex_scan.cpp"
7753:out/quex_scan.cpp ****     
7754:out/quex_scan.cpp ****     }
7755:out/quex_scan.cpp **** 
7756:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7757:out/quex_scan.cpp **** 
7758:out/quex_scan.cpp ****       
7759:out/quex_scan.cpp ****     __quex_debug("pre-terminal 287: int");
7760:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7761:out/quex_scan.cpp **** _2711:
7762:out/quex_scan.cpp ****     __quex_debug("* terminal 287:   int");
7763:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7764:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
GAS LISTING /tmp/cc23nfB3.s 			page 193


7765:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7766:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 3);
7767:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7768:out/quex_scan.cpp ****     #   endif
7769:out/quex_scan.cpp ****         __quex_debug_counter();
7770:out/quex_scan.cpp ****     {
7771:out/quex_scan.cpp ****     
7772:out/quex_scan.cpp ****     #   line 44 "in/quex/c.qx"
7773:out/quex_scan.cpp ****     self_send(TKN_TYPE_INT);
7774:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7775:out/quex_scan.cpp ****     
7776:out/quex_scan.cpp **** #   line 7777 "out/quex_scan.cpp"
7777:out/quex_scan.cpp ****     
7778:out/quex_scan.cpp ****     }
7779:out/quex_scan.cpp **** 
7780:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7781:out/quex_scan.cpp **** 
7782:out/quex_scan.cpp ****       
7783:out/quex_scan.cpp ****     __quex_debug("pre-terminal 544: {P_NUMBER}");
7784:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7785:out/quex_scan.cpp **** _2542:
7786:out/quex_scan.cpp ****     __quex_debug("* terminal 544:   {P_NUMBER}");
7787:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7788:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7789:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7790:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7791:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7792:out/quex_scan.cpp ****     #   endif
7793:out/quex_scan.cpp ****         __quex_debug_counter();
7794:out/quex_scan.cpp ****     {
7795:out/quex_scan.cpp ****     
7796:out/quex_scan.cpp ****     #   line 98 "in/quex/c.qx"
7797:out/quex_scan.cpp ****     self_send(TKN_NUMBER);
7798:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7799:out/quex_scan.cpp ****     
7800:out/quex_scan.cpp **** #   line 7801 "out/quex_scan.cpp"
7801:out/quex_scan.cpp ****     
7802:out/quex_scan.cpp ****     }
7803:out/quex_scan.cpp **** 
7804:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7805:out/quex_scan.cpp **** 
7806:out/quex_scan.cpp **** _2629:
7807:out/quex_scan.cpp ****     __quex_debug("pre-terminal 162: double-quote#double-quote[ \\t]*double-quotedefinedouble-quote"
7808:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7809:out/quex_scan.cpp **** _2753:
7810:out/quex_scan.cpp ****     __quex_debug("* terminal 162:   double-quote#double-quote[ \\t]*double-quotedefinedouble-quote"
7811:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7812:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7813:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7814:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7815:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7816:out/quex_scan.cpp ****     #   endif
7817:out/quex_scan.cpp ****         __quex_debug_counter();
7818:out/quex_scan.cpp ****     {
7819:out/quex_scan.cpp ****     
7820:out/quex_scan.cpp ****     #   line 31 "in/quex/c.qx"
7821:out/quex_scan.cpp ****     self_send(TKN_PP_DEFINE);
GAS LISTING /tmp/cc23nfB3.s 			page 194


7822:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7823:out/quex_scan.cpp ****     
7824:out/quex_scan.cpp **** #   line 7825 "out/quex_scan.cpp"
7825:out/quex_scan.cpp ****     
7826:out/quex_scan.cpp ****     }
7827:out/quex_scan.cpp **** 
7828:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7829:out/quex_scan.cpp **** 
7830:out/quex_scan.cpp **** _2537:
7831:out/quex_scan.cpp ****     __quex_debug("pre-terminal 548: {P_QUOTED_CHAR}");
7832:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7833:out/quex_scan.cpp **** _2728:
7834:out/quex_scan.cpp ****     __quex_debug("* terminal 548:   {P_QUOTED_CHAR}");
7835:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7836:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7837:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7838:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7839:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7840:out/quex_scan.cpp ****     #   endif
7841:out/quex_scan.cpp ****         __quex_debug_counter();
7842:out/quex_scan.cpp ****     {
7843:out/quex_scan.cpp ****     
7844:out/quex_scan.cpp ****     #   line 100 "in/quex/c.qx"
7845:out/quex_scan.cpp ****     self_send(TKN_QUOTED_CHAR);
7846:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7847:out/quex_scan.cpp ****     
7848:out/quex_scan.cpp **** #   line 7849 "out/quex_scan.cpp"
7849:out/quex_scan.cpp ****     
7850:out/quex_scan.cpp ****     }
7851:out/quex_scan.cpp **** 
7852:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7853:out/quex_scan.cpp **** 
7854:out/quex_scan.cpp ****       
7855:out/quex_scan.cpp ****     __quex_debug("pre-terminal 423: struct");
7856:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7857:out/quex_scan.cpp **** _2619:
7858:out/quex_scan.cpp ****     __quex_debug("* terminal 423:   struct");
7859:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7860:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7861:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7862:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 6);
7863:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7864:out/quex_scan.cpp ****     #   endif
7865:out/quex_scan.cpp ****         __quex_debug_counter();
7866:out/quex_scan.cpp ****     {
7867:out/quex_scan.cpp ****     
7868:out/quex_scan.cpp ****     #   line 83 "in/quex/c.qx"
7869:out/quex_scan.cpp ****     self_send(TKN_STRUCT);
7870:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7871:out/quex_scan.cpp ****     
7872:out/quex_scan.cpp **** #   line 7873 "out/quex_scan.cpp"
7873:out/quex_scan.cpp ****     
7874:out/quex_scan.cpp ****     }
7875:out/quex_scan.cpp **** 
7876:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7877:out/quex_scan.cpp **** 
7878:out/quex_scan.cpp ****       
GAS LISTING /tmp/cc23nfB3.s 			page 195


7879:out/quex_scan.cpp ****     __quex_debug("pre-terminal 470: switch");
7880:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7881:out/quex_scan.cpp **** _2614:
7882:out/quex_scan.cpp ****     __quex_debug("* terminal 470:   switch");
7883:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7884:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7885:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7886:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 6);
7887:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7888:out/quex_scan.cpp ****     #   endif
7889:out/quex_scan.cpp ****         __quex_debug_counter();
7890:out/quex_scan.cpp ****     {
7891:out/quex_scan.cpp ****     
7892:out/quex_scan.cpp ****     #   line 87 "in/quex/c.qx"
7893:out/quex_scan.cpp ****     self_send(TKN_SWITCH);
7894:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7895:out/quex_scan.cpp ****     
7896:out/quex_scan.cpp **** #   line 7897 "out/quex_scan.cpp"
7897:out/quex_scan.cpp ****     
7898:out/quex_scan.cpp ****     }
7899:out/quex_scan.cpp **** 
7900:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7901:out/quex_scan.cpp **** 
7902:out/quex_scan.cpp ****       
7903:out/quex_scan.cpp ****     __quex_debug("pre-terminal 298: long");
7904:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7905:out/quex_scan.cpp **** _2696:
7906:out/quex_scan.cpp ****     __quex_debug("* terminal 298:   long");
7907:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7908:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7909:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7910:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);
7911:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7912:out/quex_scan.cpp ****     #   endif
7913:out/quex_scan.cpp ****         __quex_debug_counter();
7914:out/quex_scan.cpp ****     {
7915:out/quex_scan.cpp ****     
7916:out/quex_scan.cpp ****     #   line 45 "in/quex/c.qx"
7917:out/quex_scan.cpp ****     self_send(TKN_TYPE_LONG);
7918:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7919:out/quex_scan.cpp ****     
7920:out/quex_scan.cpp **** #   line 7921 "out/quex_scan.cpp"
7921:out/quex_scan.cpp ****     
7922:out/quex_scan.cpp ****     }
7923:out/quex_scan.cpp **** 
7924:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7925:out/quex_scan.cpp **** 
7926:out/quex_scan.cpp ****       
7927:out/quex_scan.cpp ****     __quex_debug("pre-terminal 171: double-quote#double-quote[ \\t]*double-quoteifdouble-quote");
7928:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7929:out/quex_scan.cpp **** _2643:
7930:out/quex_scan.cpp ****     __quex_debug("* terminal 171:   double-quote#double-quote[ \\t]*double-quoteifdouble-quote");
7931:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7932:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7933:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7934:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7935:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
GAS LISTING /tmp/cc23nfB3.s 			page 196


7936:out/quex_scan.cpp ****     #   endif
7937:out/quex_scan.cpp ****         __quex_debug_counter();
7938:out/quex_scan.cpp ****     {
7939:out/quex_scan.cpp ****     
7940:out/quex_scan.cpp ****     #   line 32 "in/quex/c.qx"
7941:out/quex_scan.cpp ****     self_send(TKN_PP_IF);
7942:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7943:out/quex_scan.cpp ****     
7944:out/quex_scan.cpp **** #   line 7945 "out/quex_scan.cpp"
7945:out/quex_scan.cpp ****     
7946:out/quex_scan.cpp ****     }
7947:out/quex_scan.cpp **** 
7948:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7949:out/quex_scan.cpp **** 
7950:out/quex_scan.cpp **** _2634:
7951:out/quex_scan.cpp ****     __quex_debug("pre-terminal 180: double-quote#double-quote[ \\t]*double-quoteelifdouble-quote");
7952:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7953:out/quex_scan.cpp **** _2758:
7954:out/quex_scan.cpp ****     __quex_debug("* terminal 180:   double-quote#double-quote[ \\t]*double-quoteelifdouble-quote");
7955:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7956:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7957:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7958:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
7959:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7960:out/quex_scan.cpp ****     #   endif
7961:out/quex_scan.cpp ****         __quex_debug_counter();
7962:out/quex_scan.cpp ****     {
7963:out/quex_scan.cpp ****     
7964:out/quex_scan.cpp ****     #   line 33 "in/quex/c.qx"
7965:out/quex_scan.cpp ****     self_send(TKN_PP_ELIF);
7966:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7967:out/quex_scan.cpp ****     
7968:out/quex_scan.cpp **** #   line 7969 "out/quex_scan.cpp"
7969:out/quex_scan.cpp ****     
7970:out/quex_scan.cpp ****     }
7971:out/quex_scan.cpp **** 
7972:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7973:out/quex_scan.cpp **** 
7974:out/quex_scan.cpp ****       
7975:out/quex_scan.cpp ****     __quex_debug("pre-terminal 437: const");
7976:out/quex_scan.cpp ****     ++(me->buffer._input_p);
7977:out/quex_scan.cpp **** _2675:
7978:out/quex_scan.cpp ****     __quex_debug("* terminal 437:   const");
7979:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
7980:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
7981:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
7982:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 5);
7983:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
7984:out/quex_scan.cpp ****     #   endif
7985:out/quex_scan.cpp ****         __quex_debug_counter();
7986:out/quex_scan.cpp ****     {
7987:out/quex_scan.cpp ****     
7988:out/quex_scan.cpp ****     #   line 84 "in/quex/c.qx"
7989:out/quex_scan.cpp ****     self_send(TKN_CONST);
7990:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
7991:out/quex_scan.cpp ****     
7992:out/quex_scan.cpp **** #   line 7993 "out/quex_scan.cpp"
GAS LISTING /tmp/cc23nfB3.s 			page 197


7993:out/quex_scan.cpp ****     
7994:out/quex_scan.cpp ****     }
7995:out/quex_scan.cpp **** 
7996:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
7997:out/quex_scan.cpp **** 
7998:out/quex_scan.cpp ****       
7999:out/quex_scan.cpp ****     __quex_debug("pre-terminal 312: float");
8000:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8001:out/quex_scan.cpp **** _2717:
8002:out/quex_scan.cpp ****     __quex_debug("* terminal 312:   float");
8003:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8004:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8005:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8006:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 5);
8007:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8008:out/quex_scan.cpp ****     #   endif
8009:out/quex_scan.cpp ****         __quex_debug_counter();
8010:out/quex_scan.cpp ****     {
8011:out/quex_scan.cpp ****     
8012:out/quex_scan.cpp ****     #   line 46 "in/quex/c.qx"
8013:out/quex_scan.cpp ****     self_send(TKN_TYPE_FLOAT);
8014:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8015:out/quex_scan.cpp ****     
8016:out/quex_scan.cpp **** #   line 8017 "out/quex_scan.cpp"
8017:out/quex_scan.cpp ****     
8018:out/quex_scan.cpp ****     }
8019:out/quex_scan.cpp **** 
8020:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8021:out/quex_scan.cpp **** 
8022:out/quex_scan.cpp ****       
8023:out/quex_scan.cpp ****     __quex_debug("pre-terminal 442: if");
8024:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8025:out/quex_scan.cpp **** _2709:
8026:out/quex_scan.cpp ****     __quex_debug("* terminal 442:   if");
8027:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8028:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8029:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8030:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
8031:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8032:out/quex_scan.cpp ****     #   endif
8033:out/quex_scan.cpp ****         __quex_debug_counter();
8034:out/quex_scan.cpp ****     {
8035:out/quex_scan.cpp ****     
8036:out/quex_scan.cpp ****     #   line 85 "in/quex/c.qx"
8037:out/quex_scan.cpp ****     self_send(TKN_IF);
8038:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8039:out/quex_scan.cpp ****     
8040:out/quex_scan.cpp **** #   line 8041 "out/quex_scan.cpp"
8041:out/quex_scan.cpp ****     
8042:out/quex_scan.cpp ****     }
8043:out/quex_scan.cpp **** 
8044:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8045:out/quex_scan.cpp **** 
8046:out/quex_scan.cpp **** _2655:
8047:out/quex_scan.cpp ****     __quex_debug("pre-terminal 189: double-quote#double-quote[ \\t]*double-quoteifdefdouble-quote")
8048:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8049:out/quex_scan.cpp **** _2762:
GAS LISTING /tmp/cc23nfB3.s 			page 198


8050:out/quex_scan.cpp ****     __quex_debug("* terminal 189:   double-quote#double-quote[ \\t]*double-quoteifdefdouble-quote")
8051:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8052:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8053:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8054:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
8055:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8056:out/quex_scan.cpp ****     #   endif
8057:out/quex_scan.cpp ****         __quex_debug_counter();
8058:out/quex_scan.cpp ****     {
8059:out/quex_scan.cpp ****     
8060:out/quex_scan.cpp ****     #   line 34 "in/quex/c.qx"
8061:out/quex_scan.cpp ****     self_send(TKN_PP_IFDEF);
8062:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8063:out/quex_scan.cpp ****     
8064:out/quex_scan.cpp **** #   line 8065 "out/quex_scan.cpp"
8065:out/quex_scan.cpp ****     
8066:out/quex_scan.cpp ****     }
8067:out/quex_scan.cpp **** 
8068:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8069:out/quex_scan.cpp **** 
8070:out/quex_scan.cpp ****       
8071:out/quex_scan.cpp ****     __quex_debug("pre-terminal 453: else");
8072:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8073:out/quex_scan.cpp **** _2607:
8074:out/quex_scan.cpp ****     __quex_debug("* terminal 453:   else");
8075:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8076:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8077:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8078:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);
8079:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8080:out/quex_scan.cpp ****     #   endif
8081:out/quex_scan.cpp ****         __quex_debug_counter();
8082:out/quex_scan.cpp ****     {
8083:out/quex_scan.cpp ****     
8084:out/quex_scan.cpp ****     #   line 86 "in/quex/c.qx"
8085:out/quex_scan.cpp ****     self_send(TKN_ELSE);
8086:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8087:out/quex_scan.cpp ****     
8088:out/quex_scan.cpp **** #   line 8089 "out/quex_scan.cpp"
8089:out/quex_scan.cpp ****     
8090:out/quex_scan.cpp ****     }
8091:out/quex_scan.cpp **** 
8092:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8093:out/quex_scan.cpp **** 
8094:out/quex_scan.cpp **** _2658:
8095:out/quex_scan.cpp ****     __quex_debug("pre-terminal 198: double-quote#double-quote[ \\t]*double-quoteifndefdouble-quote"
8096:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8097:out/quex_scan.cpp **** _2764:
8098:out/quex_scan.cpp ****     __quex_debug("* terminal 198:   double-quote#double-quote[ \\t]*double-quoteifndefdouble-quote"
8099:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8100:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8101:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8102:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
8103:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8104:out/quex_scan.cpp ****     #   endif
8105:out/quex_scan.cpp ****         __quex_debug_counter();
8106:out/quex_scan.cpp ****     {
GAS LISTING /tmp/cc23nfB3.s 			page 199


8107:out/quex_scan.cpp ****     
8108:out/quex_scan.cpp ****     #   line 35 "in/quex/c.qx"
8109:out/quex_scan.cpp ****     self_send(TKN_PP_IFNDEF);
8110:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8111:out/quex_scan.cpp ****     
8112:out/quex_scan.cpp **** #   line 8113 "out/quex_scan.cpp"
8113:out/quex_scan.cpp ****     
8114:out/quex_scan.cpp ****     }
8115:out/quex_scan.cpp **** 
8116:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8117:out/quex_scan.cpp **** 
8118:out/quex_scan.cpp ****       
8119:out/quex_scan.cpp ****     __quex_debug("pre-terminal 329: double");
8120:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8121:out/quex_scan.cpp **** _2686:
8122:out/quex_scan.cpp ****     __quex_debug("* terminal 329:   double");
8123:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8124:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8125:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8126:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 6);
8127:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8128:out/quex_scan.cpp ****     #   endif
8129:out/quex_scan.cpp ****         __quex_debug_counter();
8130:out/quex_scan.cpp ****     {
8131:out/quex_scan.cpp ****     
8132:out/quex_scan.cpp ****     #   line 47 "in/quex/c.qx"
8133:out/quex_scan.cpp ****     self_send(TKN_TYPE_DOUBLE);
8134:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8135:out/quex_scan.cpp ****     
8136:out/quex_scan.cpp **** #   line 8137 "out/quex_scan.cpp"
8137:out/quex_scan.cpp ****     
8138:out/quex_scan.cpp ****     }
8139:out/quex_scan.cpp **** 
8140:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8141:out/quex_scan.cpp **** 
8142:out/quex_scan.cpp **** _2539:
8143:out/quex_scan.cpp ****     __quex_debug("pre-terminal 546: {P_STRING}");
8144:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8145:out/quex_scan.cpp **** _2697:
8146:out/quex_scan.cpp ****     __quex_debug("* terminal 546:   {P_STRING}");
8147:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8148:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8149:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8150:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
8151:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8152:out/quex_scan.cpp ****     #   endif
8153:out/quex_scan.cpp ****         __quex_debug_counter();
8154:out/quex_scan.cpp ****     {
8155:out/quex_scan.cpp ****     
8156:out/quex_scan.cpp ****     #   line 99 "in/quex/c.qx"
8157:out/quex_scan.cpp ****     self_send(TKN_STRING);
8158:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8159:out/quex_scan.cpp ****     
8160:out/quex_scan.cpp **** #   line 8161 "out/quex_scan.cpp"
8161:out/quex_scan.cpp ****     
8162:out/quex_scan.cpp ****     }
8163:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 200


8164:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8165:out/quex_scan.cpp **** 
8166:out/quex_scan.cpp **** _2642:
8167:out/quex_scan.cpp ****     __quex_debug("pre-terminal 207: double-quote#double-quote[ \\t]*double-quoteendifdouble-quote")
8168:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8169:out/quex_scan.cpp **** _2766:
8170:out/quex_scan.cpp ****     __quex_debug("* terminal 207:   double-quote#double-quote[ \\t]*double-quoteendifdouble-quote")
8171:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8172:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8173:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8174:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
8175:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8176:out/quex_scan.cpp ****     #   endif
8177:out/quex_scan.cpp ****         __quex_debug_counter();
8178:out/quex_scan.cpp ****     {
8179:out/quex_scan.cpp ****     
8180:out/quex_scan.cpp ****     #   line 36 "in/quex/c.qx"
8181:out/quex_scan.cpp ****     self_send(TKN_PP_ENDIF);
8182:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8183:out/quex_scan.cpp ****     
8184:out/quex_scan.cpp **** #   line 8185 "out/quex_scan.cpp"
8185:out/quex_scan.cpp ****     
8186:out/quex_scan.cpp ****     }
8187:out/quex_scan.cpp **** 
8188:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8189:out/quex_scan.cpp **** 
8190:out/quex_scan.cpp ****       
8191:out/quex_scan.cpp ****     __quex_debug("pre-terminal 340: char");
8192:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8193:out/quex_scan.cpp **** _2678:
8194:out/quex_scan.cpp ****     __quex_debug("* terminal 340:   char");
8195:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8196:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8197:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8198:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);
8199:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8200:out/quex_scan.cpp ****     #   endif
8201:out/quex_scan.cpp ****         __quex_debug_counter();
8202:out/quex_scan.cpp ****     {
8203:out/quex_scan.cpp ****     
8204:out/quex_scan.cpp ****     #   line 48 "in/quex/c.qx"
8205:out/quex_scan.cpp ****     self_send(TKN_TYPE_CHAR);
8206:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8207:out/quex_scan.cpp ****     
8208:out/quex_scan.cpp **** #   line 8209 "out/quex_scan.cpp"
8209:out/quex_scan.cpp ****     
8210:out/quex_scan.cpp ****     }
8211:out/quex_scan.cpp **** 
8212:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8213:out/quex_scan.cpp **** 
8214:out/quex_scan.cpp **** _2602:
8215:out/quex_scan.cpp ****     __quex_debug("pre-terminal 382: double-quote==double-quote");
8216:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8217:out/quex_scan.cpp **** _2768:
8218:out/quex_scan.cpp ****     __quex_debug("* terminal 382:   double-quote==double-quote");
8219:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8220:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
GAS LISTING /tmp/cc23nfB3.s 			page 201


8221:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8222:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
8223:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8224:out/quex_scan.cpp ****     #   endif
8225:out/quex_scan.cpp ****         __quex_debug_counter();
8226:out/quex_scan.cpp ****     {
8227:out/quex_scan.cpp ****     
8228:out/quex_scan.cpp ****     #   line 70 "in/quex/c.qx"
8229:out/quex_scan.cpp ****     self_send(TKN_EQ);
8230:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8231:out/quex_scan.cpp ****     
8232:out/quex_scan.cpp **** #   line 8233 "out/quex_scan.cpp"
8233:out/quex_scan.cpp ****     
8234:out/quex_scan.cpp ****     }
8235:out/quex_scan.cpp **** 
8236:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8237:out/quex_scan.cpp **** 
8238:out/quex_scan.cpp ****       
8239:out/quex_scan.cpp ****     __quex_debug("pre-terminal 342: double-quote#double-quote");
8240:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8241:out/quex_scan.cpp **** _2593:
8242:out/quex_scan.cpp ****     __quex_debug("* terminal 342:   double-quote#double-quote");
8243:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8244:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8245:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8246:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8247:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8248:out/quex_scan.cpp ****     #   endif
8249:out/quex_scan.cpp ****         __quex_debug_counter();
8250:out/quex_scan.cpp ****     {
8251:out/quex_scan.cpp ****     
8252:out/quex_scan.cpp ****     #   line 50 "in/quex/c.qx"
8253:out/quex_scan.cpp ****     self_send(TKN_HASH);
8254:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8255:out/quex_scan.cpp ****     
8256:out/quex_scan.cpp **** #   line 8257 "out/quex_scan.cpp"
8257:out/quex_scan.cpp ****     
8258:out/quex_scan.cpp ****     }
8259:out/quex_scan.cpp **** 
8260:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8261:out/quex_scan.cpp **** 
8262:out/quex_scan.cpp **** _2595:
8263:out/quex_scan.cpp ****     __quex_debug("pre-terminal 344: double-quote##double-quote");
8264:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8265:out/quex_scan.cpp **** _2770:
8266:out/quex_scan.cpp ****     __quex_debug("* terminal 344:   double-quote##double-quote");
8267:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8268:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8269:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8270:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
8271:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8272:out/quex_scan.cpp ****     #   endif
8273:out/quex_scan.cpp ****         __quex_debug_counter();
8274:out/quex_scan.cpp ****     {
8275:out/quex_scan.cpp ****     
8276:out/quex_scan.cpp ****     #   line 51 "in/quex/c.qx"
8277:out/quex_scan.cpp ****     self_send(TKN_DOUBLE_HASH);
GAS LISTING /tmp/cc23nfB3.s 			page 202


8278:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8279:out/quex_scan.cpp ****     
8280:out/quex_scan.cpp **** #   line 8281 "out/quex_scan.cpp"
8281:out/quex_scan.cpp ****     
8282:out/quex_scan.cpp ****     }
8283:out/quex_scan.cpp **** 
8284:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8285:out/quex_scan.cpp **** 
8286:out/quex_scan.cpp **** _2527:
8287:out/quex_scan.cpp ****     __quex_debug("pre-terminal 346: double-quote?double-quote");
8288:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8289:out/quex_scan.cpp **** _2771:
8290:out/quex_scan.cpp ****     __quex_debug("* terminal 346:   double-quote?double-quote");
8291:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8292:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8293:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8294:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8295:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8296:out/quex_scan.cpp ****     #   endif
8297:out/quex_scan.cpp ****         __quex_debug_counter();
8298:out/quex_scan.cpp ****     {
8299:out/quex_scan.cpp ****     
8300:out/quex_scan.cpp ****     #   line 52 "in/quex/c.qx"
8301:out/quex_scan.cpp ****     self_send(TKN_QUESTION_MARK);
8302:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8303:out/quex_scan.cpp ****     
8304:out/quex_scan.cpp **** #   line 8305 "out/quex_scan.cpp"
8305:out/quex_scan.cpp ****     
8306:out/quex_scan.cpp ****     }
8307:out/quex_scan.cpp **** 
8308:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8309:out/quex_scan.cpp **** 
8310:out/quex_scan.cpp **** _2533:
8311:out/quex_scan.cpp ****     __quex_debug("pre-terminal 348: double-quote~double-quote");
8312:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8313:out/quex_scan.cpp **** _2772:
8314:out/quex_scan.cpp ****     __quex_debug("* terminal 348:   double-quote~double-quote");
8315:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8316:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8317:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8318:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8319:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8320:out/quex_scan.cpp ****     #   endif
8321:out/quex_scan.cpp ****         __quex_debug_counter();
8322:out/quex_scan.cpp ****     {
8323:out/quex_scan.cpp ****     
8324:out/quex_scan.cpp ****     #   line 53 "in/quex/c.qx"
8325:out/quex_scan.cpp ****     self_send(TKN_TILDE);
8326:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8327:out/quex_scan.cpp ****     
8328:out/quex_scan.cpp **** #   line 8329 "out/quex_scan.cpp"
8329:out/quex_scan.cpp ****     
8330:out/quex_scan.cpp ****     }
8331:out/quex_scan.cpp **** 
8332:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8333:out/quex_scan.cpp **** 
8334:out/quex_scan.cpp ****       
GAS LISTING /tmp/cc23nfB3.s 			page 203


8335:out/quex_scan.cpp ****     __quex_debug("pre-terminal 478: for");
8336:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8337:out/quex_scan.cpp **** _2719:
8338:out/quex_scan.cpp ****     __quex_debug("* terminal 478:   for");
8339:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8340:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8341:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8342:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 3);
8343:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8344:out/quex_scan.cpp ****     #   endif
8345:out/quex_scan.cpp ****         __quex_debug_counter();
8346:out/quex_scan.cpp ****     {
8347:out/quex_scan.cpp ****     
8348:out/quex_scan.cpp ****     #   line 88 "in/quex/c.qx"
8349:out/quex_scan.cpp ****     self_send(TKN_FOR);
8350:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8351:out/quex_scan.cpp ****     
8352:out/quex_scan.cpp **** #   line 8353 "out/quex_scan.cpp"
8353:out/quex_scan.cpp ****     
8354:out/quex_scan.cpp ****     }
8355:out/quex_scan.cpp **** 
8356:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8357:out/quex_scan.cpp **** 
8358:out/quex_scan.cpp **** _2522:
8359:out/quex_scan.cpp ****     __quex_debug("pre-terminal 352: double-quote)double-quote");
8360:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8361:out/quex_scan.cpp **** _2774:
8362:out/quex_scan.cpp ****     __quex_debug("* terminal 352:   double-quote)double-quote");
8363:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8364:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8365:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8366:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8367:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8368:out/quex_scan.cpp ****     #   endif
8369:out/quex_scan.cpp ****         __quex_debug_counter();
8370:out/quex_scan.cpp ****     {
8371:out/quex_scan.cpp ****     
8372:out/quex_scan.cpp ****     #   line 55 "in/quex/c.qx"
8373:out/quex_scan.cpp ****     self_send(TKN_BRACKET_C);
8374:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8375:out/quex_scan.cpp ****     
8376:out/quex_scan.cpp **** #   line 8377 "out/quex_scan.cpp"
8377:out/quex_scan.cpp ****     
8378:out/quex_scan.cpp ****     }
8379:out/quex_scan.cpp **** 
8380:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8381:out/quex_scan.cpp **** 
8382:out/quex_scan.cpp **** _2624:
8383:out/quex_scan.cpp ****     __quex_debug("pre-terminal 225: double-quote#double-quote[ \\t]*double-quotepragmadouble-quote"
8384:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8385:out/quex_scan.cpp **** _2775:
8386:out/quex_scan.cpp ****     __quex_debug("* terminal 225:   double-quote#double-quote[ \\t]*double-quotepragmadouble-quote"
8387:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8388:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8389:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8390:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
8391:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
GAS LISTING /tmp/cc23nfB3.s 			page 204


8392:out/quex_scan.cpp ****     #   endif
8393:out/quex_scan.cpp ****         __quex_debug_counter();
8394:out/quex_scan.cpp ****     {
8395:out/quex_scan.cpp ****     
8396:out/quex_scan.cpp ****     #   line 38 "in/quex/c.qx"
8397:out/quex_scan.cpp ****     self_send(TKN_PP_PRAGMA);
8398:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8399:out/quex_scan.cpp ****     
8400:out/quex_scan.cpp **** #   line 8401 "out/quex_scan.cpp"
8401:out/quex_scan.cpp ****     
8402:out/quex_scan.cpp ****     }
8403:out/quex_scan.cpp **** 
8404:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8405:out/quex_scan.cpp **** 
8406:out/quex_scan.cpp **** _2528:
8407:out/quex_scan.cpp ****     __quex_debug("pre-terminal 354: double-quote[double-quote");
8408:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8409:out/quex_scan.cpp **** _2776:
8410:out/quex_scan.cpp ****     __quex_debug("* terminal 354:   double-quote[double-quote");
8411:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8412:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8413:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8414:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8415:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8416:out/quex_scan.cpp ****     #   endif
8417:out/quex_scan.cpp ****         __quex_debug_counter();
8418:out/quex_scan.cpp ****     {
8419:out/quex_scan.cpp ****     
8420:out/quex_scan.cpp ****     #   line 56 "in/quex/c.qx"
8421:out/quex_scan.cpp ****     self_send(TKN_CORNER_BRACKET_O);
8422:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8423:out/quex_scan.cpp ****     
8424:out/quex_scan.cpp **** #   line 8425 "out/quex_scan.cpp"
8425:out/quex_scan.cpp ****     
8426:out/quex_scan.cpp ****     }
8427:out/quex_scan.cpp **** 
8428:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8429:out/quex_scan.cpp **** 
8430:out/quex_scan.cpp ****       
8431:out/quex_scan.cpp ****     __quex_debug("pre-terminal 483: do");
8432:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8433:out/quex_scan.cpp **** _2681:
8434:out/quex_scan.cpp ****     __quex_debug("* terminal 483:   do");
8435:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8436:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8437:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8438:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
8439:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8440:out/quex_scan.cpp ****     #   endif
8441:out/quex_scan.cpp ****         __quex_debug_counter();
8442:out/quex_scan.cpp ****     {
8443:out/quex_scan.cpp ****     
8444:out/quex_scan.cpp ****     #   line 89 "in/quex/c.qx"
8445:out/quex_scan.cpp ****     self_send(TKN_DO);
8446:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8447:out/quex_scan.cpp ****     
8448:out/quex_scan.cpp **** #   line 8449 "out/quex_scan.cpp"
GAS LISTING /tmp/cc23nfB3.s 			page 205


8449:out/quex_scan.cpp ****     
8450:out/quex_scan.cpp ****     }
8451:out/quex_scan.cpp **** 
8452:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8453:out/quex_scan.cpp **** 
8454:out/quex_scan.cpp **** _2529:
8455:out/quex_scan.cpp ****     __quex_debug("pre-terminal 356: double-quote]double-quote");
8456:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8457:out/quex_scan.cpp **** _2778:
8458:out/quex_scan.cpp ****     __quex_debug("* terminal 356:   double-quote]double-quote");
8459:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8460:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8461:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8462:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8463:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8464:out/quex_scan.cpp ****     #   endif
8465:out/quex_scan.cpp ****         __quex_debug_counter();
8466:out/quex_scan.cpp ****     {
8467:out/quex_scan.cpp ****     
8468:out/quex_scan.cpp ****     #   line 57 "in/quex/c.qx"
8469:out/quex_scan.cpp ****     self_send(TKN_CORNER_BRACKET_C);
8470:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8471:out/quex_scan.cpp ****     
8472:out/quex_scan.cpp **** #   line 8473 "out/quex_scan.cpp"
8473:out/quex_scan.cpp ****     
8474:out/quex_scan.cpp ****     }
8475:out/quex_scan.cpp **** 
8476:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8477:out/quex_scan.cpp **** 
8478:out/quex_scan.cpp **** _2521:
8479:out/quex_scan.cpp ****     __quex_debug("pre-terminal 350: double-quote(double-quote");
8480:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8481:out/quex_scan.cpp **** _2779:
8482:out/quex_scan.cpp ****     __quex_debug("* terminal 350:   double-quote(double-quote");
8483:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8484:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8485:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8486:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8487:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8488:out/quex_scan.cpp ****     #   endif
8489:out/quex_scan.cpp ****         __quex_debug_counter();
8490:out/quex_scan.cpp ****     {
8491:out/quex_scan.cpp ****     
8492:out/quex_scan.cpp ****     #   line 54 "in/quex/c.qx"
8493:out/quex_scan.cpp ****     self_send(TKN_BRACKET_O);
8494:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8495:out/quex_scan.cpp ****     
8496:out/quex_scan.cpp **** #   line 8497 "out/quex_scan.cpp"
8497:out/quex_scan.cpp ****     
8498:out/quex_scan.cpp ****     }
8499:out/quex_scan.cpp **** 
8500:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8501:out/quex_scan.cpp **** 
8502:out/quex_scan.cpp **** _2531:
8503:out/quex_scan.cpp ****     __quex_debug("pre-terminal 358: double-quote{double-quote");
8504:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8505:out/quex_scan.cpp **** _2780:
GAS LISTING /tmp/cc23nfB3.s 			page 206


8506:out/quex_scan.cpp ****     __quex_debug("* terminal 358:   double-quote{double-quote");
8507:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8508:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8509:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8510:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8511:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8512:out/quex_scan.cpp ****     #   endif
8513:out/quex_scan.cpp ****         __quex_debug_counter();
8514:out/quex_scan.cpp ****     {
8515:out/quex_scan.cpp ****     
8516:out/quex_scan.cpp ****     #   line 58 "in/quex/c.qx"
8517:out/quex_scan.cpp ****     self_send(TKN_CURLY_BRACKET_O);
8518:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8519:out/quex_scan.cpp ****     
8520:out/quex_scan.cpp **** #   line 8521 "out/quex_scan.cpp"
8521:out/quex_scan.cpp ****     
8522:out/quex_scan.cpp ****     }
8523:out/quex_scan.cpp **** 
8524:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8525:out/quex_scan.cpp **** 
8526:out/quex_scan.cpp **** _2532:
8527:out/quex_scan.cpp ****     __quex_debug("pre-terminal 360: double-quote}double-quote");
8528:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8529:out/quex_scan.cpp **** _2781:
8530:out/quex_scan.cpp ****     __quex_debug("* terminal 360:   double-quote}double-quote");
8531:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8532:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8533:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8534:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8535:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8536:out/quex_scan.cpp ****     #   endif
8537:out/quex_scan.cpp ****         __quex_debug_counter();
8538:out/quex_scan.cpp ****     {
8539:out/quex_scan.cpp ****     
8540:out/quex_scan.cpp ****     #   line 59 "in/quex/c.qx"
8541:out/quex_scan.cpp ****     self_send(TKN_CURLY_BRACKET_C);
8542:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8543:out/quex_scan.cpp ****     
8544:out/quex_scan.cpp **** #   line 8545 "out/quex_scan.cpp"
8545:out/quex_scan.cpp ****     
8546:out/quex_scan.cpp ****     }
8547:out/quex_scan.cpp **** 
8548:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8549:out/quex_scan.cpp **** 
8550:out/quex_scan.cpp **** _2639:
8551:out/quex_scan.cpp ****     __quex_debug("pre-terminal 234: double-quote#double-quote[ \\t]*double-quoteerrordouble-quote")
8552:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8553:out/quex_scan.cpp **** _2782:
8554:out/quex_scan.cpp ****     __quex_debug("* terminal 234:   double-quote#double-quote[ \\t]*double-quoteerrordouble-quote")
8555:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8556:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8557:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8558:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end +=     ((size_t)(self.buffer._in
8559:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8560:out/quex_scan.cpp ****     #   endif
8561:out/quex_scan.cpp ****         __quex_debug_counter();
8562:out/quex_scan.cpp ****     {
GAS LISTING /tmp/cc23nfB3.s 			page 207


8563:out/quex_scan.cpp ****     
8564:out/quex_scan.cpp ****     #   line 39 "in/quex/c.qx"
8565:out/quex_scan.cpp ****     self_send(TKN_PP_ERROR);
8566:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8567:out/quex_scan.cpp ****     
8568:out/quex_scan.cpp **** #   line 8569 "out/quex_scan.cpp"
8569:out/quex_scan.cpp ****     
8570:out/quex_scan.cpp ****     }
8571:out/quex_scan.cpp **** 
8572:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8573:out/quex_scan.cpp **** 
8574:out/quex_scan.cpp ****       
8575:out/quex_scan.cpp ****     __quex_debug("pre-terminal 364: double-quote+double-quote");
8576:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8577:out/quex_scan.cpp **** _2586:
8578:out/quex_scan.cpp ****     __quex_debug("* terminal 364:   double-quote+double-quote");
8579:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8580:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8581:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8582:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8583:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8584:out/quex_scan.cpp ****     #   endif
8585:out/quex_scan.cpp ****         __quex_debug_counter();
8586:out/quex_scan.cpp ****     {
8587:out/quex_scan.cpp ****     
8588:out/quex_scan.cpp ****     #   line 61 "in/quex/c.qx"
8589:out/quex_scan.cpp ****     self_send(TKN_PLUS);
8590:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8591:out/quex_scan.cpp ****     
8592:out/quex_scan.cpp **** #   line 8593 "out/quex_scan.cpp"
8593:out/quex_scan.cpp ****     
8594:out/quex_scan.cpp ****     }
8595:out/quex_scan.cpp **** 
8596:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8597:out/quex_scan.cpp **** 
8598:out/quex_scan.cpp ****       
8599:out/quex_scan.cpp ****     __quex_debug("pre-terminal 366: double-quote-double-quote");
8600:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8601:out/quex_scan.cpp **** _2566:
8602:out/quex_scan.cpp ****     __quex_debug("* terminal 366:   double-quote-double-quote");
8603:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8604:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8605:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8606:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8607:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8608:out/quex_scan.cpp ****     #   endif
8609:out/quex_scan.cpp ****         __quex_debug_counter();
8610:out/quex_scan.cpp ****     {
8611:out/quex_scan.cpp ****     
8612:out/quex_scan.cpp ****     #   line 62 "in/quex/c.qx"
8613:out/quex_scan.cpp ****     self_send(TKN_MINUS);
8614:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8615:out/quex_scan.cpp ****     
8616:out/quex_scan.cpp **** #   line 8617 "out/quex_scan.cpp"
8617:out/quex_scan.cpp ****     
8618:out/quex_scan.cpp ****     }
8619:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 208


8620:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8621:out/quex_scan.cpp **** 
8622:out/quex_scan.cpp ****       
8623:out/quex_scan.cpp ****     __quex_debug("pre-terminal 368: double-quote*double-quote");
8624:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8625:out/quex_scan.cpp **** _2589:
8626:out/quex_scan.cpp ****     __quex_debug("* terminal 368:   double-quote*double-quote");
8627:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8628:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8629:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8630:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8631:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8632:out/quex_scan.cpp ****     #   endif
8633:out/quex_scan.cpp ****         __quex_debug_counter();
8634:out/quex_scan.cpp ****     {
8635:out/quex_scan.cpp ****     
8636:out/quex_scan.cpp ****     #   line 63 "in/quex/c.qx"
8637:out/quex_scan.cpp ****     self_send(TKN_MULT);
8638:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8639:out/quex_scan.cpp ****     
8640:out/quex_scan.cpp **** #   line 8641 "out/quex_scan.cpp"
8641:out/quex_scan.cpp ****     
8642:out/quex_scan.cpp ****     }
8643:out/quex_scan.cpp **** 
8644:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8645:out/quex_scan.cpp **** 
8646:out/quex_scan.cpp ****       
8647:out/quex_scan.cpp ****     __quex_debug("pre-terminal 497: while");
8648:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8649:out/quex_scan.cpp **** _2663:
8650:out/quex_scan.cpp ****     __quex_debug("* terminal 497:   while");
8651:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8652:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8653:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8654:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 5);
8655:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8656:out/quex_scan.cpp ****     #   endif
8657:out/quex_scan.cpp ****         __quex_debug_counter();
8658:out/quex_scan.cpp ****     {
8659:out/quex_scan.cpp ****     
8660:out/quex_scan.cpp ****     #   line 90 "in/quex/c.qx"
8661:out/quex_scan.cpp ****     self_send(TKN_WHILE);
8662:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8663:out/quex_scan.cpp ****     
8664:out/quex_scan.cpp **** #   line 8665 "out/quex_scan.cpp"
8665:out/quex_scan.cpp ****     
8666:out/quex_scan.cpp ****     }
8667:out/quex_scan.cpp **** 
8668:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8669:out/quex_scan.cpp **** 
8670:out/quex_scan.cpp ****       
8671:out/quex_scan.cpp ****     __quex_debug("pre-terminal 370: double-quote/double-quote");
8672:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8673:out/quex_scan.cpp **** _2577:
8674:out/quex_scan.cpp ****     __quex_debug("* terminal 370:   double-quote/double-quote");
8675:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8676:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
GAS LISTING /tmp/cc23nfB3.s 			page 209


8677:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8678:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8679:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8680:out/quex_scan.cpp ****     #   endif
8681:out/quex_scan.cpp ****         __quex_debug_counter();
8682:out/quex_scan.cpp ****     {
8683:out/quex_scan.cpp ****     
8684:out/quex_scan.cpp ****     #   line 64 "in/quex/c.qx"
8685:out/quex_scan.cpp ****     self_send(TKN_DIV);
8686:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8687:out/quex_scan.cpp ****     
8688:out/quex_scan.cpp **** #   line 8689 "out/quex_scan.cpp"
8689:out/quex_scan.cpp ****     
8690:out/quex_scan.cpp ****     }
8691:out/quex_scan.cpp **** 
8692:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8693:out/quex_scan.cpp **** 
8694:out/quex_scan.cpp **** _2520:
8695:out/quex_scan.cpp ****     __quex_debug("pre-terminal 372: double-quote%double-quote");
8696:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8697:out/quex_scan.cpp **** _2788:
8698:out/quex_scan.cpp ****     __quex_debug("* terminal 372:   double-quote%double-quote");
8699:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8700:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8701:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8702:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
8703:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8704:out/quex_scan.cpp ****     #   endif
8705:out/quex_scan.cpp ****         __quex_debug_counter();
8706:out/quex_scan.cpp ****     {
8707:out/quex_scan.cpp ****     
8708:out/quex_scan.cpp ****     #   line 65 "in/quex/c.qx"
8709:out/quex_scan.cpp ****     self_send(TKN_MODULO);
8710:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8711:out/quex_scan.cpp ****     
8712:out/quex_scan.cpp **** #   line 8713 "out/quex_scan.cpp"
8713:out/quex_scan.cpp ****     
8714:out/quex_scan.cpp ****     }
8715:out/quex_scan.cpp **** 
8716:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8717:out/quex_scan.cpp **** 
8718:out/quex_scan.cpp **** _2519:
8719:out/quex_scan.cpp ****     __quex_debug("pre-terminal 117: [ \\r\\n\\t]");
8720:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8721:out/quex_scan.cpp **** _2789:
8722:out/quex_scan.cpp ****     __quex_debug("* terminal 117:   [ \\r\\n\\t]");
8723:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8724:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8725:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8726:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
8727:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8728:out/quex_scan.cpp ****     #   endif
8729:out/quex_scan.cpp ****         __quex_debug_counter();
8730:out/quex_scan.cpp ****     {
8731:out/quex_scan.cpp ****     {
8732:out/quex_scan.cpp ****     /* Character set skipper state */
8733:out/quex_scan.cpp ****     { 
GAS LISTING /tmp/cc23nfB3.s 			page 210


8734:out/quex_scan.cpp ****         /* Skip any character in ['\t', '\n'], '\r', ' ' */
8735:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(reference_p = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer));
8736:out/quex_scan.cpp ****     
8737:out/quex_scan.cpp ****     
8738:out/quex_scan.cpp ****         QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
8739:out/quex_scan.cpp ****         __quex_assert(QUEX_NAME(Buffer_content_size)(&me->buffer) >= 1);
8740:out/quex_scan.cpp ****     
8741:out/quex_scan.cpp ****         /* NOTE: For simple skippers the end of content does not have to be overwriten 
8742:out/quex_scan.cpp ****          *       with anything (as done for range skippers). This is so, because the abort
8743:out/quex_scan.cpp ****          *       criteria is that a character occurs which does not belong to the trigger 
8744:out/quex_scan.cpp ****          *       set. The BufferLimitCode, though, does never belong to any trigger set and
8745:out/quex_scan.cpp ****          *       thus, no special character is to be set.                                   */
8746:out/quex_scan.cpp ****     STATE_1788_LOOP:
8747:out/quex_scan.cpp ****         input = *(me->buffer._input_p); 
8748:out/quex_scan.cpp ****     
8749:out/quex_scan.cpp ****     #       if defined(QUEX_OPTION_LINE_NUMBER_COUNTING) || defined(QUEX_OPTION_COLUMN_NUMBER_COUNT
8750:out/quex_scan.cpp ****             if( input == (QUEX_TYPE_CHARACTER)'\n' ) { 
8751:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_LINES_ADD((size_t)1);
8752:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_COLUMNS_SET((size_t)0);
8753:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_COLUMNS(reference_p = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer
8754:out/quex_scan.cpp ****             }
8755:out/quex_scan.cpp ****     #       endif
8756:out/quex_scan.cpp ****     
8757:out/quex_scan.cpp ****         switch( input ) {
8758:out/quex_scan.cpp ****             case 0x0:     goto _1789;
8759:out/quex_scan.cpp ****             case 0x9:     
8760:out/quex_scan.cpp ****             case 0xA:     
8761:out/quex_scan.cpp ****             case 0xD:     
8762:out/quex_scan.cpp ****             case 0x20:    goto _1788;
8763:out/quex_scan.cpp ****         }
8764:out/quex_scan.cpp ****     goto _1790;
8765:out/quex_scan.cpp ****     
8766:out/quex_scan.cpp ****     _1790:
8767:out/quex_scan.cpp ****             __QUEX_IF_COUNT_COLUMNS_ADD((size_t)(me->buffer._input_p - reference_p));
8768:out/quex_scan.cpp ****     
8769:out/quex_scan.cpp ****         /* There was no buffer limit code, so no end of buffer or end of file --> continue analysis
8770:out/quex_scan.cpp ****          * The character we just swallowed must be re-considered by the main state machine.
8771:out/quex_scan.cpp ****          * But, note that the initial state does not increment '_input_p'!
8772:out/quex_scan.cpp ****          */
8773:out/quex_scan.cpp ****         /* No need for re-entry preparation. Acceptance flags and modes are untouched after skippin
8774:out/quex_scan.cpp ****         goto __REENTRY;                           
8775:out/quex_scan.cpp ****     
8776:out/quex_scan.cpp ****     _1788:
8777:out/quex_scan.cpp ****         ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
8778:out/quex_scan.cpp ****         goto STATE_1788_LOOP;
8779:out/quex_scan.cpp ****     
8780:out/quex_scan.cpp ****     _1789:
8781:out/quex_scan.cpp ****         /* -- When loading new content it is always taken care that the beginning of the lexeme
8782:out/quex_scan.cpp ****          *    is not 'shifted' out of the buffer. In the case of skipping, we do not care about
8783:out/quex_scan.cpp ****          *    the lexeme at all, so do not restrict the load procedure and set the lexeme start
8784:out/quex_scan.cpp ****          *    to the actual input position.                                                   
8785:out/quex_scan.cpp ****          * -- The input_p will at this point in time always point to the buffer border.        */
8786:out/quex_scan.cpp ****         if( (input == QUEX_SETTING_BUFFER_LIMIT_CODE)  ) {
8787:out/quex_scan.cpp ****             QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
8788:out/quex_scan.cpp ****            __QUEX_IF_COUNT_COLUMNS_ADD((size_t)(me->buffer._input_p - reference_p));
8789:out/quex_scan.cpp ****     
8790:out/quex_scan.cpp ****             me->buffer._lexeme_start_p = me->buffer._input_p;
GAS LISTING /tmp/cc23nfB3.s 			page 211


8791:out/quex_scan.cpp ****             if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) ) {
8792:out/quex_scan.cpp ****                 goto _1791;
8793:out/quex_scan.cpp ****             } else {
8794:out/quex_scan.cpp ****                 QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position
8795:out/quex_scan.cpp ****                                                        post_context_start_position, PostContextStar
8796:out/quex_scan.cpp ****     
8797:out/quex_scan.cpp ****                 QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
8798:out/quex_scan.cpp ****                 ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
8799:out/quex_scan.cpp ****                __QUEX_IF_COUNT_COLUMNS(reference_p = me->buffer._input_p);
8800:out/quex_scan.cpp ****     
8801:out/quex_scan.cpp ****                 goto STATE_1788_LOOP;
8802:out/quex_scan.cpp ****             } 
8803:out/quex_scan.cpp ****         }
8804:out/quex_scan.cpp ****     }
8805:out/quex_scan.cpp ****     
8806:out/quex_scan.cpp ****     }
8807:out/quex_scan.cpp ****     
8808:out/quex_scan.cpp ****     }
8809:out/quex_scan.cpp **** 
8810:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8811:out/quex_scan.cpp **** 
8812:out/quex_scan.cpp **** _2585:
8813:out/quex_scan.cpp ****     __quex_debug("pre-terminal 374: double-quote+=double-quote");
8814:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8815:out/quex_scan.cpp **** _2790:
8816:out/quex_scan.cpp ****     __quex_debug("* terminal 374:   double-quote+=double-quote");
8817:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8818:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8819:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8820:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
8821:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8822:out/quex_scan.cpp ****     #   endif
8823:out/quex_scan.cpp ****         __quex_debug_counter();
8824:out/quex_scan.cpp ****     {
8825:out/quex_scan.cpp ****     
8826:out/quex_scan.cpp ****     #   line 66 "in/quex/c.qx"
8827:out/quex_scan.cpp ****     self_send(TKN_ASSIGN_PLUS);
8828:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
8829:out/quex_scan.cpp ****     
8830:out/quex_scan.cpp **** #   line 8831 "out/quex_scan.cpp"
8831:out/quex_scan.cpp ****     
8832:out/quex_scan.cpp ****     }
8833:out/quex_scan.cpp **** 
8834:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8835:out/quex_scan.cpp **** 
8836:out/quex_scan.cpp **** _2574:
8837:out/quex_scan.cpp ****     __quex_debug("pre-terminal 119: double-quote/*double-quote");
8838:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8839:out/quex_scan.cpp **** _2791:
8840:out/quex_scan.cpp ****     __quex_debug("* terminal 119:   double-quote/*double-quote");
8841:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8842:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8843:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
8844:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
8845:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
8846:out/quex_scan.cpp ****     #   endif
8847:out/quex_scan.cpp ****         __quex_debug_counter();
GAS LISTING /tmp/cc23nfB3.s 			page 212


8848:out/quex_scan.cpp ****     {
8849:out/quex_scan.cpp ****     
8850:out/quex_scan.cpp ****     {
8851:out/quex_scan.cpp ****         /*                          Delimiter: '*', '/',  */
8852:out/quex_scan.cpp ****         const QUEX_TYPE_CHARACTER   Skipper1792[] = { 0x2A, 0x2F,  };
8853:out/quex_scan.cpp ****         const size_t                Skipper1792L  = 2;
8854:out/quex_scan.cpp ****         QUEX_TYPE_CHARACTER*        text_end = QUEX_NAME(Buffer_text_end)(&me->buffer);
8855:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(reference_p = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer));
8856:out/quex_scan.cpp ****     
8857:out/quex_scan.cpp ****     
8858:out/quex_scan.cpp ****     _1792:
8859:out/quex_scan.cpp ****         QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
8860:out/quex_scan.cpp ****         __quex_assert(QUEX_NAME(Buffer_content_size)(&me->buffer) >= Skipper1792L );
8861:out/quex_scan.cpp ****     
8862:out/quex_scan.cpp ****         /* NOTE: If _input_p == end of buffer, then it will drop out immediately out of the
8863:out/quex_scan.cpp ****          *       loop below and drop into the buffer reload procedure.                      */
8864:out/quex_scan.cpp ****     
8865:out/quex_scan.cpp ****         /* Loop eating characters: Break-out as soon as the First Character of the Delimiter
8866:out/quex_scan.cpp ****          * (FCD) is reached. Thus, the FCD plays also the role of the Buffer Limit Code. There
8867:out/quex_scan.cpp ****          * are two reasons for break-out:
8868:out/quex_scan.cpp ****          *    (1) we reached a limit (end-of-file or buffer-limit)
8869:out/quex_scan.cpp ****          *    (2) there was really the FCD in the character stream
8870:out/quex_scan.cpp ****          * This must be distinguished after the loop was exited. But, during the 'swallowing' we
8871:out/quex_scan.cpp ****          * are very fast, because we do not have to check for two different characters.        */
8872:out/quex_scan.cpp ****         *text_end = Skipper1792[0]; /* Overwrite BufferLimitCode (BLC).  */
8873:out/quex_scan.cpp ****         while( 1 + 1 == 2 ) {
8874:out/quex_scan.cpp ****     
8875:out/quex_scan.cpp ****             input = *(me->buffer._input_p); 
8876:out/quex_scan.cpp ****             if( input == Skipper1792[0] ) {
8877:out/quex_scan.cpp ****     
8878:out/quex_scan.cpp ****                             break;
8879:out/quex_scan.cpp ****     
8880:out/quex_scan.cpp ****             }
8881:out/quex_scan.cpp ****     
8882:out/quex_scan.cpp ****     
8883:out/quex_scan.cpp ****     #       if defined(QUEX_OPTION_LINE_NUMBER_COUNTING) || defined(QUEX_OPTION_COLUMN_NUMBER_COUNT
8884:out/quex_scan.cpp ****             if( input == (QUEX_TYPE_CHARACTER)'\n' ) { 
8885:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_LINES_ADD((size_t)1);
8886:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_COLUMNS_SET((size_t)0);
8887:out/quex_scan.cpp ****                 __QUEX_IF_COUNT_COLUMNS(reference_p = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer
8888:out/quex_scan.cpp ****             }
8889:out/quex_scan.cpp ****     #       endif
8890:out/quex_scan.cpp ****     
8891:out/quex_scan.cpp ****             ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
8892:out/quex_scan.cpp ****         }
8893:out/quex_scan.cpp ****     
8894:out/quex_scan.cpp ****         *text_end = QUEX_SETTING_BUFFER_LIMIT_CODE; /* Reset BLC. */
8895:out/quex_scan.cpp ****     
8896:out/quex_scan.cpp ****         /* Case (1) and (2) from above can be distinguished easily: 
8897:out/quex_scan.cpp ****          *
8898:out/quex_scan.cpp ****          *   (1) Distance to text end == 0: 
8899:out/quex_scan.cpp ****          *         End-of-File or Buffer-Limit. 
8900:out/quex_scan.cpp ****          *         => goto to drop-out handling
8901:out/quex_scan.cpp ****          *
8902:out/quex_scan.cpp ****          *   (2) Else:                      
8903:out/quex_scan.cpp ****          *         First character of delimit reached. 
8904:out/quex_scan.cpp ****          *         => For the verification of the tail of the delimiter it is 
GAS LISTING /tmp/cc23nfB3.s 			page 213


8905:out/quex_scan.cpp ****          *            essential that it is loaded completely into the buffer. 
8906:out/quex_scan.cpp ****          *            For this, it must be required:
8907:out/quex_scan.cpp ****          *
8908:out/quex_scan.cpp ****          *                Distance to text end >= Delimiter length 
8909:out/quex_scan.cpp ****          *
8910:out/quex_scan.cpp ****          *                _input_p    end
8911:out/quex_scan.cpp ****          *                    |        |           end - _input_p >= 3
8912:out/quex_scan.cpp ****          *                [ ][R][E][M][#]          
8913:out/quex_scan.cpp ****          * 
8914:out/quex_scan.cpp ****          *         The case of reload should be seldom and is costy anyway. 
8915:out/quex_scan.cpp ****          *         Thus let's say, that in this case we simply enter the drop 
8916:out/quex_scan.cpp ****          *         out and start the search for the delimiter all over again.
8917:out/quex_scan.cpp ****          *
8918:out/quex_scan.cpp ****          *         (2.1) Distance to text end < Delimiter length
8919:out/quex_scan.cpp ****          *                => goto to drop-out handling
8920:out/quex_scan.cpp ****          *         (2.2) Start detection of tail of delimiter
8921:out/quex_scan.cpp ****          *
8922:out/quex_scan.cpp ****          */
8923:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_distance_input_to_text_end)(&me->buffer) < (ptrdiff_t)Skipper1792L ) {
8924:out/quex_scan.cpp ****             /* (2.1) Reload required. */
8925:out/quex_scan.cpp ****             goto _1793;            
8926:out/quex_scan.cpp ****         }
8927:out/quex_scan.cpp ****         
8928:out/quex_scan.cpp ****         /* (2.2) Test the remaining delimiter, but note, that the check must restart at '_input_p +
8929:out/quex_scan.cpp ****          *       if any later check fails. */
8930:out/quex_scan.cpp ****         ++(me->buffer._input_p);
8931:out/quex_scan.cpp ****         /* Example: Delimiter = '*', '/'; if we get ...[*][*][/]... then the the first "*" causes 
8932:out/quex_scan.cpp ****          *          a drop out out of the 'swallowing loop' and the second "*" will mismatch 
8933:out/quex_scan.cpp ****          *          the required "/". But, then the second "*" must be presented to the
8934:out/quex_scan.cpp ****          *          swallowing loop and the letter after it completes the 'match'.
8935:out/quex_scan.cpp ****          * (The whole discussion, of course, is superflous if the range delimiter has length 1.)  *
8936:out/quex_scan.cpp ****         input = QUEX_NAME(Buffer_input_get_offset)(&me->buffer, 0);
8937:out/quex_scan.cpp ****         if( input != Skipper1792[1] ) {
8938:out/quex_scan.cpp ****              goto _1792;
8939:out/quex_scan.cpp ****         }
8940:out/quex_scan.cpp ****                 
8941:out/quex_scan.cpp ****         {
8942:out/quex_scan.cpp ****             /* NOTE: The initial state does not increment the input_p. When it detects that
8943:out/quex_scan.cpp ****              * it is located on a buffer border, it automatically triggers a reload. No 
8944:out/quex_scan.cpp ****              * need here to reload the buffer. */
8945:out/quex_scan.cpp ****     QUEX_NAME(Buffer_input_p_add_offset)(&me->buffer, 1);
8946:out/quex_scan.cpp ****             __QUEX_IF_COUNT_COLUMNS_ADD((size_t)(QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer)
8947:out/quex_scan.cpp ****                                         - reference_p));
8948:out/quex_scan.cpp ****     
8949:out/quex_scan.cpp ****             /* No need for re-entry preparation. Acceptance flags and modes are untouched after ski
8950:out/quex_scan.cpp ****             goto __REENTRY; /* End of range reached. */
8951:out/quex_scan.cpp ****         }
8952:out/quex_scan.cpp ****     
8953:out/quex_scan.cpp ****     _1793:
8954:out/quex_scan.cpp ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(&me->buffer);
8955:out/quex_scan.cpp ****         /* -- When loading new content it is checked that the beginning of the lexeme
8956:out/quex_scan.cpp ****          *    is not 'shifted' out of the buffer. In the case of skipping, we do not care about
8957:out/quex_scan.cpp ****          *    the lexeme at all, so do not restrict the load procedure and set the lexeme start
8958:out/quex_scan.cpp ****          *    to the actual input position.                                                    */
8959:out/quex_scan.cpp ****         me->buffer._lexeme_start_p = me->buffer._input_p;
8960:out/quex_scan.cpp ****     
8961:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS_ADD((size_t)(QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer)
GAS LISTING /tmp/cc23nfB3.s 			page 214


8962:out/quex_scan.cpp ****                                     - reference_p));
8963:out/quex_scan.cpp ****     
8964:out/quex_scan.cpp ****         /* -- According to case (2.1) is is possible that the _input_p does not point to the end
8965:out/quex_scan.cpp ****          *    of the buffer, thus we record the current position in the lexeme start pointer and
8966:out/quex_scan.cpp ****          *    recover it after the loading. */
8967:out/quex_scan.cpp ****         me->buffer._input_p = text_end;
8968:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
8969:out/quex_scan.cpp ****             QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position,
8970:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
8971:out/quex_scan.cpp ****             /* Recover '_input_p' from lexeme start 
8972:out/quex_scan.cpp ****              * (inverse of what we just did before the loading) */
8973:out/quex_scan.cpp ****             me->buffer._input_p = me->buffer._lexeme_start_p;
8974:out/quex_scan.cpp ****             /* After reload, we need to increment _input_p. That's how the game is supposed to be p
8975:out/quex_scan.cpp ****              * But, we recovered from lexeme start pointer, and this one does not need to be increm
8976:out/quex_scan.cpp ****             text_end = QUEX_NAME(Buffer_text_end)(&me->buffer);
8977:out/quex_scan.cpp ****             __QUEX_IF_COUNT_COLUMNS(reference_p = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer));
8978:out/quex_scan.cpp ****     
8979:out/quex_scan.cpp ****             QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
8980:out/quex_scan.cpp ****             goto _1792;
8981:out/quex_scan.cpp ****         }
8982:out/quex_scan.cpp ****         /* Here, either the loading failed or it is not enough space to carry a closing delimiter *
8983:out/quex_scan.cpp ****         me->buffer._input_p = me->buffer._lexeme_start_p;
8984:out/quex_scan.cpp ****         QUEX_ERROR_EXIT("\nLexical analyzer mode 'PROGRAM':\n"
8985:out/quex_scan.cpp ****                     "End of file occured before closing skip range delimiter!\n"                "Th
8986:out/quex_scan.cpp ****     }
8987:out/quex_scan.cpp ****     
8988:out/quex_scan.cpp ****     }
8989:out/quex_scan.cpp **** 
8990:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
8991:out/quex_scan.cpp **** 
8992:out/quex_scan.cpp **** _2565:
8993:out/quex_scan.cpp ****     __quex_debug("pre-terminal 376: double-quote-=double-quote");
8994:out/quex_scan.cpp ****     ++(me->buffer._input_p);
8995:out/quex_scan.cpp **** _2792:
8996:out/quex_scan.cpp ****     __quex_debug("* terminal 376:   double-quote-=double-quote");
8997:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
8998:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
8999:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9000:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
9001:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9002:out/quex_scan.cpp ****     #   endif
9003:out/quex_scan.cpp ****         __quex_debug_counter();
9004:out/quex_scan.cpp ****     {
9005:out/quex_scan.cpp ****     
9006:out/quex_scan.cpp ****     #   line 67 "in/quex/c.qx"
9007:out/quex_scan.cpp ****     self_send(TKN_ASSIGN_MINUS);
9008:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9009:out/quex_scan.cpp ****     
9010:out/quex_scan.cpp **** #   line 9011 "out/quex_scan.cpp"
9011:out/quex_scan.cpp ****     
9012:out/quex_scan.cpp ****     }
9013:out/quex_scan.cpp **** 
9014:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9015:out/quex_scan.cpp **** 
9016:out/quex_scan.cpp **** _2575:
9017:out/quex_scan.cpp ****     __quex_debug("pre-terminal 121: double-quote//double-quote");
9018:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 215


9019:out/quex_scan.cpp **** _2793:
9020:out/quex_scan.cpp ****     __quex_debug("* terminal 121:   double-quote//double-quote");
9021:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9022:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9023:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9024:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
9025:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9026:out/quex_scan.cpp ****     #   endif
9027:out/quex_scan.cpp ****         __quex_debug_counter();
9028:out/quex_scan.cpp ****     {
9029:out/quex_scan.cpp ****     
9030:out/quex_scan.cpp ****     {
9031:out/quex_scan.cpp ****         /*                          Delimiter: '\n',  */
9032:out/quex_scan.cpp ****         const QUEX_TYPE_CHARACTER   Skipper1786[] = { 0xA,  };
9033:out/quex_scan.cpp ****         const size_t                Skipper1786L  = 1;
9034:out/quex_scan.cpp ****         QUEX_TYPE_CHARACTER*        text_end = QUEX_NAME(Buffer_text_end)(&me->buffer);
9035:out/quex_scan.cpp ****     
9036:out/quex_scan.cpp ****     
9037:out/quex_scan.cpp ****     _1786:
9038:out/quex_scan.cpp ****         QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
9039:out/quex_scan.cpp ****         __quex_assert(QUEX_NAME(Buffer_content_size)(&me->buffer) >= Skipper1786L );
9040:out/quex_scan.cpp ****     
9041:out/quex_scan.cpp ****         /* NOTE: If _input_p == end of buffer, then it will drop out immediately out of the
9042:out/quex_scan.cpp ****          *       loop below and drop into the buffer reload procedure.                      */
9043:out/quex_scan.cpp ****     
9044:out/quex_scan.cpp ****         /* Loop eating characters: Break-out as soon as the First Character of the Delimiter
9045:out/quex_scan.cpp ****          * (FCD) is reached. Thus, the FCD plays also the role of the Buffer Limit Code. There
9046:out/quex_scan.cpp ****          * are two reasons for break-out:
9047:out/quex_scan.cpp ****          *    (1) we reached a limit (end-of-file or buffer-limit)
9048:out/quex_scan.cpp ****          *    (2) there was really the FCD in the character stream
9049:out/quex_scan.cpp ****          * This must be distinguished after the loop was exited. But, during the 'swallowing' we
9050:out/quex_scan.cpp ****          * are very fast, because we do not have to check for two different characters.        */
9051:out/quex_scan.cpp ****         *text_end = Skipper1786[0]; /* Overwrite BufferLimitCode (BLC).  */
9052:out/quex_scan.cpp ****         while( 1 + 1 == 2 ) {
9053:out/quex_scan.cpp ****     
9054:out/quex_scan.cpp ****             input = *(me->buffer._input_p); 
9055:out/quex_scan.cpp ****             if( input == Skipper1786[0] ) {
9056:out/quex_scan.cpp ****     
9057:out/quex_scan.cpp ****                             break;
9058:out/quex_scan.cpp ****     
9059:out/quex_scan.cpp ****             }
9060:out/quex_scan.cpp ****     
9061:out/quex_scan.cpp ****     
9062:out/quex_scan.cpp ****             ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
9063:out/quex_scan.cpp ****         }
9064:out/quex_scan.cpp ****     
9065:out/quex_scan.cpp ****         *text_end = QUEX_SETTING_BUFFER_LIMIT_CODE; /* Reset BLC. */
9066:out/quex_scan.cpp ****     
9067:out/quex_scan.cpp ****         /* Case (1) and (2) from above can be distinguished easily: 
9068:out/quex_scan.cpp ****          *
9069:out/quex_scan.cpp ****          *   (1) Distance to text end == 0: 
9070:out/quex_scan.cpp ****          *         End-of-File or Buffer-Limit. 
9071:out/quex_scan.cpp ****          *         => goto to drop-out handling
9072:out/quex_scan.cpp ****          *
9073:out/quex_scan.cpp ****          *   (2) Else:                      
9074:out/quex_scan.cpp ****          *         First character of delimit reached. 
9075:out/quex_scan.cpp ****          *         => For the verification of the tail of the delimiter it is 
GAS LISTING /tmp/cc23nfB3.s 			page 216


9076:out/quex_scan.cpp ****          *            essential that it is loaded completely into the buffer. 
9077:out/quex_scan.cpp ****          *            For this, it must be required:
9078:out/quex_scan.cpp ****          *
9079:out/quex_scan.cpp ****          *                Distance to text end >= Delimiter length 
9080:out/quex_scan.cpp ****          *
9081:out/quex_scan.cpp ****          *                _input_p    end
9082:out/quex_scan.cpp ****          *                    |        |           end - _input_p >= 3
9083:out/quex_scan.cpp ****          *                [ ][R][E][M][#]          
9084:out/quex_scan.cpp ****          * 
9085:out/quex_scan.cpp ****          *         The case of reload should be seldom and is costy anyway. 
9086:out/quex_scan.cpp ****          *         Thus let's say, that in this case we simply enter the drop 
9087:out/quex_scan.cpp ****          *         out and start the search for the delimiter all over again.
9088:out/quex_scan.cpp ****          *
9089:out/quex_scan.cpp ****          *         (2.1) Distance to text end < Delimiter length
9090:out/quex_scan.cpp ****          *                => goto to drop-out handling
9091:out/quex_scan.cpp ****          *         (2.2) Start detection of tail of delimiter
9092:out/quex_scan.cpp ****          *
9093:out/quex_scan.cpp ****          */
9094:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_distance_input_to_text_end)(&me->buffer) < (ptrdiff_t)Skipper1786L ) {
9095:out/quex_scan.cpp ****             /* (2.1) Reload required. */
9096:out/quex_scan.cpp ****             goto _1787;            
9097:out/quex_scan.cpp ****         }
9098:out/quex_scan.cpp ****         
9099:out/quex_scan.cpp ****         /* (2.2) Test the remaining delimiter, but note, that the check must restart at '_input_p +
9100:out/quex_scan.cpp ****          *       if any later check fails. */
9101:out/quex_scan.cpp ****         ++(me->buffer._input_p);
9102:out/quex_scan.cpp ****         /* Example: Delimiter = '*', '/'; if we get ...[*][*][/]... then the the first "*" causes 
9103:out/quex_scan.cpp ****          *          a drop out out of the 'swallowing loop' and the second "*" will mismatch 
9104:out/quex_scan.cpp ****          *          the required "/". But, then the second "*" must be presented to the
9105:out/quex_scan.cpp ****          *          swallowing loop and the letter after it completes the 'match'.
9106:out/quex_scan.cpp ****          * (The whole discussion, of course, is superflous if the range delimiter has length 1.)  *
9107:out/quex_scan.cpp ****                 
9108:out/quex_scan.cpp ****         {
9109:out/quex_scan.cpp ****             /* NOTE: The initial state does not increment the input_p. When it detects that
9110:out/quex_scan.cpp ****              * it is located on a buffer border, it automatically triggers a reload. No 
9111:out/quex_scan.cpp ****              * need here to reload the buffer. */
9112:out/quex_scan.cpp ****             __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
9113:out/quex_scan.cpp ****             __QUEX_IF_COUNT_LINES_ADD((size_t)1);
9114:out/quex_scan.cpp ****     
9115:out/quex_scan.cpp ****             /* No need for re-entry preparation. Acceptance flags and modes are untouched after ski
9116:out/quex_scan.cpp ****             goto __REENTRY; /* End of range reached. */
9117:out/quex_scan.cpp ****         }
9118:out/quex_scan.cpp ****     
9119:out/quex_scan.cpp ****     _1787:
9120:out/quex_scan.cpp ****         QUEX_BUFFER_ASSERT_CONSISTENCY_LIGHT(&me->buffer);
9121:out/quex_scan.cpp ****         /* -- When loading new content it is checked that the beginning of the lexeme
9122:out/quex_scan.cpp ****          *    is not 'shifted' out of the buffer. In the case of skipping, we do not care about
9123:out/quex_scan.cpp ****          *    the lexeme at all, so do not restrict the load procedure and set the lexeme start
9124:out/quex_scan.cpp ****          *    to the actual input position.                                                    */
9125:out/quex_scan.cpp ****         me->buffer._lexeme_start_p = me->buffer._input_p;
9126:out/quex_scan.cpp ****     
9127:out/quex_scan.cpp ****     
9128:out/quex_scan.cpp ****         /* -- According to case (2.1) is is possible that the _input_p does not point to the end
9129:out/quex_scan.cpp ****          *    of the buffer, thus we record the current position in the lexeme start pointer and
9130:out/quex_scan.cpp ****          *    recover it after the loading. */
9131:out/quex_scan.cpp ****         me->buffer._input_p = text_end;
9132:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
GAS LISTING /tmp/cc23nfB3.s 			page 217


9133:out/quex_scan.cpp ****             QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position,
9134:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
9135:out/quex_scan.cpp ****             /* Recover '_input_p' from lexeme start 
9136:out/quex_scan.cpp ****              * (inverse of what we just did before the loading) */
9137:out/quex_scan.cpp ****             me->buffer._input_p = me->buffer._lexeme_start_p;
9138:out/quex_scan.cpp ****             /* After reload, we need to increment _input_p. That's how the game is supposed to be p
9139:out/quex_scan.cpp ****              * But, we recovered from lexeme start pointer, and this one does not need to be increm
9140:out/quex_scan.cpp ****             text_end = QUEX_NAME(Buffer_text_end)(&me->buffer);
9141:out/quex_scan.cpp ****     
9142:out/quex_scan.cpp ****             QUEX_BUFFER_ASSERT_CONSISTENCY(&me->buffer);
9143:out/quex_scan.cpp ****             goto _1786;
9144:out/quex_scan.cpp ****         }
9145:out/quex_scan.cpp ****         /* Here, either the loading failed or it is not enough space to carry a closing delimiter *
9146:out/quex_scan.cpp ****         me->buffer._input_p = me->buffer._lexeme_start_p;
9147:out/quex_scan.cpp ****         QUEX_ERROR_EXIT("\nLexical analyzer mode 'PROGRAM':\n"
9148:out/quex_scan.cpp ****                     "End of file occured before closing skip range delimiter!\n"                "Th
9149:out/quex_scan.cpp ****     }
9150:out/quex_scan.cpp ****     
9151:out/quex_scan.cpp ****     }
9152:out/quex_scan.cpp **** 
9153:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9154:out/quex_scan.cpp **** 
9155:out/quex_scan.cpp **** _2588:
9156:out/quex_scan.cpp ****     __quex_debug("pre-terminal 378: double-quote*=double-quote");
9157:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9158:out/quex_scan.cpp **** _2794:
9159:out/quex_scan.cpp ****     __quex_debug("* terminal 378:   double-quote*=double-quote");
9160:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9161:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9162:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9163:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
9164:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9165:out/quex_scan.cpp ****     #   endif
9166:out/quex_scan.cpp ****         __quex_debug_counter();
9167:out/quex_scan.cpp ****     {
9168:out/quex_scan.cpp ****     
9169:out/quex_scan.cpp ****     #   line 68 "in/quex/c.qx"
9170:out/quex_scan.cpp ****     self_send(TKN_ASSIGN_MULT);
9171:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9172:out/quex_scan.cpp ****     
9173:out/quex_scan.cpp **** #   line 9174 "out/quex_scan.cpp"
9174:out/quex_scan.cpp ****     
9175:out/quex_scan.cpp ****     }
9176:out/quex_scan.cpp **** 
9177:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9178:out/quex_scan.cpp **** 
9179:out/quex_scan.cpp **** _2576:
9180:out/quex_scan.cpp ****     __quex_debug("pre-terminal 380: double-quote/=double-quote");
9181:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9182:out/quex_scan.cpp **** _2795:
9183:out/quex_scan.cpp ****     __quex_debug("* terminal 380:   double-quote/=double-quote");
9184:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9185:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9186:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9187:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 2);
9188:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9189:out/quex_scan.cpp ****     #   endif
GAS LISTING /tmp/cc23nfB3.s 			page 218


9190:out/quex_scan.cpp ****         __quex_debug_counter();
9191:out/quex_scan.cpp ****     {
9192:out/quex_scan.cpp ****     
9193:out/quex_scan.cpp ****     #   line 69 "in/quex/c.qx"
9194:out/quex_scan.cpp ****     self_send(TKN_ASSIGN_DIV);
9195:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9196:out/quex_scan.cpp ****     
9197:out/quex_scan.cpp **** #   line 9198 "out/quex_scan.cpp"
9198:out/quex_scan.cpp ****     
9199:out/quex_scan.cpp ****     }
9200:out/quex_scan.cpp **** 
9201:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9202:out/quex_scan.cpp **** 
9203:out/quex_scan.cpp ****       
9204:out/quex_scan.cpp ****     __quex_debug("pre-terminal 362: double-quote=double-quote");
9205:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9206:out/quex_scan.cpp **** _2603:
9207:out/quex_scan.cpp ****     __quex_debug("* terminal 362:   double-quote=double-quote");
9208:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9209:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9210:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9211:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 1);
9212:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9213:out/quex_scan.cpp ****     #   endif
9214:out/quex_scan.cpp ****         __quex_debug_counter();
9215:out/quex_scan.cpp ****     {
9216:out/quex_scan.cpp ****     
9217:out/quex_scan.cpp ****     #   line 60 "in/quex/c.qx"
9218:out/quex_scan.cpp ****     self_send(TKN_OP_ASSIGNMENT);
9219:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9220:out/quex_scan.cpp ****     
9221:out/quex_scan.cpp **** #   line 9222 "out/quex_scan.cpp"
9222:out/quex_scan.cpp ****     
9223:out/quex_scan.cpp ****     }
9224:out/quex_scan.cpp **** 
9225:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9226:out/quex_scan.cpp **** 
9227:out/quex_scan.cpp ****       
9228:out/quex_scan.cpp ****     __quex_debug("pre-terminal 254: defined");
9229:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9230:out/quex_scan.cpp **** _2692:
9231:out/quex_scan.cpp ****     __quex_debug("* terminal 254:   defined");
9232:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9233:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9234:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9235:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 7);
9236:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9237:out/quex_scan.cpp ****     #   endif
9238:out/quex_scan.cpp ****         __quex_debug_counter();
9239:out/quex_scan.cpp ****     {
9240:out/quex_scan.cpp ****     
9241:out/quex_scan.cpp ****     #   line 40 "in/quex/c.qx"
9242:out/quex_scan.cpp ****     self_send(TKN_PP_DEFINED);
9243:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9244:out/quex_scan.cpp ****     
9245:out/quex_scan.cpp **** #   line 9246 "out/quex_scan.cpp"
9246:out/quex_scan.cpp ****     
GAS LISTING /tmp/cc23nfB3.s 			page 219


9247:out/quex_scan.cpp ****     }
9248:out/quex_scan.cpp **** 
9249:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9250:out/quex_scan.cpp **** 
9251:out/quex_scan.cpp ****       
9252:out/quex_scan.cpp ****     __quex_debug("pre-terminal 511: break");
9253:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9254:out/quex_scan.cpp **** _2724:
9255:out/quex_scan.cpp ****     __quex_debug("* terminal 511:   break");
9256:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9257:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9258:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9259:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 5);
9260:out/quex_scan.cpp ****         __QUEX_ASSERT_COUNTER_CONSISTENCY(&self.counter);
9261:out/quex_scan.cpp ****     #   endif
9262:out/quex_scan.cpp ****         __quex_debug_counter();
9263:out/quex_scan.cpp ****     {
9264:out/quex_scan.cpp ****     
9265:out/quex_scan.cpp ****     #   line 91 "in/quex/c.qx"
9266:out/quex_scan.cpp ****     self_send(TKN_BREAK);
9267:out/quex_scan.cpp ****     QUEX_SETTING_AFTER_SEND_CONTINUE_OR_RETURN();
9268:out/quex_scan.cpp ****     
9269:out/quex_scan.cpp **** #   line 9270 "out/quex_scan.cpp"
9270:out/quex_scan.cpp ****     
9271:out/quex_scan.cpp ****     }
9272:out/quex_scan.cpp **** 
9273:out/quex_scan.cpp ****     goto __REENTRY_PREPARATION;
9274:out/quex_scan.cpp **** 
9275:out/quex_scan.cpp **** 
9276:out/quex_scan.cpp **** 
9277:out/quex_scan.cpp **** _1791:
9278:out/quex_scan.cpp **** 
9279:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9280:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9281:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9282:out/quex_scan.cpp ****     #   endif
9283:out/quex_scan.cpp ****         __quex_debug_counter();
9284:out/quex_scan.cpp ****     {
9285:out/quex_scan.cpp ****     
9286:out/quex_scan.cpp ****     #   line 27 "in/quex/c.qx"
9287:out/quex_scan.cpp ****     self_send(TKN_TERMINATION);
9288:out/quex_scan.cpp ****     
9289:out/quex_scan.cpp **** #   line 9290 "out/quex_scan.cpp"
9290:out/quex_scan.cpp ****     
9291:out/quex_scan.cpp ****     }
9292:out/quex_scan.cpp **** 
9293:out/quex_scan.cpp ****      /* End of Stream causes a return from the lexical analyzer, so that no
9294:out/quex_scan.cpp ****       * tokens can be filled after the termination token.                    */
9295:out/quex_scan.cpp ****      RETURN;          
9296:out/quex_scan.cpp **** 
9297:out/quex_scan.cpp **** _2534: /* TERMINAL: FAILURE */
9298:out/quex_scan.cpp **** me->buffer._input_p = me->buffer._lexeme_start_p;
9299:out/quex_scan.cpp **** if(QUEX_NAME(Buffer_is_end_of_file)(&me->buffer)) {
9300:out/quex_scan.cpp **** 
9301:out/quex_scan.cpp ****     /* Next increment will stop on EOF character. */
9302:out/quex_scan.cpp **** }
9303:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 220


9304:out/quex_scan.cpp **** else {
9305:out/quex_scan.cpp ****     /* Step over nomatching character */
9306:out/quex_scan.cpp ****     ++(me->buffer._input_p);
9307:out/quex_scan.cpp **** }
9308:out/quex_scan.cpp **** 
9309:out/quex_scan.cpp **** 
9310:out/quex_scan.cpp **** #   ifdef __QUEX_OPTION_COUNTER
9311:out/quex_scan.cpp ****         __QUEX_IF_COUNT_LINES(self.counter._line_number_at_begin     = self.counter._line_number_at
9312:out/quex_scan.cpp ****         __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_begin = self.counter._column_number_
9313:out/quex_scan.cpp ****         QUEX_NAME(Counter_count)(&self.counter, self.buffer._lexeme_start_p, self.buffer._input_p);
9314:out/quex_scan.cpp ****     #   endif
9315:out/quex_scan.cpp ****         __quex_debug_counter();
9316:out/quex_scan.cpp ****     {
9317:out/quex_scan.cpp ****     QUEX_ERROR_EXIT("\n    Match failure in mode 'PROGRAM'.\n"
9318:out/quex_scan.cpp ****                     "    No 'on_failure' section provided for this mode.\n"
9319:out/quex_scan.cpp ****                     "    Proposal: Define 'on_failure' and analyze 'Lexeme'.\n");
9320:out/quex_scan.cpp ****     
9321:out/quex_scan.cpp ****     }
9322:out/quex_scan.cpp **** 
9323:out/quex_scan.cpp ****      goto __REENTRY_PREPARATION;
9324:out/quex_scan.cpp **** 
9325:out/quex_scan.cpp **** #undef Lexeme
9326:out/quex_scan.cpp **** #undef LexemeBegin
9327:out/quex_scan.cpp **** #undef LexemeEnd
9328:out/quex_scan.cpp **** #undef LexemeNull
9329:out/quex_scan.cpp **** #undef LexemeL
9330:out/quex_scan.cpp **** 
9331:out/quex_scan.cpp ****   
9332:out/quex_scan.cpp **** __REENTRY_PREPARATION:
9333:out/quex_scan.cpp ****     /* (*) Common point for **restarting** lexical analysis.
9334:out/quex_scan.cpp ****      *     at each time when CONTINUE is called at the end of a pattern. */
9335:out/quex_scan.cpp ****     
9336:out/quex_scan.cpp **** #   ifndef __QUEX_OPTION_PLAIN_ANALYZER_OBJECT
9337:out/quex_scan.cpp **** #   ifdef  QUEX_OPTION_TOKEN_POLICY_QUEUE
9338:out/quex_scan.cpp ****     if( QUEX_NAME(TokenQueue_is_full)(&self._token_queue) ) RETURN;
9339:out/quex_scan.cpp **** #   else
9340:out/quex_scan.cpp ****     if( self_token_get_id() != __QUEX_SETTING_TOKEN_ID_UNINITIALIZED) RETURN;
9341:out/quex_scan.cpp **** #   endif
9342:out/quex_scan.cpp **** #   endif
9343:out/quex_scan.cpp **** 
9344:out/quex_scan.cpp ****     last_acceptance = QUEX_LABEL(2534); /* TERMINAL: FAILURE */
9345:out/quex_scan.cpp **** 
9346:out/quex_scan.cpp **** 
9347:out/quex_scan.cpp ****     /* Post context positions do not have to be reset or initialized. If a state
9348:out/quex_scan.cpp ****      * is reached which is associated with 'end of post context' it is clear what
9349:out/quex_scan.cpp ****      * post context is meant. This results from the ways the state machine is 
9350:out/quex_scan.cpp ****      * constructed. A post context positions live time looks like the following:
9351:out/quex_scan.cpp ****      *
9352:out/quex_scan.cpp ****      * (1)   unitialized (don't care)
9353:out/quex_scan.cpp ****      * (1.b) on buffer reload it may, or may not be adapted (don't care)
9354:out/quex_scan.cpp ****      * (2)   when a post context begin state is passed, the it is **SET** (now: take care)
9355:out/quex_scan.cpp ****      * (2.b) on buffer reload it **is adapted**.
9356:out/quex_scan.cpp ****      * (3)   when a terminal state of the post context is reached (which can only be reached
9357:out/quex_scan.cpp ****      *       for that particular post context, then the post context position is used
9358:out/quex_scan.cpp ****      *       to reset the input position.                                              */
9359:out/quex_scan.cpp **** 
9360:out/quex_scan.cpp ****     /*  If a mode change happened, then the function must first return and
GAS LISTING /tmp/cc23nfB3.s 			page 221


9361:out/quex_scan.cpp ****      *  indicate that another mode function is to be called. At this point, 
9362:out/quex_scan.cpp ****      *  we to force a 'return' on a mode change. 
9363:out/quex_scan.cpp ****      *
9364:out/quex_scan.cpp ****      *  Pseudo Code: if( previous_mode != current_mode ) {
9365:out/quex_scan.cpp ****      *                   return 0;
9366:out/quex_scan.cpp ****      *               }
9367:out/quex_scan.cpp ****      *
9368:out/quex_scan.cpp ****      *  When the analyzer returns, the caller function has to watch if a mode change
9369:out/quex_scan.cpp ****      *  occured. If not it can call this function again.                               */
9370:out/quex_scan.cpp **** #   if    defined(QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE)        || defined(QUE
9371:out/quex_scan.cpp ****     if( me->DEBUG_analyzer_function_at_entry != me->current_analyzer_function ) 
9372:out/quex_scan.cpp **** #   endif
9373:out/quex_scan.cpp ****     { 
9374:out/quex_scan.cpp **** #       if defined(QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE)
9375:out/quex_scan.cpp ****         self_token_set_id(__QUEX_SETTING_TOKEN_ID_UNINITIALIZED);
9376:out/quex_scan.cpp ****         RETURN;
9377:out/quex_scan.cpp **** #       elif defined(QUEX_OPTION_ASSERTS)
9378:out/quex_scan.cpp ****         QUEX_ERROR_EXIT("Mode change without immediate return from the lexical analyzer.");
9379:out/quex_scan.cpp **** #       endif
9380:out/quex_scan.cpp ****     }
9381:out/quex_scan.cpp **** 
9382:out/quex_scan.cpp ****     goto __REENTRY;
9383:out/quex_scan.cpp **** #ifndef QUEX_OPTION_COMPUTED_GOTOS
9384:out/quex_scan.cpp **** __quex_assert(false);
9385:out/quex_scan.cpp **** __STATE_ROUTER:
9386:out/quex_scan.cpp ****     switch( target_state_index ) {
9387:out/quex_scan.cpp ****         case 2341: { goto _2341;}
9388:out/quex_scan.cpp ****         case 2342: { goto _2342;}
9389:out/quex_scan.cpp ****         case 2343: { goto _2343;}
9390:out/quex_scan.cpp ****         case 2344: { goto _2520;}
9391:out/quex_scan.cpp ****         case 2345: { goto _2523;}
9392:out/quex_scan.cpp ****         case 2346: { goto _2522;}
9393:out/quex_scan.cpp ****         case 2347: { goto _2533;}
9394:out/quex_scan.cpp ****         case 2348: { goto _2348;}
9395:out/quex_scan.cpp ****         case 2349: { goto _2527;}
9396:out/quex_scan.cpp ****         case 2350: { goto _2532;}
9397:out/quex_scan.cpp ****         case 2351: { goto _2351;}
9398:out/quex_scan.cpp ****         case 2352: { goto _2352;}
9399:out/quex_scan.cpp ****         case 2353: { goto _2353;}
9400:out/quex_scan.cpp ****         case 2354: { goto _2354;}
9401:out/quex_scan.cpp ****         case 2355: { goto _2355;}
9402:out/quex_scan.cpp ****         case 2356: { goto _2356;}
9403:out/quex_scan.cpp ****         case 2357: { goto _2357;}
9404:out/quex_scan.cpp ****         case 2358: { goto _2525;}
9405:out/quex_scan.cpp ****         case 2359: { goto _2528;}
9406:out/quex_scan.cpp ****         case 2360: { goto _2530;}
9407:out/quex_scan.cpp ****         case 2361: { goto _2361;}
9408:out/quex_scan.cpp ****         case 2362: { goto _2524;}
9409:out/quex_scan.cpp ****         case 2363: { goto _2363;}
9410:out/quex_scan.cpp ****         case 2364: { goto _2364;}
9411:out/quex_scan.cpp ****         case 2365: { goto _2365;}
9412:out/quex_scan.cpp ****         case 2366: { goto _2521;}
9413:out/quex_scan.cpp ****         case 2367: { goto _2367;}
9414:out/quex_scan.cpp ****         case 2368: { goto _2368;}
9415:out/quex_scan.cpp ****         case 2369: { goto _2369;}
9416:out/quex_scan.cpp ****         case 2370: { goto _2370;}
9417:out/quex_scan.cpp ****         case 2371: { goto _2526;}
GAS LISTING /tmp/cc23nfB3.s 			page 222


9418:out/quex_scan.cpp ****         case 2372: { goto _2372;}
9419:out/quex_scan.cpp ****         case 2373: { goto _2373;}
9420:out/quex_scan.cpp ****         case 2374: { goto _2374;}
9421:out/quex_scan.cpp ****         case 2375: { goto _2531;}
9422:out/quex_scan.cpp ****         case 2376: { goto _2376;}
9423:out/quex_scan.cpp ****         case 2377: { goto _2377;}
9424:out/quex_scan.cpp ****         case 2378: { goto _2378;}
9425:out/quex_scan.cpp ****         case 2379: { goto _2519;}
9426:out/quex_scan.cpp ****         case 2380: { goto _2380;}
9427:out/quex_scan.cpp ****         case 2381: { goto _2529;}
9428:out/quex_scan.cpp ****         case 2382: { goto _2382;}
9429:out/quex_scan.cpp ****         case 2383: { goto _2602;}
9430:out/quex_scan.cpp ****         case 2384: { goto _2384;}
9431:out/quex_scan.cpp ****         case 2385: { goto _2385;}
9432:out/quex_scan.cpp ****         case 2386: { goto _2386;}
9433:out/quex_scan.cpp ****         case 2387: { goto _2387;}
9434:out/quex_scan.cpp ****         case 2388: { goto _2388;}
9435:out/quex_scan.cpp ****         case 2389: { goto _2389;}
9436:out/quex_scan.cpp ****         case 2390: { goto _2390;}
9437:out/quex_scan.cpp ****         case 2391: { goto _2391;}
9438:out/quex_scan.cpp ****         case 2392: { goto _2392;}
9439:out/quex_scan.cpp ****         case 2393: { goto _2393;}
9440:out/quex_scan.cpp ****         case 2394: { goto _2394;}
9441:out/quex_scan.cpp ****         case 2395: { goto _2395;}
9442:out/quex_scan.cpp ****         case 2396: { goto _2396;}
9443:out/quex_scan.cpp ****         case 2397: { goto _2597;}
9444:out/quex_scan.cpp ****         case 2398: { goto _2398;}
9445:out/quex_scan.cpp ****         case 2399: { goto _2399;}
9446:out/quex_scan.cpp ****         case 2400: { goto _2400;}
9447:out/quex_scan.cpp ****         case 2401: { goto _2595;}
9448:out/quex_scan.cpp ****         case 2402: { goto _2402;}
9449:out/quex_scan.cpp ****         case 2403: { goto _2403;}
9450:out/quex_scan.cpp ****         case 2404: { goto _2404;}
9451:out/quex_scan.cpp ****         case 2405: { goto _2405;}
9452:out/quex_scan.cpp ****         case 2406: { goto _2406;}
9453:out/quex_scan.cpp ****         case 2407: { goto _2407;}
9454:out/quex_scan.cpp ****         case 2408: { goto _2624;}
9455:out/quex_scan.cpp ****         case 2409: { goto _2409;}
9456:out/quex_scan.cpp ****         case 2410: { goto _2410;}
9457:out/quex_scan.cpp ****         case 2411: { goto _2411;}
9458:out/quex_scan.cpp ****         case 2412: { goto _2412;}
9459:out/quex_scan.cpp ****         case 2413: { goto _2629;}
9460:out/quex_scan.cpp ****         case 2414: { goto _2414;}
9461:out/quex_scan.cpp ****         case 2415: { goto _2415;}
9462:out/quex_scan.cpp ****         case 2416: { goto _2416;}
9463:out/quex_scan.cpp ****         case 2417: { goto _2417;}
9464:out/quex_scan.cpp ****         case 2418: { goto _2418;}
9465:out/quex_scan.cpp ****         case 2419: { goto _2636;}
9466:out/quex_scan.cpp ****         case 2420: { goto _2634;}
9467:out/quex_scan.cpp ****         case 2421: { goto _2421;}
9468:out/quex_scan.cpp ****         case 2422: { goto _2422;}
9469:out/quex_scan.cpp ****         case 2423: { goto _2639;}
9470:out/quex_scan.cpp ****         case 2424: { goto _2424;}
9471:out/quex_scan.cpp ****         case 2425: { goto _2425;}
9472:out/quex_scan.cpp ****         case 2426: { goto _2642;}
9473:out/quex_scan.cpp ****         case 2427: { goto _2427;}
9474:out/quex_scan.cpp ****         case 2428: { goto _2428;}
GAS LISTING /tmp/cc23nfB3.s 			page 223


9475:out/quex_scan.cpp ****         case 2429: { goto _2429;}
9476:out/quex_scan.cpp ****         case 2430: { goto _2430;}
9477:out/quex_scan.cpp ****         case 2431: { goto _2431;}
9478:out/quex_scan.cpp ****         case 2432: { goto _2432;}
9479:out/quex_scan.cpp ****         case 2433: { goto _2433;}
9480:out/quex_scan.cpp ****         case 2434: { goto _2434;}
9481:out/quex_scan.cpp ****         case 2435: { goto _2435;}
9482:out/quex_scan.cpp ****         case 2436: { goto _2436;}
9483:out/quex_scan.cpp ****         case 2437: { goto _2550;}
9484:out/quex_scan.cpp ****         case 2438: { goto _2438;}
9485:out/quex_scan.cpp ****         case 2439: { goto _2552;}
9486:out/quex_scan.cpp ****         case 2440: { goto _2440;}
9487:out/quex_scan.cpp ****         case 2441: { goto _2441;}
9488:out/quex_scan.cpp ****         case 2442: { goto _2442;}
9489:out/quex_scan.cpp ****         case 2443: { goto _2655;}
9490:out/quex_scan.cpp ****         case 2444: { goto _2444;}
9491:out/quex_scan.cpp ****         case 2445: { goto _2445;}
9492:out/quex_scan.cpp ****         case 2446: { goto _2658;}
9493:out/quex_scan.cpp ****         case 2447: { goto _2447;}
9494:out/quex_scan.cpp ****         case 2448: { goto _2448;}
9495:out/quex_scan.cpp ****         case 2449: { goto _2449;}
9496:out/quex_scan.cpp ****         case 2450: { goto _2450;}
9497:out/quex_scan.cpp ****         case 2451: { goto _2451;}
9498:out/quex_scan.cpp ****         case 2452: { goto _2452;}
9499:out/quex_scan.cpp ****         case 2453: { goto _2453;}
9500:out/quex_scan.cpp ****         case 2454: { goto _2454;}
9501:out/quex_scan.cpp ****         case 2455: { goto _2455;}
9502:out/quex_scan.cpp ****         case 2456: { goto _2456;}
9503:out/quex_scan.cpp ****         case 2457: { goto _2457;}
9504:out/quex_scan.cpp ****         case 2458: { goto _2458;}
9505:out/quex_scan.cpp ****         case 2459: { goto _2459;}
9506:out/quex_scan.cpp ****         case 2460: { goto _2460;}
9507:out/quex_scan.cpp ****         case 2461: { goto _2461;}
9508:out/quex_scan.cpp ****         case 2462: { goto _2462;}
9509:out/quex_scan.cpp ****         case 2463: { goto _2463;}
9510:out/quex_scan.cpp ****         case 2464: { goto _2464;}
9511:out/quex_scan.cpp ****         case 2465: { goto _2465;}
9512:out/quex_scan.cpp ****         case 2466: { goto _2466;}
9513:out/quex_scan.cpp ****         case 2467: { goto _2467;}
9514:out/quex_scan.cpp ****         case 2468: { goto _2468;}
9515:out/quex_scan.cpp ****         case 2469: { goto _2469;}
9516:out/quex_scan.cpp ****         case 2470: { goto _2470;}
9517:out/quex_scan.cpp ****         case 2471: { goto _2471;}
9518:out/quex_scan.cpp ****         case 2472: { goto _2472;}
9519:out/quex_scan.cpp ****         case 2473: { goto _2473;}
9520:out/quex_scan.cpp ****         case 2474: { goto _2588;}
9521:out/quex_scan.cpp ****         case 2475: { goto _2585;}
9522:out/quex_scan.cpp ****         case 2476: { goto _2476;}
9523:out/quex_scan.cpp ****         case 2477: { goto _2477;}
9524:out/quex_scan.cpp ****         case 2478: { goto _2478;}
9525:out/quex_scan.cpp ****         case 2479: { goto _2539;}
9526:out/quex_scan.cpp ****         case 2480: { goto _2480;}
9527:out/quex_scan.cpp ****         case 2481: { goto _2481;}
9528:out/quex_scan.cpp ****         case 2482: { goto _2482;}
9529:out/quex_scan.cpp ****         case 2483: { goto _2483;}
9530:out/quex_scan.cpp ****         case 2484: { goto _2484;}
9531:out/quex_scan.cpp ****         case 2485: { goto _2485;}
GAS LISTING /tmp/cc23nfB3.s 			page 224


9532:out/quex_scan.cpp ****         case 2486: { goto _2486;}
9533:out/quex_scan.cpp ****         case 2487: { goto _2487;}
9534:out/quex_scan.cpp ****         case 2488: { goto _2488;}
9535:out/quex_scan.cpp ****         case 2489: { goto _2580;}
9536:out/quex_scan.cpp ****         case 2490: { goto _2490;}
9537:out/quex_scan.cpp ****         case 2491: { goto _2491;}
9538:out/quex_scan.cpp ****         case 2492: { goto _2492;}
9539:out/quex_scan.cpp ****         case 2493: { goto _2574;}
9540:out/quex_scan.cpp ****         case 2494: { goto _2576;}
9541:out/quex_scan.cpp ****         case 2495: { goto _2575;}
9542:out/quex_scan.cpp ****         case 2496: { goto _2571;}
9543:out/quex_scan.cpp ****         case 2497: { goto _2497;}
9544:out/quex_scan.cpp ****         case 2498: { goto _2498;}
9545:out/quex_scan.cpp ****         case 2499: { goto _2499;}
9546:out/quex_scan.cpp ****         case 2500: { goto _2500;}
9547:out/quex_scan.cpp ****         case 2501: { goto _2501;}
9548:out/quex_scan.cpp ****         case 2502: { goto _2502;}
9549:out/quex_scan.cpp ****         case 2503: { goto _2503;}
9550:out/quex_scan.cpp ****         case 2504: { goto _2504;}
9551:out/quex_scan.cpp ****         case 2505: { goto _2505;}
9552:out/quex_scan.cpp ****         case 2506: { goto _2506;}
9553:out/quex_scan.cpp ****         case 2507: { goto _2537;}
9554:out/quex_scan.cpp ****         case 2508: { goto _2508;}
9555:out/quex_scan.cpp ****         case 2509: { goto _2509;}
9556:out/quex_scan.cpp ****         case 2510: { goto _2510;}
9557:out/quex_scan.cpp ****         case 2511: { goto _2511;}
9558:out/quex_scan.cpp ****         case 2512: { goto _2512;}
9559:out/quex_scan.cpp ****         case 2513: { goto _2513;}
9560:out/quex_scan.cpp ****         case 2514: { goto _2565;}
9561:out/quex_scan.cpp ****         case 2515: { goto _2562;}
9562:out/quex_scan.cpp ****         case 2516: { goto _2560;}
9563:out/quex_scan.cpp ****         case 2517: { goto _2557;}
9564:out/quex_scan.cpp ****         case 2519: { goto _2519;}
9565:out/quex_scan.cpp ****         case 2520: { goto _2520;}
9566:out/quex_scan.cpp ****         case 2521: { goto _2521;}
9567:out/quex_scan.cpp ****         case 2522: { goto _2522;}
9568:out/quex_scan.cpp ****         case 2523: { goto _2523;}
9569:out/quex_scan.cpp ****         case 2524: { goto _2524;}
9570:out/quex_scan.cpp ****         case 2525: { goto _2525;}
9571:out/quex_scan.cpp ****         case 2526: { goto _2526;}
9572:out/quex_scan.cpp ****         case 2527: { goto _2527;}
9573:out/quex_scan.cpp ****         case 2528: { goto _2528;}
9574:out/quex_scan.cpp ****         case 2529: { goto _2529;}
9575:out/quex_scan.cpp ****         case 2530: { goto _2530;}
9576:out/quex_scan.cpp ****         case 2531: { goto _2531;}
9577:out/quex_scan.cpp ****         case 2532: { goto _2532;}
9578:out/quex_scan.cpp ****         case 2533: { goto _2533;}
9579:out/quex_scan.cpp ****         case 2535: { goto _2535;}
9580:out/quex_scan.cpp ****         case 2537: { goto _2537;}
9581:out/quex_scan.cpp ****         case 2538: { goto _2538;}
9582:out/quex_scan.cpp ****         case 2539: { goto _2539;}
9583:out/quex_scan.cpp ****         case 2540: { goto _2540;}
9584:out/quex_scan.cpp ****         case 2541: { goto _2541;}
9585:out/quex_scan.cpp ****         case 2543: { goto _2543;}
9586:out/quex_scan.cpp ****         case 2544: { goto _2544;}
9587:out/quex_scan.cpp ****         case 2545: { goto _2545;}
9588:out/quex_scan.cpp ****         case 2546: { goto _2546;}
GAS LISTING /tmp/cc23nfB3.s 			page 225


9589:out/quex_scan.cpp ****         case 2547: { goto _2547;}
9590:out/quex_scan.cpp ****         case 2548: { goto _2548;}
9591:out/quex_scan.cpp ****         case 2549: { goto _2549;}
9592:out/quex_scan.cpp ****         case 2550: { goto _2550;}
9593:out/quex_scan.cpp ****         case 2551: { goto _2551;}
9594:out/quex_scan.cpp ****         case 2552: { goto _2552;}
9595:out/quex_scan.cpp ****         case 2553: { goto _2553;}
9596:out/quex_scan.cpp ****         case 2554: { goto _2554;}
9597:out/quex_scan.cpp ****         case 2555: { goto _2555;}
9598:out/quex_scan.cpp ****         case 2556: { goto _2556;}
9599:out/quex_scan.cpp ****         case 2557: { goto _2557;}
9600:out/quex_scan.cpp ****         case 2559: { goto _2559;}
9601:out/quex_scan.cpp ****         case 2560: { goto _2560;}
9602:out/quex_scan.cpp ****         case 2561: { goto _2561;}
9603:out/quex_scan.cpp ****         case 2562: { goto _2562;}
9604:out/quex_scan.cpp ****         case 2564: { goto _2564;}
9605:out/quex_scan.cpp ****         case 2565: { goto _2565;}
9606:out/quex_scan.cpp ****         case 2567: { goto _2567;}
9607:out/quex_scan.cpp ****         case 2568: { goto _2568;}
9608:out/quex_scan.cpp ****         case 2569: { goto _2569;}
9609:out/quex_scan.cpp ****         case 2570: { goto _2570;}
9610:out/quex_scan.cpp ****         case 2571: { goto _2571;}
9611:out/quex_scan.cpp ****         case 2573: { goto _2573;}
9612:out/quex_scan.cpp ****         case 2574: { goto _2574;}
9613:out/quex_scan.cpp ****         case 2575: { goto _2575;}
9614:out/quex_scan.cpp ****         case 2576: { goto _2576;}
9615:out/quex_scan.cpp ****         case 2578: { goto _2578;}
9616:out/quex_scan.cpp ****         case 2579: { goto _2579;}
9617:out/quex_scan.cpp ****         case 2580: { goto _2580;}
9618:out/quex_scan.cpp ****         case 2582: { goto _2582;}
9619:out/quex_scan.cpp ****         case 2583: { goto _2583;}
9620:out/quex_scan.cpp ****         case 2584: { goto _2584;}
9621:out/quex_scan.cpp ****         case 2585: { goto _2585;}
9622:out/quex_scan.cpp ****         case 2587: { goto _2587;}
9623:out/quex_scan.cpp ****         case 2588: { goto _2588;}
9624:out/quex_scan.cpp ****         case 2590: { goto _2590;}
9625:out/quex_scan.cpp ****         case 2591: { goto _2591;}
9626:out/quex_scan.cpp ****         case 2592: { goto _2592;}
9627:out/quex_scan.cpp ****         case 2594: { goto _2594;}
9628:out/quex_scan.cpp ****         case 2595: { goto _2595;}
9629:out/quex_scan.cpp ****         case 2596: { goto _2596;}
9630:out/quex_scan.cpp ****         case 2597: { goto _2597;}
9631:out/quex_scan.cpp ****         case 2599: { goto _2599;}
9632:out/quex_scan.cpp ****         case 2600: { goto _2600;}
9633:out/quex_scan.cpp ****         case 2601: { goto _2601;}
9634:out/quex_scan.cpp ****         case 2602: { goto _2602;}
9635:out/quex_scan.cpp ****         case 2604: { goto _2604;}
9636:out/quex_scan.cpp ****         case 2605: { goto _2605;}
9637:out/quex_scan.cpp ****         case 2606: { goto _2606;}
9638:out/quex_scan.cpp ****         case 2608: { goto _2608;}
9639:out/quex_scan.cpp ****         case 2609: { goto _2609;}
9640:out/quex_scan.cpp ****         case 2610: { goto _2610;}
9641:out/quex_scan.cpp ****         case 2611: { goto _2611;}
9642:out/quex_scan.cpp ****         case 2612: { goto _2612;}
9643:out/quex_scan.cpp ****         case 2613: { goto _2613;}
9644:out/quex_scan.cpp ****         case 2615: { goto _2615;}
9645:out/quex_scan.cpp ****         case 2616: { goto _2616;}
GAS LISTING /tmp/cc23nfB3.s 			page 226


9646:out/quex_scan.cpp ****         case 2617: { goto _2617;}
9647:out/quex_scan.cpp ****         case 2618: { goto _2618;}
9648:out/quex_scan.cpp ****         case 2620: { goto _2620;}
9649:out/quex_scan.cpp ****         case 2621: { goto _2621;}
9650:out/quex_scan.cpp ****         case 2622: { goto _2622;}
9651:out/quex_scan.cpp ****         case 2623: { goto _2623;}
9652:out/quex_scan.cpp ****         case 2624: { goto _2624;}
9653:out/quex_scan.cpp ****         case 2625: { goto _2625;}
9654:out/quex_scan.cpp ****         case 2626: { goto _2626;}
9655:out/quex_scan.cpp ****         case 2627: { goto _2627;}
9656:out/quex_scan.cpp ****         case 2628: { goto _2628;}
9657:out/quex_scan.cpp ****         case 2629: { goto _2629;}
9658:out/quex_scan.cpp ****         case 2630: { goto _2630;}
9659:out/quex_scan.cpp ****         case 2631: { goto _2631;}
9660:out/quex_scan.cpp ****         case 2632: { goto _2632;}
9661:out/quex_scan.cpp ****         case 2633: { goto _2633;}
9662:out/quex_scan.cpp ****         case 2634: { goto _2634;}
9663:out/quex_scan.cpp ****         case 2635: { goto _2635;}
9664:out/quex_scan.cpp ****         case 2636: { goto _2636;}
9665:out/quex_scan.cpp ****         case 2637: { goto _2637;}
9666:out/quex_scan.cpp ****         case 2638: { goto _2638;}
9667:out/quex_scan.cpp ****         case 2639: { goto _2639;}
9668:out/quex_scan.cpp ****         case 2640: { goto _2640;}
9669:out/quex_scan.cpp ****         case 2641: { goto _2641;}
9670:out/quex_scan.cpp ****         case 2642: { goto _2642;}
9671:out/quex_scan.cpp ****         case 2644: { goto _2644;}
9672:out/quex_scan.cpp ****         case 2645: { goto _2645;}
9673:out/quex_scan.cpp ****         case 2646: { goto _2646;}
9674:out/quex_scan.cpp ****         case 2647: { goto _2647;}
9675:out/quex_scan.cpp ****         case 2648: { goto _2648;}
9676:out/quex_scan.cpp ****         case 2649: { goto _2649;}
9677:out/quex_scan.cpp ****         case 2650: { goto _2650;}
9678:out/quex_scan.cpp ****         case 2651: { goto _2651;}
9679:out/quex_scan.cpp ****         case 2652: { goto _2652;}
9680:out/quex_scan.cpp ****         case 2653: { goto _2653;}
9681:out/quex_scan.cpp ****         case 2654: { goto _2654;}
9682:out/quex_scan.cpp ****         case 2655: { goto _2655;}
9683:out/quex_scan.cpp ****         case 2656: { goto _2656;}
9684:out/quex_scan.cpp ****         case 2657: { goto _2657;}
9685:out/quex_scan.cpp ****         case 2658: { goto _2658;}
9686:out/quex_scan.cpp ****         case 2659: { goto _2659;}
9687:out/quex_scan.cpp ****         case 2660: { goto _2660;}
9688:out/quex_scan.cpp ****         case 2661: { goto _2661;}
9689:out/quex_scan.cpp ****         case 2662: { goto _2662;}
9690:out/quex_scan.cpp ****         case 2664: { goto _2664;}
9691:out/quex_scan.cpp ****         case 2665: { goto _2665;}
9692:out/quex_scan.cpp ****         case 2666: { goto _2666;}
9693:out/quex_scan.cpp ****         case 2667: { goto _2667;}
9694:out/quex_scan.cpp ****         case 2668: { goto _2668;}
9695:out/quex_scan.cpp ****         case 2669: { goto _2669;}
9696:out/quex_scan.cpp ****         case 2670: { goto _2670;}
9697:out/quex_scan.cpp ****         case 2671: { goto _2671;}
9698:out/quex_scan.cpp ****         case 2672: { goto _2672;}
9699:out/quex_scan.cpp ****         case 2674: { goto _2674;}
9700:out/quex_scan.cpp ****         case 2676: { goto _2676;}
9701:out/quex_scan.cpp ****         case 2677: { goto _2677;}
9702:out/quex_scan.cpp ****         case 2679: { goto _2679;}
GAS LISTING /tmp/cc23nfB3.s 			page 227


9703:out/quex_scan.cpp ****         case 2680: { goto _2680;}
9704:out/quex_scan.cpp ****         case 2682: { goto _2682;}
9705:out/quex_scan.cpp ****         case 2683: { goto _2683;}
9706:out/quex_scan.cpp ****         case 2684: { goto _2684;}
9707:out/quex_scan.cpp ****         case 2685: { goto _2685;}
9708:out/quex_scan.cpp ****         case 2687: { goto _2687;}
9709:out/quex_scan.cpp ****         case 2688: { goto _2688;}
9710:out/quex_scan.cpp ****         case 2689: { goto _2689;}
9711:out/quex_scan.cpp ****         case 2690: { goto _2690;}
9712:out/quex_scan.cpp ****         case 2691: { goto _2691;}
9713:out/quex_scan.cpp ****         case 2693: { goto _2693;}
9714:out/quex_scan.cpp ****         case 2694: { goto _2694;}
9715:out/quex_scan.cpp ****         case 2695: { goto _2695;}
9716:out/quex_scan.cpp ****         case 2698: { goto _2698;}
9717:out/quex_scan.cpp ****         case 2699: { goto _2699;}
9718:out/quex_scan.cpp ****         case 2700: { goto _2700;}
9719:out/quex_scan.cpp ****         case 2701: { goto _2701;}
9720:out/quex_scan.cpp ****         case 2702: { goto _2702;}
9721:out/quex_scan.cpp ****         case 2703: { goto _2703;}
9722:out/quex_scan.cpp ****         case 2704: { goto _2704;}
9723:out/quex_scan.cpp ****         case 2705: { goto _2705;}
9724:out/quex_scan.cpp ****         case 2707: { goto _2707;}
9725:out/quex_scan.cpp ****         case 2708: { goto _2708;}
9726:out/quex_scan.cpp ****         case 2710: { goto _2710;}
9727:out/quex_scan.cpp ****         case 2712: { goto _2712;}
9728:out/quex_scan.cpp ****         case 2713: { goto _2713;}
9729:out/quex_scan.cpp ****         case 2714: { goto _2714;}
9730:out/quex_scan.cpp ****         case 2715: { goto _2715;}
9731:out/quex_scan.cpp ****         case 2716: { goto _2716;}
9732:out/quex_scan.cpp ****         case 2718: { goto _2718;}
9733:out/quex_scan.cpp ****         case 2720: { goto _2720;}
9734:out/quex_scan.cpp ****         case 2721: { goto _2721;}
9735:out/quex_scan.cpp ****         case 2722: { goto _2722;}
9736:out/quex_scan.cpp ****         case 2723: { goto _2723;}
9737:out/quex_scan.cpp ****         case 2725: { goto _2725;}
9738:out/quex_scan.cpp ****         case 2726: { goto _2726;}
9739:out/quex_scan.cpp ****         case 2727: { goto _2727;}
9740:out/quex_scan.cpp **** 
9741:out/quex_scan.cpp ****         default: QUEX_ERROR_EXIT("State router: unknown index.");
9742:out/quex_scan.cpp ****     }
9743:out/quex_scan.cpp **** #endif /* QUEX_OPTION_COMPUTED_GOTOS */
9744:out/quex_scan.cpp **** 
9745:out/quex_scan.cpp ****     /* Prevent compiler warning 'unused variable': use variables once in a part of the code*/
9746:out/quex_scan.cpp ****     /* that is never reached (and deleted by the compiler anyway).*/
9747:out/quex_scan.cpp ****     (void)PROGRAM;
9748:out/quex_scan.cpp ****     (void)QUEX_NAME(LexemeNullObject);
9749:out/quex_scan.cpp ****     (void)QUEX_NAME_TOKEN(DumpedTokenIdObject);
9750:out/quex_scan.cpp ****     QUEX_ERROR_EXIT("Unreachable code has been reached.\n");
9751:out/quex_scan.cpp ****     /* In some scenarios, the __TERMINAL_ROUTER is never required.
9752:out/quex_scan.cpp ****      * Still, avoid the warning of 'label never used'.             */
9753:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
9754:out/quex_scan.cpp **** 
9755:out/quex_scan.cpp **** __RELOAD_FORWARD:
9756:out/quex_scan.cpp ****     __quex_debug("__RELOAD_FORWARD");
9757:out/quex_scan.cpp **** 
9758:out/quex_scan.cpp ****     __quex_assert(input == QUEX_SETTING_BUFFER_LIMIT_CODE);
9759:out/quex_scan.cpp ****     if( me->buffer._memory._end_of_file_p == 0x0 ) {
GAS LISTING /tmp/cc23nfB3.s 			page 228


9760:out/quex_scan.cpp ****         __quex_debug_reload_before();
9761:out/quex_scan.cpp ****         QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position,
9762:out/quex_scan.cpp ****                                                post_context_start_position, PostContextStartPositio
9763:out/quex_scan.cpp ****         __quex_debug_reload_after();
9764:out/quex_scan.cpp ****         QUEX_GOTO_STATE(target_state_index);
9765:out/quex_scan.cpp ****     }
9766:out/quex_scan.cpp ****     __quex_debug("reload impossible");
9767:out/quex_scan.cpp ****     QUEX_GOTO_STATE(target_state_else_index);
9768:out/quex_scan.cpp **** 
9769:out/quex_scan.cpp **** __RELOAD_INIT_STATE:
9770:out/quex_scan.cpp ****     __quex_assert(input == QUEX_SETTING_BUFFER_LIMIT_CODE);
9771:out/quex_scan.cpp ****     if( me->buffer._memory._end_of_file_p == 0x0 ) {
9772:out/quex_scan.cpp ****         __quex_debug_reload_before();
9773:out/quex_scan.cpp ****         QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position,
9774:out/quex_scan.cpp ****                                                post_context_start_position, PostContextStartPositio
9775:out/quex_scan.cpp ****         __quex_debug_reload_after();
9776:out/quex_scan.cpp ****         goto _2341; /* Init state entry */
9777:out/quex_scan.cpp ****     }
9778:out/quex_scan.cpp ****     goto _1791;  /* End of stream    */
9779:out/quex_scan.cpp **** #   undef PROGRAM
9780:out/quex_scan.cpp **** #undef self
9781:out/quex_scan.cpp **** }
9782:out/quex_scan.cpp **** #include <quex/code_base/temporary_macros_off>
9783:out/quex_scan.cpp **** QUEX_NAMESPACE_MAIN_CLOSE
9784:out/quex_scan.cpp **** 
9785:out/quex_scan.cpp **** 
9786:out/quex_scan.cpp **** QUEX_NAMESPACE_TOKEN_OPEN
9787:out/quex_scan.cpp **** 
9788:out/quex_scan.cpp **** const char*
9789:out/quex_scan.cpp **** QUEX_NAME_TOKEN(map_id_to_name)(const QUEX_TYPE_TOKEN_ID TokenID)
9790:out/quex_scan.cpp **** {
9791:out/quex_scan.cpp ****    static char  error_string[64];
9792:out/quex_scan.cpp ****    static const char  uninitialized_string[] = "<UNINITIALIZED>";
9793:out/quex_scan.cpp ****    static const char  termination_string[]   = "<TERMINATION>";
9794:out/quex_scan.cpp **** #  if defined(QUEX_OPTION_INDENTATION_TRIGGER)
9795:out/quex_scan.cpp ****    static const char  indent_string[]        = "<INDENT>";
9796:out/quex_scan.cpp ****    static const char  dedent_string[]        = "<DEDENT>";
9797:out/quex_scan.cpp ****    static const char  nodent_string[]        = "<NODENT>";
9798:out/quex_scan.cpp **** #  endif
9799:out/quex_scan.cpp ****    static const char  token_id_str_AMPERSANT[]          = "AMPERSANT";
9800:out/quex_scan.cpp ****    static const char  token_id_str_AND[]                = "AND";
9801:out/quex_scan.cpp ****    static const char  token_id_str_ASSIGN_DIV[]         = "ASSIGN_DIV";
9802:out/quex_scan.cpp ****    static const char  token_id_str_ASSIGN_MINUS[]       = "ASSIGN_MINUS";
9803:out/quex_scan.cpp ****    static const char  token_id_str_ASSIGN_MULT[]        = "ASSIGN_MULT";
9804:out/quex_scan.cpp ****    static const char  token_id_str_ASSIGN_PLUS[]        = "ASSIGN_PLUS";
9805:out/quex_scan.cpp ****    static const char  token_id_str_BACKLASHED_NEWLINE[] = "BACKLASHED_NEWLINE";
9806:out/quex_scan.cpp ****    static const char  token_id_str_BRACKET_C[]          = "BRACKET_C";
9807:out/quex_scan.cpp ****    static const char  token_id_str_BRACKET_O[]          = "BRACKET_O";
9808:out/quex_scan.cpp ****    static const char  token_id_str_BREAK[]              = "BREAK";
9809:out/quex_scan.cpp ****    static const char  token_id_str_CATCH[]              = "CATCH";
9810:out/quex_scan.cpp ****    static const char  token_id_str_CLASS[]              = "CLASS";
9811:out/quex_scan.cpp ****    static const char  token_id_str_COLON[]              = "COLON";
9812:out/quex_scan.cpp ****    static const char  token_id_str_COMMA[]              = "COMMA";
9813:out/quex_scan.cpp ****    static const char  token_id_str_COMMENT[]            = "COMMENT";
9814:out/quex_scan.cpp ****    static const char  token_id_str_CONST[]              = "CONST";
9815:out/quex_scan.cpp ****    static const char  token_id_str_CONTINUE[]           = "CONTINUE";
9816:out/quex_scan.cpp ****    static const char  token_id_str_CORNER_BRACKET_C[]   = "CORNER_BRACKET_C";
GAS LISTING /tmp/cc23nfB3.s 			page 229


9817:out/quex_scan.cpp ****    static const char  token_id_str_CORNER_BRACKET_O[]   = "CORNER_BRACKET_O";
9818:out/quex_scan.cpp ****    static const char  token_id_str_CURLY_BRACKET_C[]    = "CURLY_BRACKET_C";
9819:out/quex_scan.cpp ****    static const char  token_id_str_CURLY_BRACKET_O[]    = "CURLY_BRACKET_O";
9820:out/quex_scan.cpp ****    static const char  token_id_str_DIV[]                = "DIV";
9821:out/quex_scan.cpp ****    static const char  token_id_str_DO[]                 = "DO";
9822:out/quex_scan.cpp ****    static const char  token_id_str_DOT[]                = "DOT";
9823:out/quex_scan.cpp ****    static const char  token_id_str_DOUBLE_COLON[]       = "DOUBLE_COLON";
9824:out/quex_scan.cpp ****    static const char  token_id_str_DOUBLE_HASH[]        = "DOUBLE_HASH";
9825:out/quex_scan.cpp ****    static const char  token_id_str_ELSE[]               = "ELSE";
9826:out/quex_scan.cpp ****    static const char  token_id_str_EQ[]                 = "EQ";
9827:out/quex_scan.cpp ****    static const char  token_id_str_EXCLUSIVE_OR[]       = "EXCLUSIVE_OR";
9828:out/quex_scan.cpp ****    static const char  token_id_str_FOR[]                = "FOR";
9829:out/quex_scan.cpp ****    static const char  token_id_str_GREATER[]            = "GREATER";
9830:out/quex_scan.cpp ****    static const char  token_id_str_GR_EQ[]              = "GR_EQ";
9831:out/quex_scan.cpp ****    static const char  token_id_str_HASH[]               = "HASH";
9832:out/quex_scan.cpp ****    static const char  token_id_str_IDENTIFIER[]         = "IDENTIFIER";
9833:out/quex_scan.cpp ****    static const char  token_id_str_IF[]                 = "IF";
9834:out/quex_scan.cpp ****    static const char  token_id_str_LESS[]               = "LESS";
9835:out/quex_scan.cpp ****    static const char  token_id_str_LE_EQ[]              = "LE_EQ";
9836:out/quex_scan.cpp ****    static const char  token_id_str_LOGICAL_OR[]         = "LOGICAL_OR";
9837:out/quex_scan.cpp ****    static const char  token_id_str_MINUS[]              = "MINUS";
9838:out/quex_scan.cpp ****    static const char  token_id_str_MODULO[]             = "MODULO";
9839:out/quex_scan.cpp ****    static const char  token_id_str_MULT[]               = "MULT";
9840:out/quex_scan.cpp ****    static const char  token_id_str_NOT[]                = "NOT";
9841:out/quex_scan.cpp ****    static const char  token_id_str_NOT_EQ[]             = "NOT_EQ";
9842:out/quex_scan.cpp ****    static const char  token_id_str_NUMBER[]             = "NUMBER";
9843:out/quex_scan.cpp ****    static const char  token_id_str_OP_ASSIGNMENT[]      = "OP_ASSIGNMENT";
9844:out/quex_scan.cpp ****    static const char  token_id_str_OR[]                 = "OR";
9845:out/quex_scan.cpp ****    static const char  token_id_str_PLUS[]               = "PLUS";
9846:out/quex_scan.cpp ****    static const char  token_id_str_PP_DEFINE[]          = "PP_DEFINE";
9847:out/quex_scan.cpp ****    static const char  token_id_str_PP_DEFINED[]         = "PP_DEFINED";
9848:out/quex_scan.cpp ****    static const char  token_id_str_PP_ELIF[]            = "PP_ELIF";
9849:out/quex_scan.cpp ****    static const char  token_id_str_PP_ELSE[]            = "PP_ELSE";
9850:out/quex_scan.cpp ****    static const char  token_id_str_PP_ENDIF[]           = "PP_ENDIF";
9851:out/quex_scan.cpp ****    static const char  token_id_str_PP_ERROR[]           = "PP_ERROR";
9852:out/quex_scan.cpp ****    static const char  token_id_str_PP_IF[]              = "PP_IF";
9853:out/quex_scan.cpp ****    static const char  token_id_str_PP_IFDEF[]           = "PP_IFDEF";
9854:out/quex_scan.cpp ****    static const char  token_id_str_PP_IFNDEF[]          = "PP_IFNDEF";
9855:out/quex_scan.cpp ****    static const char  token_id_str_PP_INCLUDE[]         = "PP_INCLUDE";
9856:out/quex_scan.cpp ****    static const char  token_id_str_PP_PRAGMA[]          = "PP_PRAGMA";
9857:out/quex_scan.cpp ****    static const char  token_id_str_QUESTION_MARK[]      = "QUESTION_MARK";
9858:out/quex_scan.cpp ****    static const char  token_id_str_QUOTE[]              = "QUOTE";
9859:out/quex_scan.cpp ****    static const char  token_id_str_QUOTED_CHAR[]        = "QUOTED_CHAR";
9860:out/quex_scan.cpp ****    static const char  token_id_str_SEMICOLON[]          = "SEMICOLON";
9861:out/quex_scan.cpp ****    static const char  token_id_str_STRING[]             = "STRING";
9862:out/quex_scan.cpp ****    static const char  token_id_str_STRUCT[]             = "STRUCT";
9863:out/quex_scan.cpp ****    static const char  token_id_str_SWITCH[]             = "SWITCH";
9864:out/quex_scan.cpp ****    static const char  token_id_str_TILDE[]              = "TILDE";
9865:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_CHAR[]          = "TYPE_CHAR";
9866:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_DOUBLE[]        = "TYPE_DOUBLE";
9867:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_FLOAT[]         = "TYPE_FLOAT";
9868:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_INT[]           = "TYPE_INT";
9869:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_LONG[]          = "TYPE_LONG";
9870:out/quex_scan.cpp ****    static const char  token_id_str_TYPE_UNSIGNED[]      = "TYPE_UNSIGNED";
9871:out/quex_scan.cpp ****    static const char  token_id_str_WHILE[]              = "WHILE";
9872:out/quex_scan.cpp ****        
9873:out/quex_scan.cpp **** 
GAS LISTING /tmp/cc23nfB3.s 			page 230


9874:out/quex_scan.cpp ****    /* NOTE: This implementation works only for token id types that are 
9875:out/quex_scan.cpp ****     *       some type of integer or enum. In case an alien type is to
9876:out/quex_scan.cpp ****     *       used, this function needs to be redefined.                  */
9877:out/quex_scan.cpp ****    switch( TokenID ) {
9878:out/quex_scan.cpp ****    default: {
9879:out/quex_scan.cpp ****        __QUEX_STD_sprintf(error_string, "<UNKNOWN TOKEN-ID: %i>", (int)TokenID);
9880:out/quex_scan.cpp ****        return error_string;
9881:out/quex_scan.cpp ****    }
9882:out/quex_scan.cpp ****    case __QUEX_SETTING_TOKEN_ID_TERMINATION:       return termination_string;
9883:out/quex_scan.cpp ****    case __QUEX_SETTING_TOKEN_ID_UNINITIALIZED:     return uninitialized_string;
9884:out/quex_scan.cpp **** #  if defined(QUEX_OPTION_INDENTATION_TRIGGER)
9885:out/quex_scan.cpp ****    case __QUEX_SETTING_TOKEN_ID_INDENT:     return indent_string;
9886:out/quex_scan.cpp ****    case __QUEX_SETTING_TOKEN_ID_DEDENT:     return dedent_string;
9887:out/quex_scan.cpp ****    case __QUEX_SETTING_TOKEN_ID_NODENT:     return nodent_string;
9888:out/quex_scan.cpp **** #  endif
9889:out/quex_scan.cpp ****    case TKN_AMPERSANT:          return token_id_str_AMPERSANT;
9890:out/quex_scan.cpp ****    case TKN_AND:                return token_id_str_AND;
9891:out/quex_scan.cpp ****    case TKN_ASSIGN_DIV:         return token_id_str_ASSIGN_DIV;
9892:out/quex_scan.cpp ****    case TKN_ASSIGN_MINUS:       return token_id_str_ASSIGN_MINUS;
9893:out/quex_scan.cpp ****    case TKN_ASSIGN_MULT:        return token_id_str_ASSIGN_MULT;
9894:out/quex_scan.cpp ****    case TKN_ASSIGN_PLUS:        return token_id_str_ASSIGN_PLUS;
9895:out/quex_scan.cpp ****    case TKN_BACKLASHED_NEWLINE: return token_id_str_BACKLASHED_NEWLINE;
9896:out/quex_scan.cpp ****    case TKN_BRACKET_C:          return token_id_str_BRACKET_C;
9897:out/quex_scan.cpp ****    case TKN_BRACKET_O:          return token_id_str_BRACKET_O;
9898:out/quex_scan.cpp ****    case TKN_BREAK:              return token_id_str_BREAK;
9899:out/quex_scan.cpp ****    case TKN_CATCH:              return token_id_str_CATCH;
9900:out/quex_scan.cpp ****    case TKN_CLASS:              return token_id_str_CLASS;
9901:out/quex_scan.cpp ****    case TKN_COLON:              return token_id_str_COLON;
9902:out/quex_scan.cpp ****    case TKN_COMMA:              return token_id_str_COMMA;
9903:out/quex_scan.cpp ****    case TKN_COMMENT:            return token_id_str_COMMENT;
9904:out/quex_scan.cpp ****    case TKN_CONST:              return token_id_str_CONST;
9905:out/quex_scan.cpp ****    case TKN_CONTINUE:           return token_id_str_CONTINUE;
9906:out/quex_scan.cpp ****    case TKN_CORNER_BRACKET_C:   return token_id_str_CORNER_BRACKET_C;
9907:out/quex_scan.cpp ****    case TKN_CORNER_BRACKET_O:   return token_id_str_CORNER_BRACKET_O;
9908:out/quex_scan.cpp ****    case TKN_CURLY_BRACKET_C:    return token_id_str_CURLY_BRACKET_C;
9909:out/quex_scan.cpp ****    case TKN_CURLY_BRACKET_O:    return token_id_str_CURLY_BRACKET_O;
9910:out/quex_scan.cpp ****    case TKN_DIV:                return token_id_str_DIV;
9911:out/quex_scan.cpp ****    case TKN_DO:                 return token_id_str_DO;
9912:out/quex_scan.cpp ****    case TKN_DOT:                return token_id_str_DOT;
9913:out/quex_scan.cpp ****    case TKN_DOUBLE_COLON:       return token_id_str_DOUBLE_COLON;
9914:out/quex_scan.cpp ****    case TKN_DOUBLE_HASH:        return token_id_str_DOUBLE_HASH;
9915:out/quex_scan.cpp ****    case TKN_ELSE:               return token_id_str_ELSE;
9916:out/quex_scan.cpp ****    case TKN_EQ:                 return token_id_str_EQ;
9917:out/quex_scan.cpp ****    case TKN_EXCLUSIVE_OR:       return token_id_str_EXCLUSIVE_OR;
9918:out/quex_scan.cpp ****    case TKN_FOR:                return token_id_str_FOR;
9919:out/quex_scan.cpp ****    case TKN_GREATER:            return token_id_str_GREATER;
9920:out/quex_scan.cpp ****    case TKN_GR_EQ:              return token_id_str_GR_EQ;
9921:out/quex_scan.cpp ****    case TKN_HASH:               return token_id_str_HASH;
9922:out/quex_scan.cpp ****    case TKN_IDENTIFIER:         return token_id_str_IDENTIFIER;
9923:out/quex_scan.cpp ****    case TKN_IF:                 return token_id_str_IF;
9924:out/quex_scan.cpp ****    case TKN_LESS:               return token_id_str_LESS;
9925:out/quex_scan.cpp ****    case TKN_LE_EQ:              return token_id_str_LE_EQ;
9926:out/quex_scan.cpp ****    case TKN_LOGICAL_OR:         return token_id_str_LOGICAL_OR;
9927:out/quex_scan.cpp ****    case TKN_MINUS:              return token_id_str_MINUS;
9928:out/quex_scan.cpp ****    case TKN_MODULO:             return token_id_str_MODULO;
9929:out/quex_scan.cpp ****    case TKN_MULT:               return token_id_str_MULT;
9930:out/quex_scan.cpp ****    case TKN_NOT:                return token_id_str_NOT;
GAS LISTING /tmp/cc23nfB3.s 			page 231


9931:out/quex_scan.cpp ****    case TKN_NOT_EQ:             return token_id_str_NOT_EQ;
9932:out/quex_scan.cpp ****    case TKN_NUMBER:             return token_id_str_NUMBER;
9933:out/quex_scan.cpp ****    case TKN_OP_ASSIGNMENT:      return token_id_str_OP_ASSIGNMENT;
9934:out/quex_scan.cpp ****    case TKN_OR:                 return token_id_str_OR;
9935:out/quex_scan.cpp ****    case TKN_PLUS:               return token_id_str_PLUS;
9936:out/quex_scan.cpp ****    case TKN_PP_DEFINE:          return token_id_str_PP_DEFINE;
9937:out/quex_scan.cpp ****    case TKN_PP_DEFINED:         return token_id_str_PP_DEFINED;
9938:out/quex_scan.cpp ****    case TKN_PP_ELIF:            return token_id_str_PP_ELIF;
9939:out/quex_scan.cpp ****    case TKN_PP_ELSE:            return token_id_str_PP_ELSE;
9940:out/quex_scan.cpp ****    case TKN_PP_ENDIF:           return token_id_str_PP_ENDIF;
9941:out/quex_scan.cpp ****    case TKN_PP_ERROR:           return token_id_str_PP_ERROR;
9942:out/quex_scan.cpp ****    case TKN_PP_IF:              return token_id_str_PP_IF;
9943:out/quex_scan.cpp ****    case TKN_PP_IFDEF:           return token_id_str_PP_IFDEF;
9944:out/quex_scan.cpp ****    case TKN_PP_IFNDEF:          return token_id_str_PP_IFNDEF;
9945:out/quex_scan.cpp ****    case TKN_PP_INCLUDE:         return token_id_str_PP_INCLUDE;
9946:out/quex_scan.cpp ****    case TKN_PP_PRAGMA:          return token_id_str_PP_PRAGMA;
9947:out/quex_scan.cpp ****    case TKN_QUESTION_MARK:      return token_id_str_QUESTION_MARK;
9948:out/quex_scan.cpp ****    case TKN_QUOTE:              return token_id_str_QUOTE;
9949:out/quex_scan.cpp ****    case TKN_QUOTED_CHAR:        return token_id_str_QUOTED_CHAR;
9950:out/quex_scan.cpp ****    case TKN_SEMICOLON:          return token_id_str_SEMICOLON;
9951:out/quex_scan.cpp ****    case TKN_STRING:             return token_id_str_STRING;
9952:out/quex_scan.cpp ****    case TKN_STRUCT:             return token_id_str_STRUCT;
9953:out/quex_scan.cpp ****    case TKN_SWITCH:             return token_id_str_SWITCH;
9954:out/quex_scan.cpp ****    case TKN_TILDE:              return token_id_str_TILDE;
9955:out/quex_scan.cpp ****    case TKN_TYPE_CHAR:          return token_id_str_TYPE_CHAR;
9956:out/quex_scan.cpp ****    case TKN_TYPE_DOUBLE:        return token_id_str_TYPE_DOUBLE;
9957:out/quex_scan.cpp ****    case TKN_TYPE_FLOAT:         return token_id_str_TYPE_FLOAT;
9958:out/quex_scan.cpp ****    case TKN_TYPE_INT:           return token_id_str_TYPE_INT;
9959:out/quex_scan.cpp ****    case TKN_TYPE_LONG:          return token_id_str_TYPE_LONG;
9960:out/quex_scan.cpp ****    case TKN_TYPE_UNSIGNED:      return token_id_str_TYPE_UNSIGNED;
9961:out/quex_scan.cpp ****    case TKN_WHILE:              return token_id_str_WHILE;
9962:out/quex_scan.cpp **** 
9963:out/quex_scan.cpp ****    }
9964:out/quex_scan.cpp **** }
9965:out/quex_scan.cpp **** 
9966:out/quex_scan.cpp **** QUEX_NAMESPACE_TOKEN_CLOSE
 679              		.loc 1 9966 0
 680              		.cfi_startproc
 681              		.cfi_personality 0x0,__gxx_personality_v0
 682 003d 55       		pushl	%ebp
 683              	.LCFI24:
 684              		.cfi_def_cfa_offset 8
 685 003e 89E5     		movl	%esp, %ebp
 686              		.cfi_offset 5, -8
 687              	.LCFI25:
 688              		.cfi_def_cfa_register 5
 689 0040 83EC14   		subl	$20, %esp
 690              	.LBB380:
 691              	.LBB381:
 692              		.file 11 "/usr/include/c++/4.4/iostream"
   1:/usr/include/c++/4.4/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/4.4/iostream **** 
   3:/usr/include/c++/4.4/iostream **** // Copyright (C) 1997, 1998, 1999, 2001, 2002, 2005, 2008, 2009
   4:/usr/include/c++/4.4/iostream **** // Free Software Foundation, Inc.
   5:/usr/include/c++/4.4/iostream **** //
   6:/usr/include/c++/4.4/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   7:/usr/include/c++/4.4/iostream **** // software; you can redistribute it and/or modify it under the
GAS LISTING /tmp/cc23nfB3.s 			page 232


   8:/usr/include/c++/4.4/iostream **** // terms of the GNU General Public License as published by the
   9:/usr/include/c++/4.4/iostream **** // Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/4.4/iostream **** // any later version.
  11:/usr/include/c++/4.4/iostream **** 
  12:/usr/include/c++/4.4/iostream **** // This library is distributed in the hope that it will be useful,
  13:/usr/include/c++/4.4/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/4.4/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/4.4/iostream **** // GNU General Public License for more details.
  16:/usr/include/c++/4.4/iostream **** 
  17:/usr/include/c++/4.4/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/4.4/iostream **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/4.4/iostream **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/4.4/iostream **** 
  21:/usr/include/c++/4.4/iostream **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/4.4/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/4.4/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/4.4/iostream **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/4.4/iostream **** 
  26:/usr/include/c++/4.4/iostream **** /** @file iostream
  27:/usr/include/c++/4.4/iostream ****  *  This is a Standard C++ Library header. 
  28:/usr/include/c++/4.4/iostream ****  */
  29:/usr/include/c++/4.4/iostream **** 
  30:/usr/include/c++/4.4/iostream **** //
  31:/usr/include/c++/4.4/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  32:/usr/include/c++/4.4/iostream **** //
  33:/usr/include/c++/4.4/iostream **** 
  34:/usr/include/c++/4.4/iostream **** #ifndef _GLIBCXX_IOSTREAM
  35:/usr/include/c++/4.4/iostream **** #define _GLIBCXX_IOSTREAM 1
  36:/usr/include/c++/4.4/iostream **** 
  37:/usr/include/c++/4.4/iostream **** #pragma GCC system_header
  38:/usr/include/c++/4.4/iostream **** 
  39:/usr/include/c++/4.4/iostream **** #include <bits/c++config.h>
  40:/usr/include/c++/4.4/iostream **** #include <ostream>
  41:/usr/include/c++/4.4/iostream **** #include <istream>
  42:/usr/include/c++/4.4/iostream **** 
  43:/usr/include/c++/4.4/iostream **** _GLIBCXX_BEGIN_NAMESPACE(std)
  44:/usr/include/c++/4.4/iostream **** 
  45:/usr/include/c++/4.4/iostream ****   /**
  46:/usr/include/c++/4.4/iostream ****    *  @name Standard Stream Objects
  47:/usr/include/c++/4.4/iostream ****    *
  48:/usr/include/c++/4.4/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  49:/usr/include/c++/4.4/iostream ****    *  objects</em>.  For other declarations, see
  50:/usr/include/c++/4.4/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch24.html
  51:/usr/include/c++/4.4/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  52:/usr/include/c++/4.4/iostream ****    *
  53:/usr/include/c++/4.4/iostream ****    *  They are required by default to cooperate with the global C library's
  54:/usr/include/c++/4.4/iostream ****    *  @c FILE streams, and to be available during program startup and
  55:/usr/include/c++/4.4/iostream ****    *  termination.  For more information, see the HOWTO linked to above.
  56:/usr/include/c++/4.4/iostream ****   */
  57:/usr/include/c++/4.4/iostream ****   //@{
  58:/usr/include/c++/4.4/iostream ****   extern istream cin;		///< Linked to standard input
  59:/usr/include/c++/4.4/iostream ****   extern ostream cout;		///< Linked to standard output
  60:/usr/include/c++/4.4/iostream ****   extern ostream cerr;		///< Linked to standard error (unbuffered)
  61:/usr/include/c++/4.4/iostream ****   extern ostream clog;		///< Linked to standard error (buffered)
  62:/usr/include/c++/4.4/iostream **** 
  63:/usr/include/c++/4.4/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  64:/usr/include/c++/4.4/iostream ****   extern wistream wcin;		///< Linked to standard input
GAS LISTING /tmp/cc23nfB3.s 			page 233


  65:/usr/include/c++/4.4/iostream ****   extern wostream wcout;	///< Linked to standard output
  66:/usr/include/c++/4.4/iostream ****   extern wostream wcerr;	///< Linked to standard error (unbuffered)
  67:/usr/include/c++/4.4/iostream ****   extern wostream wclog;	///< Linked to standard error (buffered)
  68:/usr/include/c++/4.4/iostream **** #endif
  69:/usr/include/c++/4.4/iostream ****   //@}
  70:/usr/include/c++/4.4/iostream **** 
  71:/usr/include/c++/4.4/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  72:/usr/include/c++/4.4/iostream ****   static ios_base::Init __ioinit;
 693              		.loc 11 72 0
 694 0043 68250000 		pushl	$_ZStL8__ioinit
 694      00
 695              		.cfi_escape 0x2e,0x10
 696 0048 E8FCFFFF 		call	_ZNSt8ios_base4InitC1Ev
 696      FF
 697 004d 83C40C   		addl	$12, %esp
 698 0050 68000000 		pushl	$__dso_handle
 698      00
 699 0055 68250000 		pushl	$_ZStL8__ioinit
 699      00
 700 005a 68000000 		pushl	$_ZNSt8ios_base4InitD1Ev
 700      00
 701 005f E8FCFFFF 		call	__cxa_atexit
 701      FF
 702 0064 83C410   		addl	$16, %esp
 703              	.LBE381:
 704              	.LBE380:
 705              		.loc 1 9966 0
 706 0067 C9       		leave
 707 0068 C3       		ret
 708              		.cfi_endproc
 709              	.LFE1577:
 711              		.section	.ctors,"aw",@progbits
 712              		.align 4
 713 0000 3D000000 		.long	_GLOBAL__I__ZN4quex17quex_scan_PROGRAME
 714              		.section	.rodata.str1.1,"aMS",@progbits,1
 715              	.LC0:
 716 0000 3C554E4B 		.string	"<UNKNOWN TOKEN-ID: %i>"
 716      4E4F574E 
 716      20544F4B 
 716      454E2D49 
 716      443A2025 
 717              		.text
 718              	.globl _ZN4quex20Token_map_id_to_nameEj
 720              	_ZN4quex20Token_map_id_to_nameEj:
 721              	.LFB1314:
9790:out/quex_scan.cpp **** {
 722              		.loc 1 9790 0
 723              		.cfi_startproc
 724              		.cfi_personality 0x0,__gxx_personality_v0
 725              	.LVL26:
 726 0069 55       		pushl	%ebp
 727              	.LCFI26:
 728              		.cfi_def_cfa_offset 8
 729 006a 89E5     		movl	%esp, %ebp
 730              		.cfi_offset 5, -8
 731              	.LCFI27:
 732              		.cfi_def_cfa_register 5
GAS LISTING /tmp/cc23nfB3.s 			page 234


 733 006c 83EC08   		subl	$8, %esp
9790:out/quex_scan.cpp **** {
 734              		.loc 1 9790 0
 735 006f 8B4508   		movl	8(%ebp), %eax
 736              	.LBB382:
9877:out/quex_scan.cpp ****    switch( TokenID ) {
 737              		.loc 1 9877 0
 738 0072 83F84B   		cmpl	$75, %eax
 739 0075 771B     		ja	.L43
 740              	.LVL27:
 741 0077 FF248500 		jmp	*.L119(,%eax,4)
 741      000000
 742              		.section	.rodata
 743              		.align 4
 744              		.align 4
 745              	.L119:
 746 0000 88000000 		.long	.L44
 747 0004 7E000000 		.long	.L45
 748 0008 92000000 		.long	.L43
 749 000c B6000000 		.long	.L46
 750 0010 C0000000 		.long	.L47
 751 0014 CA000000 		.long	.L48
 752 0018 D4000000 		.long	.L49
 753 001c DE000000 		.long	.L50
 754 0020 E8000000 		.long	.L51
 755 0024 F2000000 		.long	.L52
 756 0028 FC000000 		.long	.L53
 757 002c 06010000 		.long	.L54
 758 0030 10010000 		.long	.L55
 759 0034 1A010000 		.long	.L56
 760 0038 24010000 		.long	.L57
 761 003c 2E010000 		.long	.L58
 762 0040 38010000 		.long	.L59
 763 0044 42010000 		.long	.L60
 764 0048 4C010000 		.long	.L61
 765 004c 56010000 		.long	.L62
 766 0050 60010000 		.long	.L63
 767 0054 6A010000 		.long	.L64
 768 0058 74010000 		.long	.L65
 769 005c 7E010000 		.long	.L66
 770 0060 88010000 		.long	.L67
 771 0064 92010000 		.long	.L68
 772 0068 9C010000 		.long	.L69
 773 006c A6010000 		.long	.L70
 774 0070 B0010000 		.long	.L71
 775 0074 BA010000 		.long	.L72
 776 0078 C4010000 		.long	.L73
 777 007c CE010000 		.long	.L74
 778 0080 D8010000 		.long	.L75
 779 0084 E2010000 		.long	.L76
 780 0088 EC010000 		.long	.L77
 781 008c F6010000 		.long	.L78
 782 0090 00020000 		.long	.L79
 783 0094 0A020000 		.long	.L80
 784 0098 14020000 		.long	.L81
 785 009c 1E020000 		.long	.L82
 786 00a0 28020000 		.long	.L83
GAS LISTING /tmp/cc23nfB3.s 			page 235


 787 00a4 32020000 		.long	.L84
 788 00a8 3C020000 		.long	.L85
 789 00ac 46020000 		.long	.L86
 790 00b0 50020000 		.long	.L87
 791 00b4 5A020000 		.long	.L88
 792 00b8 64020000 		.long	.L89
 793 00bc 6E020000 		.long	.L90
 794 00c0 78020000 		.long	.L91
 795 00c4 82020000 		.long	.L92
 796 00c8 8C020000 		.long	.L93
 797 00cc 96020000 		.long	.L94
 798 00d0 A0020000 		.long	.L95
 799 00d4 AA020000 		.long	.L96
 800 00d8 B4020000 		.long	.L97
 801 00dc BE020000 		.long	.L98
 802 00e0 C8020000 		.long	.L99
 803 00e4 D2020000 		.long	.L100
 804 00e8 D9020000 		.long	.L101
 805 00ec E0020000 		.long	.L102
 806 00f0 E7020000 		.long	.L103
 807 00f4 EE020000 		.long	.L104
 808 00f8 F5020000 		.long	.L105
 809 00fc FC020000 		.long	.L106
 810 0100 03030000 		.long	.L107
 811 0104 0A030000 		.long	.L108
 812 0108 11030000 		.long	.L109
 813 010c 18030000 		.long	.L110
 814 0110 1F030000 		.long	.L111
 815 0114 26030000 		.long	.L112
 816 0118 2D030000 		.long	.L113
 817 011c 34030000 		.long	.L114
 818 0120 3B030000 		.long	.L115
 819 0124 42030000 		.long	.L116
 820 0128 49030000 		.long	.L117
 821 012c 50030000 		.long	.L118
 822              		.text
 823              	.L45:
 824 007e B81C0600 		movl	$_ZZN4quex20Token_map_id_to_nameEjE20uninitialized_string, %eax
 824      00
 825              	.LVL28:
 826 0083 E9CD0200 		jmp	.L120
 826      00
 827              	.LVL29:
 828              	.L44:
 829 0088 B80C0600 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18termination_string, %eax
 829      00
 830              	.LVL30:
 831 008d E9C30200 		jmp	.L120
 831      00
 832              	.LVL31:
 833              	.L43:
 834              	.LBB383:
 835              	.LBB384:
 836              		.file 12 "/usr/include/bits/stdio2.h"
   1:/usr/include/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/bits/stdio2.h ****    Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
   3:/usr/include/bits/stdio2.h ****    This file is part of the GNU C Library.
GAS LISTING /tmp/cc23nfB3.s 			page 236


   4:/usr/include/bits/stdio2.h **** 
   5:/usr/include/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/bits/stdio2.h **** 
  10:/usr/include/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/bits/stdio2.h **** 
  15:/usr/include/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/bits/stdio2.h ****    License along with the GNU C Library; if not, write to the Free
  17:/usr/include/bits/stdio2.h ****    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
  18:/usr/include/bits/stdio2.h ****    02111-1307 USA.  */
  19:/usr/include/bits/stdio2.h **** 
  20:/usr/include/bits/stdio2.h **** #ifndef _STDIO_H
  21:/usr/include/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  22:/usr/include/bits/stdio2.h **** #endif
  23:/usr/include/bits/stdio2.h **** 
  24:/usr/include/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  25:/usr/include/bits/stdio2.h **** 			  __const char *__restrict __format, ...) __THROW;
  26:/usr/include/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/bits/stdio2.h **** 			   __const char *__restrict __format,
  28:/usr/include/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  29:/usr/include/bits/stdio2.h **** 
  30:/usr/include/bits/stdio2.h **** #ifdef __va_arg_pack
  31:/usr/include/bits/stdio2.h **** __extern_always_inline int
  32:/usr/include/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, __const char *__restrict __fmt, ...))
  33:/usr/include/bits/stdio2.h **** {
  34:/usr/include/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  35:/usr/include/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
 837              		.loc 12 35 0
 838 0092 83EC0C   		subl	$12, %esp
 839 0095 50       		pushl	%eax
 840 0096 68000000 		pushl	$.LC0
 840      00
 841 009b 6A40     		pushl	$64
 842 009d 6A01     		pushl	$1
 843 009f 68280000 		pushl	$_ZZN4quex20Token_map_id_to_nameEjE12error_string
 843      00
 844              		.cfi_escape 0x2e,0x20
 845 00a4 E8FCFFFF 		call	__sprintf_chk
 845      FF
 846              	.LVL32:
 847 00a9 B8280000 		movl	$_ZZN4quex20Token_map_id_to_nameEjE12error_string, %eax
 847      00
 848              	.LBE384:
 849              	.LBE383:
9880:out/quex_scan.cpp ****        return error_string;
 850              		.loc 1 9880 0
 851 00ae 83C420   		addl	$32, %esp
 852 00b1 E99F0200 		jmp	.L120
 852      00
 853              	.LVL33:
 854              	.L46:
 855 00b6 B8000600 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_AMPERSANT, %eax
GAS LISTING /tmp/cc23nfB3.s 			page 237


 855      00
 856              	.LVL34:
9889:out/quex_scan.cpp ****    case TKN_AMPERSANT:          return token_id_str_AMPERSANT;
 857              		.loc 1 9889 0
 858 00bb E9950200 		jmp	.L120
 858      00
 859              	.LVL35:
 860              	.L47:
 861 00c0 B8FC0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_AND, %eax
 861      00
 862              	.LVL36:
9890:out/quex_scan.cpp ****    case TKN_AND:                return token_id_str_AND;
 863              		.loc 1 9890 0
 864 00c5 E98B0200 		jmp	.L120
 864      00
 865              	.LVL37:
 866              	.L48:
 867 00ca B8F00500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_ASSIGN_DIV, %eax
 867      00
 868              	.LVL38:
9891:out/quex_scan.cpp ****    case TKN_ASSIGN_DIV:         return token_id_str_ASSIGN_DIV;
 869              		.loc 1 9891 0
 870 00cf E9810200 		jmp	.L120
 870      00
 871              	.LVL39:
 872              	.L49:
 873 00d4 B8E00500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_ASSIGN_MINUS, %eax
 873      00
 874              	.LVL40:
9892:out/quex_scan.cpp ****    case TKN_ASSIGN_MINUS:       return token_id_str_ASSIGN_MINUS;
 875              		.loc 1 9892 0
 876 00d9 E9770200 		jmp	.L120
 876      00
 877              	.LVL41:
 878              	.L50:
 879 00de B8D40500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_MULT, %eax
 879      00
 880              	.LVL42:
9893:out/quex_scan.cpp ****    case TKN_ASSIGN_MULT:        return token_id_str_ASSIGN_MULT;
 881              		.loc 1 9893 0
 882 00e3 E96D0200 		jmp	.L120
 882      00
 883              	.LVL43:
 884              	.L51:
 885 00e8 B8C80500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_PLUS, %eax
 885      00
 886              	.LVL44:
9894:out/quex_scan.cpp ****    case TKN_ASSIGN_PLUS:        return token_id_str_ASSIGN_PLUS;
 887              		.loc 1 9894 0
 888 00ed E9630200 		jmp	.L120
 888      00
 889              	.LVL45:
 890              	.L52:
 891 00f2 B8B40500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE31token_id_str_BACKLASHED_NEWLINE, %eax
 891      00
 892              	.LVL46:
9895:out/quex_scan.cpp ****    case TKN_BACKLASHED_NEWLINE: return token_id_str_BACKLASHED_NEWLINE;
GAS LISTING /tmp/cc23nfB3.s 			page 238


 893              		.loc 1 9895 0
 894 00f7 E9590200 		jmp	.L120
 894      00
 895              	.LVL47:
 896              	.L53:
 897 00fc B8A80500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_C, %eax
 897      00
 898              	.LVL48:
9896:out/quex_scan.cpp ****    case TKN_BRACKET_C:          return token_id_str_BRACKET_C;
 899              		.loc 1 9896 0
 900 0101 E94F0200 		jmp	.L120
 900      00
 901              	.LVL49:
 902              	.L54:
 903 0106 B89C0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_O, %eax
 903      00
 904              	.LVL50:
9897:out/quex_scan.cpp ****    case TKN_BRACKET_O:          return token_id_str_BRACKET_O;
 905              		.loc 1 9897 0
 906 010b E9450200 		jmp	.L120
 906      00
 907              	.LVL51:
 908              	.L55:
 909 0110 B8940500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_BREAK, %eax
 909      00
 910              	.LVL52:
9898:out/quex_scan.cpp ****    case TKN_BREAK:              return token_id_str_BREAK;
 911              		.loc 1 9898 0
 912 0115 E93B0200 		jmp	.L120
 912      00
 913              	.LVL53:
 914              	.L56:
 915 011a B88C0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CATCH, %eax
 915      00
 916              	.LVL54:
9899:out/quex_scan.cpp ****    case TKN_CATCH:              return token_id_str_CATCH;
 917              		.loc 1 9899 0
 918 011f E9310200 		jmp	.L120
 918      00
 919              	.LVL55:
 920              	.L57:
 921 0124 B8840500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CLASS, %eax
 921      00
 922              	.LVL56:
9900:out/quex_scan.cpp ****    case TKN_CLASS:              return token_id_str_CLASS;
 923              		.loc 1 9900 0
 924 0129 E9270200 		jmp	.L120
 924      00
 925              	.LVL57:
 926              	.L58:
 927 012e B87C0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COLON, %eax
 927      00
 928              	.LVL58:
9901:out/quex_scan.cpp ****    case TKN_COLON:              return token_id_str_COLON;
 929              		.loc 1 9901 0
 930 0133 E91D0200 		jmp	.L120
 930      00
GAS LISTING /tmp/cc23nfB3.s 			page 239


 931              	.LVL59:
 932              	.L59:
 933 0138 B8740500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COMMA, %eax
 933      00
 934              	.LVL60:
9902:out/quex_scan.cpp ****    case TKN_COMMA:              return token_id_str_COMMA;
 935              		.loc 1 9902 0
 936 013d E9130200 		jmp	.L120
 936      00
 937              	.LVL61:
 938              	.L60:
 939 0142 B86C0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_COMMENT, %eax
 939      00
 940              	.LVL62:
9903:out/quex_scan.cpp ****    case TKN_COMMENT:            return token_id_str_COMMENT;
 941              		.loc 1 9903 0
 942 0147 E9090200 		jmp	.L120
 942      00
 943              	.LVL63:
 944              	.L61:
 945 014c B8640500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CONST, %eax
 945      00
 946              	.LVL64:
9904:out/quex_scan.cpp ****    case TKN_CONST:              return token_id_str_CONST;
 947              		.loc 1 9904 0
 948 0151 E9FF0100 		jmp	.L120
 948      00
 949              	.LVL65:
 950              	.L62:
 951 0156 B8580500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_CONTINUE, %eax
 951      00
 952              	.LVL66:
9905:out/quex_scan.cpp ****    case TKN_CONTINUE:           return token_id_str_CONTINUE;
 953              		.loc 1 9905 0
 954 015b E9F50100 		jmp	.L120
 954      00
 955              	.LVL67:
 956              	.L63:
 957 0160 B8440500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_C, %eax
 957      00
 958              	.LVL68:
9906:out/quex_scan.cpp ****    case TKN_CORNER_BRACKET_C:   return token_id_str_CORNER_BRACKET_C;
 959              		.loc 1 9906 0
 960 0165 E9EB0100 		jmp	.L120
 960      00
 961              	.LVL69:
 962              	.L64:
 963 016a B8300500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_O, %eax
 963      00
 964              	.LVL70:
9907:out/quex_scan.cpp ****    case TKN_CORNER_BRACKET_O:   return token_id_str_CORNER_BRACKET_O;
 965              		.loc 1 9907 0
 966 016f E9E10100 		jmp	.L120
 966      00
 967              	.LVL71:
 968              	.L65:
 969 0174 B8200500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_C, %eax
GAS LISTING /tmp/cc23nfB3.s 			page 240


 969      00
 970              	.LVL72:
9908:out/quex_scan.cpp ****    case TKN_CURLY_BRACKET_C:    return token_id_str_CURLY_BRACKET_C;
 971              		.loc 1 9908 0
 972 0179 E9D70100 		jmp	.L120
 972      00
 973              	.LVL73:
 974              	.L66:
 975 017e B8100500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_O, %eax
 975      00
 976              	.LVL74:
9909:out/quex_scan.cpp ****    case TKN_CURLY_BRACKET_O:    return token_id_str_CURLY_BRACKET_O;
 977              		.loc 1 9909 0
 978 0183 E9CD0100 		jmp	.L120
 978      00
 979              	.LVL75:
 980              	.L67:
 981 0188 B80C0500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DIV, %eax
 981      00
 982              	.LVL76:
9910:out/quex_scan.cpp ****    case TKN_DIV:                return token_id_str_DIV;
 983              		.loc 1 9910 0
 984 018d E9C30100 		jmp	.L120
 984      00
 985              	.LVL77:
 986              	.L68:
 987 0192 B8080500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_DO, %eax
 987      00
 988              	.LVL78:
9911:out/quex_scan.cpp ****    case TKN_DO:                 return token_id_str_DO;
 989              		.loc 1 9911 0
 990 0197 E9B90100 		jmp	.L120
 990      00
 991              	.LVL79:
 992              	.L69:
 993 019c B8040500 		movl	$_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DOT, %eax
 993      00
 994              	.LVL80:
9912:out/quex_scan.cpp ****    case TKN_DOT:                return token_id_str_DOT;
 995              		.loc 1 9912 0
 996 01a1 E9AF0100 		jmp	.L120
 996      00
 997              	.LVL81:
 998              	.L70:
 999 01a6 B8F40400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_DOUBLE_COLON, %eax
 999      00
 1000              	.LVL82:
9913:out/quex_scan.cpp ****    case TKN_DOUBLE_COLON:       return token_id_str_DOUBLE_COLON;
 1001              		.loc 1 9913 0
 1002 01ab E9A50100 		jmp	.L120
 1002      00
 1003              	.LVL83:
 1004              	.L71:
 1005 01b0 B8E80400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_DOUBLE_HASH, %eax
 1005      00
 1006              	.LVL84:
9914:out/quex_scan.cpp ****    case TKN_DOUBLE_HASH:        return token_id_str_DOUBLE_HASH;
GAS LISTING /tmp/cc23nfB3.s 			page 241


 1007              		.loc 1 9914 0
 1008 01b5 E99B0100 		jmp	.L120
 1008      00
 1009              	.LVL85:
 1010              	.L72:
 1011 01ba B8E00400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_ELSE, %eax
 1011      00
 1012              	.LVL86:
9915:out/quex_scan.cpp ****    case TKN_ELSE:               return token_id_str_ELSE;
 1013              		.loc 1 9915 0
 1014 01bf E9910100 		jmp	.L120
 1014      00
 1015              	.LVL87:
 1016              	.L73:
 1017 01c4 B8DD0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_EQ, %eax
 1017      00
 1018              	.LVL88:
9916:out/quex_scan.cpp ****    case TKN_EQ:                 return token_id_str_EQ;
 1019              		.loc 1 9916 0
 1020 01c9 E9870100 		jmp	.L120
 1020      00
 1021              	.LVL89:
 1022              	.L74:
 1023 01ce B8D00400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_EXCLUSIVE_OR, %eax
 1023      00
 1024              	.LVL90:
9917:out/quex_scan.cpp ****    case TKN_EXCLUSIVE_OR:       return token_id_str_EXCLUSIVE_OR;
 1025              		.loc 1 9917 0
 1026 01d3 E97D0100 		jmp	.L120
 1026      00
 1027              	.LVL91:
 1028              	.L75:
 1029 01d8 B8CC0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_FOR, %eax
 1029      00
 1030              	.LVL92:
9918:out/quex_scan.cpp ****    case TKN_FOR:                return token_id_str_FOR;
 1031              		.loc 1 9918 0
 1032 01dd E9730100 		jmp	.L120
 1032      00
 1033              	.LVL93:
 1034              	.L76:
 1035 01e2 B8C40400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_GREATER, %eax
 1035      00
 1036              	.LVL94:
9919:out/quex_scan.cpp ****    case TKN_GREATER:            return token_id_str_GREATER;
 1037              		.loc 1 9919 0
 1038 01e7 E9690100 		jmp	.L120
 1038      00
 1039              	.LVL95:
 1040              	.L77:
 1041 01ec B8BC0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_GR_EQ, %eax
 1041      00
 1042              	.LVL96:
9920:out/quex_scan.cpp ****    case TKN_GR_EQ:              return token_id_str_GR_EQ;
 1043              		.loc 1 9920 0
 1044 01f1 E95F0100 		jmp	.L120
 1044      00
GAS LISTING /tmp/cc23nfB3.s 			page 242


 1045              	.LVL97:
 1046              	.L78:
 1047 01f6 B8B40400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_HASH, %eax
 1047      00
 1048              	.LVL98:
9921:out/quex_scan.cpp ****    case TKN_HASH:               return token_id_str_HASH;
 1049              		.loc 1 9921 0
 1050 01fb E9550100 		jmp	.L120
 1050      00
 1051              	.LVL99:
 1052              	.L79:
 1053 0200 B8A80400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_IDENTIFIER, %eax
 1053      00
 1054              	.LVL100:
9922:out/quex_scan.cpp ****    case TKN_IDENTIFIER:         return token_id_str_IDENTIFIER;
 1055              		.loc 1 9922 0
 1056 0205 E94B0100 		jmp	.L120
 1056      00
 1057              	.LVL101:
 1058              	.L80:
 1059 020a B8A50400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_IF, %eax
 1059      00
 1060              	.LVL102:
9923:out/quex_scan.cpp ****    case TKN_IF:                 return token_id_str_IF;
 1061              		.loc 1 9923 0
 1062 020f E9410100 		jmp	.L120
 1062      00
 1063              	.LVL103:
 1064              	.L81:
 1065 0214 B8A00400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_LESS, %eax
 1065      00
 1066              	.LVL104:
9924:out/quex_scan.cpp ****    case TKN_LESS:               return token_id_str_LESS;
 1067              		.loc 1 9924 0
 1068 0219 E9370100 		jmp	.L120
 1068      00
 1069              	.LVL105:
 1070              	.L82:
 1071 021e B8980400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_LE_EQ, %eax
 1071      00
 1072              	.LVL106:
9925:out/quex_scan.cpp ****    case TKN_LE_EQ:              return token_id_str_LE_EQ;
 1073              		.loc 1 9925 0
 1074 0223 E92D0100 		jmp	.L120
 1074      00
 1075              	.LVL107:
 1076              	.L83:
 1077 0228 B88C0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_LOGICAL_OR, %eax
 1077      00
 1078              	.LVL108:
9926:out/quex_scan.cpp ****    case TKN_LOGICAL_OR:         return token_id_str_LOGICAL_OR;
 1079              		.loc 1 9926 0
 1080 022d E9230100 		jmp	.L120
 1080      00
 1081              	.LVL109:
 1082              	.L84:
 1083 0232 B8840400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_MINUS, %eax
GAS LISTING /tmp/cc23nfB3.s 			page 243


 1083      00
 1084              	.LVL110:
9927:out/quex_scan.cpp ****    case TKN_MINUS:              return token_id_str_MINUS;
 1085              		.loc 1 9927 0
 1086 0237 E9190100 		jmp	.L120
 1086      00
 1087              	.LVL111:
 1088              	.L85:
 1089 023c B87C0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_MODULO, %eax
 1089      00
 1090              	.LVL112:
9928:out/quex_scan.cpp ****    case TKN_MODULO:             return token_id_str_MODULO;
 1091              		.loc 1 9928 0
 1092 0241 E90F0100 		jmp	.L120
 1092      00
 1093              	.LVL113:
 1094              	.L86:
 1095 0246 B8740400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_MULT, %eax
 1095      00
 1096              	.LVL114:
9929:out/quex_scan.cpp ****    case TKN_MULT:               return token_id_str_MULT;
 1097              		.loc 1 9929 0
 1098 024b E9050100 		jmp	.L120
 1098      00
 1099              	.LVL115:
 1100              	.L87:
 1101 0250 B8700400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_NOT, %eax
 1101      00
 1102              	.LVL116:
9930:out/quex_scan.cpp ****    case TKN_NOT:                return token_id_str_NOT;
 1103              		.loc 1 9930 0
 1104 0255 E9FB0000 		jmp	.L120
 1104      00
 1105              	.LVL117:
 1106              	.L88:
 1107 025a B8680400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NOT_EQ, %eax
 1107      00
 1108              	.LVL118:
9931:out/quex_scan.cpp ****    case TKN_NOT_EQ:             return token_id_str_NOT_EQ;
 1109              		.loc 1 9931 0
 1110 025f E9F10000 		jmp	.L120
 1110      00
 1111              	.LVL119:
 1112              	.L89:
 1113 0264 B8600400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NUMBER, %eax
 1113      00
 1114              	.LVL120:
9932:out/quex_scan.cpp ****    case TKN_NUMBER:             return token_id_str_NUMBER;
 1115              		.loc 1 9932 0
 1116 0269 E9E70000 		jmp	.L120
 1116      00
 1117              	.LVL121:
 1118              	.L90:
 1119 026e B8500400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_OP_ASSIGNMENT, %eax
 1119      00
 1120              	.LVL122:
9933:out/quex_scan.cpp ****    case TKN_OP_ASSIGNMENT:      return token_id_str_OP_ASSIGNMENT;
GAS LISTING /tmp/cc23nfB3.s 			page 244


 1121              		.loc 1 9933 0
 1122 0273 E9DD0000 		jmp	.L120
 1122      00
 1123              	.LVL123:
 1124              	.L91:
 1125 0278 B84D0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_OR, %eax
 1125      00
 1126              	.LVL124:
9934:out/quex_scan.cpp ****    case TKN_OR:                 return token_id_str_OR;
 1127              		.loc 1 9934 0
 1128 027d E9D30000 		jmp	.L120
 1128      00
 1129              	.LVL125:
 1130              	.L92:
 1131 0282 B8480400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_PLUS, %eax
 1131      00
 1132              	.LVL126:
9935:out/quex_scan.cpp ****    case TKN_PLUS:               return token_id_str_PLUS;
 1133              		.loc 1 9935 0
 1134 0287 E9C90000 		jmp	.L120
 1134      00
 1135              	.LVL127:
 1136              	.L93:
 1137 028c B83C0400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_DEFINE, %eax
 1137      00
 1138              	.LVL128:
9936:out/quex_scan.cpp ****    case TKN_PP_DEFINE:          return token_id_str_PP_DEFINE;
 1139              		.loc 1 9936 0
 1140 0291 E9BF0000 		jmp	.L120
 1140      00
 1141              	.LVL129:
 1142              	.L94:
 1143 0296 B8300400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_DEFINED, %eax
 1143      00
 1144              	.LVL130:
9937:out/quex_scan.cpp ****    case TKN_PP_DEFINED:         return token_id_str_PP_DEFINED;
 1145              		.loc 1 9937 0
 1146 029b E9B50000 		jmp	.L120
 1146      00
 1147              	.LVL131:
 1148              	.L95:
 1149 02a0 B8280400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELIF, %eax
 1149      00
 1150              	.LVL132:
9938:out/quex_scan.cpp ****    case TKN_PP_ELIF:            return token_id_str_PP_ELIF;
 1151              		.loc 1 9938 0
 1152 02a5 E9AB0000 		jmp	.L120
 1152      00
 1153              	.LVL133:
 1154              	.L96:
 1155 02aa B8200400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELSE, %eax
 1155      00
 1156              	.LVL134:
9939:out/quex_scan.cpp ****    case TKN_PP_ELSE:            return token_id_str_PP_ELSE;
 1157              		.loc 1 9939 0
 1158 02af E9A10000 		jmp	.L120
 1158      00
GAS LISTING /tmp/cc23nfB3.s 			page 245


 1159              	.LVL135:
 1160              	.L97:
 1161 02b4 B8140400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ENDIF, %eax
 1161      00
 1162              	.LVL136:
9940:out/quex_scan.cpp ****    case TKN_PP_ENDIF:           return token_id_str_PP_ENDIF;
 1163              		.loc 1 9940 0
 1164 02b9 E9970000 		jmp	.L120
 1164      00
 1165              	.LVL137:
 1166              	.L98:
 1167 02be B8080400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ERROR, %eax
 1167      00
 1168              	.LVL138:
9941:out/quex_scan.cpp ****    case TKN_PP_ERROR:           return token_id_str_PP_ERROR;
 1169              		.loc 1 9941 0
 1170 02c3 E98D0000 		jmp	.L120
 1170      00
 1171              	.LVL139:
 1172              	.L99:
 1173 02c8 B8000400 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_PP_IF, %eax
 1173      00
 1174              	.LVL140:
9942:out/quex_scan.cpp ****    case TKN_PP_IF:              return token_id_str_PP_IF;
 1175              		.loc 1 9942 0
 1176 02cd E9830000 		jmp	.L120
 1176      00
 1177              	.LVL141:
 1178              	.L100:
 1179 02d2 B8F40300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_IFDEF, %eax
 1179      00
 1180              	.LVL142:
9943:out/quex_scan.cpp ****    case TKN_PP_IFDEF:           return token_id_str_PP_IFDEF;
 1181              		.loc 1 9943 0
 1182 02d7 EB7C     		jmp	.L120
 1183              	.LVL143:
 1184              	.L101:
 1185 02d9 B8E80300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_IFNDEF, %eax
 1185      00
 1186              	.LVL144:
9944:out/quex_scan.cpp ****    case TKN_PP_IFNDEF:          return token_id_str_PP_IFNDEF;
 1187              		.loc 1 9944 0
 1188 02de EB75     		jmp	.L120
 1189              	.LVL145:
 1190              	.L102:
 1191 02e0 B8DC0300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_INCLUDE, %eax
 1191      00
 1192              	.LVL146:
9945:out/quex_scan.cpp ****    case TKN_PP_INCLUDE:         return token_id_str_PP_INCLUDE;
 1193              		.loc 1 9945 0
 1194 02e5 EB6E     		jmp	.L120
 1195              	.LVL147:
 1196              	.L103:
 1197 02e7 B8D00300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_PRAGMA, %eax
 1197      00
 1198              	.LVL148:
9946:out/quex_scan.cpp ****    case TKN_PP_PRAGMA:          return token_id_str_PP_PRAGMA;
GAS LISTING /tmp/cc23nfB3.s 			page 246


 1199              		.loc 1 9946 0
 1200 02ec EB67     		jmp	.L120
 1201              	.LVL149:
 1202              	.L104:
 1203 02ee B8C00300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_QUESTION_MARK, %eax
 1203      00
 1204              	.LVL150:
9947:out/quex_scan.cpp ****    case TKN_QUESTION_MARK:      return token_id_str_QUESTION_MARK;
 1205              		.loc 1 9947 0
 1206 02f3 EB60     		jmp	.L120
 1207              	.LVL151:
 1208              	.L105:
 1209 02f5 B8B80300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_QUOTE, %eax
 1209      00
 1210              	.LVL152:
9948:out/quex_scan.cpp ****    case TKN_QUOTE:              return token_id_str_QUOTE;
 1211              		.loc 1 9948 0
 1212 02fa EB59     		jmp	.L120
 1213              	.LVL153:
 1214              	.L106:
 1215 02fc B8AC0300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_QUOTED_CHAR, %eax
 1215      00
 1216              	.LVL154:
9949:out/quex_scan.cpp ****    case TKN_QUOTED_CHAR:        return token_id_str_QUOTED_CHAR;
 1217              		.loc 1 9949 0
 1218 0301 EB52     		jmp	.L120
 1219              	.LVL155:
 1220              	.L107:
 1221 0303 B8A00300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_SEMICOLON, %eax
 1221      00
 1222              	.LVL156:
9950:out/quex_scan.cpp ****    case TKN_SEMICOLON:          return token_id_str_SEMICOLON;
 1223              		.loc 1 9950 0
 1224 0308 EB4B     		jmp	.L120
 1225              	.LVL157:
 1226              	.L108:
 1227 030a B8980300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRING, %eax
 1227      00
 1228              	.LVL158:
9951:out/quex_scan.cpp ****    case TKN_STRING:             return token_id_str_STRING;
 1229              		.loc 1 9951 0
 1230 030f EB44     		jmp	.L120
 1231              	.LVL159:
 1232              	.L109:
 1233 0311 B8900300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRUCT, %eax
 1233      00
 1234              	.LVL160:
9952:out/quex_scan.cpp ****    case TKN_STRUCT:             return token_id_str_STRUCT;
 1235              		.loc 1 9952 0
 1236 0316 EB3D     		jmp	.L120
 1237              	.LVL161:
 1238              	.L110:
 1239 0318 B8880300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_SWITCH, %eax
 1239      00
 1240              	.LVL162:
9953:out/quex_scan.cpp ****    case TKN_SWITCH:             return token_id_str_SWITCH;
 1241              		.loc 1 9953 0
GAS LISTING /tmp/cc23nfB3.s 			page 247


 1242 031d EB36     		jmp	.L120
 1243              	.LVL163:
 1244              	.L111:
 1245 031f B8800300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_TILDE, %eax
 1245      00
 1246              	.LVL164:
9954:out/quex_scan.cpp ****    case TKN_TILDE:              return token_id_str_TILDE;
 1247              		.loc 1 9954 0
 1248 0324 EB2F     		jmp	.L120
 1249              	.LVL165:
 1250              	.L112:
 1251 0326 B8740300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_CHAR, %eax
 1251      00
 1252              	.LVL166:
9955:out/quex_scan.cpp ****    case TKN_TYPE_CHAR:          return token_id_str_TYPE_CHAR;
 1253              		.loc 1 9955 0
 1254 032b EB28     		jmp	.L120
 1255              	.LVL167:
 1256              	.L113:
 1257 032d B8680300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_TYPE_DOUBLE, %eax
 1257      00
 1258              	.LVL168:
9956:out/quex_scan.cpp ****    case TKN_TYPE_DOUBLE:        return token_id_str_TYPE_DOUBLE;
 1259              		.loc 1 9956 0
 1260 0332 EB21     		jmp	.L120
 1261              	.LVL169:
 1262              	.L114:
 1263 0334 B85C0300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_TYPE_FLOAT, %eax
 1263      00
 1264              	.LVL170:
9957:out/quex_scan.cpp ****    case TKN_TYPE_FLOAT:         return token_id_str_TYPE_FLOAT;
 1265              		.loc 1 9957 0
 1266 0339 EB1A     		jmp	.L120
 1267              	.LVL171:
 1268              	.L115:
 1269 033b B8500300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_TYPE_INT, %eax
 1269      00
 1270              	.LVL172:
9958:out/quex_scan.cpp ****    case TKN_TYPE_INT:           return token_id_str_TYPE_INT;
 1271              		.loc 1 9958 0
 1272 0340 EB13     		jmp	.L120
 1273              	.LVL173:
 1274              	.L116:
 1275 0342 B8440300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_LONG, %eax
 1275      00
 1276              	.LVL174:
9959:out/quex_scan.cpp ****    case TKN_TYPE_LONG:          return token_id_str_TYPE_LONG;
 1277              		.loc 1 9959 0
 1278 0347 EB0C     		jmp	.L120
 1279              	.LVL175:
 1280              	.L117:
 1281 0349 B8340300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_TYPE_UNSIGNED, %eax
 1281      00
 1282              	.LVL176:
9960:out/quex_scan.cpp ****    case TKN_TYPE_UNSIGNED:      return token_id_str_TYPE_UNSIGNED;
 1283              		.loc 1 9960 0
 1284 034e EB05     		jmp	.L120
GAS LISTING /tmp/cc23nfB3.s 			page 248


 1285              	.LVL177:
 1286              	.L118:
 1287 0350 B82C0300 		movl	$_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_WHILE, %eax
 1287      00
 1288              	.LVL178:
 1289              	.L120:
 1290              	.LBE382:
9964:out/quex_scan.cpp **** }
 1291              		.loc 1 9964 0
 1292 0355 C9       		leave
 1293 0356 C3       		ret
 1294              		.cfi_endproc
 1295              	.LFE1314:
 1297              		.section	.rodata.str1.1
 1298              	.LC1:
 1299 0017 44697374 		.ascii	"Distance between lexeme start and current pointer exceeds bu"
 1299      616E6365 
 1299      20626574 
 1299      7765656E 
 1299      206C6578 
 1300 0053 66666572 		.ascii	"ffer size.\n(tried to load buffer forward). Please, compile "
 1300      2073697A 
 1300      652E0A28 
 1300      74726965 
 1300      6420746F 
 1301 008e 77697468 		.ascii	"with option\n\n    QUEX_OPTION_INFORM"
 1301      206F7074 
 1301      696F6E0A 
 1301      0A202020 
 1301      20515545 
 1302 00b1 41544956 		.string	"ATIVE_BUFFER_OVERFLOW_MESSAGE\n\nin order to get a more informative output. Most likely, 
 1302      455F4255 
 1302      46464552 
 1302      5F4F5645 
 1302      52464C4F 
 1303              	.LC2:
 1304 01b2 43616C6C 		.string	"Call to 'load_forward() but '_input_p' not on buffer border.\n(Check character encoding)"
 1304      20746F20 
 1304      276C6F61 
 1304      645F666F 
 1304      72776172 
 1305              	.LC3:
 1306 020a 0A546865 		.ascii	"\nThe provided input stream behaves strangely. Number of rea"
 1306      2070726F 
 1306      76696465 
 1306      6420696E 
 1306      70757420 
 1307 0245 640A6368 		.ascii	"d\ncharacters is not proportional to the stream position inc"
 1307      61726163 
 1307      74657273 
 1307      20697320 
 1307      6E6F7420 
 1308 0280 72656173 		.ascii	"rease.\nThe buffer filler type which you are using might be "
 1308      652E0A54 
 1308      68652062 
 1308      75666665 
 1308      72206669 
GAS LISTING /tmp/cc23nfB3.s 			page 249


 1309 02bb 61626C65 		.ascii	"able to\ndeal with those cases. Try compile option"
 1309      20746F0A 
 1309      6465616C 
 1309      20776974 
 1309      68207468 
 1310 02ec 3A0A0A2D 		.string	":\n\n-DQUEX_OPTION_STRANGE_ISTREAM_IMPLEMENTATION\n\nHowever, those mechanisms imply a tr
 1310      44515545 
 1310      585F4F50 
 1310      54494F4E 
 1310      5F535452 
 1311              		.section	.text._ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE,"axG",@progbi
 1312              		.weak	_ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE
 1314              	_ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE:
 1315              	.LFB1267:
 1316              		.file 13 "/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i"
   1:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** /* -*- C++ -*- vim: set syntax=cpp: */
   2:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #ifndef __QUEX_INCLUDE_GUARD__BUFFER__BUFFER_FILLER_I
   3:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #define __QUEX_INCLUDE_GUARD__BUFFER__BUFFER_FILLER_I
   4:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
   5:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #include <quex/code_base/definitions>
   6:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #include <quex/code_base/buffer/Buffer>
   7:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #include <quex/code_base/buffer/BufferFiller>
   8:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #include <quex/code_base/buffer/Buffer_debug>
   9:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  10:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #include <quex/code_base/temporary_macros_on>
  11:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  12:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** QUEX_NAMESPACE_MAIN_OPEN
  13:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  14:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE ptrdiff_t  QUEX_NAME(__BufferFiller_forward_compute_fallback_region)(QUEX_NAME(Buff
  15:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                      const ptrdiff_
  16:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE ptrdiff_t  QUEX_NAME(__BufferFiller_backward_compute_backward_distance)(QUEX_NAME(B
  17:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  18:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       QUEX_NAME(__BufferFiller_forward_copy_fallback_region)(QUEX_NAME(Buffer)
  19:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                   const ptrdiff_t F
  20:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       QUEX_NAME(__BufferFiller_forward_adapt_pointers)(QUEX_NAME(Buffer)*, 
  21:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                             const ptrdiff_t Desired
  22:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                             const size_t    LoadedN
  23:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                             const ptrdiff_t FallBac
  24:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                             const ptrdiff_t Distanc
  25:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       QUEX_NAME(__BufferFiller_backward_copy_backup_region)(QUEX_NAME(Buffer)*
  26:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                  const ptrdiff_t Ba
  27:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       QUEX_NAME(__BufferFiller_backward_adapt_pointers)(QUEX_NAME(Buffer)*, 
  28:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                              const ptrdiff_t Backwa
  29:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       QUEX_NAME(__BufferFiller_on_overflow)(QUEX_NAME(Buffer)*, bool ForwardF)
  30:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                            
  31:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE size_t     QUEX_NAME(__BufferFiller_read_characters)(QUEX_NAME(Buffer)*, QUEX_TYPE_
  32:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                      const ptrdiff_t);
  33:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  34:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #   if defined(__QUEX_OPTION_CONVERTER)
  35:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  36:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE QUEX_NAME(Converter)*   QUEX_NAME(__Converter_EMPTY_new)() { return 0x0; }
  37:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  38:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     TEMPLATE_IN(InputHandleT) QUEX_NAME(BufferFiller)*
  39:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_new)(InputHandleT*  input_handle, 
  40:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                 const char*    CharacterEncodingName,
  41:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                 const size_t   TranslationBufferMemorySize)
  42:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* CharacterEncoding == 0x0: Impossible; Converter requires codec name --> filler = 0x0
GAS LISTING /tmp/cc23nfB3.s 			page 250


  43:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * input_handle      == 0x0: Possible; Converter might be applied on buffer. 
  44:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                           (User writes into translation buffer).                     */
  45:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
  46:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         (void)TranslationBufferMemorySize;
  47:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  48:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( CharacterEncodingName == 0x0 ) {
  49:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #           ifndef QUEX_OPTION_WARNING_ON_PLAIN_FILLER_DISABLED
  50:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_printf("Warning: No character encoding name specified, while this\n" \
  51:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning: analyzer was generated for use with a converter.\n" \
  52:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning: Please, consult the documentation about the constructor\n" 
  53:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning: or the reset function. If it is desired to do a plain\n" \
  54:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning: buffer filler with this setup, you might want to disable\n"
  55:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning: this warning with the macro:\n" \
  56:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                               "Warning:     QUEX_OPTION_WARNING_ON_PLAIN_FILLER_DISABLED\n");
  57:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #           endif
  58:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return (QUEX_NAME(BufferFiller*))0x0;
  59:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         } 
  60:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  61:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW == QUEX_NAME(__Converter_EMPTY_new) ) {
  62:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Use of buffer filler type 'CharacterEncodingName' while " \
  63:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "'QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW' has not\n" \
  64:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "been defined (use --iconv, --icu, --converter-new to specify converter
  65:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
  66:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  67:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* The specification of a CharacterEncodingName means that a converter is
  68:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * to be used. This can also happen if the engine is to work on plain memory.
  69:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * In the latter case the input_handle = 0x0 is passed to the 'new' allocator
  70:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * without the slightest harm.                                                 */
  71:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return (QUEX_NAME(BufferFiller)*)QUEX_NAME(BufferFiller_Converter_new)(input_handle, 
  72:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                QUEX_SETTING_BUFFER_
  73:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                CharacterEncodingNam
  74:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                /* Internal Coding: 
  75:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                TranslationBufferMem
  76:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
  77:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  78:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #   else /* NOT: __QUEX_OPTION_CONVERTER */
  79:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
  80:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     TEMPLATE_IN(InputHandleT) QUEX_NAME(BufferFiller)*
  81:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_new)(InputHandleT*  input_handle, 
  82:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                 const char*    CharacterEncodingName,
  83:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                 const size_t   TranslationBufferMemorySize)
  84:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* CharacterEncoding != 0x0: Not possible, converter required   --> filler = 0x0
  85:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * input_handle      == 0x0: Not possible, data source required --> filler = 0x0 */
  86:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
  87:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         (void)TranslationBufferMemorySize;
  88:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( CharacterEncodingName != 0x0 ) {
  89:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Use of buffer filler type 'CharacterEncodingName' while " \
  90:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "'QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW' has not\n" \
  91:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "been defined (use --iconv, --icu, --converter-new to specify converter
  92:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return (QUEX_NAME(BufferFiller*))0x0;
  93:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         } 
  94:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* If no converter is required, it has to be considered whether the buffer needs
  95:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * filling or not. If the input source is not memory, then the 'plain' buffer
  96:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * filling is applied. If the input source is memory, no filler is required.     */
  97:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( input_handle == 0x0 ) {
  98:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return (QUEX_NAME(BufferFiller*))0x0;
  99:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
GAS LISTING /tmp/cc23nfB3.s 			page 251


 100:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 101:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return (QUEX_NAME(BufferFiller)*)QUEX_NAME(BufferFiller_Plain_new)(input_handle);
 102:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 103:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #   endif
 104:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 105:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void       
 106:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_delete_self)(QUEX_NAME(BufferFiller)* me)
 107:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     { 
 108:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( me->delete_self == 0x0 ) QUEX_ERROR_EXIT("BufferFiller object did not specify 'delete_s
 109:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else                         me->delete_self(me);
 110:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 111:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 112:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 113:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_setup_functions)(QUEX_NAME(BufferFiller)* me,
 114:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                             ptrdiff_t    (*tell_character_index)(QUEX_NAME(BufferFi
 115:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                             void         (*seek_character_index)(QUEX_NAME(BufferFi
 116:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                  const ptrdiff_t),
 117:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                             size_t       (*read_characters)(QUEX_NAME(BufferFiller)
 118:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                             QUEX_TYPE_CHARACTER*, c
 119:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                             void         (*delete_self)(QUEX_NAME(BufferFiller)*))
 120:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 121:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(me != 0x0);
 122:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(tell_character_index != 0x0);
 123:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(seek_character_index != 0x0);
 124:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(read_characters != 0x0);
 125:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(delete_self != 0x0);
 126:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 127:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 128:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->tell_character_index = tell_character_index;
 129:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->seek_character_index = seek_character_index;
 130:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->read_characters      = read_characters;
 131:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->_on_overflow         = 0x0;
 132:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->delete_self          = delete_self;
 133:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 134:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 135:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 136:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_initial_load)(QUEX_NAME(Buffer)* buffer)
 137:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 138:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const ptrdiff_t          ContentSize  = (ptrdiff_t)QUEX_NAME(Buffer_content_size)(buffer);
 139:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*     ContentFront = QUEX_NAME(Buffer_content_front)(buffer);
 140:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(BufferFiller)* me           = buffer->filler;
 141:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         size_t                   LoadedN      = 0;
 142:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 143:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Assume: Buffer initialization happens independently */
 144:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_input_p        == ContentFront);   
 145:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_lexeme_start_p == ContentFront);
 146:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 147:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* end   != 0, means that the buffer is filled.
 148:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * begin == 0, means that we are standing at the begin.
 149:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * => end != 0 and begin == 0, means that the initial content is loaded already.    */
 150:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* if( buffer->_content_character_index_begin == 0 ) {
 151:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     if ( buffer->_content_character_index_end != 0) return;
 152:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *} else {*/
 153:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->seek_character_index(me, 0);
 154:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*} */
 155:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         LoadedN = QUEX_NAME(__BufferFiller_read_characters)(buffer, ContentFront, ContentSize);
 156:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
GAS LISTING /tmp/cc23nfB3.s 			page 252


 157:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = 0; 
 158:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_end   = me->tell_character_index(buffer->filler);
 159:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 160:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( me->tell_character_index(me) != (ptrdiff_t)LoadedN ) 
 161:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT(__QUEX_MESSAGE_BUFFER_FILLER_ON_STRANGE_STREAM); 
 162:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 163:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* If end of file has been reached, then the 'end of file' pointer needs to be set. */
 164:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( LoadedN != (size_t)ContentSize ) QUEX_NAME(Buffer_end_of_file_set)(buffer, ContentFront
 165:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else                                 QUEX_NAME(Buffer_end_of_file_unset)(buffer);
 166:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 167:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(buffer);
 168:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     } 
 169:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 170:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE size_t
 171:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_load_forward)(QUEX_NAME(Buffer)* buffer)
 172:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 1317              		.loc 13 172 0
 1318              		.cfi_startproc
 1319              		.cfi_personality 0x0,__gxx_personality_v0
 1320              		.cfi_lsda 0x0,.LLSDA1267
 1321              	.LVL179:
 1322 0000 55       		pushl	%ebp
 1323              	.LCFI28:
 1324              		.cfi_def_cfa_offset 8
 1325 0001 89E5     		movl	%esp, %ebp
 1326              		.cfi_offset 5, -8
 1327              	.LCFI29:
 1328              		.cfi_def_cfa_register 5
 1329 0003 57       		pushl	%edi
 1330 0004 56       		pushl	%esi
 1331 0005 53       		pushl	%ebx
 1332 0006 83EC3C   		subl	$60, %esp
 1333              		.loc 13 172 0
 1334 0009 8B5D08   		movl	8(%ebp), %ebx
 1335              		.cfi_offset 3, -20
 1336              		.cfi_offset 6, -16
 1337              		.cfi_offset 7, -12
 1338              	.LBB385:
 173:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const ptrdiff_t      ContentSize  = (ptrdiff_t)QUEX_NAME(Buffer_content_size)(buffer);
 174:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER* ContentFront = QUEX_NAME(Buffer_content_front)(buffer);
 175:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t            Distance_LexemeStart_to_InputP = (ptrdiff_t)-1; 
 176:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t            FallBackN         = (ptrdiff_t)-1;
 177:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t            DesiredLoadN      = (ptrdiff_t)-1;
 178:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER* new_content_begin = 0x0;
 179:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         size_t               LoadedN           = (size_t)-1;
 180:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 181:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* PURPOSE: This function is to be called as a reaction to a buffer limit code 'BLC'
 182:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          as returned by 'get_forward()'. Its task is to load new content into the 
 183:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          buffer such that 'get_forward() can continue iterating. This means that the 
 184:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          '_input_p' points to one of the following positions:
 185:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 186:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (1) Beginning of the Buffer: In this case, no reload needs to take place.
 187:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              It can basically only appear if 'load_forward()' is called after
 188:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              'get_backward()'---and this does not make sense. But returning a '0'
 189:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              (which is >= 0 and indicates that everything is ok) tells the application 
 190:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              that nothing has been loaded, and the next 'get_forward()' will work 
 191:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              normally.
GAS LISTING /tmp/cc23nfB3.s 			page 253


 192:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 193:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (2) End of File Pointer: (which may be equal to the end of the buffer) 
 194:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              In this case no further content can be loaded. The function returns '0'.
 195:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 196:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (3) End of Buffer (if it is != End of File Pointer): Here a 'normal' load of
 197:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              new data into the buffer can happen.
 198:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 199:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * RETURNS: '>= 0'   number of characters that were loaded forward in the stream.
 200:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          '-1'     if forward loading was not possible (end of file)                     
 201:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* 
 202:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * NOTE: There is a seemingly dangerous case where the loading **just** fills the buffer to
 203:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       the limit. In this case no 'End Of File' is detected, no end of file pointer is se
 204:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       and as a consequence a new loading will happen later. This new loading, though,
 205:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       will only copy the fallback-region. The 'LoadedN == 0' will cause the _memory._end
 206:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       to be set to the end of the copied fallback-region. And everything is fine.
 207:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          */
 208:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(BufferFiller)*  me = buffer->filler;
 1339              		.loc 13 208 0
 1340 000c 8B4328   		movl	40(%ebx), %eax
 1341              	.LBB386:
 1342              	.LBB387:
 1343              	.LBB388:
 513:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****     { return (size_t)(me->_back - me->_front + 1); }
 1344              		.loc 2 513 0
 1345 000f 8B5304   		movl	4(%ebx), %edx
 1346 0012 8B0B     		movl	(%ebx), %ecx
 1347              	.LBE388:
 1348              	.LBE387:
 1349              	.LBE386:
 209:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( me == 0x0 ) return 0; /* This case it totally rational, if no filler has been specified
 1350              		.loc 13 209 0
 1351 0014 85C0     		testl	%eax, %eax
 208:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(BufferFiller)*  me = buffer->filler;
 1352              		.loc 13 208 0
 1353 0016 8945D4   		movl	%eax, -44(%ebp)
 1354              		.loc 13 209 0
 1355 0019 0F846002 		je	.L123
 1355      0000
 1356              	.LVL180:
 210:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 211:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer != 0x0);
 212:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(me->tell_character_index != 0x0);
 213:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(me->seek_character_index != 0x0);
 214:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(me->read_characters != 0x0);
 215:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 216:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Catch impossible scenario: If the stretch from _input_p to _lexeme_start_p 
 217:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * spans the whole buffer content, then nothing can be loaded into it.                     
 218:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         Distance_LexemeStart_to_InputP = buffer->_input_p - buffer->_lexeme_start_p;
 1357              		.loc 13 218 0
 1358 001f 8B7310   		movl	16(%ebx), %esi
 173:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const ptrdiff_t      ContentSize  = (ptrdiff_t)QUEX_NAME(Buffer_content_size)(buffer);
 1359              		.loc 13 173 0
 1360 0022 89C8     		movl	%ecx, %eax
 1361 0024 F7D0     		notl	%eax
 1362 0026 01D0     		addl	%edx, %eax
 1363 0028 8945C4   		movl	%eax, -60(%ebp)
 1364              		.loc 13 218 0
GAS LISTING /tmp/cc23nfB3.s 			page 254


 1365 002b 89F0     		movl	%esi, %eax
 1366 002d 2B4314   		subl	20(%ebx), %eax
 1367 0030 8945CC   		movl	%eax, -52(%ebp)
 219:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( Distance_LexemeStart_to_InputP >= ContentSize ) { 
 1368              		.loc 13 219 0
 1369 0033 8B45C4   		movl	-60(%ebp), %eax
 1370 0036 3945CC   		cmpl	%eax, -52(%ebp)
 1371 0039 7C7D     		jl	.L124
 1372              	.LBB389:
 1373              	.LBB390:
 220:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_NAME(__BufferFiller_on_overflow)(buffer, /* Forward */ true);
 221:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return 0;
 222:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 223:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_debug_buffer_load(buffer, "FORWARD(entry)\n");
 224:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 225:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) Check for the three possibilities mentioned above */
 226:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if     ( buffer->_input_p == buffer->_memory._front )         { return 0; }   /* (1)*/
 227:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p == buffer->_memory._end_of_file_p ) { return 0; }   /* (2)*/
 228:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p != buffer->_memory._back  ) {                     
 229:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Call to 'load_forward() but '_input_p' not on buffer border.\n" 
 230:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "(Check character encoding)");  
 231:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 232:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_memory._end_of_file_p != 0x0 ) { 
 233:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             /* End of file has been reached before, we cannot load more.                    */
 234:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return 0;                               
 235:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 236:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* HERE: _input_p ---> LAST ELEMENT OF THE BUFFER!                             * (3)*/  
 237:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 238:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 239:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*___________________________________________________________________________________*/
 240:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (1) Handle fallback region */
 241:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         FallBackN    = QUEX_NAME(__BufferFiller_forward_compute_fallback_region)(buffer, 
 242:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                                  Distance_LexemeSta
 243:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(FallBackN < ContentSize);
 244:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         DesiredLoadN = ContentSize - FallBackN;
 245:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 246:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(__BufferFiller_forward_copy_fallback_region)(buffer, FallBackN);
 247:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 248:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*___________________________________________________________________________________*/
 249:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (2) Load new content*/
 250:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* NOTE: Due to backward loading the character index might not stand on the end of
 251:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       the buffer. Thus a seek is necessary.                                       */
 252:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->seek_character_index(me, buffer->_content_character_index_end);
 253:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = buffer->_content_character_index_end - FallBackN;
 254:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 255:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         new_content_begin = ContentFront + FallBackN;
 256:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         LoadedN           =  QUEX_NAME(__BufferFiller_read_characters)(buffer, 
 257:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                        new_content_begin, 
 258:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                                        DesiredLoadN);
 259:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         
 260:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*___________________________________________________________________________________*/
 261:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (3) Adapt the pointers in the buffer*/
 262:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(__BufferFiller_forward_adapt_pointers)(buffer, 
 263:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                          DesiredLoadN, LoadedN, FallBackN, 
 264:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                          Distance_LexemeStart_to_InputP);
 265:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 266:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_end   =   buffer->_content_character_index_begin
GAS LISTING /tmp/cc23nfB3.s 			page 255


 267:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                  + (QUEX_NAME(Buffer_text_end)(buffer) - ContentFro
 268:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 269:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* If the character index in the stream is different from 'old index + LoadedN'
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * then this indicates a 'strange stream' where the stream position increment is
 271:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * not proportional to the number of loaded characters.                              */
 272:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( (me->tell_character_index(me) - buffer->_content_character_index_begin - FallBackN) != 
 273:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT(__QUEX_MESSAGE_BUFFER_FILLER_ON_STRANGE_STREAM); 
 274:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 275:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_debug_buffer_load(buffer, "LOAD FORWARD(exit)\n");
 276:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 277:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(buffer);
 278:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* NOTE: Return value is used for adaptions of memory addresses. It happens that the*/
 279:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*       address offset is equal to DesiredLoadN; see function __forward_adapt_pointers().*
 280:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return (size_t)DesiredLoadN; /* THUS NOT: LoadedN*/
 281:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 282:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 283:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE ptrdiff_t
 284:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_forward_compute_fallback_region)(QUEX_NAME(Buffer)*  buffer,
 285:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                               const ptrdiff_t     Distance_LexemeSt
 286:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 287:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t FallBackN = (ptrdiff_t)-1;
 288:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         (void)buffer;
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (1) Fallback: A certain region of the current buffer is copied in front such that
 291:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *               if necessary the stream can go backwards without a backward load.
 292:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 293:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                            fallback_n
 294:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                               :
 295:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                |11111111111111:22222222222222222222222222222222222222|
 296:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                  copy of      :   new loaded content of buffer
 297:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                  end of old   
 298:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                  buffer      
 299:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 300:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     The fallback region is related to the lexeme start pointer. The lexeme start 
 301:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     pointer always needs to lie inside the buffer, because applications might read
 302:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     their characters from it. The 'stretch' [lexeme start, current_p] must be 
 303:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     contained in the new buffer (precisely in the fallback region).                     
 304:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Copying forward shall **only** happen when new content is to be loaded. This is not the 
 305:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * if EOF is reached and the _memory._memory._end_of_file_p lies inside the buffer. Thus th
 306:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * must have reached the upper border of the buffer.                                       
 307:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_memory._end_of_file_p == 0x0);
 308:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_input_p == buffer->_memory._back);
 309:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 310:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(Distance_LexemeStart_to_InputP == buffer->_input_p - buffer->_lexeme_start_p)
 311:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(Distance_LexemeStart_to_InputP < (ptrdiff_t)QUEX_NAME(Buffer_content_size)(bu
 312:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 313:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) Fallback region = max(default size, necessary size)*/
 314:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         FallBackN = (ptrdiff_t)QUEX_SETTING_BUFFER_MIN_FALLBACK_N > Distance_LexemeStart_to_InputP 
 315:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                     ? (ptrdiff_t)QUEX_SETTING_BUFFER_MIN_FALLBACK_N  
 316:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                     : Distance_LexemeStart_to_InputP;
 317:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return FallBackN;
 318:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 319:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 320:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 321:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_forward_copy_fallback_region)(QUEX_NAME(Buffer)* buffer, const ptrdiff
 322:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 323:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) Copy fallback region*/
GAS LISTING /tmp/cc23nfB3.s 			page 256


 324:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*     If there is no 'overlap' from source and drain than the faster memcpy() can */
 325:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*     used instead of memmove().*/
 326:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*  source = QUEX_NAME(Buffer_content_back)(buffer) - FallBackN + 1; /* e
 327:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*  drain  = QUEX_NAME(Buffer_content_front)(buffer);       
 328:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 329:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Cast to uint8_t to avoid that some smart guy provides a C++ overloading function */
 330:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( drain + FallBackN >= source  ) {
 331:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_memmove((uint8_t*)drain, (uint8_t*)source, (size_t)FallBackN * sizeof(QUEX_T
 332:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         } else { 
 333:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_memcpy((uint8_t*)drain, (uint8_t*)source, (size_t)FallBackN * sizeof(QUEX_TY
 334:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 335:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 336:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       ifdef QUEX_OPTION_ASSERTS
 337:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Cast to uint8_t to avoid that some smart guy provides a C++ overloading function */
 338:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __QUEX_STD_memset((uint8_t*)(drain + FallBackN), (uint8_t)(0xFF), 
 339:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                           (QUEX_NAME(Buffer_content_size)(buffer) - (size_t)FallBackN)*sizeof(QUEX_
 340:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       endif
 341:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 342:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert((size_t)FallBackN < QUEX_NAME(Buffer_content_size)(buffer));
 343:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 344:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 345:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 346:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_forward_adapt_pointers)(QUEX_NAME(Buffer)*  buffer, 
 347:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                      const ptrdiff_t DesiredLoadN,
 348:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                      const size_t    LoadedN,
 349:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                      const ptrdiff_t FallBackN, 
 350:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                      const ptrdiff_t Distance_LexemeStart_to_InputP
 351:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 352:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER* ContentFront = QUEX_NAME(Buffer_content_front)(buffer);
 353:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 354:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(    buffer->_memory._end_of_file_p == 0x0 
 355:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                        || (LoadedN + (size_t)FallBackN) == QUEX_NAME(Buffer_content_size)(buffer) )
 356:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert( DesiredLoadN != 0 );
 357:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 358:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) If end of file has been reached, then the 'end of file' pointer needs to be set*/
 359:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( LoadedN != (size_t)DesiredLoadN ) 
 360:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_NAME(Buffer_end_of_file_set)(buffer, ContentFront + FallBackN + (ptrdiff_t)LoadedN
 361:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else
 362:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_NAME(Buffer_end_of_file_unset)(buffer);
 363:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 364:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*___________________________________________________________________________________*/
 365:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) Pointer adaption*/
 366:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*     Next char to be read: '_input_p + 1'*/
 367:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_input_p        = ContentFront + FallBackN - 1;   
 368:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*     NOTE: _input_p is set to (_input_p - 1) so that the next *(++_input_p) */
 369:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*           reads the _input_p.*/
 370:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_lexeme_start_p = (buffer->_input_p + 1) - Distance_LexemeStart_to_InputP; 
 371:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 372:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Asserts */
 373:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(   buffer->_memory._end_of_file_p == 0x0 
 374:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                       || ((ptrdiff_t)LoadedN + FallBackN) == buffer->_memory._end_of_file_p - buffe
 375:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 376:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 377:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 378:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 379:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE size_t   
 380:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_load_backward)(QUEX_NAME(Buffer)* buffer)
GAS LISTING /tmp/cc23nfB3.s 			page 257


 381:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 382:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(BufferFiller)* me = buffer->filler;
 383:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*     ContentFront = QUEX_NAME(Buffer_content_front)(buffer);
 384:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*     ContentBack  = QUEX_NAME(Buffer_content_back)(buffer);
 385:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t                BackwardDistance              = (ptrdiff_t)-1;
 386:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t                NewContentCharacterIndexBegin = (ptrdiff_t)-1;
 387:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         size_t                   LoadedN                       = (size_t)-1;
 388:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 389:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       ifdef QUEX_OPTION_STRANGE_ISTREAM_IMPLEMENTATION
 390:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_ERROR_EXIT(__QUEX_MESSAGE_BUFFER_FILLER_ON_STRANGE_STREAM_IN_BACKWARD_LOAD);
 391:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       endif
 392:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 393:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 394:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( me == 0x0 ) return 0; /* This case it totally rational, if no filler has been specified
 395:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 396:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* PURPOSE: This function is to be called as a reaction to a buffer limit code 'BLC'
 397:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          as returned by 'get_backward()'. Its task is the same as the one of 
 398:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          'load_forward()'--only in opposite direction. Here only two cases need 
 399:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          to be distinguished. The current_p points to 
 400:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 401:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (1) End of Buffer or End of File pointer: No backward load needs to 
 402:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              happen. This can only occur if a 'get_forward()' was called right
 403:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              before.
 404:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 405:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (2) Begin of the buffer and the buffer is the 'start buffer':
 406:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              in this case no backward load can happen, because we are at the 
 407:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              beginning. The function returns 0.
 408:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 409:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          (3) Begin of buffer and _begin_of_file_f is not set!: This is the case
 410:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              where this function, actually, has some work to do. It loads the
 411:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *              buffer with 'earlier' content from the file.
 412:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 413:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 414:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * RETURNS: Distance that was loaded backwards.
 415:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *          -1 in case of backward loading is not possible (begin of file)
 416:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     
 417:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * COMMENT: 
 418:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     
 419:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * For normal cases the fallback region, i.e. the 'FALLBACK_N' buffer bytes 
 420:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * allows to go a certain distance backwards immediately. If still the begin 
 421:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * of the buffer is reached, then this is an indication that something is
 422:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * 'off-the-norm'. Lexical analysis is not supposed to go longtimes
 423:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * backwards. For such cases we step a long stretch backwards: A
 424:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * THIRD of the buffer's size! 
 425:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 426:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * A meaningful fallback_n would be 64 Bytes. If the buffer's size
 427:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * is for example 512 kB then the backwards_distance of A THIRD means 170
 428:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * kB. This leaves a  safety region which is about 2730 times
 429:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * greater than normal (64 Bytes). After all, lexical analysis means
 430:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * to go **mainly forward** and not backwards.  */
 431:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer != 0x0);
 432:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_debug_buffer_load(buffer, "BACKWARD(entry)\n");
 433:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 434:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 435:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) Check for the three possibilities mentioned above*/
 436:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if     ( buffer->_input_p == buffer->_memory._back )          { return 0; } /* (1) */
 437:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p == buffer->_memory._end_of_file_p ) { return 0; } /* (1) */
GAS LISTING /tmp/cc23nfB3.s 			page 258


 438:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p != buffer->_memory._front ) {
 439:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Call to 'load_backward() but '_input_p' not on buffer border.\n" 
 440:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "(Check character encoding)");  
 441:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 442:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_content_character_index_begin == 0 ) { return 0; }  /* (2) */
 443:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*                                                                     * (3) */
 444:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* HERE: current_p == FRONT OF THE BUFFER!   
 445:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *_______________________________________________________________________________*/
 446:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Catch impossible scenario: If the stretch from _input_p to _lexeme_start_p 
 447:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * spans the whole buffer content, then nothing can be loaded into it.           */
 448:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( buffer->_lexeme_start_p == ContentBack ) { 
 449:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_NAME(__BufferFiller_on_overflow)(buffer, /* ForwardF */ false);
 450:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             return 0;
 451:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 452:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 453:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*_______________________________________________________________________________
 454:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * (1) Compute distance to go backwards */
 455:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         BackwardDistance = QUEX_NAME(__BufferFiller_backward_compute_backward_distance)(buffer);
 456:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*_______________________________________________________________________________
 457:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * (2) Compute the stream position of the 'start to read'   
 458:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *  
 459:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * It is not safe to assume that the character size is fixed. Thus it is up to  
 460:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * the input strategy to determine the input position that belongs to a character  
 461:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * position.                                                                     */
 462:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         NewContentCharacterIndexBegin = buffer->_content_character_index_begin - BackwardDistance;
 463:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(BackwardDistance != 0); /* if "_index_begin != 0", then backward load must be
 464:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->seek_character_index(me, NewContentCharacterIndexBegin);
 465:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 466:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*_______________________________________________________________________________
 467:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * (3) Load content*/
 468:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = NewContentCharacterIndexBegin;
 469:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(__BufferFiller_backward_copy_backup_region)(buffer, BackwardDistance);
 470:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         
 471:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* -- If file content < buffer size, then the start position of the stream to which  
 472:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *    the buffer refers is always 0 and no backward loading will ever happen.  
 473:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * -- If the file content >= buffer size, then backward loading must always fill  
 474:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *    the buffer. */
 475:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         LoadedN = QUEX_NAME(__BufferFiller_read_characters)(buffer, ContentFront, BackwardDistance)
 476:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(LoadedN == (size_t)BackwardDistance);
 477:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 478:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*________________________________________________________________________________
 479:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * (4) Adapt pointers */
 480:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(__BufferFiller_backward_adapt_pointers)(buffer, BackwardDistance);
 481:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 482:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_end =   buffer->_content_character_index_begin
 483:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                + (QUEX_NAME(Buffer_text_end)(buffer) - ContentFront
 484:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* If the character index in the stream is different from 'old index + LoadedN'
 485:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * then this indicates a 'strange stream' where the stream position increment is
 486:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * not proportional to the number of loaded characters.                              */
 487:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert( (size_t)(me->tell_character_index(me) - buffer->_content_character_index_beg
 488:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 489:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_debug_buffer_load(buffer, "BACKWARD(exit)\n");
 490:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 491:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONTENT_CONSISTENCY(buffer);
 492:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 493:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return (size_t)BackwardDistance;
 494:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 259


 495:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 496:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 497:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE ptrdiff_t
 498:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_backward_compute_backward_distance)(QUEX_NAME(Buffer)* buffer)
 499:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 500:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const ptrdiff_t  ContentSize  = (ptrdiff_t)QUEX_NAME(Buffer_content_size)(buffer);
 501:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     IntendedBackwardDistance = (ptrdiff_t)-1;
 502:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     Distance_InputP_to_LexemeStart = (ptrdiff_t)-1;
 503:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     LimitBackwardDist_1 = -1; 
 504:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     LimitBackwardDist_2 = -1;
 505:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     Limit_1_and_2 = -1;
 506:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         ptrdiff_t     BackwardDistance = -1;
 507:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 508:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_BUFFER_ASSERT_CONSISTENCY(buffer);
 509:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Copying backward shall **only** happen when new content is to be loaded. In back
 510:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * ward direction, this makes only sense if the lower border was reached.         */
 511:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_input_p == buffer->_memory._front);
 512:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Also, if the lower border is the begin of file, then there is no sense in
 513:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * loading more in backward direction.                                            */
 514:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_content_character_index_begin != 0);
 515:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* We need to make sure, that the lexeme start pointer remains inside the
 516:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * buffer, so that we do not loose the reference. From current_p == buffer begin
 517:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * it is safe to say that _lexeme_start_p > _input_p (the lexeme starts
 518:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * on a letter not the buffer limit).                                             */
 519:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(buffer->_lexeme_start_p > buffer->_input_p);
 520:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert((size_t)(buffer->_lexeme_start_p - buffer->_input_p) < QUEX_NAME(Buffer_conte
 521:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 522:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         IntendedBackwardDistance = ContentSize > (ptrdiff_t)3 ? (ptrdiff_t)(ContentSize / 3) 
 523:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                    :                            (ptrdiff_t)1;   
 524:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* IntendedBackwardDistance > 0 */
 525:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 526:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Limit 1:
 527:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 528:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     Before:    |C      L                  |
 529:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 530:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     After:     |       C      L           |
 531:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                 ------->
 532:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *                 backward distance
 533:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 534:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     Lexeme start pointer L shall lie inside the buffer. Thus, it is required:
 535:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 536:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *               LimitBackwardDist_1 + (C - L) < size
 537:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           =>            LimitBackwardDist_1 < size - (C - L)
 538:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *            
 539:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           =>  LimitBackwardDist_1 > 0, see __quex_assert(...) above. */
 540:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         Distance_InputP_to_LexemeStart = buffer->_lexeme_start_p - buffer->_input_p;
 541:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         LimitBackwardDist_1            = ContentSize - Distance_InputP_to_LexemeStart; 
 542:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 543:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Limit 2:
 544:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     We cannot go before the first character in the stream. 
 545:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *         LimitBackwardDist_2 > 0, see __quex_assert(...) above. */
 546:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         LimitBackwardDist_2 = buffer->_content_character_index_begin;
 547:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 548:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 549:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Taking the minimum of all:*/
 550:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /*           Limit_1_and_2 = min(LimitBackwardDist_1 and _2) > 0 */
 551:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         Limit_1_and_2 = LimitBackwardDist_1 < LimitBackwardDist_2 ? LimitBackwardDist_1
GAS LISTING /tmp/cc23nfB3.s 			page 260


 552:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                         :                                           LimitBackwardDist_2;
 553:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 554:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         BackwardDistance = IntendedBackwardDistance < Limit_1_and_2 ? IntendedBackwardDistance 
 555:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                            :                                          Limit_1_and_2;
 556:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 557:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(BackwardDistance > (ptrdiff_t)0);
 558:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         return (ptrdiff_t)BackwardDistance;
 559:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 560:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 561:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 562:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_backward_copy_backup_region)(QUEX_NAME(Buffer)*  buffer, 
 563:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                           const ptrdiff_t     BackwardDistance)
 564:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 565:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const size_t         ContentSize      = QUEX_NAME(Buffer_content_size)(buffer);
 566:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER* ContentFront     = QUEX_NAME(Buffer_content_front)(buffer);
 567:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 568:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(BackwardDistance >= (ptrdiff_t)0);
 569:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert((size_t)BackwardDistance < ContentSize);
 570:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 571:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* (*) copy content that is already there to its new position.
 572:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *     (copying is much faster then loading new content from file). */
 573:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __QUEX_STD_memmove(ContentFront + BackwardDistance, ContentFront, 
 574:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                            (size_t)(ContentSize - (size_t)BackwardDistance)*sizeof(QUEX_TYPE_CHARAC
 575:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 576:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       ifdef QUEX_OPTION_ASSERTS
 577:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* Cast to uint8_t to avoid that some smart guy provides a C++ overloading function */
 578:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __QUEX_STD_memset((uint8_t*)ContentFront, (uint8_t)(0xFF), 
 579:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                           (size_t)BackwardDistance * sizeof(QUEX_TYPE_CHARACTER)); 
 580:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       endif
 581:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 582:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 583:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 584:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_backward_adapt_pointers)(QUEX_NAME(Buffer)*  buffer, 
 585:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                       const ptrdiff_t     BackwardDistance)
 586:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 587:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* -- end of file / end of buffer:*/
 588:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( buffer->_memory._end_of_file_p ) {
 589:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_TYPE_CHARACTER*   NewEndOfFileP = buffer->_memory._end_of_file_p + BackwardDistanc
 590:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             if( NewEndOfFileP <= buffer->_memory._back ) 
 591:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                 QUEX_NAME(Buffer_end_of_file_set)(buffer, NewEndOfFileP);
 592:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             else  
 593:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                 QUEX_NAME(Buffer_end_of_file_unset)(buffer);
 594:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 595:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 596:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_input_p        += BackwardDistance + 1; 
 597:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_lexeme_start_p += BackwardDistance;
 598:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 599:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 600:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void
 601:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_on_overflow)(QUEX_NAME(Buffer)* buffer, bool ForwardF)
 602:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 603:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_NAME(BufferFiller)* me = buffer->filler;
 604:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       ifdef QUEX_OPTION_INFORMATIVE_BUFFER_OVERFLOW_MESSAGE
 605:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         uint8_t               utf8_encoded_str[512]; 
 606:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         static char           message[1024];
 607:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const size_t          MessageSize = (size_t)1024;
 608:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         uint8_t*              WEnd        = 0x0;
GAS LISTING /tmp/cc23nfB3.s 			page 261


 609:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         uint8_t*              witerator   = 0x0; 
 610:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*        End         = 0x0; 
 611:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const QUEX_TYPE_CHARACTER*  iterator    = 0x0; 
 612:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*        utf8_end    = 0x0; 
 613:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       endif
 614:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 615:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if(    me->_on_overflow == 0x0
 1374              		.loc 13 615 0
 1375 003b 8B55D4   		movl	-44(%ebp), %edx
 1376 003e 8B420C   		movl	12(%edx), %eax
 1377 0041 85C0     		testl	%eax, %eax
 1378 0043 7412     		je	.L125
 1379 0045 52       		pushl	%edx
 1380 0046 52       		pushl	%edx
 1381 0047 6A01     		pushl	$1
 1382 0049 53       		pushl	%ebx
 1383              	.LEHB4:
 1384              		.cfi_escape 0x2e,0x10
 1385 004a FFD0     		call	*%eax
 1386              	.LEHE4:
 1387 004c 83C410   		addl	$16, %esp
 1388 004f 84C0     		testb	%al, %al
 1389 0051 0F852802 		jne	.L123
 1389      0000
 1390              	.L125:
 616:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             || me->_on_overflow(buffer, ForwardF) == false ) {
 617:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 618:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #           ifdef QUEX_OPTION_INFORMATIVE_BUFFER_OVERFLOW_MESSAGE
 619:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             /* Print out the lexeme start, so that the user has a hint. */
 620:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             WEnd        = utf8_encoded_str + 512 - 7;
 621:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             witerator   = utf8_encoded_str; 
 622:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             End         = buffer->_memory._back; 
 623:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             iterator    = buffer->_lexeme_start_p; 
 624:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 625:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_CONVERTER_STRING(QUEX_SETTING_CODEC, utf8)(&iterator, End,
 626:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                               &witerator, WEnd);
 627:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             message[0] = '\0';
 628:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             /* No use of 'snprintf()' because not all systems seem to support it propperly. */
 629:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_strncat(message, 
 630:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                "Distance between lexeme start and current pointer exceeds buffer si
 631:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                "(tried to load buffer",
 632:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                MessageSize);
 633:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_strncat(message, ForwardF ? "forward)" : "backward)",                   Mess
 634:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_strncat(message, "As a hint consider the beginning of the lexeme:\n[[", Mess
 635:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_strncat(message, (char*)utf8_encoded_str,                               Mess
 636:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             __QUEX_STD_strncat(message, "]]\n",                                                Mess
 637:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 638:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT(message);
 639:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #           else
 640:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Distance between lexeme start and current pointer exceeds buffer size.
 1391              		.loc 13 640 0
 1392 0057 8D45E5   		leal	-27(%ebp), %eax
 1393 005a 57       		pushl	%edi
 1394 005b 50       		pushl	%eax
 1395 005c 68170000 		pushl	$.LC1
 1395      00
 1396 0061 8D45D8   		leal	-40(%ebp), %eax
GAS LISTING /tmp/cc23nfB3.s 			page 262


 1397 0064 50       		pushl	%eax
 1398              	.LEHB5:
 1399 0065 E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 1399      FF
 1400              	.LEHE5:
 1401 006a C7042408 		movl	$8, (%esp)
 1401      000000
 1402 0071 E8FCFFFF 		call	__cxa_allocate_exception
 1402      FF
 1403 0076 5B       		popl	%ebx
 1404              	.LVL181:
 1405 0077 5E       		popl	%esi
 1406 0078 8D5DD8   		leal	-40(%ebp), %ebx
 1407 007b 53       		pushl	%ebx
 1408 007c 50       		pushl	%eax
 1409 007d 89C7     		movl	%eax, %edi
 1410              	.LEHB6:
 1411 007f E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 1411      FF
 1412              	.LEHE6:
 1413 0084 891C24   		movl	%ebx, (%esp)
 1414              	.LEHB7:
 1415 0087 E8FCFFFF 		call	_ZNSsD1Ev
 1415      FF
 1416              	.LEHE7:
 1417 008c E9C60100 		jmp	.L181
 1417      00
 1418              	.L166:
 1419              	.L127:
 1420              	.L167:
 1421              	.L128:
 1422 0091 83EC0C   		subl	$12, %esp
 1423 0094 89C6     		movl	%eax, %esi
 1424 0096 57       		pushl	%edi
 1425 0097 E8FCFFFF 		call	__cxa_free_exception
 1425      FF
 1426 009c 891C24   		movl	%ebx, (%esp)
 1427              	.LEHB8:
 1428 009f E8FCFFFF 		call	_ZNSsD1Ev
 1428      FF
 1429              	.LEHE8:
 1430 00a4 E9A70100 		jmp	.L190
 1430      00
 1431              	.L165:
 1432 00a9 E9BC0100 		jmp	.L185
 1432      00
 1433              	.L130:
 1434              	.L164:
 1435 00ae E9B70100 		jmp	.L185
 1435      00
 1436              	.L132:
 1437              	.LVL182:
 1438              	.L168:
 1439 00b3 E9BC0100 		jmp	.L191
 1439      00
 1440              	.L133:
 1441              	.L124:
GAS LISTING /tmp/cc23nfB3.s 			page 263


 1442              	.LBE390:
 1443              	.LBE389:
 226:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if     ( buffer->_input_p == buffer->_memory._front )         { return 0; }   /* (1)*/
 1444              		.loc 13 226 0
 1445 00b8 39CE     		cmpl	%ecx, %esi
 1446 00ba 0F84BF01 		je	.L123
 1446      0000
 227:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p == buffer->_memory._end_of_file_p ) { return 0; }   /* (2)*/
 1447              		.loc 13 227 0
 1448 00c0 8B4308   		movl	8(%ebx), %eax
 1449 00c3 39C6     		cmpl	%eax, %esi
 1450 00c5 0F84B401 		je	.L123
 1450      0000
 228:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_input_p != buffer->_memory._back  ) {                     
 1451              		.loc 13 228 0
 1452 00cb 39D6     		cmpl	%edx, %esi
 1453 00cd 7461     		je	.L134
 229:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT("Call to 'load_forward() but '_input_p' not on buffer border.\n" 
 1454              		.loc 13 229 0
 1455 00cf 8D45E7   		leal	-25(%ebp), %eax
 1456 00d2 51       		pushl	%ecx
 1457 00d3 50       		pushl	%eax
 1458 00d4 68B20100 		pushl	$.LC2
 1458      00
 1459 00d9 8D45E0   		leal	-32(%ebp), %eax
 1460 00dc 50       		pushl	%eax
 1461              	.LEHB9:
 1462 00dd E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 1462      FF
 1463              	.LEHE9:
 1464 00e2 C7042408 		movl	$8, (%esp)
 1464      000000
 1465 00e9 8D5DE0   		leal	-32(%ebp), %ebx
 1466              	.LVL183:
 1467 00ec E8FCFFFF 		call	__cxa_allocate_exception
 1467      FF
 1468 00f1 89C7     		movl	%eax, %edi
 1469 00f3 58       		popl	%eax
 1470 00f4 5A       		popl	%edx
 1471 00f5 53       		pushl	%ebx
 1472 00f6 57       		pushl	%edi
 1473              	.LEHB10:
 1474 00f7 E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 1474      FF
 1475              	.LEHE10:
 1476 00fc 891C24   		movl	%ebx, (%esp)
 1477              	.LEHB11:
 1478 00ff E8FCFFFF 		call	_ZNSsD1Ev
 1478      FF
 1479              	.LEHE11:
 1480 0104 E94E0100 		jmp	.L181
 1480      00
 1481              	.L176:
 1482              	.L136:
 1483              	.L177:
 1484              	.L137:
 1485 0109 83EC0C   		subl	$12, %esp
GAS LISTING /tmp/cc23nfB3.s 			page 264


 1486 010c 89C6     		movl	%eax, %esi
 1487 010e 57       		pushl	%edi
 1488 010f E8FCFFFF 		call	__cxa_free_exception
 1488      FF
 1489 0114 891C24   		movl	%ebx, (%esp)
 1490              	.LEHB12:
 1491 0117 E8FCFFFF 		call	_ZNSsD1Ev
 1491      FF
 1492              	.LEHE12:
 1493 011c E92F0100 		jmp	.L190
 1493      00
 1494              	.L175:
 1495 0121 E9440100 		jmp	.L185
 1495      00
 1496              	.L139:
 1497              	.L174:
 1498 0126 E93F0100 		jmp	.L185
 1498      00
 1499              	.L141:
 1500              	.LVL184:
 1501              	.L178:
 1502 012b E9440100 		jmp	.L191
 1502      00
 1503              	.L142:
 1504              	.L134:
 232:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         else if( buffer->_memory._end_of_file_p != 0x0 ) { 
 1505              		.loc 13 232 0
 1506 0130 85C0     		testl	%eax, %eax
 1507 0132 0F854701 		jne	.L123
 1507      0000
 1508              	.LBB391:
 1509              	.LBB392:
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._front + 1;
 1510              		.loc 2 270 0
 1511 0138 41       		incl	%ecx
 1512              	.LBE392:
 1513              	.LBE391:
 1514              	.LBB394:
 1515              	.LBB395:
 316:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                     : Distance_LexemeStart_to_InputP;
 1516              		.loc 13 316 0
 1517 0139 BA000100 		movl	$256, %edx
 1517      00
 1518              	.LVL185:
 1519 013e 817DCC00 		cmpl	$256, -52(%ebp)
 1519      010000
 1520 0145 0F4D55CC 		cmovge	-52(%ebp), %edx
 1521              	.LBE395:
 1522              	.LBE394:
 1523              	.LBB396:
 1524              	.LBB393:
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._front + 1;
 1525              		.loc 2 270 0
 1526 0149 894DD0   		movl	%ecx, -48(%ebp)
 1527              	.LBE393:
 1528              	.LBE396:
 1529              	.LBB397:
GAS LISTING /tmp/cc23nfB3.s 			page 265


 1530              	.LBB398:
 326:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER*  source = QUEX_NAME(Buffer_content_back)(buffer) - FallBackN + 1; /* e
 1531              		.loc 13 326 0
 1532 014c 29D6     		subl	%edx, %esi
 1533              	.LVL186:
 330:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( drain + FallBackN >= source  ) {
 1534              		.loc 13 330 0
 1535 014e 01D1     		addl	%edx, %ecx
 1536 0150 39F1     		cmpl	%esi, %ecx
 1537 0152 894DC8   		movl	%ecx, -56(%ebp)
 1538 0155 7216     		jb	.L143
 1539              		.file 14 "/usr/include/bits/string3.h"
   1:/usr/include/bits/string3.h **** /* Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.
   2:/usr/include/bits/string3.h ****    This file is part of the GNU C Library.
   3:/usr/include/bits/string3.h **** 
   4:/usr/include/bits/string3.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/bits/string3.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/bits/string3.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/bits/string3.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/bits/string3.h **** 
   9:/usr/include/bits/string3.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/bits/string3.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/bits/string3.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/bits/string3.h ****    Lesser General Public License for more details.
  13:/usr/include/bits/string3.h **** 
  14:/usr/include/bits/string3.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/bits/string3.h ****    License along with the GNU C Library; if not, write to the Free
  16:/usr/include/bits/string3.h ****    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
  17:/usr/include/bits/string3.h ****    02111-1307 USA.  */
  18:/usr/include/bits/string3.h **** 
  19:/usr/include/bits/string3.h **** #ifndef _STRING_H
  20:/usr/include/bits/string3.h **** # error "Never use <bits/string3.h> directly; include <string.h> instead."
  21:/usr/include/bits/string3.h **** #endif
  22:/usr/include/bits/string3.h **** 
  23:/usr/include/bits/string3.h **** __warndecl (__warn_memset_zero_len,
  24:/usr/include/bits/string3.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  25:/usr/include/bits/string3.h **** 
  26:/usr/include/bits/string3.h **** #ifndef __cplusplus
  27:/usr/include/bits/string3.h **** /* XXX This is temporarily.  We should not redefine any of the symbols
  28:/usr/include/bits/string3.h ****    and instead integrate the error checking into the original
  29:/usr/include/bits/string3.h ****    definitions.  */
  30:/usr/include/bits/string3.h **** # undef memcpy
  31:/usr/include/bits/string3.h **** # undef memmove
  32:/usr/include/bits/string3.h **** # undef memset
  33:/usr/include/bits/string3.h **** # undef strcat
  34:/usr/include/bits/string3.h **** # undef strcpy
  35:/usr/include/bits/string3.h **** # undef strncat
  36:/usr/include/bits/string3.h **** # undef strncpy
  37:/usr/include/bits/string3.h **** # ifdef __USE_GNU
  38:/usr/include/bits/string3.h **** #  undef mempcpy
  39:/usr/include/bits/string3.h **** #  undef stpcpy
  40:/usr/include/bits/string3.h **** # endif
  41:/usr/include/bits/string3.h **** # ifdef __USE_BSD
  42:/usr/include/bits/string3.h **** #  undef bcopy
  43:/usr/include/bits/string3.h **** #  undef bzero
  44:/usr/include/bits/string3.h **** # endif
  45:/usr/include/bits/string3.h **** #endif
GAS LISTING /tmp/cc23nfB3.s 			page 266


  46:/usr/include/bits/string3.h **** 
  47:/usr/include/bits/string3.h **** 
  48:/usr/include/bits/string3.h **** __extern_always_inline void *
  49:/usr/include/bits/string3.h **** __NTH (memcpy (void *__restrict __dest, __const void *__restrict __src,
  50:/usr/include/bits/string3.h **** 	       size_t __len))
  51:/usr/include/bits/string3.h **** {
  52:/usr/include/bits/string3.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  53:/usr/include/bits/string3.h **** }
  54:/usr/include/bits/string3.h **** 
  55:/usr/include/bits/string3.h **** __extern_always_inline void *
  56:/usr/include/bits/string3.h **** __NTH (memmove (void *__restrict __dest, __const void *__restrict __src,
  57:/usr/include/bits/string3.h **** 		size_t __len))
  58:/usr/include/bits/string3.h **** {
  59:/usr/include/bits/string3.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
 1540              		.loc 14 59 0
 1541 0157 57       		pushl	%edi
 1542 0158 52       		pushl	%edx
 1543 0159 56       		pushl	%esi
 1544 015a FF75D0   		pushl	-48(%ebp)
 1545 015d 8955C0   		movl	%edx, -64(%ebp)
 1546              	.LVL187:
 1547 0160 E8FCFFFF 		call	memmove
 1547      FF
 1548 0165 83C410   		addl	$16, %esp
 1549 0168 8B55C0   		movl	-64(%ebp), %edx
 1550 016b EB07     		jmp	.L144
 1551              	.LVL188:
 1552              	.L143:
  52:/usr/include/bits/string3.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1553              		.loc 14 52 0
 1554 016d 8B7DD0   		movl	-48(%ebp), %edi
 1555              	.LVL189:
 1556 0170 89D1     		movl	%edx, %ecx
 1557 0172 F3A4     		rep movsb
 1558              	.LVL190:
 1559              	.L144:
 1560              	.LBE398:
 1561              	.LBE397:
 252:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         me->seek_character_index(me, buffer->_content_character_index_end);
 1562              		.loc 13 252 0
 1563 0174 8B4DD4   		movl	-44(%ebp), %ecx
 1564              	.LVL191:
 1565 0177 56       		pushl	%esi
 1566 0178 56       		pushl	%esi
 1567 0179 FF7320   		pushl	32(%ebx)
 1568 017c FF75D4   		pushl	-44(%ebp)
 1569 017f 8955C0   		movl	%edx, -64(%ebp)
 1570              	.LVL192:
 1571              	.LEHB13:
 1572 0182 FF5104   		call	*4(%ecx)
 253:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = buffer->_content_character_index_end - FallBackN;
 1573              		.loc 13 253 0
 1574 0185 8B4320   		movl	32(%ebx), %eax
 1575 0188 8B55C0   		movl	-64(%ebp), %edx
 1576              	.LBB399:
 1577              	.LBB401:
 641:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "(tried to load buffer forward). Please, compile with option\n\n"
GAS LISTING /tmp/cc23nfB3.s 			page 267


 642:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "    QUEX_OPTION_INFORMATIVE_BUFFER_OVERFLOW_MESSAGE\n\n"
 643:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "in order to get a more informative output. Most likely, one of your pa
 644:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "eats longer as you inteded it. Alternatively you might want to set the
 645:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                             "size to a greate value or use skippers (<skip: [ \\n\\t]> for example)
 646:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #           endif /* QUEX_OPTION_INFORMATIVE_BUFFER_OVERFLOW_MESSAGE */
 647:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         }
 648:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 649:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 650:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE void 
 651:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(BufferFiller_step_forward_n_characters)(QUEX_NAME(BufferFiller)* me,
 652:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                       const ptrdiff_t          ForwardN)
 653:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     { 
 654:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* STRATEGY: Starting from a certain point in the file we read characters
 655:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           Convert one-by-one until we reach the given character index. 
 656:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           This is, of course, incredibly inefficient but safe to work under
 657:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           all circumstances. Fillers should only rely on this function
 658:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           in case of no other alternative. Also, caching some information 
 659:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           about what character index is located at what position may help
 660:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *           to increase speed.                                                */      
 661:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       ifdef QUEX_OPTION_ASSERTS
 662:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const ptrdiff_t TargetIndex = me->tell_character_index(me) + ForwardN;
 663:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** #       endif
 664:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 665:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* START: We are now at character index 'CharacterIndex - remaining_character_n'.
 666:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * LOOP:  It remains to interpret 'remaining_character_n' number of characters. Since 
 667:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *        the interpretation is best done using a buffer, we do this in chunks.      */ 
 668:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         size_t               remaining_character_n = (size_t)ForwardN;
 669:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const size_t         ChunkSize             = QUEX_SETTING_BUFFER_FILLER_SEEK_TEMP_BUFFER_SI
 670:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         QUEX_TYPE_CHARACTER  chunk[QUEX_SETTING_BUFFER_FILLER_SEEK_TEMP_BUFFER_SIZE];
 671:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 672:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(QUEX_SETTING_BUFFER_FILLER_SEEK_TEMP_BUFFER_SIZE >= 1);
 673:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 674:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         /* We CANNOT assume that end the end it will hold: 
 675:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 676:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *       __quex_assert(me->tell_character_index(me) == TargetIndex);
 677:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          *
 678:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****          * Because, we do not know wether the stream actually has so many characters.     */
 679:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         for(; remaining_character_n > ChunkSize; remaining_character_n -= ChunkSize )  
 680:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             if( me->read_characters(me, (QUEX_TYPE_CHARACTER*)chunk, ChunkSize) < ChunkSize ) {
 681:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                 __quex_assert(me->tell_character_index(me) <= TargetIndex);
 682:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                 return;
 683:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             }
 684:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( remaining_character_n ) 
 685:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             me->read_characters(me, (QUEX_TYPE_CHARACTER*)chunk, remaining_character_n);
 686:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****        
 687:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         __quex_assert(me->tell_character_index(me) <= TargetIndex);
 688:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 689:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i **** 
 690:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_INLINE size_t       
 691:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     QUEX_NAME(__BufferFiller_read_characters)(QUEX_NAME(Buffer)*    buffer, 
 692:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                               QUEX_TYPE_CHARACTER*  memory, 
 693:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                               const ptrdiff_t       CharacterNToRead)
 694:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     {
 695:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         const size_t  LoadedN = buffer->filler->read_characters(buffer->filler, memory, (size_t)Cha
 1578              		.loc 13 695 0
 1579 018b 83C40C   		addl	$12, %esp
 1580 018e 8B75C4   		movl	-60(%ebp), %esi
GAS LISTING /tmp/cc23nfB3.s 			page 268


 1581              	.LBE401:
 1582              	.LBE399:
 253:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = buffer->_content_character_index_end - FallBackN;
 1583              		.loc 13 253 0
 1584 0191 29D0     		subl	%edx, %eax
 1585              	.LVL193:
 1586              	.LBB404:
 1587              	.LBB402:
 1588              		.loc 13 695 0
 1589 0193 29D6     		subl	%edx, %esi
 1590              	.LBE402:
 1591              	.LBE404:
 253:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_content_character_index_begin = buffer->_content_character_index_end - FallBackN;
 1592              		.loc 13 253 0
 1593 0195 89431C   		movl	%eax, 28(%ebx)
 1594              	.LBB405:
 1595              	.LBB400:
 1596              		.loc 13 695 0
 1597 0198 8B4328   		movl	40(%ebx), %eax
 1598 019b 56       		pushl	%esi
 1599 019c FF75C8   		pushl	-56(%ebp)
 1600 019f 50       		pushl	%eax
 1601 01a0 FF5008   		call	*8(%eax)
 1602              	.LVL194:
 1603              	.LBE400:
 1604              	.LBE405:
 1605              	.LBB406:
 1606              	.LBB408:
 1607              	.LBB413:
 1608              	.LBB414:
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._front + 1;
 1609              		.loc 2 270 0
 1610 01a3 8B0B     		movl	(%ebx), %ecx
 1611              	.LBE414:
 1612              	.LBE413:
 359:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( LoadedN != (size_t)DesiredLoadN ) 
 1613              		.loc 13 359 0
 1614 01a5 83C410   		addl	$16, %esp
 1615 01a8 8B55C0   		movl	-64(%ebp), %edx
 1616              	.LBB416:
 1617              	.LBB415:
 270:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return me->_memory._front + 1;
 1618              		.loc 2 270 0
 1619 01ab 41       		incl	%ecx
 1620              	.LVL195:
 1621              	.LBE415:
 1622              	.LBE416:
 359:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( LoadedN != (size_t)DesiredLoadN ) 
 1623              		.loc 13 359 0
 1624 01ac 39F0     		cmpl	%esi, %eax
 1625              	.LVL196:
 1626              	.LBE408:
 1627              	.LBE406:
 1628              	.LBB418:
 1629              	.LBB403:
 1630              		.loc 13 695 0
 1631 01ae 89C7     		movl	%eax, %edi
GAS LISTING /tmp/cc23nfB3.s 			page 269


 1632              	.LVL197:
 1633              	.LBE403:
 1634              	.LBE418:
 1635              	.LBB419:
 1636              	.LBB407:
 359:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( LoadedN != (size_t)DesiredLoadN ) 
 1637              		.loc 13 359 0
 1638 01b0 740D     		je	.L145
 360:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_NAME(Buffer_end_of_file_set)(buffer, ContentFront + FallBackN + (ptrdiff_t)LoadedN
 1639              		.loc 13 360 0
 1640 01b2 01D0     		addl	%edx, %eax
 1641              	.LVL198:
 1642 01b4 8D0401   		leal	(%ecx,%eax), %eax
 1643              	.LBB411:
 1644              	.LBB412:
 305:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         me->_memory._end_of_file_p    = Position;
 1645              		.loc 2 305 0
 1646 01b7 894308   		movl	%eax, 8(%ebx)
 306:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         *(me->_memory._end_of_file_p) = QUEX_SETTING_BUFFER_LIMIT_CODE;
 1647              		.loc 2 306 0
 1648 01ba C60000   		movb	$0, (%eax)
 1649 01bd EB07     		jmp	.L146
 1650              	.LVL199:
 1651              	.L145:
 1652              	.LBE412:
 1653              	.LBE411:
 1654              	.LBB409:
 1655              	.LBB410:
 317:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_memory._end_of_file_p = 0x0;
 1656              		.loc 2 317 0
 1657 01bf C7430800 		movl	$0, 8(%ebx)
 1657      000000
 1658              	.LVL200:
 1659              	.L146:
 1660              	.LBE410:
 1661              	.LBE409:
 367:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_input_p        = ContentFront + FallBackN - 1;   
 1662              		.loc 13 367 0
 1663 01c6 8D4411FF 		leal	-1(%ecx,%edx), %eax
 1664              	.LBE407:
 1665              	.LBE419:
 267:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                  + (QUEX_NAME(Buffer_text_end)(buffer) - ContentFro
 1666              		.loc 13 267 0
 1667 01ca 8B4B1C   		movl	28(%ebx), %ecx
 1668              	.LVL201:
 1669              	.LBB420:
 1670              	.LBB417:
 367:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_input_p        = ContentFront + FallBackN - 1;   
 1671              		.loc 13 367 0
 1672 01cd 894310   		movl	%eax, 16(%ebx)
 370:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         buffer->_lexeme_start_p = (buffer->_input_p + 1) - Distance_LexemeStart_to_InputP; 
 1673              		.loc 13 370 0
 1674 01d0 2B45CC   		subl	-52(%ebp), %eax
 1675 01d3 40       		incl	%eax
 1676 01d4 894314   		movl	%eax, 20(%ebx)
 1677              	.LBE417:
 1678              	.LBE420:
GAS LISTING /tmp/cc23nfB3.s 			page 270


 1679              	.LBB421:
 1680              	.LBB422:
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 1681              		.loc 2 289 0
 1682 01d7 8B4308   		movl	8(%ebx), %eax
 1683 01da 85C0     		testl	%eax, %eax
 1684 01dc 7503     		jne	.L147
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 1685              		.loc 2 290 0
 1686 01de 8B4304   		movl	4(%ebx), %eax
 1687              	.L147:
 1688              	.LBE422:
 1689              	.LBE421:
 267:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                  + (QUEX_NAME(Buffer_text_end)(buffer) - ContentFro
 1690              		.loc 13 267 0
 1691 01e1 2B4DD0   		subl	-48(%ebp), %ecx
 272:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( (me->tell_character_index(me) - buffer->_content_character_index_begin - FallBackN) != 
 1692              		.loc 13 272 0
 1693 01e4 83EC0C   		subl	$12, %esp
 1694 01e7 8955C0   		movl	%edx, -64(%ebp)
 1695              	.LVL202:
 267:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****                                                  + (QUEX_NAME(Buffer_text_end)(buffer) - ContentFro
 1696              		.loc 13 267 0
 1697 01ea 01C1     		addl	%eax, %ecx
 1698 01ec 894B20   		movl	%ecx, 32(%ebx)
 272:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****         if( (me->tell_character_index(me) - buffer->_content_character_index_begin - FallBackN) != 
 1699              		.loc 13 272 0
 1700 01ef 8B4DD4   		movl	-44(%ebp), %ecx
 1701 01f2 FF75D4   		pushl	-44(%ebp)
 1702 01f5 FF11     		call	*(%ecx)
 1703              	.LEHE13:
 1704 01f7 8B55C0   		movl	-64(%ebp), %edx
 1705 01fa 83C410   		addl	$16, %esp
 1706 01fd 2B431C   		subl	28(%ebx), %eax
 1707 0200 29D0     		subl	%edx, %eax
 1708              	.LVL203:
 1709 0202 39F8     		cmpl	%edi, %eax
 1710 0204 747B     		je	.L148
 273:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****             QUEX_ERROR_EXIT(__QUEX_MESSAGE_BUFFER_FILLER_ON_STRANGE_STREAM); 
 1711              		.loc 13 273 0
 1712 0206 8D45E6   		leal	-26(%ebp), %eax
 1713 0209 51       		pushl	%ecx
 1714 020a 50       		pushl	%eax
 1715 020b 680A0200 		pushl	$.LC3
 1715      00
 1716 0210 8D45DC   		leal	-36(%ebp), %eax
 1717 0213 50       		pushl	%eax
 1718              	.LEHB14:
 1719 0214 E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 1719      FF
 1720              	.LEHE14:
 1721              	.LVL204:
 1722 0219 C7042408 		movl	$8, (%esp)
 1722      000000
 1723 0220 8D5DDC   		leal	-36(%ebp), %ebx
 1724              	.LVL205:
 1725 0223 E8FCFFFF 		call	__cxa_allocate_exception
GAS LISTING /tmp/cc23nfB3.s 			page 271


 1725      FF
 1726 0228 89C7     		movl	%eax, %edi
 1727              	.LVL206:
 1728 022a 58       		popl	%eax
 1729 022b 5A       		popl	%edx
 1730 022c 53       		pushl	%ebx
 1731 022d 57       		pushl	%edi
 1732              	.LEHB15:
 1733 022e E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 1733      FF
 1734              	.LEHE15:
 1735 0233 891C24   		movl	%ebx, (%esp)
 1736              	.LEHB16:
 1737 0236 E8FCFFFF 		call	_ZNSsD1Ev
 1737      FF
 1738              	.LEHE16:
 1739 023b EB1A     		jmp	.L181
 1740              	.L171:
 1741              	.L150:
 1742              	.L172:
 1743              	.L151:
 1744 023d 83EC0C   		subl	$12, %esp
 1745 0240 89C6     		movl	%eax, %esi
 1746 0242 57       		pushl	%edi
 1747 0243 E8FCFFFF 		call	__cxa_free_exception
 1747      FF
 1748 0248 891C24   		movl	%ebx, (%esp)
 1749              	.LEHB17:
 1750 024b E8FCFFFF 		call	_ZNSsD1Ev
 1750      FF
 1751              	.LEHE17:
 1752              	.L190:
 1753 0250 83C410   		addl	$16, %esp
 1754 0253 EB21     		jmp	.L156
 1755              	.L170:
 1756 0255 EB13     		jmp	.L185
 1757              	.L153:
 1758              	.L181:
 1759 0257 83C40C   		addl	$12, %esp
 1760 025a 68000000 		pushl	$_ZNSt13runtime_errorD1Ev
 1760      00
 1761 025f 68000000 		pushl	$_ZTISt13runtime_error
 1761      00
 1762 0264 57       		pushl	%edi
 1763              	.LEHB18:
 1764 0265 E8FCFFFF 		call	__cxa_throw
 1764      FF
 1765              	.L169:
 1766              	.L185:
 1767 026a 42       		incl	%edx
 1768 026b 89C6     		movl	%eax, %esi
 1769 026d 7507     		jne	.L156
 1770              	.L155:
 1771              		.cfi_escape 0x2e,0x0
 1772 026f E8FCFFFF 		call	_ZSt9terminatev
 1772      FF
 1773              	.LVL207:
GAS LISTING /tmp/cc23nfB3.s 			page 272


 1774              	.L173:
 1775              	.L191:
 1776 0274 89C6     		movl	%eax, %esi
 1777              	.LVL208:
 1778              	.L156:
 1779 0276 83EC0C   		subl	$12, %esp
 1780 0279 56       		pushl	%esi
 1781              		.cfi_escape 0x2e,0x10
 1782 027a E8FCFFFF 		call	_Unwind_Resume
 1782      FF
 1783              	.LEHE18:
 1784              	.LVL209:
 1785              	.L123:
 1786 027f 31F6     		xorl	%esi, %esi
 1787              	.LVL210:
 1788              	.L148:
 1789              	.LBE385:
 281:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/BufferFiller.i ****     }
 1790              		.loc 13 281 0
 1791 0281 8D65F4   		leal	-12(%ebp), %esp
 1792 0284 89F0     		movl	%esi, %eax
 1793 0286 5B       		popl	%ebx
 1794              	.LVL211:
 1795 0287 5E       		popl	%esi
 1796 0288 5F       		popl	%edi
 1797              	.LVL212:
 1798 0289 5D       		popl	%ebp
 1799 028a C3       		ret
 1800              		.cfi_endproc
 1801              	.LFE1267:
 1803              		.section	.gcc_except_table
 1804              		.align 4
 1805              	.LLSDA1267:
 1806 0018 FF       		.byte	0xff
 1807 0019 00       		.byte	0x0
 1808 001a 5D       		.uleb128 .LLSDATT1267-.LLSDATTD1267
 1809              	.LLSDATTD1267:
 1810 001b 01       		.byte	0x1
 1811 001c 54       		.uleb128 .LLSDACSE1267-.LLSDACSB1267
 1812              	.LLSDACSB1267:
 1813 001d 4A       		.uleb128 .LEHB4-.LFB1267
 1814 001e 02       		.uleb128 .LEHE4-.LEHB4
 1815 001f 00       		.uleb128 0x0
 1816 0020 00       		.uleb128 0x0
 1817 0021 65       		.uleb128 .LEHB5-.LFB1267
 1818 0022 05       		.uleb128 .LEHE5-.LEHB5
 1819 0023 B301     		.uleb128 .L168-.LFB1267
 1820 0025 00       		.uleb128 0x0
 1821 0026 7F       		.uleb128 .LEHB6-.LFB1267
 1822 0027 05       		.uleb128 .LEHE6-.LEHB6
 1823 0028 9101     		.uleb128 .L166-.LFB1267
 1824 002a 00       		.uleb128 0x0
 1825 002b 8701     		.uleb128 .LEHB7-.LFB1267
 1826 002d 05       		.uleb128 .LEHE7-.LEHB7
 1827 002e AE01     		.uleb128 .L164-.LFB1267
 1828 0030 03       		.uleb128 0x3
 1829 0031 9F01     		.uleb128 .LEHB8-.LFB1267
GAS LISTING /tmp/cc23nfB3.s 			page 273


 1830 0033 05       		.uleb128 .LEHE8-.LEHB8
 1831 0034 A901     		.uleb128 .L165-.LFB1267
 1832 0036 03       		.uleb128 0x3
 1833 0037 DD01     		.uleb128 .LEHB9-.LFB1267
 1834 0039 05       		.uleb128 .LEHE9-.LEHB9
 1835 003a AB02     		.uleb128 .L178-.LFB1267
 1836 003c 00       		.uleb128 0x0
 1837 003d F701     		.uleb128 .LEHB10-.LFB1267
 1838 003f 05       		.uleb128 .LEHE10-.LEHB10
 1839 0040 8902     		.uleb128 .L176-.LFB1267
 1840 0042 00       		.uleb128 0x0
 1841 0043 FF01     		.uleb128 .LEHB11-.LFB1267
 1842 0045 05       		.uleb128 .LEHE11-.LEHB11
 1843 0046 A602     		.uleb128 .L174-.LFB1267
 1844 0048 03       		.uleb128 0x3
 1845 0049 9702     		.uleb128 .LEHB12-.LFB1267
 1846 004b 05       		.uleb128 .LEHE12-.LEHB12
 1847 004c A102     		.uleb128 .L175-.LFB1267
 1848 004e 03       		.uleb128 0x3
 1849 004f 8203     		.uleb128 .LEHB13-.LFB1267
 1850 0051 75       		.uleb128 .LEHE13-.LEHB13
 1851 0052 00       		.uleb128 0x0
 1852 0053 00       		.uleb128 0x0
 1853 0054 9404     		.uleb128 .LEHB14-.LFB1267
 1854 0056 05       		.uleb128 .LEHE14-.LEHB14
 1855 0057 F404     		.uleb128 .L173-.LFB1267
 1856 0059 00       		.uleb128 0x0
 1857 005a AE04     		.uleb128 .LEHB15-.LFB1267
 1858 005c 05       		.uleb128 .LEHE15-.LEHB15
 1859 005d BD04     		.uleb128 .L171-.LFB1267
 1860 005f 00       		.uleb128 0x0
 1861 0060 B604     		.uleb128 .LEHB16-.LFB1267
 1862 0062 05       		.uleb128 .LEHE16-.LEHB16
 1863 0063 EA04     		.uleb128 .L169-.LFB1267
 1864 0065 03       		.uleb128 0x3
 1865 0066 CB04     		.uleb128 .LEHB17-.LFB1267
 1866 0068 05       		.uleb128 .LEHE17-.LEHB17
 1867 0069 D504     		.uleb128 .L170-.LFB1267
 1868 006b 03       		.uleb128 0x3
 1869 006c E504     		.uleb128 .LEHB18-.LFB1267
 1870 006e 1A       		.uleb128 .LEHE18-.LEHB18
 1871 006f 00       		.uleb128 0x0
 1872 0070 00       		.uleb128 0x0
 1873              	.LLSDACSE1267:
 1874 0071 00       		.byte	0x0
 1875 0072 00       		.byte	0x0
 1876 0073 7F       		.byte	0x7f
 1877 0074 7D       		.byte	0x7d
 1878 0075 000000   		.align 4
 1879              	.LLSDATT1267:
 1880 0078 00       		.byte	0x0
 1881              		.section	.text._ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE,"axG",@progbi
 1882              		.text
 1884              	T.340:
 1885              	.LFB1578:
 178:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 179:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 274


 180:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 181:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     /* NOTE: 'reload_forward()' needs to be implemented for each mode, because
 182:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *       addresses related to acceptance positions need to be adapted. This
 183:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *       is not the case for 'reload_backward()'. In no case of backward
 184:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****      *       reloading, there are important addresses to keep track.            */
 185:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE void 
 186:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(buffer_reload_backward)(QUEX_NAME(Buffer)* buffer)
 187:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
 188:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         size_t                 LoadedCharacterN = 0;
 189:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 190:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __quex_assert(buffer != 0x0);
 191:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __quex_assert(buffer->filler != 0x0);
 192:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 193:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( buffer->on_buffer_content_change != 0x0 ) {
 194:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* In contrast to 'reload forward', a reload backward is very well 
 195:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * conceivable, even if end of file pointer != 0x0.                          */
 196:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             buffer->on_buffer_content_change(buffer->_memory._front, 
 197:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                              QUEX_NAME(Buffer_text_end)(buffer));
 198:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 199:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 200:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         LoadedCharacterN = QUEX_NAME(BufferFiller_load_backward)(buffer);
 201:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         
 202:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* Backward lexing happens in two cases:
 203:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *
 204:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *  (1) When checking for a pre-condition. In this case, no dedicated acceptance
 205:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *      is involved. No acceptance positions are considered.
 206:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *  (2) When tracing back to get the end of a core pattern in pseudo-ambigous
 207:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *      post conditions. Then, no acceptance positions are involved, because
 208:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *      the start of the lexeme shall not drop before the begin of the buffer 
 209:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *      and the end of the core pattern, is of course, after the start of the 
 210:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *      lexeme. => there will be no reload backwards.                            */
 211:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 212:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 213:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE size_t 
 214:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(buffer_reload_forward)(QUEX_NAME(Buffer)*  buffer) 
 215:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
 216:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         size_t loaded_character_n = (size_t)-1;
 217:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 218:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __quex_assert(buffer != 0x0);
 219:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __quex_assert(buffer->filler != 0x0);
 220:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         __quex_assert(buffer->_memory._end_of_file_p == 0x0);
 221:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 222:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( buffer->_memory._end_of_file_p != 0x0 ) {
 223:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             return 0;
 224:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 225:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 226:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( buffer->on_buffer_content_change != 0x0 ) {
 227:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* If the end of file pointer is set, the reload will not be initiated,
 228:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * and the buffer remains as is. No reload happens, see above. 
 229:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              * => HERE: end of content = end of buffer.                             */
 230:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             buffer->on_buffer_content_change(buffer->_memory._front, 
 231:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                              buffer->_memory._back);
 232:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 233:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 234:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         loaded_character_n = QUEX_NAME(BufferFiller_load_forward)(buffer);
 235:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         return loaded_character_n;
 236:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
GAS LISTING /tmp/cc23nfB3.s 			page 275


 237:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 238:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE void
 239:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(__buffer_adapt_last_acceptance_input_position)(const size_t                  LoadedCh
 240:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                              QUEX_TYPE_CHARACTER_POSITION* pos)
 241:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     { 
 242:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         /* -- In general, there would be no harm if the last_acceptance_input_position
 243:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *    underflows, since it is set anyway. 
 244:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          * -- With template states, though, the value == 0 is used as a signal that 
 245:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          *    indicates that is has not been set, and thus, no seek has to happen.      
 246:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****          * -- Thus, we better do not underflow.*/
 247:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( *pos != 0x0 ) *pos -= (ptrdiff_t)LoadedCharacterN; 
 248:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 249:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 250:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE void
 251:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(__buffer_adapt_post_context_start_positions)(const size_t                  LoadedChar
 252:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                            QUEX_TYPE_CHARACTER_POSITION* pos_array,
 253:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                            const size_t                  N)
 254:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
 255:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_TYPE_CHARACTER_POSITION*  iterator = 0x0;
 256:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_TYPE_CHARACTER_POSITION*  End = pos_array + (ptrdiff_t)N;
 257:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         for(iterator = pos_array; iterator != End; ++iterator) {
 258:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             /* NOTE: When the post_context_start_position is still undefined the following operatio
 259:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****              *       underflow. But, do not care, once it is **assigned** to a meaningful value, it
 260:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****             *iterator -= (ptrdiff_t)LoadedCharacterN;
 261:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         }
 262:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 263:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 264:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_INLINE void 
 265:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     QUEX_NAME(buffer_reload_forward_LA_PC)(QUEX_NAME(Buffer)* buffer, 
 1886              		.loc 7 265 0
 1887              		.cfi_startproc
 1888              		.cfi_personality 0x0,__gxx_personality_v0
 1889              	.LVL213:
 1890 0357 55       		pushl	%ebp
 1891              	.LCFI30:
 1892              		.cfi_def_cfa_offset 8
 1893 0358 89E5     		movl	%esp, %ebp
 1894              		.cfi_offset 5, -8
 1895              	.LCFI31:
 1896              		.cfi_def_cfa_register 5
 1897 035a 56       		pushl	%esi
 1898 035b 89D6     		movl	%edx, %esi
 1899              		.cfi_offset 6, -12
 1900 035d 53       		pushl	%ebx
 1901              		.loc 7 265 0
 1902 035e 89C3     		movl	%eax, %ebx
 1903              		.cfi_offset 3, -16
 1904              	.LBB423:
 1905              	.LBB424:
 1906              	.LBB425:
 222:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( buffer->_memory._end_of_file_p != 0x0 ) {
 1907              		.loc 7 222 0
 1908 0360 31C0     		xorl	%eax, %eax
 1909              	.LVL214:
 1910 0362 837B0800 		cmpl	$0, 8(%ebx)
 1911 0366 751F     		jne	.L194
 1912              	.LVL215:
GAS LISTING /tmp/cc23nfB3.s 			page 276


 226:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( buffer->on_buffer_content_change != 0x0 ) {
 1913              		.loc 7 226 0
 1914 0368 8B432C   		movl	44(%ebx), %eax
 1915              	.LVL216:
 1916 036b 85C0     		testl	%eax, %eax
 1917 036d 740C     		je	.L195
 231:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                              buffer->_memory._back);
 1918              		.loc 7 231 0
 1919 036f 51       		pushl	%ecx
 1920 0370 51       		pushl	%ecx
 1921 0371 FF7304   		pushl	4(%ebx)
 1922 0374 FF33     		pushl	(%ebx)
 1923              		.cfi_escape 0x2e,0x10
 1924 0376 FFD0     		call	*%eax
 1925 0378 83C410   		addl	$16, %esp
 1926              	.LVL217:
 1927              	.L195:
 234:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         loaded_character_n = QUEX_NAME(BufferFiller_load_forward)(buffer);
 1928              		.loc 7 234 0
 1929 037b 83EC0C   		subl	$12, %esp
 1930 037e 53       		pushl	%ebx
 1931 037f E8FCFFFF 		call	_ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE
 1931      FF
 1932 0384 83C410   		addl	$16, %esp
 1933              	.LVL218:
 1934              	.L194:
 1935              	.LBE425:
 1936              	.LBE424:
 1937              	.LBB426:
 1938              	.LBB427:
 247:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         if( *pos != 0x0 ) *pos -= (ptrdiff_t)LoadedCharacterN; 
 1939              		.loc 7 247 0
 1940 0387 8B16     		movl	(%esi), %edx
 1941 0389 85D2     		testl	%edx, %edx
 1942 038b 7404     		je	.L197
 1943 038d 29C2     		subl	%eax, %edx
 1944 038f 8916     		movl	%edx, (%esi)
 1945              	.L197:
 1946              	.LBE427:
 1947              	.LBE426:
 1948              	.LBE423:
 266:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                            QUEX_TYPE_CHARACTER_POSITION* last_acceptance_input_posi
 267:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                            QUEX_TYPE_CHARACTER_POSITION* post_context_start_positio
 268:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                            const size_t                  PostContextN)
 269:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     {
 270:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         size_t  loaded_character_n = (size_t)-1;    
 271:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 272:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         loaded_character_n = QUEX_NAME(buffer_reload_forward)(buffer);
 273:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 274:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(__buffer_adapt_last_acceptance_input_position)(loaded_character_n,
 275:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                                  last_acceptance_input_position); 
 276:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i **** 
 277:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****         QUEX_NAME(__buffer_adapt_post_context_start_positions)(loaded_character_n,
 278:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                                post_context_start_position, 
 279:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****                                                                PostContextN);
 280:/home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/basic.i ****     }
 1949              		.loc 7 280 0
GAS LISTING /tmp/cc23nfB3.s 			page 277


 1950 0391 8D65F8   		leal	-8(%ebp), %esp
 1951 0394 5B       		popl	%ebx
 1952              	.LVL219:
 1953 0395 5E       		popl	%esi
 1954              	.LVL220:
 1955 0396 5D       		popl	%ebp
 1956 0397 C3       		ret
 1957              		.cfi_endproc
 1958              	.LFE1578:
 1960              		.section	.rodata.str1.1
 1961              	.LC4:
 1962 03ed 0A4C6578 		.string	"\nLexical analyzer mode 'PROGRAM':\nEnd of file occured before closing skip range delimit
 1962      6963616C 
 1962      20616E61 
 1962      6C797A65 
 1962      72206D6F 
 1963              	.LC5:
 1964 0481 0A202020 		.string	"\n    Match failure in mode 'PROGRAM'.\n    No 'on_failure' section provided for this mod
 1964      204D6174 
 1964      63682066 
 1964      61696C75 
 1964      72652069 
 1965              		.text
 1966              	.globl _ZN4quex35quex_scan_PROGRAM_analyzer_functionEPNS_9quex_scanE
 1968              	_ZN4quex35quex_scan_PROGRAM_analyzer_functionEPNS_9quex_scanE:
 1969              	.LFB1313:
  96:out/quex_scan.cpp **** {
 1970              		.loc 1 96 0
 1971              		.cfi_startproc
 1972              		.cfi_personality 0x0,__gxx_personality_v0
 1973              		.cfi_lsda 0x0,.LLSDA1313
 1974              	.LVL221:
 1975 0398 55       		pushl	%ebp
 1976              	.LCFI32:
 1977              		.cfi_def_cfa_offset 8
 1978 0399 89E5     		movl	%esp, %ebp
 1979              		.cfi_offset 5, -8
 1980              	.LCFI33:
 1981              		.cfi_def_cfa_register 5
 1982 039b 57       		pushl	%edi
 1983              	.LBB428:
 1984              	.LBB429:
8970:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
 1985              		.loc 1 8970 0
 1986 039c BF713800 		movl	$.L199, %edi
 1986      00
 1987              		.cfi_offset 7, -12
 1988              	.LVL222:
 1989              	.LBE429:
 1990              	.LBE428:
  96:out/quex_scan.cpp **** {
 1991              		.loc 1 96 0
 1992 03a1 56       		pushl	%esi
 1993 03a2 53       		pushl	%ebx
 1994 03a3 83EC3C   		subl	$60, %esp
  96:out/quex_scan.cpp **** {
 1995              		.loc 1 96 0
GAS LISTING /tmp/cc23nfB3.s 			page 278


 1996 03a6 8B5D08   		movl	8(%ebp), %ebx
 1997              		.cfi_offset 3, -20
 1998              		.cfi_offset 6, -16
 1999              	.LBB453:
 118:out/quex_scan.cpp ****     QUEX_TYPE_CHARACTER_POSITION   last_acceptance_input_position = (QUEX_TYPE_CHARACTER*)(0x00);
 2000              		.loc 1 118 0
 2001 03a9 C745E000 		movl	$0, -32(%ebp)
 2001      000000
 2002              	.LVL223:
 2003              	.LBB440:
8970:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
 2004              		.loc 1 8970 0
 2005 03b0 8D4318   		leal	24(%ebx), %eax
 2006 03b3 8945C4   		movl	%eax, -60(%ebp)
 2007              	.LVL224:
 2008              	.L833:
 2009              	.LBE440:
 143:out/quex_scan.cpp ****     if( me->buffer._character_at_lexeme_start != (QUEX_TYPE_CHARACTER)'\0' ) {
 2010              		.loc 1 143 0
 2011 03b6 8A5330   		movb	48(%ebx), %dl
 142:out/quex_scan.cpp ****     me->buffer._lexeme_start_p = me->buffer._input_p;
 2012              		.loc 1 142 0
 2013 03b9 8B4328   		movl	40(%ebx), %eax
 2014              	.LVL225:
 143:out/quex_scan.cpp ****     if( me->buffer._character_at_lexeme_start != (QUEX_TYPE_CHARACTER)'\0' ) {
 2015              		.loc 1 143 0
 2016 03bc 84D2     		testb	%dl, %dl
 142:out/quex_scan.cpp ****     me->buffer._lexeme_start_p = me->buffer._input_p;
 2017              		.loc 1 142 0
 2018 03be 89432C   		movl	%eax, 44(%ebx)
 143:out/quex_scan.cpp ****     if( me->buffer._character_at_lexeme_start != (QUEX_TYPE_CHARACTER)'\0' ) {
 2019              		.loc 1 143 0
 2020 03c1 7406     		je	.L830
 144:out/quex_scan.cpp ****         *(me->buffer._input_p) = me->buffer._character_at_lexeme_start;
 2021              		.loc 1 144 0
 2022 03c3 8810     		movb	%dl, (%eax)
 145:out/quex_scan.cpp ****         me->buffer._character_at_lexeme_start = (QUEX_TYPE_CHARACTER)'\0';
 2023              		.loc 1 145 0
 2024 03c5 C6433000 		movb	$0, 48(%ebx)
 2025              	.L830:
 149:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2026              		.loc 1 149 0
 2027 03c9 8B4328   		movl	40(%ebx), %eax
 150:out/quex_scan.cpp ****     switch( input ) {
 2028              		.loc 1 150 0
 2029 03cc 80387E   		cmpb	$126, (%eax)
 2030 03cf 0F879C34 		ja	.L199
 2030      0000
 2031 03d5 0FB610   		movzbl	(%eax), %edx
 2032 03d8 FF249530 		jmp	*.L244(,%edx,4)
 2032      010000
 2033              		.section	.rodata
 2034              		.align 4
 2035              		.align 4
 2036              	.L244:
 2037 0130 1A390000 		.long	.L202
 2038 0134 71380000 		.long	.L199
GAS LISTING /tmp/cc23nfB3.s 			page 279


 2039 0138 71380000 		.long	.L199
 2040 013c 71380000 		.long	.L199
 2041 0140 71380000 		.long	.L199
 2042 0144 71380000 		.long	.L199
 2043 0148 71380000 		.long	.L199
 2044 014c 71380000 		.long	.L199
 2045 0150 71380000 		.long	.L199
 2046 0154 E2350000 		.long	.L203
 2047 0158 E2350000 		.long	.L203
 2048 015c 71380000 		.long	.L199
 2049 0160 71380000 		.long	.L199
 2050 0164 E2350000 		.long	.L203
 2051 0168 71380000 		.long	.L199
 2052 016c 71380000 		.long	.L199
 2053 0170 71380000 		.long	.L199
 2054 0174 71380000 		.long	.L199
 2055 0178 71380000 		.long	.L199
 2056 017c 71380000 		.long	.L199
 2057 0180 71380000 		.long	.L199
 2058 0184 71380000 		.long	.L199
 2059 0188 71380000 		.long	.L199
 2060 018c 71380000 		.long	.L199
 2061 0190 71380000 		.long	.L199
 2062 0194 71380000 		.long	.L199
 2063 0198 71380000 		.long	.L199
 2064 019c 71380000 		.long	.L199
 2065 01a0 71380000 		.long	.L199
 2066 01a4 71380000 		.long	.L199
 2067 01a8 71380000 		.long	.L199
 2068 01ac 71380000 		.long	.L199
 2069 01b0 E2350000 		.long	.L203
 2070 01b4 92090000 		.long	.L204
 2071 01b8 2E040000 		.long	.L205
 2072 01bc 740D0000 		.long	.L206
 2073 01c0 71380000 		.long	.L199
 2074 01c4 CA350000 		.long	.L207
 2075 01c8 810A0000 		.long	.L208
 2076 01cc 2F080000 		.long	.L209
 2077 01d0 04350000 		.long	.L210
 2078 01d4 8E340000 		.long	.L211
 2079 01d8 C30B0000 		.long	.L212
 2080 01dc 970B0000 		.long	.L213
 2081 01e0 34320000 		.long	.L214
 2082 01e4 03080000 		.long	.L215
 2083 01e8 1C320000 		.long	.L216
 2084 01ec B4090000 		.long	.L217
 2085 01f0 BD040000 		.long	.L218
 2086 01f4 BD040000 		.long	.L218
 2087 01f8 BD040000 		.long	.L218
 2088 01fc BD040000 		.long	.L218
 2089 0200 BD040000 		.long	.L218
 2090 0204 BD040000 		.long	.L218
 2091 0208 BD040000 		.long	.L218
 2092 020c BD040000 		.long	.L218
 2093 0210 BD040000 		.long	.L218
 2094 0214 BD040000 		.long	.L218
 2095 0218 BE310000 		.long	.L219
GAS LISTING /tmp/cc23nfB3.s 			page 280


 2096 021c EA310000 		.long	.L220
 2097 0220 7A070000 		.long	.L221
 2098 0224 160F0000 		.long	.L222
 2099 0228 D7070000 		.long	.L223
 2100 022c 4A340000 		.long	.L224
 2101 0230 71380000 		.long	.L199
 2102 0234 DF030000 		.long	.L225
 2103 0238 DF030000 		.long	.L225
 2104 023c DF030000 		.long	.L225
 2105 0240 DF030000 		.long	.L225
 2106 0244 DF030000 		.long	.L225
 2107 0248 DF030000 		.long	.L225
 2108 024c DF030000 		.long	.L225
 2109 0250 DF030000 		.long	.L225
 2110 0254 DF030000 		.long	.L225
 2111 0258 DF030000 		.long	.L225
 2112 025c DF030000 		.long	.L225
 2113 0260 DF030000 		.long	.L225
 2114 0264 DF030000 		.long	.L225
 2115 0268 DF030000 		.long	.L225
 2116 026c DF030000 		.long	.L225
 2117 0270 DF030000 		.long	.L225
 2118 0274 DF030000 		.long	.L225
 2119 0278 DF030000 		.long	.L225
 2120 027c DF030000 		.long	.L225
 2121 0280 DF030000 		.long	.L225
 2122 0284 DF030000 		.long	.L225
 2123 0288 DF030000 		.long	.L225
 2124 028c DF030000 		.long	.L225
 2125 0290 DF030000 		.long	.L225
 2126 0294 DF030000 		.long	.L225
 2127 0298 DF030000 		.long	.L225
 2128 029c C0340000 		.long	.L226
 2129 02a0 A6070000 		.long	.L227
 2130 02a4 EC340000 		.long	.L228
 2131 02a8 44310000 		.long	.L229
 2132 02ac DF030000 		.long	.L225
 2133 02b0 71380000 		.long	.L199
 2134 02b4 DF030000 		.long	.L225
 2135 02b8 95080000 		.long	.L230
 2136 02bc 770C0000 		.long	.L231
 2137 02c0 EF0B0000 		.long	.L232
 2138 02c4 A50E0000 		.long	.L233
 2139 02c8 0A090000 		.long	.L234
 2140 02cc DF030000 		.long	.L225
 2141 02d0 DF030000 		.long	.L225
 2142 02d4 F9090000 		.long	.L235
 2143 02d8 DF030000 		.long	.L225
 2144 02dc DF030000 		.long	.L225
 2145 02e0 220B0000 		.long	.L236
 2146 02e4 DF030000 		.long	.L225
 2147 02e8 DF030000 		.long	.L225
 2148 02ec DF030000 		.long	.L225
 2149 02f0 DF030000 		.long	.L225
 2150 02f4 DF030000 		.long	.L225
 2151 02f8 DF030000 		.long	.L225
 2152 02fc 1D0E0000 		.long	.L237
GAS LISTING /tmp/cc23nfB3.s 			page 281


 2153 0300 DF030000 		.long	.L225
 2154 0304 AD0A0000 		.long	.L238
 2155 0308 DF030000 		.long	.L225
 2156 030c FF0C0000 		.long	.L239
 2157 0310 DF030000 		.long	.L225
 2158 0314 DF030000 		.long	.L225
 2159 0318 DF030000 		.long	.L225
 2160 031c 1C350000 		.long	.L240
 2161 0320 F10D0000 		.long	.L241
 2162 0324 34350000 		.long	.L242
 2163 0328 62340000 		.long	.L243
 2164              		.text
 2165              	.LVL226:
 2166              	.L225:
 259:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2167              		.loc 1 259 0
 2168 03df 8B5328   		movl	40(%ebx), %edx
 2169              	.LVL227:
 2170 03e2 BEDF0300 		movl	$.L225, %esi
 2170      00
 2171 03e7 8D4201   		leal	1(%edx), %eax
 2172              	.LVL228:
 2173 03ea 894328   		movl	%eax, 40(%ebx)
 261:out/quex_scan.cpp ****     switch( input ) {
 2174              		.loc 1 261 0
 2175 03ed 8A5201   		movb	1(%edx), %dl
 259:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2176              		.loc 1 259 0
 2177 03f0 B84C3200 		movl	$.L246, %eax
 2177      00
 2178              	.LVL229:
 261:out/quex_scan.cpp ****     switch( input ) {
 2179              		.loc 1 261 0
 2180 03f5 80FA5A   		cmpb	$90, %dl
 2181 03f8 771B     		ja	.L248
 2182 03fa 80FA41   		cmpb	$65, %dl
 2183 03fd 73E0     		jae	.L225
 2184 03ff 84D2     		testb	%dl, %dl
 2185 0401 0F84FC34 		je	.L247
 2185      0000
 2186 0407 83EA30   		subl	$48, %edx
 2187 040a 80FA09   		cmpb	$9, %dl
 2188 040d 0F87392E 		ja	.L711
 2188      0000
 2189 0413 EBCA     		jmp	.L225
 2190              	.L248:
 2191 0415 80FA5F   		cmpb	$95, %dl
 2192 0418 74C5     		je	.L225
 2193 041a 0F822C2E 		jb	.L711
 2193      0000
 2194 0420 83EA61   		subl	$97, %edx
 2195 0423 80FA19   		cmpb	$25, %dl
 2196 0426 0F87202E 		ja	.L711
 2196      0000
 2197 042c EBB1     		jmp	.L225
 2198              	.LVL230:
 2199              	.L205:
GAS LISTING /tmp/cc23nfB3.s 			page 282


 335:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2200              		.loc 1 335 0
 2201 042e 8B4328   		movl	40(%ebx), %eax
 2202              	.LVL231:
 2203 0431 8D5001   		leal	1(%eax), %edx
 2204              	.LVL232:
 2205 0434 895328   		movl	%edx, 40(%ebx)
 336:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2206              		.loc 1 336 0
 2207 0437 8A5001   		movb	1(%eax), %dl
 2208              	.LVL233:
 337:out/quex_scan.cpp ****     if( input < 0x23) {
 2209              		.loc 1 337 0
 2210 043a 80FA22   		cmpb	$34, %dl
 2211 043d 772F     		ja	.L249
 338:out/quex_scan.cpp ****         switch( input ) {
 2212              		.loc 1 338 0
 2213 043f 80FA21   		cmpb	$33, %dl
 337:out/quex_scan.cpp ****     if( input < 0x23) {
 2214              		.loc 1 337 0
 2215 0442 B85E3000 		movl	$.L250, %eax
 2215      00
 2216              	.LVL234:
 2217 0447 BE2E0400 		movl	$.L205, %esi
 2217      00
 338:out/quex_scan.cpp ****         switch( input ) {
 2218              		.loc 1 338 0
 2219 044c 7712     		ja	.L252
 2220 044e 80FA02   		cmpb	$2, %dl
 2221 0451 73DB     		jae	.L205
 2222 0453 84D2     		testb	%dl, %dl
 2223 0455 0F84A834 		je	.L247
 2223      0000
 2224 045b E9FE2B00 		jmp	.L687
 2224      00
 2225              	.L252:
 2226 0460 80FA22   		cmpb	$34, %dl
 2227 0463 0F85F52B 		jne	.L687
 2227      0000
 2228 0469 E94F2F00 		jmp	.L251
 2228      00
 2229              	.LVL235:
 2230              	.L249:
 375:out/quex_scan.cpp ****         if( input < 0x5C ) {
 2231              		.loc 1 375 0
 2232 046e 80FA5B   		cmpb	$91, %dl
 2233 0471 76BB     		jbe	.L205
 377:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
 2234              		.loc 1 377 0
 2235 0473 80FA5C   		cmpb	$92, %dl
 2236 0476 75B6     		jne	.L205
 2237              	.LVL236:
 2238              	.L253:
 391:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2239              		.loc 1 391 0
 2240 0478 8B4328   		movl	40(%ebx), %eax
 2241              	.LVL237:
GAS LISTING /tmp/cc23nfB3.s 			page 283


 2242 047b 8D5001   		leal	1(%eax), %edx
 2243              	.LVL238:
 2244 047e 895328   		movl	%edx, 40(%ebx)
 392:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2245              		.loc 1 392 0
 2246 0481 8A5001   		movb	1(%eax), %dl
 2247              	.LVL239:
 393:out/quex_scan.cpp ****     if( input < 0x23) {
 2248              		.loc 1 393 0
 2249 0484 80FA22   		cmpb	$34, %dl
 2250 0487 77E5     		ja	.L249
 394:out/quex_scan.cpp ****         switch( input ) {
 2251              		.loc 1 394 0
 2252 0489 80FA21   		cmpb	$33, %dl
 393:out/quex_scan.cpp ****     if( input < 0x23) {
 2253              		.loc 1 393 0
 2254 048c B8B80400 		movl	$.L255, %eax
 2254      00
 2255              	.LVL240:
 2256 0491 BE780400 		movl	$.L253, %esi
 2256      00
 394:out/quex_scan.cpp ****         switch( input ) {
 2257              		.loc 1 394 0
 2258 0496 7712     		ja	.L257
 2259 0498 80FA02   		cmpb	$2, %dl
 2260 049b 7391     		jae	.L205
 2261 049d 84D2     		testb	%dl, %dl
 2262 049f 0F845E34 		je	.L247
 2262      0000
 2263 04a5 E9B42B00 		jmp	.L687
 2263      00
 2264              	.L257:
 2265 04aa 80FA22   		cmpb	$34, %dl
 2266 04ad 0F85AB2B 		jne	.L687
 2266      0000
 2267 04b3 E92C2200 		jmp	.L256
 2267      00
 2268              	.L255:
 441:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2269              		.loc 1 441 0
 2270 04b8 E9A12B00 		jmp	.L687
 2270      00
 2271              	.L218:
 447:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2272              		.loc 1 447 0
 2273 04bd 8B5328   		movl	40(%ebx), %edx
 2274              	.LVL241:
 2275 04c0 BEBD0400 		movl	$.L218, %esi
 2275      00
 2276 04c5 8D4201   		leal	1(%edx), %eax
 2277              	.LVL242:
 2278 04c8 894328   		movl	%eax, 40(%ebx)
 449:out/quex_scan.cpp ****     switch( input ) {
 2279              		.loc 1 449 0
 2280 04cb 8A5201   		movb	1(%edx), %dl
 447:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2281              		.loc 1 447 0
GAS LISTING /tmp/cc23nfB3.s 			page 284


 2282 04ce B8743200 		movl	$.L258, %eax
 2282      00
 2283              	.LVL243:
 449:out/quex_scan.cpp ****     switch( input ) {
 2284              		.loc 1 449 0
 2285 04d3 84D2     		testb	%dl, %dl
 2286 04d5 0F842834 		je	.L247
 2286      0000
 2287 04db 83EA30   		subl	$48, %edx
 2288 04de 80FA09   		cmpb	$9, %dl
 2289 04e1 0F878D2D 		ja	.L713
 2289      0000
 2290 04e7 EBD4     		jmp	.L218
 2291              	.LVL244:
 2292              	.L261:
 470:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2293              		.loc 1 470 0
 2294 04e9 8B5328   		movl	40(%ebx), %edx
 2295              	.LVL245:
 2296 04ec BEE90400 		movl	$.L261, %esi
 2296      00
 2297 04f1 8D4201   		leal	1(%edx), %eax
 2298              	.LVL246:
 2299 04f4 894328   		movl	%eax, 40(%ebx)
 472:out/quex_scan.cpp ****     switch( input ) {
 2300              		.loc 1 472 0
 2301 04f7 8A5201   		movb	1(%edx), %dl
 470:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2302              		.loc 1 470 0
 2303 04fa B81E0500 		movl	$.L262, %eax
 2303      00
 2304              	.LVL247:
 472:out/quex_scan.cpp ****     switch( input ) {
 2305              		.loc 1 472 0
 2306 04ff 80FA66   		cmpb	$102, %dl
 2307 0502 0F84CE12 		je	.L263
 2307      0000
 2308 0508 80FA6E   		cmpb	$110, %dl
 2309 050b 0F840713 		je	.L264
 2309      0000
 2310 0511 84D2     		testb	%dl, %dl
 2311 0513 0F84EA33 		je	.L247
 2311      0000
 2312 0519 E9402B00 		jmp	.L687
 2312      00
 2313              	.LVL248:
 2314              	.L262:
 479:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2315              		.loc 1 479 0
 2316 051e E93B2B00 		jmp	.L687
 2316      00
 2317              	.L266:
 485:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2318              		.loc 1 485 0
 2319 0523 8B5328   		movl	40(%ebx), %edx
 2320              	.LVL249:
 2321 0526 BE230500 		movl	$.L266, %esi
GAS LISTING /tmp/cc23nfB3.s 			page 285


 2321      00
 2322 052b 8D4201   		leal	1(%edx), %eax
 2323              	.LVL250:
 2324 052e 894328   		movl	%eax, 40(%ebx)
 487:out/quex_scan.cpp ****     switch( input ) {
 2325              		.loc 1 487 0
 2326 0531 8A5201   		movb	1(%edx), %dl
 485:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2327              		.loc 1 485 0
 2328 0534 B8680500 		movl	$.L267, %eax
 2328      00
 2329              	.LVL251:
 487:out/quex_scan.cpp ****     switch( input ) {
 2330              		.loc 1 487 0
 2331 0539 80FA6E   		cmpb	$110, %dl
 2332 053c 0F84E010 		je	.L269
 2332      0000
 2333 0542 7716     		ja	.L271
 2334 0544 84D2     		testb	%dl, %dl
 2335 0546 0F84B733 		je	.L247
 2335      0000
 2336 054c 80FA6C   		cmpb	$108, %dl
 2337 054f 0F85092B 		jne	.L687
 2337      0000
 2338 0555 E92A1100 		jmp	.L268
 2338      00
 2339              	.L271:
 2340 055a 80FA72   		cmpb	$114, %dl
 2341 055d 0F85FB2A 		jne	.L687
 2341      0000
 2342 0563 E9EB1000 		jmp	.L270
 2342      00
 2343              	.LVL252:
 2344              	.L267:
 495:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2345              		.loc 1 495 0
 2346 0568 E9F12A00 		jmp	.L687
 2346      00
 2347              	.L273:
 501:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2348              		.loc 1 501 0
 2349 056d 8B5328   		movl	40(%ebx), %edx
 2350              	.LVL253:
 2351 0570 BE6D0500 		movl	$.L273, %esi
 2351      00
 2352 0575 8D4201   		leal	1(%edx), %eax
 2353              	.LVL254:
 2354 0578 894328   		movl	%eax, 40(%ebx)
 503:out/quex_scan.cpp ****     switch( input ) {
 2355              		.loc 1 503 0
 2356 057b 8A5201   		movb	1(%edx), %dl
 501:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2357              		.loc 1 501 0
 2358 057e B8990500 		movl	$.L274, %eax
 2358      00
 2359              	.LVL255:
 503:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 286


 2360              		.loc 1 503 0
 2361 0583 84D2     		testb	%dl, %dl
 2362 0585 0F847833 		je	.L247
 2362      0000
 2363 058b 80FA65   		cmpb	$101, %dl
 2364 058e 0F85CA2A 		jne	.L687
 2364      0000
 2365 0594 E9CE0F00 		jmp	.L275
 2365      00
 2366              	.LVL256:
 2367              	.L274:
 509:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2368              		.loc 1 509 0
 2369 0599 E9C02A00 		jmp	.L687
 2369      00
 2370              	.L276:
 2371 059e BF1C3400 		movl	$.L260, %edi
 2371      00
 2372              	.L277:
 515:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2373              		.loc 1 515 0
 2374 05a3 8B5328   		movl	40(%ebx), %edx
 2375              	.LVL257:
 2376 05a6 BEA30500 		movl	$.L277, %esi
 2376      00
 2377 05ab 8D4201   		leal	1(%edx), %eax
 2378              	.LVL258:
 2379 05ae 894328   		movl	%eax, 40(%ebx)
 517:out/quex_scan.cpp ****     switch( input ) {
 2380              		.loc 1 517 0
 2381 05b1 8A5201   		movb	1(%edx), %dl
 515:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2382              		.loc 1 515 0
 2383 05b4 B8FD0500 		movl	$.L278, %eax
 2383      00
 2384              	.LVL259:
 517:out/quex_scan.cpp ****     switch( input ) {
 2385              		.loc 1 517 0
 2386 05b9 80FA65   		cmpb	$101, %dl
 2387 05bc 0F8461FF 		je	.L266
 2387      FFFF
 2388 05c2 7725     		ja	.L280
 2389 05c4 80FA20   		cmpb	$32, %dl
 2390 05c7 74DA     		je	.L277
 2391 05c9 7713     		ja	.L281
 2392 05cb 84D2     		testb	%dl, %dl
 2393 05cd 0F843033 		je	.L247
 2393      0000
 2394 05d3 80FA09   		cmpb	$9, %dl
 2395 05d6 0F85822A 		jne	.L687
 2395      0000
 2396 05dc EBC5     		jmp	.L277
 2397              	.L281:
 2398 05de 80FA64   		cmpb	$100, %dl
 2399 05e1 0F85772A 		jne	.L687
 2399      0000
 2400 05e7 EB84     		jmp	.L273
GAS LISTING /tmp/cc23nfB3.s 			page 287


 2401              	.L280:
 2402 05e9 80FA69   		cmpb	$105, %dl
 2403 05ec 0F84F7FE 		je	.L261
 2403      FFFF
 2404 05f2 80FA70   		cmpb	$112, %dl
 2405 05f5 0F85632A 		jne	.L687
 2405      0000
 2406 05fb EB05     		jmp	.L279
 2407              	.LVL260:
 2408              	.L278:
 528:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2409              		.loc 1 528 0
 2410 05fd E95C2A00 		jmp	.L687
 2410      00
 2411              	.L279:
 534:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2412              		.loc 1 534 0
 2413 0602 8B5328   		movl	40(%ebx), %edx
 2414              	.LVL261:
 2415 0605 BE020600 		movl	$.L279, %esi
 2415      00
 2416 060a 8D4201   		leal	1(%edx), %eax
 2417              	.LVL262:
 2418 060d 894328   		movl	%eax, 40(%ebx)
 536:out/quex_scan.cpp ****     switch( input ) {
 2419              		.loc 1 536 0
 2420 0610 8A5201   		movb	1(%edx), %dl
 534:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2421              		.loc 1 534 0
 2422 0613 B82E0600 		movl	$.L283, %eax
 2422      00
 2423              	.LVL263:
 536:out/quex_scan.cpp ****     switch( input ) {
 2424              		.loc 1 536 0
 2425 0618 84D2     		testb	%dl, %dl
 2426 061a 0F84E332 		je	.L247
 2426      0000
 2427 0620 80FA72   		cmpb	$114, %dl
 2428 0623 0F85352A 		jne	.L687
 2428      0000
 2429 0629 E97E0E00 		jmp	.L284
 2429      00
 2430              	.LVL264:
 2431              	.L283:
 542:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2432              		.loc 1 542 0
 2433 062e E92B2A00 		jmp	.L687
 2433      00
 2434              	.L285:
 548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2435              		.loc 1 548 0
 2436 0633 8B5328   		movl	40(%ebx), %edx
 2437              	.LVL265:
 2438 0636 BE330600 		movl	$.L285, %esi
 2438      00
 2439 063b 8D4201   		leal	1(%edx), %eax
 2440              	.LVL266:
GAS LISTING /tmp/cc23nfB3.s 			page 288


 2441 063e 894328   		movl	%eax, 40(%ebx)
 550:out/quex_scan.cpp ****     switch( input ) {
 2442              		.loc 1 550 0
 2443 0641 8A5201   		movb	1(%edx), %dl
 548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2444              		.loc 1 548 0
 2445 0644 B8770600 		movl	$.L286, %eax
 2445      00
 2446              	.LVL267:
 550:out/quex_scan.cpp ****     switch( input ) {
 2447              		.loc 1 550 0
 2448 0649 80FA20   		cmpb	$32, %dl
 2449 064c 74E5     		je	.L285
 2450 064e 7710     		ja	.L289
 2451 0650 84D2     		testb	%dl, %dl
 2452 0652 0F84AB32 		je	.L247
 2452      0000
 2453 0658 80FA09   		cmpb	$9, %dl
 2454 065b E9911200 		jmp	.L877
 2454      00
 2455              	.L289:
 2456 0660 80FA22   		cmpb	$34, %dl
 2457 0663 0F84D712 		je	.L287
 2457      0000
 2458 0669 80FA3C   		cmpb	$60, %dl
 2459 066c 0F85EC29 		jne	.L687
 2459      0000
 2460 0672 E98A1200 		jmp	.L288
 2460      00
 2461              	.LVL268:
 2462              	.L286:
 559:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2463              		.loc 1 559 0
 2464 0677 E9E22900 		jmp	.L687
 2464      00
 2465              	.L290:
 565:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2466              		.loc 1 565 0
 2467 067c 8B4328   		movl	40(%ebx), %eax
 2468              	.LVL269:
 2469 067f 8D5001   		leal	1(%eax), %edx
 2470              	.LVL270:
 2471 0682 895328   		movl	%edx, 40(%ebx)
 566:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2472              		.loc 1 566 0
 2473 0685 8A5001   		movb	1(%eax), %dl
 2474              	.LVL271:
 567:out/quex_scan.cpp ****     if( input < 0x22) {
 2475              		.loc 1 567 0
 2476 0688 80FA21   		cmpb	$33, %dl
 2477 068b 770F     		ja	.L291
 2478 068d B8A60600 		movl	$.L292, %eax
 2478      00
 2479              	.LVL272:
 2480 0692 BE7C0600 		movl	$.L290, %esi
 2480      00
 2481 0697 E9BF1200 		jmp	.L887
GAS LISTING /tmp/cc23nfB3.s 			page 289


 2481      00
 2482              	.LVL273:
 2483              	.L291:
 604:out/quex_scan.cpp ****         if( input == 0x22 ) {
 2484              		.loc 1 604 0
 2485 069c 80FA22   		cmpb	$34, %dl
 2486 069f 75DB     		jne	.L290
 2487 06a1 E95C2B00 		jmp	.L297
 2487      00
 2488              	.LVL274:
 2489              	.L292:
 612:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2490              		.loc 1 612 0
 2491 06a6 E9B32900 		jmp	.L687
 2491      00
 2492              	.LVL275:
 2493              	.L294:
 618:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2494              		.loc 1 618 0
 2495 06ab 8B4328   		movl	40(%ebx), %eax
 2496              	.LVL276:
 2497 06ae 8D5001   		leal	1(%eax), %edx
 2498              	.LVL277:
 2499 06b1 895328   		movl	%edx, 40(%ebx)
 619:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2500              		.loc 1 619 0
 2501 06b4 8A5001   		movb	1(%eax), %dl
 2502              	.LVL278:
 620:out/quex_scan.cpp ****     if( input < 0x3E) {
 2503              		.loc 1 620 0
 2504 06b7 80FA3D   		cmpb	$61, %dl
 2505 06ba 771A     		ja	.L295
 621:out/quex_scan.cpp ****         if( input >= 0x2 ) {
 2506              		.loc 1 621 0
 2507 06bc 80FA01   		cmpb	$1, %dl
 2508 06bf 77EA     		ja	.L294
 2509 06c1 B8E00600 		movl	$.L296, %eax
 2509      00
 2510              	.LVL279:
 2511 06c6 BEAB0600 		movl	$.L294, %esi
 2511      00
 623:out/quex_scan.cpp ****         } else if( input == 0x1 ) {
 2512              		.loc 1 623 0
 2513 06cb 0F853232 		jne	.L247
 2513      0000
 2514 06d1 E9882900 		jmp	.L687
 2514      00
 2515              	.LVL280:
 2516              	.L295:
 628:out/quex_scan.cpp ****         if( input == 0x3E ) {
 2517              		.loc 1 628 0
 2518 06d6 80FA3E   		cmpb	$62, %dl
 2519 06d9 75D0     		jne	.L294
 2520 06db E9222B00 		jmp	.L297
 2520      00
 2521              	.LVL281:
 2522              	.L296:
GAS LISTING /tmp/cc23nfB3.s 			page 290


 636:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2523              		.loc 1 636 0
 2524 06e0 E9792900 		jmp	.L687
 2524      00
 2525              	.L298:
 642:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2526              		.loc 1 642 0
 2527 06e5 8B5328   		movl	40(%ebx), %edx
 2528              	.LVL282:
 2529 06e8 BEE50600 		movl	$.L298, %esi
 2529      00
 2530 06ed 8D4201   		leal	1(%edx), %eax
 2531              	.LVL283:
 2532 06f0 894328   		movl	%eax, 40(%ebx)
 2533 06f3 B8FD0600 		movl	$.L299, %eax
 2533      00
 2534              	.LVL284:
 644:out/quex_scan.cpp ****     switch( input ) {
 2535              		.loc 1 644 0
 2536 06f8 8A5201   		movb	1(%edx), %dl
 2537 06fb EB62     		jmp	.L917
 2538              	.LVL285:
 2539              	.L299:
 650:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2540              		.loc 1 650 0
 2541 06fd E95C2900 		jmp	.L687
 2541      00
 2542              	.L301:
 656:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2543              		.loc 1 656 0
 2544 0702 8B5328   		movl	40(%ebx), %edx
 2545              	.LVL286:
 2546 0705 BE020700 		movl	$.L301, %esi
 2546      00
 2547 070a 8D4201   		leal	1(%edx), %eax
 2548              	.LVL287:
 2549 070d 894328   		movl	%eax, 40(%ebx)
 658:out/quex_scan.cpp ****     switch( input ) {
 2550              		.loc 1 658 0
 2551 0710 8A5201   		movb	1(%edx), %dl
 656:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2552              		.loc 1 656 0
 2553 0713 B8280700 		movl	$.L302, %eax
 2553      00
 2554              	.LVL288:
 658:out/quex_scan.cpp ****     switch( input ) {
 2555              		.loc 1 658 0
 2556 0718 80FA37   		cmpb	$55, %dl
 2557 071b 0F873D29 		ja	.L687
 2557      0000
 2558 0721 80FA30   		cmpb	$48, %dl
 2559 0724 73DC     		jae	.L301
 2560 0726 EB37     		jmp	.L917
 2561              	.LVL289:
 2562              	.L302:
 672:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2563              		.loc 1 672 0
GAS LISTING /tmp/cc23nfB3.s 			page 291


 2564 0728 E9312900 		jmp	.L687
 2564      00
 2565              	.L303:
 678:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2566              		.loc 1 678 0
 2567 072d 8B5328   		movl	40(%ebx), %edx
 2568              	.LVL290:
 2569 0730 BE2D0700 		movl	$.L303, %esi
 2569      00
 2570 0735 8D4201   		leal	1(%edx), %eax
 2571              	.LVL291:
 2572 0738 894328   		movl	%eax, 40(%ebx)
 680:out/quex_scan.cpp ****     switch( input ) {
 2573              		.loc 1 680 0
 2574 073b 8A5201   		movb	1(%edx), %dl
 678:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2575              		.loc 1 678 0
 2576 073e B8750700 		movl	$.L304, %eax
 2576      00
 2577              	.LVL292:
 680:out/quex_scan.cpp ****     switch( input ) {
 2578              		.loc 1 680 0
 2579 0743 80FA46   		cmpb	$70, %dl
 2580 0746 0F87D728 		ja	.L685
 2580      0000
 2581 074c 80FA41   		cmpb	$65, %dl
 2582 074f 73DC     		jae	.L303
 2583 0751 80FA39   		cmpb	$57, %dl
 2584 0754 0F870429 		ja	.L687
 2584      0000
 2585 075a 80FA30   		cmpb	$48, %dl
 2586 075d 73CE     		jae	.L303
 2587              	.L917:
 2588 075f 84D2     		testb	%dl, %dl
 2589 0761 0F849C31 		je	.L247
 2589      0000
 2590 0767 80FA27   		cmpb	$39, %dl
 2591 076a 0F85EE28 		jne	.L687
 2591      0000
 2592 0770 E92D2B00 		jmp	.L300
 2592      00
 2593              	.LVL293:
 2594              	.L304:
 708:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2595              		.loc 1 708 0
 2596 0775 E9E42800 		jmp	.L687
 2596      00
 2597              	.L221:
 714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2598              		.loc 1 714 0
 2599 077a 8B5328   		movl	40(%ebx), %edx
 2600              	.LVL294:
 2601 077d BE7A0700 		movl	$.L221, %esi
 2601      00
 2602 0782 8D4201   		leal	1(%edx), %eax
 2603              	.LVL295:
 2604 0785 894328   		movl	%eax, 40(%ebx)
GAS LISTING /tmp/cc23nfB3.s 			page 292


 716:out/quex_scan.cpp ****     switch( input ) {
 2605              		.loc 1 716 0
 2606 0788 8A4A01   		movb	1(%edx), %cl
 714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2607              		.loc 1 714 0
 2608 078b B8EE3000 		movl	$.L306, %eax
 2608      00
 2609              	.LVL296:
 716:out/quex_scan.cpp ****     switch( input ) {
 2610              		.loc 1 716 0
 2611 0790 84C9     		testb	%cl, %cl
 2612 0792 0F846B31 		je	.L247
 2612      0000
 2613 0798 80F93D   		cmpb	$61, %cl
 2614 079b 0F854D29 		jne	.L695
 2614      0000
 2615 07a1 E95C2900 		jmp	.L949
 2615      00
 2616              	.LVL297:
 2617              	.L227:
 728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2618              		.loc 1 728 0
 2619 07a6 8B5328   		movl	40(%ebx), %edx
 2620              	.LVL298:
 2621 07a9 BEA60700 		movl	$.L227, %esi
 2621      00
 2622 07ae 8D4201   		leal	1(%edx), %eax
 2623              	.LVL299:
 2624 07b1 894328   		movl	%eax, 40(%ebx)
 730:out/quex_scan.cpp ****     switch( input ) {
 2625              		.loc 1 730 0
 2626 07b4 8A4A01   		movb	1(%edx), %cl
 728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2627              		.loc 1 728 0
 2628 07b7 B8D20700 		movl	$.L308, %eax
 2628      00
 2629              	.LVL300:
 730:out/quex_scan.cpp ****     switch( input ) {
 2630              		.loc 1 730 0
 2631 07bc 84C9     		testb	%cl, %cl
 2632 07be 0F843F31 		je	.L247
 2632      0000
 2633 07c4 80F90A   		cmpb	$10, %cl
 2634 07c7 0F859128 		jne	.L687
 2634      0000
 2635 07cd E9C02800 		jmp	.L950
 2635      00
 2636              	.LVL301:
 2637              	.L308:
 736:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2638              		.loc 1 736 0
 2639 07d2 E9872800 		jmp	.L687
 2639      00
 2640              	.L223:
 742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2641              		.loc 1 742 0
 2642 07d7 8B5328   		movl	40(%ebx), %edx
GAS LISTING /tmp/cc23nfB3.s 			page 293


 2643              	.LVL302:
 2644 07da BED70700 		movl	$.L223, %esi
 2644      00
 2645 07df 8D4201   		leal	1(%edx), %eax
 2646              	.LVL303:
 2647 07e2 894328   		movl	%eax, 40(%ebx)
 744:out/quex_scan.cpp ****     switch( input ) {
 2648              		.loc 1 744 0
 2649 07e5 8A4A01   		movb	1(%edx), %cl
 742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2650              		.loc 1 742 0
 2651 07e8 B8AC3000 		movl	$.L310, %eax
 2651      00
 2652              	.LVL304:
 744:out/quex_scan.cpp ****     switch( input ) {
 2653              		.loc 1 744 0
 2654 07ed 84C9     		testb	%cl, %cl
 2655 07ef 0F840E31 		je	.L247
 2655      0000
 2656 07f5 80F93D   		cmpb	$61, %cl
 2657 07f8 0F85AE28 		jne	.L692
 2657      0000
 2658 07fe E9BD2800 		jmp	.L951
 2658      00
 2659              	.LVL305:
 2660              	.L215:
 756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2661              		.loc 1 756 0
 2662 0803 8B5328   		movl	40(%ebx), %edx
 2663              	.LVL306:
 2664 0806 BE030800 		movl	$.L215, %esi
 2664      00
 2665 080b 8D4201   		leal	1(%edx), %eax
 2666              	.LVL307:
 2667 080e 894328   		movl	%eax, 40(%ebx)
 758:out/quex_scan.cpp ****     switch( input ) {
 2668              		.loc 1 758 0
 2669 0811 8A4A01   		movb	1(%edx), %cl
 756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2670              		.loc 1 756 0
 2671 0814 B87A3500 		movl	$.L312, %eax
 2671      00
 2672              	.LVL308:
 758:out/quex_scan.cpp ****     switch( input ) {
 2673              		.loc 1 758 0
 2674 0819 84C9     		testb	%cl, %cl
 2675 081b 0F84E230 		je	.L247
 2675      0000
 2676 0821 80F93D   		cmpb	$61, %cl
 2677 0824 0F85502D 		jne	.L744
 2677      0000
 2678 082a E9E32E00 		jmp	.L952
 2678      00
 2679              	.LVL309:
 2680              	.L209:
 770:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2681              		.loc 1 770 0
GAS LISTING /tmp/cc23nfB3.s 			page 294


 2682 082f 8B4328   		movl	40(%ebx), %eax
 2683              	.LVL310:
 2684 0832 8D5001   		leal	1(%eax), %edx
 2685              	.LVL311:
 2686 0835 895328   		movl	%edx, 40(%ebx)
 771:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 2687              		.loc 1 771 0
 2688 0838 8A5001   		movb	1(%eax), %dl
 2689              	.LVL312:
 772:out/quex_scan.cpp ****     if( input < 0x27) {
 2690              		.loc 1 772 0
 2691 083b 80FA26   		cmpb	$38, %dl
 2692 083e 7730     		ja	.L314
 773:out/quex_scan.cpp ****         switch( input ) {
 2693              		.loc 1 773 0
 2694 0840 80FA08   		cmpb	$8, %dl
 772:out/quex_scan.cpp ****     if( input < 0x27) {
 2695              		.loc 1 772 0
 2696 0843 B8900800 		movl	$.L315, %eax
 2696      00
 2697              	.LVL313:
 2698 0848 BE2F0800 		movl	$.L209, %esi
 2698      00
 773:out/quex_scan.cpp ****         switch( input ) {
 2699              		.loc 1 773 0
 2700 084d 7716     		ja	.L316
 2701 084f 80FA02   		cmpb	$2, %dl
 2702 0852 0F838DFE 		jae	.L298
 2702      FFFF
 2703 0858 84D2     		testb	%dl, %dl
 2704 085a 0F84A330 		je	.L247
 2704      0000
 2705 0860 E9F92700 		jmp	.L687
 2705      00
 2706              	.L316:
 2707 0865 83EA0B   		subl	$11, %edx
 2708              	.LVL314:
 2709 0868 80FA1B   		cmpb	$27, %dl
 2710 086b E9402700 		jmp	.L881
 2710      00
 2711              	.LVL315:
 2712              	.L314:
 812:out/quex_scan.cpp ****         if( input == 0x27 ) {
 2713              		.loc 1 812 0
 2714 0870 80FA27   		cmpb	$39, %dl
 2715 0873 0F84292A 		je	.L300
 2715      0000
 814:out/quex_scan.cpp ****         } else if( input < 0x5C ) {
 2716              		.loc 1 814 0
 2717 0879 80FA5B   		cmpb	$91, %dl
 2718 087c 0F8663FE 		jbe	.L298
 2718      FFFF
 816:out/quex_scan.cpp ****         } else if( input == 0x5C ) {
 2719              		.loc 1 816 0
 2720 0882 80FA5C   		cmpb	$92, %dl
 2721 0885 0F855AFE 		jne	.L298
 2721      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 295


 2722 088b E9C62600 		jmp	.L317
 2722      00
 2723              	.LVL316:
 2724              	.L315:
 824:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 2725              		.loc 1 824 0
 2726 0890 E9C92700 		jmp	.L687
 2726      00
 2727              	.L230:
 830:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2728              		.loc 1 830 0
 2729 0895 8B5328   		movl	40(%ebx), %edx
 2730              	.LVL317:
 2731 0898 BE950800 		movl	$.L230, %esi
 2731      00
 2732 089d 8D4201   		leal	1(%edx), %eax
 2733              	.LVL318:
 2734 08a0 894328   		movl	%eax, 40(%ebx)
 832:out/quex_scan.cpp ****     switch( input ) {
 2735              		.loc 1 832 0
 2736 08a3 8A5201   		movb	1(%edx), %dl
 830:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2737              		.loc 1 830 0
 2738 08a6 B8050900 		movl	$.L318, %eax
 2738      00
 2739              	.LVL319:
 832:out/quex_scan.cpp ****     switch( input ) {
 2740              		.loc 1 832 0
 2741 08ab 80FA71   		cmpb	$113, %dl
 2742 08ae 773E     		ja	.L320
 2743 08b0 80FA61   		cmpb	$97, %dl
 2744 08b3 0F8326FB 		jae	.L225
 2744      FFFF
 2745 08b9 80FA5A   		cmpb	$90, %dl
 2746 08bc 7722     		ja	.L321
 2747 08be 80FA41   		cmpb	$65, %dl
 2748 08c1 0F8318FB 		jae	.L225
 2748      FFFF
 2749 08c7 84D2     		testb	%dl, %dl
 2750 08c9 0F843430 		je	.L247
 2750      0000
 2751 08cf 83EA30   		subl	$48, %edx
 2752 08d2 80FA09   		cmpb	$9, %dl
 2753 08d5 0F877129 		ja	.L711
 2753      0000
 2754 08db E9FFFAFF 		jmp	.L225
 2754      FF
 2755              	.L321:
 2756 08e0 80FA5F   		cmpb	$95, %dl
 2757 08e3 0F856329 		jne	.L711
 2757      0000
 2758 08e9 E9F1FAFF 		jmp	.L225
 2758      FF
 2759              	.L320:
 2760 08ee 80FA72   		cmpb	$114, %dl
 2761 08f1 0F84C124 		je	.L319
 2761      0000
GAS LISTING /tmp/cc23nfB3.s 			page 296


 2762 08f7 80FA7A   		cmpb	$122, %dl
 2763 08fa 0F874C29 		ja	.L711
 2763      0000
 2764 0900 E9DAFAFF 		jmp	.L225
 2764      FF
 2765              	.LVL320:
 2766              	.L318:
 900:out/quex_scan.cpp ****         goto _2536;
 2767              		.loc 1 900 0
 2768 0905 E9422900 		jmp	.L711
 2768      00
 2769              	.L234:
 906:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2770              		.loc 1 906 0
 2771 090a 8B5328   		movl	40(%ebx), %edx
 2772              	.LVL321:
 2773 090d BE0A0900 		movl	$.L234, %esi
 2773      00
 2774 0912 8D4201   		leal	1(%edx), %eax
 2775              	.LVL322:
 2776 0915 894328   		movl	%eax, 40(%ebx)
 908:out/quex_scan.cpp ****     switch( input ) {
 2777              		.loc 1 908 0
 2778 0918 8A5201   		movb	1(%edx), %dl
 906:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2779              		.loc 1 906 0
 2780 091b B88D0900 		movl	$.L322, %eax
 2780      00
 2781              	.LVL323:
 908:out/quex_scan.cpp ****     switch( input ) {
 2782              		.loc 1 908 0
 2783 0920 80FA6B   		cmpb	$107, %dl
 2784 0923 773E     		ja	.L325
 2785 0925 80FA61   		cmpb	$97, %dl
 2786 0928 0F83B1FA 		jae	.L225
 2786      FFFF
 2787 092e 80FA5A   		cmpb	$90, %dl
 2788 0931 7722     		ja	.L326
 2789 0933 80FA41   		cmpb	$65, %dl
 2790 0936 0F83A3FA 		jae	.L225
 2790      FFFF
 2791 093c 84D2     		testb	%dl, %dl
 2792 093e 0F84BF2F 		je	.L247
 2792      0000
 2793 0944 83EA30   		subl	$48, %edx
 2794 0947 80FA09   		cmpb	$9, %dl
 2795 094a 0F87FC28 		ja	.L711
 2795      0000
 2796 0950 E98AFAFF 		jmp	.L225
 2796      FF
 2797              	.L326:
 2798 0955 80FA5F   		cmpb	$95, %dl
 2799 0958 0F85EE28 		jne	.L711
 2799      0000
 2800 095e E97CFAFF 		jmp	.L225
 2800      FF
 2801              	.L325:
GAS LISTING /tmp/cc23nfB3.s 			page 297


 2802 0963 80FA6E   		cmpb	$110, %dl
 2803 0966 770E     		ja	.L327
 2804 0968 80FA6D   		cmpb	$109, %dl
 2805 096b 0F836EFA 		jae	.L225
 2805      FFFF
 2806 0971 E9502200 		jmp	.L323
 2806      00
 2807              	.L327:
 2808 0976 80FA6F   		cmpb	$111, %dl
 2809 0979 0F84D221 		je	.L324
 2809      0000
 2810 097f 80FA7A   		cmpb	$122, %dl
 2811 0982 0F87C428 		ja	.L711
 2811      0000
 2812 0988 E952FAFF 		jmp	.L225
 2812      FF
 2813              	.LVL324:
 2814              	.L322:
 976:out/quex_scan.cpp ****         goto _2536;
 2815              		.loc 1 976 0
 2816 098d E9BA2800 		jmp	.L711
 2816      00
 2817              	.L204:
 982:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2818              		.loc 1 982 0
 2819 0992 8B4328   		movl	40(%ebx), %eax
 2820              	.LVL325:
 2821 0995 8D5001   		leal	1(%eax), %edx
 2822              	.LVL326:
 2823 0998 895328   		movl	%edx, 40(%ebx)
 984:out/quex_scan.cpp ****     switch( input ) {
 2824              		.loc 1 984 0
 2825 099b 8A5001   		movb	1(%eax), %dl
 2826 099e 84D2     		testb	%dl, %dl
 2827 09a0 0F84532F 		je	.L329
 2827      0000
 2828 09a6 80FA3D   		cmpb	$61, %dl
 2829 09a9 0F856D27 		jne	.L698
 2829      0000
 2830 09af E9C42600 		jmp	.L953
 2830      00
 2831              	.LVL327:
 2832              	.L217:
 996:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2833              		.loc 1 996 0
 2834 09b4 8B5328   		movl	40(%ebx), %edx
 2835              	.LVL328:
 2836 09b7 BEB40900 		movl	$.L217, %esi
 2836      00
 2837 09bc 8D4201   		leal	1(%edx), %eax
 2838              	.LVL329:
 2839 09bf 894328   		movl	%eax, 40(%ebx)
 998:out/quex_scan.cpp ****     switch( input ) {
 2840              		.loc 1 998 0
 2841 09c2 8A4A01   		movb	1(%edx), %cl
 996:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2842              		.loc 1 996 0
GAS LISTING /tmp/cc23nfB3.s 			page 298


 2843 09c5 B8B63500 		movl	$.L331, %eax
 2843      00
 2844              	.LVL330:
 998:out/quex_scan.cpp ****     switch( input ) {
 2845              		.loc 1 998 0
 2846 09ca 80F92F   		cmpb	$47, %cl
 2847 09cd 0F84592D 		je	.L333
 2847      0000
 2848 09d3 7716     		ja	.L335
 2849 09d5 84C9     		testb	%cl, %cl
 2850 09d7 0F84262F 		je	.L247
 2850      0000
 2851 09dd 80F92A   		cmpb	$42, %cl
 2852 09e0 0F85D02B 		jne	.L747
 2852      0000
 2853 09e6 E9592C00 		jmp	.L954
 2853      00
 2854              	.L335:
 2855 09eb 80F93D   		cmpb	$61, %cl
 2856 09ee 0F85C22B 		jne	.L747
 2856      0000
 2857 09f4 E9112E00 		jmp	.L955
 2857      00
 2858              	.LVL331:
 2859              	.L235:
1012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2860              		.loc 1 1012 0
 2861 09f9 8B5328   		movl	40(%ebx), %edx
 2862              	.LVL332:
 2863 09fc BEF90900 		movl	$.L235, %esi
 2863      00
 2864 0a01 8D4201   		leal	1(%edx), %eax
 2865              	.LVL333:
 2866 0a04 894328   		movl	%eax, 40(%ebx)
1014:out/quex_scan.cpp ****     switch( input ) {
 2867              		.loc 1 1014 0
 2868 0a07 8A5201   		movb	1(%edx), %dl
1012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2869              		.loc 1 1012 0
 2870 0a0a B87C0A00 		movl	$.L336, %eax
 2870      00
 2871              	.LVL334:
1014:out/quex_scan.cpp ****     switch( input ) {
 2872              		.loc 1 1014 0
 2873 0a0f 80FA65   		cmpb	$101, %dl
 2874 0a12 773E     		ja	.L339
 2875 0a14 80FA61   		cmpb	$97, %dl
 2876 0a17 0F83C2F9 		jae	.L225
 2876      FFFF
 2877 0a1d 80FA5A   		cmpb	$90, %dl
 2878 0a20 7722     		ja	.L340
 2879 0a22 80FA41   		cmpb	$65, %dl
 2880 0a25 0F83B4F9 		jae	.L225
 2880      FFFF
 2881 0a2b 84D2     		testb	%dl, %dl
 2882 0a2d 0F84D02E 		je	.L247
 2882      0000
GAS LISTING /tmp/cc23nfB3.s 			page 299


 2883 0a33 83EA30   		subl	$48, %edx
 2884 0a36 80FA09   		cmpb	$9, %dl
 2885 0a39 0F870D28 		ja	.L711
 2885      0000
 2886 0a3f E99BF9FF 		jmp	.L225
 2886      FF
 2887              	.L340:
 2888 0a44 80FA5F   		cmpb	$95, %dl
 2889 0a47 0F85FF27 		jne	.L711
 2889      0000
 2890 0a4d E98DF9FF 		jmp	.L225
 2890      FF
 2891              	.L339:
 2892 0a52 80FA6D   		cmpb	$109, %dl
 2893 0a55 770E     		ja	.L341
 2894 0a57 80FA67   		cmpb	$103, %dl
 2895 0a5a 0F837FF9 		jae	.L225
 2895      FFFF
 2896 0a60 E9442000 		jmp	.L337
 2896      00
 2897              	.L341:
 2898 0a65 80FA6E   		cmpb	$110, %dl
 2899 0a68 0F84CA1F 		je	.L338
 2899      0000
 2900 0a6e 80FA7A   		cmpb	$122, %dl
 2901 0a71 0F87D527 		ja	.L711
 2901      0000
 2902 0a77 E963F9FF 		jmp	.L225
 2902      FF
 2903              	.LVL335:
 2904              	.L336:
1082:out/quex_scan.cpp ****         goto _2536;
 2905              		.loc 1 1082 0
 2906 0a7c E9CB2700 		jmp	.L711
 2906      00
 2907              	.L208:
1088:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2908              		.loc 1 1088 0
 2909 0a81 8B5328   		movl	40(%ebx), %edx
 2910              	.LVL336:
 2911 0a84 BE810A00 		movl	$.L208, %esi
 2911      00
 2912 0a89 8D4201   		leal	1(%edx), %eax
 2913              	.LVL337:
 2914 0a8c 894328   		movl	%eax, 40(%ebx)
1090:out/quex_scan.cpp ****     switch( input ) {
 2915              		.loc 1 1090 0
 2916 0a8f 8A4A01   		movb	1(%edx), %cl
1088:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2917              		.loc 1 1088 0
 2918 0a92 B8903100 		movl	$.L342, %eax
 2918      00
 2919              	.LVL338:
1090:out/quex_scan.cpp ****     switch( input ) {
 2920              		.loc 1 1090 0
 2921 0a97 84C9     		testb	%cl, %cl
 2922 0a99 0F84642E 		je	.L247
GAS LISTING /tmp/cc23nfB3.s 			page 300


 2922      0000
 2923 0a9f 80F926   		cmpb	$38, %cl
 2924 0aa2 0F85E826 		jne	.L703
 2924      0000
 2925 0aa8 E9F72600 		jmp	.L956
 2925      00
 2926              	.LVL339:
 2927              	.L238:
1102:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2928              		.loc 1 1102 0
 2929 0aad 8B5328   		movl	40(%ebx), %edx
 2930              	.LVL340:
 2931 0ab0 BEAD0A00 		movl	$.L238, %esi
 2931      00
 2932 0ab5 8D4201   		leal	1(%edx), %eax
 2933              	.LVL341:
 2934 0ab8 894328   		movl	%eax, 40(%ebx)
1104:out/quex_scan.cpp ****     switch( input ) {
 2935              		.loc 1 1104 0
 2936 0abb 8A5201   		movb	1(%edx), %dl
1102:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2937              		.loc 1 1102 0
 2938 0abe B81D0B00 		movl	$.L344, %eax
 2938      00
 2939              	.LVL342:
1104:out/quex_scan.cpp ****     switch( input ) {
 2940              		.loc 1 1104 0
 2941 0ac3 80FA6D   		cmpb	$109, %dl
 2942 0ac6 773E     		ja	.L346
 2943 0ac8 80FA61   		cmpb	$97, %dl
 2944 0acb 0F830EF9 		jae	.L225
 2944      FFFF
 2945 0ad1 80FA5A   		cmpb	$90, %dl
 2946 0ad4 7722     		ja	.L347
 2947 0ad6 80FA41   		cmpb	$65, %dl
 2948 0ad9 0F8300F9 		jae	.L225
 2948      FFFF
 2949 0adf 84D2     		testb	%dl, %dl
 2950 0ae1 0F841C2E 		je	.L247
 2950      0000
 2951 0ae7 83EA30   		subl	$48, %edx
 2952 0aea 80FA09   		cmpb	$9, %dl
 2953 0aed 0F875927 		ja	.L711
 2953      0000
 2954 0af3 E9E7F8FF 		jmp	.L225
 2954      FF
 2955              	.L347:
 2956 0af8 80FA5F   		cmpb	$95, %dl
 2957 0afb 0F854B27 		jne	.L711
 2957      0000
 2958 0b01 E9D9F8FF 		jmp	.L225
 2958      FF
 2959              	.L346:
 2960 0b06 80FA6E   		cmpb	$110, %dl
 2961 0b09 0F842F1C 		je	.L345
 2961      0000
 2962 0b0f 80FA7A   		cmpb	$122, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 301


 2963 0b12 0F873427 		ja	.L711
 2963      0000
 2964 0b18 E9C2F8FF 		jmp	.L225
 2964      FF
 2965              	.LVL343:
 2966              	.L344:
1172:out/quex_scan.cpp ****         goto _2536;
 2967              		.loc 1 1172 0
 2968 0b1d E92A2700 		jmp	.L711
 2968      00
 2969              	.L236:
1178:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2970              		.loc 1 1178 0
 2971 0b22 8B5328   		movl	40(%ebx), %edx
 2972              	.LVL344:
 2973 0b25 BE220B00 		movl	$.L236, %esi
 2973      00
 2974 0b2a 8D4201   		leal	1(%edx), %eax
 2975              	.LVL345:
 2976 0b2d 894328   		movl	%eax, 40(%ebx)
1180:out/quex_scan.cpp ****     switch( input ) {
 2977              		.loc 1 1180 0
 2978 0b30 8A5201   		movb	1(%edx), %dl
1178:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 2979              		.loc 1 1178 0
 2980 0b33 B8920B00 		movl	$.L348, %eax
 2980      00
 2981              	.LVL346:
1180:out/quex_scan.cpp ****     switch( input ) {
 2982              		.loc 1 1180 0
 2983 0b38 80FA6E   		cmpb	$110, %dl
 2984 0b3b 773E     		ja	.L350
 2985 0b3d 80FA61   		cmpb	$97, %dl
 2986 0b40 0F8399F8 		jae	.L225
 2986      FFFF
 2987 0b46 80FA5A   		cmpb	$90, %dl
 2988 0b49 7722     		ja	.L351
 2989 0b4b 80FA41   		cmpb	$65, %dl
 2990 0b4e 0F838BF8 		jae	.L225
 2990      FFFF
 2991 0b54 84D2     		testb	%dl, %dl
 2992 0b56 0F84A72D 		je	.L247
 2992      0000
 2993 0b5c 83EA30   		subl	$48, %edx
 2994 0b5f 80FA09   		cmpb	$9, %dl
 2995 0b62 0F87E426 		ja	.L711
 2995      0000
 2996 0b68 E972F8FF 		jmp	.L225
 2996      FF
 2997              	.L351:
 2998 0b6d 80FA5F   		cmpb	$95, %dl
 2999 0b70 0F85D626 		jne	.L711
 2999      0000
 3000 0b76 E964F8FF 		jmp	.L225
 3000      FF
 3001              	.L350:
 3002 0b7b 80FA6F   		cmpb	$111, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 302


 3003 0b7e 0F842A1A 		je	.L349
 3003      0000
 3004 0b84 80FA7A   		cmpb	$122, %dl
 3005 0b87 0F87BF26 		ja	.L711
 3005      0000
 3006 0b8d E94DF8FF 		jmp	.L225
 3006      FF
 3007              	.LVL347:
 3008              	.L348:
1248:out/quex_scan.cpp ****         goto _2536;
 3009              		.loc 1 1248 0
 3010 0b92 E9B52600 		jmp	.L711
 3010      00
 3011              	.L213:
1254:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3012              		.loc 1 1254 0
 3013 0b97 8B5328   		movl	40(%ebx), %edx
 3014              	.LVL348:
 3015 0b9a BE970B00 		movl	$.L213, %esi
 3015      00
 3016 0b9f 8D4201   		leal	1(%edx), %eax
 3017              	.LVL349:
 3018 0ba2 894328   		movl	%eax, 40(%ebx)
1256:out/quex_scan.cpp ****     switch( input ) {
 3019              		.loc 1 1256 0
 3020 0ba5 8A4A01   		movb	1(%edx), %cl
1254:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3021              		.loc 1 1254 0
 3022 0ba8 B8663500 		movl	$.L352, %eax
 3022      00
 3023              	.LVL350:
1256:out/quex_scan.cpp ****     switch( input ) {
 3024              		.loc 1 1256 0
 3025 0bad 84C9     		testb	%cl, %cl
 3026 0baf 0F844E2D 		je	.L247
 3026      0000
 3027 0bb5 80F93D   		cmpb	$61, %cl
 3028 0bb8 0F85A829 		jne	.L743
 3028      0000
 3029 0bbe E9672A00 		jmp	.L957
 3029      00
 3030              	.LVL351:
 3031              	.L212:
1268:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3032              		.loc 1 1268 0
 3033 0bc3 8B5328   		movl	40(%ebx), %edx
 3034              	.LVL352:
 3035 0bc6 BEC30B00 		movl	$.L212, %esi
 3035      00
 3036 0bcb 8D4201   		leal	1(%edx), %eax
 3037              	.LVL353:
 3038 0bce 894328   		movl	%eax, 40(%ebx)
1270:out/quex_scan.cpp ****     switch( input ) {
 3039              		.loc 1 1270 0
 3040 0bd1 8A4A01   		movb	1(%edx), %cl
1268:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3041              		.loc 1 1268 0
GAS LISTING /tmp/cc23nfB3.s 			page 303


 3042 0bd4 B88E3500 		movl	$.L354, %eax
 3042      00
 3043              	.LVL354:
1270:out/quex_scan.cpp ****     switch( input ) {
 3044              		.loc 1 1270 0
 3045 0bd9 84C9     		testb	%cl, %cl
 3046 0bdb 0F84222D 		je	.L247
 3046      0000
 3047 0be1 80F93D   		cmpb	$61, %cl
 3048 0be4 0F85A429 		jne	.L745
 3048      0000
 3049 0bea E9012C00 		jmp	.L958
 3049      00
 3050              	.LVL355:
 3051              	.L232:
1282:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3052              		.loc 1 1282 0
 3053 0bef 8B5328   		movl	40(%ebx), %edx
 3054              	.LVL356:
 3055 0bf2 BEEF0B00 		movl	$.L232, %esi
 3055      00
 3056 0bf7 8D4201   		leal	1(%edx), %eax
 3057              	.LVL357:
 3058 0bfa 894328   		movl	%eax, 40(%ebx)
1284:out/quex_scan.cpp ****     switch( input ) {
 3059              		.loc 1 1284 0
 3060 0bfd 8A5201   		movb	1(%edx), %dl
1282:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3061              		.loc 1 1282 0
 3062 0c00 B8720C00 		movl	$.L356, %eax
 3062      00
 3063              	.LVL358:
1284:out/quex_scan.cpp ****     switch( input ) {
 3064              		.loc 1 1284 0
 3065 0c05 80FA64   		cmpb	$100, %dl
 3066 0c08 773E     		ja	.L359
 3067 0c0a 80FA61   		cmpb	$97, %dl
 3068 0c0d 0F83CCF7 		jae	.L225
 3068      FFFF
 3069 0c13 80FA5A   		cmpb	$90, %dl
 3070 0c16 7722     		ja	.L360
 3071 0c18 80FA41   		cmpb	$65, %dl
 3072 0c1b 0F83BEF7 		jae	.L225
 3072      FFFF
 3073 0c21 84D2     		testb	%dl, %dl
 3074 0c23 0F84DA2C 		je	.L247
 3074      0000
 3075 0c29 83EA30   		subl	$48, %edx
 3076 0c2c 80FA09   		cmpb	$9, %dl
 3077 0c2f 0F871726 		ja	.L711
 3077      0000
 3078 0c35 E9A5F7FF 		jmp	.L225
 3078      FF
 3079              	.L360:
 3080 0c3a 80FA5F   		cmpb	$95, %dl
 3081 0c3d 0F850926 		jne	.L711
 3081      0000
GAS LISTING /tmp/cc23nfB3.s 			page 304


 3082 0c43 E997F7FF 		jmp	.L225
 3082      FF
 3083              	.L359:
 3084 0c48 80FA6E   		cmpb	$110, %dl
 3085 0c4b 770E     		ja	.L361
 3086 0c4d 80FA66   		cmpb	$102, %dl
 3087 0c50 0F8389F7 		jae	.L225
 3087      FFFF
 3088 0c56 E9B81400 		jmp	.L357
 3088      00
 3089              	.L361:
 3090 0c5b 80FA6F   		cmpb	$111, %dl
 3091 0c5e 0F842415 		je	.L358
 3091      0000
 3092 0c64 80FA7A   		cmpb	$122, %dl
 3093 0c67 0F87DF25 		ja	.L711
 3093      0000
 3094 0c6d E96DF7FF 		jmp	.L225
 3094      FF
 3095              	.LVL359:
 3096              	.L356:
1352:out/quex_scan.cpp ****         goto _2536;
 3097              		.loc 1 1352 0
 3098 0c72 E9D52500 		jmp	.L711
 3098      00
 3099              	.L231:
1358:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3100              		.loc 1 1358 0
 3101 0c77 8B5328   		movl	40(%ebx), %edx
 3102              	.LVL360:
 3103 0c7a BE770C00 		movl	$.L231, %esi
 3103      00
 3104 0c7f 8D4201   		leal	1(%edx), %eax
 3105              	.LVL361:
 3106 0c82 894328   		movl	%eax, 40(%ebx)
1360:out/quex_scan.cpp ****     switch( input ) {
 3107              		.loc 1 1360 0
 3108 0c85 8A5201   		movb	1(%edx), %dl
1358:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3109              		.loc 1 1358 0
 3110 0c88 B8FA0C00 		movl	$.L362, %eax
 3110      00
 3111              	.LVL362:
1360:out/quex_scan.cpp ****     switch( input ) {
 3112              		.loc 1 1360 0
 3113 0c8d 80FA67   		cmpb	$103, %dl
 3114 0c90 773E     		ja	.L365
 3115 0c92 80FA61   		cmpb	$97, %dl
 3116 0c95 0F8344F7 		jae	.L225
 3116      FFFF
 3117 0c9b 80FA5A   		cmpb	$90, %dl
 3118 0c9e 7722     		ja	.L366
 3119 0ca0 80FA41   		cmpb	$65, %dl
 3120 0ca3 0F8336F7 		jae	.L225
 3120      FFFF
 3121 0ca9 84D2     		testb	%dl, %dl
 3122 0cab 0F84522C 		je	.L247
GAS LISTING /tmp/cc23nfB3.s 			page 305


 3122      0000
 3123 0cb1 83EA30   		subl	$48, %edx
 3124 0cb4 80FA09   		cmpb	$9, %dl
 3125 0cb7 0F878F25 		ja	.L711
 3125      0000
 3126 0cbd E91DF7FF 		jmp	.L225
 3126      FF
 3127              	.L366:
 3128 0cc2 80FA5F   		cmpb	$95, %dl
 3129 0cc5 0F858125 		jne	.L711
 3129      0000
 3130 0ccb E90FF7FF 		jmp	.L225
 3130      FF
 3131              	.L365:
 3132 0cd0 80FA6E   		cmpb	$110, %dl
 3133 0cd3 770E     		ja	.L367
 3134 0cd5 80FA69   		cmpb	$105, %dl
 3135 0cd8 0F8301F7 		jae	.L225
 3135      FFFF
 3136 0cde E9370F00 		jmp	.L363
 3136      00
 3137              	.L367:
 3138 0ce3 80FA6F   		cmpb	$111, %dl
 3139 0ce6 0F84990F 		je	.L364
 3139      0000
 3140 0cec 80FA7A   		cmpb	$122, %dl
 3141 0cef 0F875725 		ja	.L711
 3141      0000
 3142 0cf5 E9E5F6FF 		jmp	.L225
 3142      FF
 3143              	.LVL363:
 3144              	.L362:
1428:out/quex_scan.cpp ****         goto _2536;
 3145              		.loc 1 1428 0
 3146 0cfa E94D2500 		jmp	.L711
 3146      00
 3147              	.L239:
1434:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3148              		.loc 1 1434 0
 3149 0cff 8B5328   		movl	40(%ebx), %edx
 3150              	.LVL364:
 3151 0d02 BEFF0C00 		movl	$.L239, %esi
 3151      00
 3152 0d07 8D4201   		leal	1(%edx), %eax
 3153              	.LVL365:
 3154 0d0a 894328   		movl	%eax, 40(%ebx)
1436:out/quex_scan.cpp ****     switch( input ) {
 3155              		.loc 1 1436 0
 3156 0d0d 8A5201   		movb	1(%edx), %dl
1434:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3157              		.loc 1 1434 0
 3158 0d10 B86F0D00 		movl	$.L368, %eax
 3158      00
 3159              	.LVL366:
1436:out/quex_scan.cpp ****     switch( input ) {
 3160              		.loc 1 1436 0
 3161 0d15 80FA67   		cmpb	$103, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 306


 3162 0d18 773E     		ja	.L370
 3163 0d1a 80FA61   		cmpb	$97, %dl
 3164 0d1d 0F83BCF6 		jae	.L225
 3164      FFFF
 3165 0d23 80FA5A   		cmpb	$90, %dl
 3166 0d26 7722     		ja	.L371
 3167 0d28 80FA41   		cmpb	$65, %dl
 3168 0d2b 0F83AEF6 		jae	.L225
 3168      FFFF
 3169 0d31 84D2     		testb	%dl, %dl
 3170 0d33 0F84CA2B 		je	.L247
 3170      0000
 3171 0d39 83EA30   		subl	$48, %edx
 3172 0d3c 80FA09   		cmpb	$9, %dl
 3173 0d3f 0F870725 		ja	.L711
 3173      0000
 3174 0d45 E995F6FF 		jmp	.L225
 3174      FF
 3175              	.L371:
 3176 0d4a 80FA5F   		cmpb	$95, %dl
 3177 0d4d 0F85F924 		jne	.L711
 3177      0000
 3178 0d53 E987F6FF 		jmp	.L225
 3178      FF
 3179              	.L370:
 3180 0d58 80FA68   		cmpb	$104, %dl
 3181 0d5b 0F84120D 		je	.L369
 3181      0000
 3182 0d61 80FA7A   		cmpb	$122, %dl
 3183 0d64 0F87E224 		ja	.L711
 3183      0000
 3184 0d6a E970F6FF 		jmp	.L225
 3184      FF
 3185              	.LVL367:
 3186              	.L368:
1504:out/quex_scan.cpp ****         goto _2536;
 3187              		.loc 1 1504 0
 3188 0d6f E9D82400 		jmp	.L711
 3188      00
 3189              	.L206:
1510:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3190              		.loc 1 1510 0
 3191 0d74 8B4B28   		movl	40(%ebx), %ecx
1513:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
 3192              		.loc 1 1513 0
 3193 0d77 BF1C3400 		movl	$.L260, %edi
 3193      00
 3194 0d7c BE740D00 		movl	$.L206, %esi
 3194      00
1510:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3195              		.loc 1 1510 0
 3196 0d81 8D4101   		leal	1(%ecx), %eax
 3197              	.LVL368:
 3198 0d84 894328   		movl	%eax, 40(%ebx)
1511:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 3199              		.loc 1 1511 0
 3200 0d87 8A5101   		movb	1(%ecx), %dl
GAS LISTING /tmp/cc23nfB3.s 			page 307


 3201              	.LVL369:
1513:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
 3202              		.loc 1 1513 0
 3203 0d8a 8945E0   		movl	%eax, -32(%ebp)
 3204              	.LVL370:
 3205 0d8d B8EC0D00 		movl	$.L372, %eax
 3205      00
 3206              	.LVL371:
1514:out/quex_scan.cpp ****     switch( input ) {
 3207              		.loc 1 1514 0
 3208 0d92 80FA65   		cmpb	$101, %dl
 3209 0d95 0F8488F7 		je	.L266
 3209      FFFF
 3210 0d9b 7738     		ja	.L374
 3211 0d9d 80FA23   		cmpb	$35, %dl
 3212 0da0 0F848A26 		je	.L373
 3212      0000
 3213 0da6 771F     		ja	.L375
 3214 0da8 80FA09   		cmpb	$9, %dl
 3215 0dab 0F84EDF7 		je	.L276
 3215      FFFF
 3216 0db1 80FA20   		cmpb	$32, %dl
 3217 0db4 0F84E4F7 		je	.L276
 3217      FFFF
 3218 0dba 84D2     		testb	%dl, %dl
 3219 0dbc 0F84412B 		je	.L247
 3219      0000
 3220 0dc2 E9552600 		jmp	.L260
 3220      00
 3221              	.L375:
 3222 0dc7 80FA64   		cmpb	$100, %dl
 3223 0dca 0F854C26 		jne	.L260
 3223      0000
 3224 0dd0 E998F7FF 		jmp	.L273
 3224      FF
 3225              	.L374:
 3226 0dd5 80FA69   		cmpb	$105, %dl
 3227 0dd8 0F840BF7 		je	.L261
 3227      FFFF
 3228 0dde 80FA70   		cmpb	$112, %dl
 3229 0de1 0F853526 		jne	.L260
 3229      0000
 3230 0de7 E916F8FF 		jmp	.L279
 3230      FF
 3231              	.L372:
1526:out/quex_scan.cpp ****         goto _2593;
 3232              		.loc 1 1526 0
 3233 0dec E92B2600 		jmp	.L260
 3233      00
 3234              	.L241:
1532:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3235              		.loc 1 1532 0
 3236 0df1 8B5328   		movl	40(%ebx), %edx
 3237              	.LVL372:
 3238 0df4 BEF10D00 		movl	$.L241, %esi
 3238      00
 3239 0df9 8D4201   		leal	1(%edx), %eax
GAS LISTING /tmp/cc23nfB3.s 			page 308


 3240              	.LVL373:
 3241 0dfc 894328   		movl	%eax, 40(%ebx)
1534:out/quex_scan.cpp ****     switch( input ) {
 3242              		.loc 1 1534 0
 3243 0dff 8A4A01   		movb	1(%edx), %cl
1532:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3244              		.loc 1 1532 0
 3245 0e02 B8303100 		movl	$.L376, %eax
 3245      00
 3246              	.LVL374:
1534:out/quex_scan.cpp ****     switch( input ) {
 3247              		.loc 1 1534 0
 3248 0e07 84C9     		testb	%cl, %cl
 3249 0e09 0F84F42A 		je	.L247
 3249      0000
 3250 0e0f 80F97C   		cmpb	$124, %cl
 3251 0e12 0F851823 		jne	.L699
 3251      0000
 3252 0e18 E93F2300 		jmp	.L959
 3252      00
 3253              	.LVL375:
 3254              	.L237:
1546:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3255              		.loc 1 1546 0
 3256 0e1d 8B5328   		movl	40(%ebx), %edx
 3257              	.LVL376:
 3258 0e20 BE1D0E00 		movl	$.L237, %esi
 3258      00
 3259 0e25 8D4201   		leal	1(%edx), %eax
 3260              	.LVL377:
 3261 0e28 894328   		movl	%eax, 40(%ebx)
1548:out/quex_scan.cpp ****     switch( input ) {
 3262              		.loc 1 1548 0
 3263 0e2b 8A5201   		movb	1(%edx), %dl
1546:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3264              		.loc 1 1546 0
 3265 0e2e B8A00E00 		movl	$.L378, %eax
 3265      00
 3266              	.LVL378:
1548:out/quex_scan.cpp ****     switch( input ) {
 3267              		.loc 1 1548 0
 3268 0e33 80FA73   		cmpb	$115, %dl
 3269 0e36 773E     		ja	.L381
 3270 0e38 80FA61   		cmpb	$97, %dl
 3271 0e3b 0F839EF5 		jae	.L225
 3271      FFFF
 3272 0e41 80FA5A   		cmpb	$90, %dl
 3273 0e44 7722     		ja	.L382
 3274 0e46 80FA41   		cmpb	$65, %dl
 3275 0e49 0F8390F5 		jae	.L225
 3275      FFFF
 3276 0e4f 84D2     		testb	%dl, %dl
 3277 0e51 0F84AC2A 		je	.L247
 3277      0000
 3278 0e57 83EA30   		subl	$48, %edx
 3279 0e5a 80FA09   		cmpb	$9, %dl
 3280 0e5d 0F87E923 		ja	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 309


 3280      0000
 3281 0e63 E977F5FF 		jmp	.L225
 3281      FF
 3282              	.L382:
 3283 0e68 80FA5F   		cmpb	$95, %dl
 3284 0e6b 0F85DB23 		jne	.L711
 3284      0000
 3285 0e71 E969F5FF 		jmp	.L225
 3285      FF
 3286              	.L381:
 3287 0e76 80FA76   		cmpb	$118, %dl
 3288 0e79 770E     		ja	.L383
 3289 0e7b 80FA75   		cmpb	$117, %dl
 3290 0e7e 0F835BF5 		jae	.L225
 3290      FFFF
 3291 0e84 E9EF0100 		jmp	.L379
 3291      00
 3292              	.L383:
 3293 0e89 80FA77   		cmpb	$119, %dl
 3294 0e8c 0F845B02 		je	.L380
 3294      0000
 3295 0e92 80FA7A   		cmpb	$122, %dl
 3296 0e95 0F87B123 		ja	.L711
 3296      0000
 3297 0e9b E93FF5FF 		jmp	.L225
 3297      FF
 3298              	.LVL379:
 3299              	.L378:
1616:out/quex_scan.cpp ****         goto _2536;
 3300              		.loc 1 1616 0
 3301 0ea0 E9A72300 		jmp	.L711
 3301      00
 3302              	.L233:
1622:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3303              		.loc 1 1622 0
 3304 0ea5 8B5328   		movl	40(%ebx), %edx
 3305              	.LVL380:
 3306 0ea8 BEA50E00 		movl	$.L233, %esi
 3306      00
 3307 0ead 8D4201   		leal	1(%edx), %eax
 3308              	.LVL381:
 3309 0eb0 894328   		movl	%eax, 40(%ebx)
1624:out/quex_scan.cpp ****     switch( input ) {
 3310              		.loc 1 1624 0
 3311 0eb3 8A5201   		movb	1(%edx), %dl
1622:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3312              		.loc 1 1622 0
 3313 0eb6 B8110F00 		movl	$.L384, %eax
 3313      00
 3314              	.LVL382:
1624:out/quex_scan.cpp ****     switch( input ) {
 3315              		.loc 1 1624 0
 3316 0ebb 80FA6B   		cmpb	$107, %dl
 3317 0ebe 773E     		ja	.L386
 3318 0ec0 80FA61   		cmpb	$97, %dl
 3319 0ec3 0F8316F5 		jae	.L225
 3319      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 310


 3320 0ec9 80FA5A   		cmpb	$90, %dl
 3321 0ecc 7722     		ja	.L387
 3322 0ece 80FA41   		cmpb	$65, %dl
 3323 0ed1 0F8308F5 		jae	.L225
 3323      FFFF
 3324 0ed7 84D2     		testb	%dl, %dl
 3325 0ed9 0F84242A 		je	.L247
 3325      0000
 3326 0edf 83EA30   		subl	$48, %edx
 3327 0ee2 80FA09   		cmpb	$9, %dl
 3328 0ee5 0F876123 		ja	.L711
 3328      0000
 3329 0eeb E9EFF4FF 		jmp	.L225
 3329      FF
 3330              	.L387:
 3331 0ef0 80FA5F   		cmpb	$95, %dl
 3332 0ef3 0F855323 		jne	.L711
 3332      0000
 3333 0ef9 E9E1F4FF 		jmp	.L225
 3333      FF
 3334              	.L386:
 3335 0efe 80FA6C   		cmpb	$108, %dl
 3336 0f01 743F     		je	.L385
 3337 0f03 80FA7A   		cmpb	$122, %dl
 3338 0f06 0F874023 		ja	.L711
 3338      0000
 3339 0f0c E9CEF4FF 		jmp	.L225
 3339      FF
 3340              	.LVL383:
 3341              	.L384:
1692:out/quex_scan.cpp ****         goto _2536;
 3342              		.loc 1 1692 0
 3343 0f11 E9362300 		jmp	.L711
 3343      00
 3344              	.L222:
1698:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3345              		.loc 1 1698 0
 3346 0f16 8B5328   		movl	40(%ebx), %edx
 3347              	.LVL384:
 3348 0f19 BE160F00 		movl	$.L222, %esi
 3348      00
 3349 0f1e 8D4201   		leal	1(%edx), %eax
 3350              	.LVL385:
 3351 0f21 894328   		movl	%eax, 40(%ebx)
1700:out/quex_scan.cpp ****     switch( input ) {
 3352              		.loc 1 1700 0
 3353 0f24 8A4A01   		movb	1(%edx), %cl
1698:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3354              		.loc 1 1698 0
 3355 0f27 B8243800 		movl	$.L388, %eax
 3355      00
 3356              	.LVL386:
1700:out/quex_scan.cpp ****     switch( input ) {
 3357              		.loc 1 1700 0
 3358 0f2c 84C9     		testb	%cl, %cl
 3359 0f2e 0F84CF29 		je	.L247
 3359      0000
GAS LISTING /tmp/cc23nfB3.s 			page 311


 3360 0f34 80F93D   		cmpb	$61, %cl
 3361 0f37 0F85E728 		jne	.L788
 3361      0000
 3362 0f3d E9C02400 		jmp	.L960
 3362      00
 3363              	.LVL387:
 3364              	.L385:
1712:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3365              		.loc 1 1712 0
 3366 0f42 8B5328   		movl	40(%ebx), %edx
 3367              	.LVL388:
 3368 0f45 BE420F00 		movl	$.L385, %esi
 3368      00
 3369 0f4a 8D4201   		leal	1(%edx), %eax
 3370              	.LVL389:
 3371 0f4d 894328   		movl	%eax, 40(%ebx)
1714:out/quex_scan.cpp ****     switch( input ) {
 3372              		.loc 1 1714 0
 3373 0f50 8A5201   		movb	1(%edx), %dl
1712:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3374              		.loc 1 1712 0
 3375 0f53 B8AE0F00 		movl	$.L390, %eax
 3375      00
 3376              	.LVL390:
1714:out/quex_scan.cpp ****     switch( input ) {
 3377              		.loc 1 1714 0
 3378 0f58 80FA72   		cmpb	$114, %dl
 3379 0f5b 773E     		ja	.L392
 3380 0f5d 80FA61   		cmpb	$97, %dl
 3381 0f60 0F8379F4 		jae	.L225
 3381      FFFF
 3382 0f66 80FA5A   		cmpb	$90, %dl
 3383 0f69 7722     		ja	.L393
 3384 0f6b 80FA41   		cmpb	$65, %dl
 3385 0f6e 0F836BF4 		jae	.L225
 3385      FFFF
 3386 0f74 84D2     		testb	%dl, %dl
 3387 0f76 0F848729 		je	.L247
 3387      0000
 3388 0f7c 83EA30   		subl	$48, %edx
 3389 0f7f 80FA09   		cmpb	$9, %dl
 3390 0f82 0F87C422 		ja	.L711
 3390      0000
 3391 0f88 E952F4FF 		jmp	.L225
 3391      FF
 3392              	.L393:
 3393 0f8d 80FA5F   		cmpb	$95, %dl
 3394 0f90 0F85B622 		jne	.L711
 3394      0000
 3395 0f96 E944F4FF 		jmp	.L225
 3395      FF
 3396              	.L392:
 3397 0f9b 80FA73   		cmpb	$115, %dl
 3398 0f9e 7413     		je	.L391
 3399 0fa0 80FA7A   		cmpb	$122, %dl
 3400 0fa3 0F87A322 		ja	.L711
 3400      0000
GAS LISTING /tmp/cc23nfB3.s 			page 312


 3401 0fa9 E931F4FF 		jmp	.L225
 3401      FF
 3402              	.LVL391:
 3403              	.L390:
1782:out/quex_scan.cpp ****         goto _2536;
 3404              		.loc 1 1782 0
 3405 0fae E9992200 		jmp	.L711
 3405      00
 3406              	.L391:
1788:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3407              		.loc 1 1788 0
 3408 0fb3 8B5328   		movl	40(%ebx), %edx
 3409              	.LVL392:
 3410 0fb6 BEB30F00 		movl	$.L391, %esi
 3410      00
 3411 0fbb 8D4201   		leal	1(%edx), %eax
 3412              	.LVL393:
 3413 0fbe 894328   		movl	%eax, 40(%ebx)
1790:out/quex_scan.cpp ****     switch( input ) {
 3414              		.loc 1 1790 0
 3415 0fc1 8A5201   		movb	1(%edx), %dl
1788:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3416              		.loc 1 1788 0
 3417 0fc4 B81F1000 		movl	$.L394, %eax
 3417      00
 3418              	.LVL394:
1790:out/quex_scan.cpp ****     switch( input ) {
 3419              		.loc 1 1790 0
 3420 0fc9 80FA64   		cmpb	$100, %dl
 3421 0fcc 773E     		ja	.L396
 3422 0fce 80FA61   		cmpb	$97, %dl
 3423 0fd1 0F8308F4 		jae	.L225
 3423      FFFF
 3424 0fd7 80FA5A   		cmpb	$90, %dl
 3425 0fda 7722     		ja	.L397
 3426 0fdc 80FA41   		cmpb	$65, %dl
 3427 0fdf 0F83FAF3 		jae	.L225
 3427      FFFF
 3428 0fe5 84D2     		testb	%dl, %dl
 3429 0fe7 0F841629 		je	.L247
 3429      0000
 3430 0fed 83EA30   		subl	$48, %edx
 3431 0ff0 80FA09   		cmpb	$9, %dl
 3432 0ff3 0F875322 		ja	.L711
 3432      0000
 3433 0ff9 E9E1F3FF 		jmp	.L225
 3433      FF
 3434              	.L397:
 3435 0ffe 80FA5F   		cmpb	$95, %dl
 3436 1001 0F854522 		jne	.L711
 3436      0000
 3437 1007 E9D3F3FF 		jmp	.L225
 3437      FF
 3438              	.L396:
 3439 100c 80FA65   		cmpb	$101, %dl
 3440 100f 7413     		je	.L395
 3441 1011 80FA7A   		cmpb	$122, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 313


 3442 1014 0F873222 		ja	.L711
 3442      0000
 3443 101a E9C0F3FF 		jmp	.L225
 3443      FF
 3444              	.LVL395:
 3445              	.L394:
1858:out/quex_scan.cpp ****         goto _2536;
 3446              		.loc 1 1858 0
 3447 101f E9282200 		jmp	.L711
 3447      00
 3448              	.L395:
1864:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3449              		.loc 1 1864 0
 3450 1024 8B5328   		movl	40(%ebx), %edx
 3451              	.LVL396:
 3452 1027 BE241000 		movl	$.L395, %esi
 3452      00
 3453 102c 8D4201   		leal	1(%edx), %eax
 3454              	.LVL397:
 3455 102f 894328   		movl	%eax, 40(%ebx)
1866:out/quex_scan.cpp ****     switch( input ) {
 3456              		.loc 1 1866 0
 3457 1032 8A5201   		movb	1(%edx), %dl
1864:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3458              		.loc 1 1864 0
 3459 1035 B87B3300 		movl	$.L398, %eax
 3459      00
 3460              	.LVL398:
1866:out/quex_scan.cpp ****     switch( input ) {
 3461              		.loc 1 1866 0
 3462 103a 80FA5A   		cmpb	$90, %dl
 3463 103d 7719     		ja	.L399
 3464 103f 80FA41   		cmpb	$65, %dl
 3465 1042 0F8397F3 		jae	.L225
 3465      FFFF
 3466 1048 84D2     		testb	%dl, %dl
 3467 104a 0F84B328 		je	.L247
 3467      0000
 3468 1050 83EA30   		subl	$48, %edx
 3469 1053 80FA09   		cmpb	$9, %dl
 3470 1056 EB15     		jmp	.L900
 3471              	.L399:
 3472 1058 80FA5F   		cmpb	$95, %dl
 3473 105b 0F847EF3 		je	.L225
 3473      FFFF
 3474 1061 0F821423 		jb	.L724
 3474      0000
 3475 1067 83EA61   		subl	$97, %edx
 3476 106a 80FA19   		cmpb	$25, %dl
 3477              	.L900:
 3478 106d 0F870823 		ja	.L724
 3478      0000
 3479 1073 E967F3FF 		jmp	.L225
 3479      FF
 3480              	.LVL399:
 3481              	.L379:
1940:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 314


 3482              		.loc 1 1940 0
 3483 1078 8B5328   		movl	40(%ebx), %edx
 3484              	.LVL400:
 3485 107b BE781000 		movl	$.L379, %esi
 3485      00
 3486 1080 8D4201   		leal	1(%edx), %eax
 3487              	.LVL401:
 3488 1083 894328   		movl	%eax, 40(%ebx)
1942:out/quex_scan.cpp ****     switch( input ) {
 3489              		.loc 1 1942 0
 3490 1086 8A5201   		movb	1(%edx), %dl
1940:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3491              		.loc 1 1940 0
 3492 1089 B8E81000 		movl	$.L400, %eax
 3492      00
 3493              	.LVL402:
1942:out/quex_scan.cpp ****     switch( input ) {
 3494              		.loc 1 1942 0
 3495 108e 80FA71   		cmpb	$113, %dl
 3496 1091 773E     		ja	.L402
 3497 1093 80FA61   		cmpb	$97, %dl
 3498 1096 0F8343F3 		jae	.L225
 3498      FFFF
 3499 109c 80FA5A   		cmpb	$90, %dl
 3500 109f 7722     		ja	.L403
 3501 10a1 80FA41   		cmpb	$65, %dl
 3502 10a4 0F8335F3 		jae	.L225
 3502      FFFF
 3503 10aa 84D2     		testb	%dl, %dl
 3504 10ac 0F845128 		je	.L247
 3504      0000
 3505 10b2 83EA30   		subl	$48, %edx
 3506 10b5 80FA09   		cmpb	$9, %dl
 3507 10b8 0F878E21 		ja	.L711
 3507      0000
 3508 10be E91CF3FF 		jmp	.L225
 3508      FF
 3509              	.L403:
 3510 10c3 80FA5F   		cmpb	$95, %dl
 3511 10c6 0F858021 		jne	.L711
 3511      0000
 3512 10cc E90EF3FF 		jmp	.L225
 3512      FF
 3513              	.L402:
 3514 10d1 80FA72   		cmpb	$114, %dl
 3515 10d4 0F842B02 		je	.L401
 3515      0000
 3516 10da 80FA7A   		cmpb	$122, %dl
 3517 10dd 0F876921 		ja	.L711
 3517      0000
 3518 10e3 E9F7F2FF 		jmp	.L225
 3518      FF
 3519              	.LVL403:
 3520              	.L400:
2010:out/quex_scan.cpp ****         goto _2536;
 3521              		.loc 1 2010 0
 3522 10e8 E95F2100 		jmp	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 315


 3522      00
 3523              	.L380:
2016:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3524              		.loc 1 2016 0
 3525 10ed 8B5328   		movl	40(%ebx), %edx
 3526              	.LVL404:
 3527 10f0 BEED1000 		movl	$.L380, %esi
 3527      00
 3528 10f5 8D4201   		leal	1(%edx), %eax
 3529              	.LVL405:
 3530 10f8 894328   		movl	%eax, 40(%ebx)
2018:out/quex_scan.cpp ****     switch( input ) {
 3531              		.loc 1 2018 0
 3532 10fb 8A5201   		movb	1(%edx), %dl
2016:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3533              		.loc 1 2016 0
 3534 10fe B8591100 		movl	$.L404, %eax
 3534      00
 3535              	.LVL406:
2018:out/quex_scan.cpp ****     switch( input ) {
 3536              		.loc 1 2018 0
 3537 1103 80FA68   		cmpb	$104, %dl
 3538 1106 773E     		ja	.L406
 3539 1108 80FA61   		cmpb	$97, %dl
 3540 110b 0F83CEF2 		jae	.L225
 3540      FFFF
 3541 1111 80FA5A   		cmpb	$90, %dl
 3542 1114 7722     		ja	.L407
 3543 1116 80FA41   		cmpb	$65, %dl
 3544 1119 0F83C0F2 		jae	.L225
 3544      FFFF
 3545 111f 84D2     		testb	%dl, %dl
 3546 1121 0F84DC27 		je	.L247
 3546      0000
 3547 1127 83EA30   		subl	$48, %edx
 3548 112a 80FA09   		cmpb	$9, %dl
 3549 112d 0F871921 		ja	.L711
 3549      0000
 3550 1133 E9A7F2FF 		jmp	.L225
 3550      FF
 3551              	.L407:
 3552 1138 80FA5F   		cmpb	$95, %dl
 3553 113b 0F850B21 		jne	.L711
 3553      0000
 3554 1141 E999F2FF 		jmp	.L225
 3554      FF
 3555              	.L406:
 3556 1146 80FA69   		cmpb	$105, %dl
 3557 1149 7413     		je	.L405
 3558 114b 80FA7A   		cmpb	$122, %dl
 3559 114e 0F87F820 		ja	.L711
 3559      0000
 3560 1154 E986F2FF 		jmp	.L225
 3560      FF
 3561              	.LVL407:
 3562              	.L404:
2086:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 316


 3563              		.loc 1 2086 0
 3564 1159 E9EE2000 		jmp	.L711
 3564      00
 3565              	.L405:
2092:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3566              		.loc 1 2092 0
 3567 115e 8B5328   		movl	40(%ebx), %edx
 3568              	.LVL408:
 3569 1161 BE5E1100 		movl	$.L405, %esi
 3569      00
 3570 1166 8D4201   		leal	1(%edx), %eax
 3571              	.LVL409:
 3572 1169 894328   		movl	%eax, 40(%ebx)
2094:out/quex_scan.cpp ****     switch( input ) {
 3573              		.loc 1 2094 0
 3574 116c 8A5201   		movb	1(%edx), %dl
2092:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3575              		.loc 1 2092 0
 3576 116f B8CA1100 		movl	$.L408, %eax
 3576      00
 3577              	.LVL410:
2094:out/quex_scan.cpp ****     switch( input ) {
 3578              		.loc 1 2094 0
 3579 1174 80FA73   		cmpb	$115, %dl
 3580 1177 773E     		ja	.L410
 3581 1179 80FA61   		cmpb	$97, %dl
 3582 117c 0F835DF2 		jae	.L225
 3582      FFFF
 3583 1182 80FA5A   		cmpb	$90, %dl
 3584 1185 7722     		ja	.L411
 3585 1187 80FA41   		cmpb	$65, %dl
 3586 118a 0F834FF2 		jae	.L225
 3586      FFFF
 3587 1190 84D2     		testb	%dl, %dl
 3588 1192 0F846B27 		je	.L247
 3588      0000
 3589 1198 83EA30   		subl	$48, %edx
 3590 119b 80FA09   		cmpb	$9, %dl
 3591 119e 0F87A820 		ja	.L711
 3591      0000
 3592 11a4 E936F2FF 		jmp	.L225
 3592      FF
 3593              	.L411:
 3594 11a9 80FA5F   		cmpb	$95, %dl
 3595 11ac 0F859A20 		jne	.L711
 3595      0000
 3596 11b2 E928F2FF 		jmp	.L225
 3596      FF
 3597              	.L410:
 3598 11b7 80FA74   		cmpb	$116, %dl
 3599 11ba 7413     		je	.L409
 3600 11bc 80FA7A   		cmpb	$122, %dl
 3601 11bf 0F878720 		ja	.L711
 3601      0000
 3602 11c5 E915F2FF 		jmp	.L225
 3602      FF
 3603              	.LVL411:
GAS LISTING /tmp/cc23nfB3.s 			page 317


 3604              	.L408:
2162:out/quex_scan.cpp ****         goto _2536;
 3605              		.loc 1 2162 0
 3606 11ca E97D2000 		jmp	.L711
 3606      00
 3607              	.L409:
2168:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3608              		.loc 1 2168 0
 3609 11cf 8B5328   		movl	40(%ebx), %edx
 3610              	.LVL412:
 3611 11d2 BECF1100 		movl	$.L409, %esi
 3611      00
 3612 11d7 8D4201   		leal	1(%edx), %eax
 3613              	.LVL413:
 3614 11da 894328   		movl	%eax, 40(%ebx)
2170:out/quex_scan.cpp ****     switch( input ) {
 3615              		.loc 1 2170 0
 3616 11dd 8A5201   		movb	1(%edx), %dl
2168:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3617              		.loc 1 2168 0
 3618 11e0 B83B1200 		movl	$.L412, %eax
 3618      00
 3619              	.LVL414:
2170:out/quex_scan.cpp ****     switch( input ) {
 3620              		.loc 1 2170 0
 3621 11e5 80FA62   		cmpb	$98, %dl
 3622 11e8 773E     		ja	.L414
 3623 11ea 80FA61   		cmpb	$97, %dl
 3624 11ed 0F83ECF1 		jae	.L225
 3624      FFFF
 3625 11f3 80FA5A   		cmpb	$90, %dl
 3626 11f6 7722     		ja	.L415
 3627 11f8 80FA41   		cmpb	$65, %dl
 3628 11fb 0F83DEF1 		jae	.L225
 3628      FFFF
 3629 1201 84D2     		testb	%dl, %dl
 3630 1203 0F84FA26 		je	.L247
 3630      0000
 3631 1209 83EA30   		subl	$48, %edx
 3632 120c 80FA09   		cmpb	$9, %dl
 3633 120f 0F873720 		ja	.L711
 3633      0000
 3634 1215 E9C5F1FF 		jmp	.L225
 3634      FF
 3635              	.L415:
 3636 121a 80FA5F   		cmpb	$95, %dl
 3637 121d 0F852920 		jne	.L711
 3637      0000
 3638 1223 E9B7F1FF 		jmp	.L225
 3638      FF
 3639              	.L414:
 3640 1228 80FA63   		cmpb	$99, %dl
 3641 122b 7413     		je	.L413
 3642 122d 80FA7A   		cmpb	$122, %dl
 3643 1230 0F871620 		ja	.L711
 3643      0000
 3644 1236 E9A4F1FF 		jmp	.L225
GAS LISTING /tmp/cc23nfB3.s 			page 318


 3644      FF
 3645              	.LVL415:
 3646              	.L412:
2238:out/quex_scan.cpp ****         goto _2536;
 3647              		.loc 1 2238 0
 3648 123b E90C2000 		jmp	.L711
 3648      00
 3649              	.L413:
2244:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3650              		.loc 1 2244 0
 3651 1240 8B5328   		movl	40(%ebx), %edx
 3652              	.LVL416:
 3653 1243 BE401200 		movl	$.L413, %esi
 3653      00
 3654 1248 8D4201   		leal	1(%edx), %eax
 3655              	.LVL417:
 3656 124b 894328   		movl	%eax, 40(%ebx)
2246:out/quex_scan.cpp ****     switch( input ) {
 3657              		.loc 1 2246 0
 3658 124e 8A5201   		movb	1(%edx), %dl
2244:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3659              		.loc 1 2244 0
 3660 1251 B8AC1200 		movl	$.L416, %eax
 3660      00
 3661              	.LVL418:
2246:out/quex_scan.cpp ****     switch( input ) {
 3662              		.loc 1 2246 0
 3663 1256 80FA67   		cmpb	$103, %dl
 3664 1259 773E     		ja	.L418
 3665 125b 80FA61   		cmpb	$97, %dl
 3666 125e 0F837BF1 		jae	.L225
 3666      FFFF
 3667 1264 80FA5A   		cmpb	$90, %dl
 3668 1267 7722     		ja	.L419
 3669 1269 80FA41   		cmpb	$65, %dl
 3670 126c 0F836DF1 		jae	.L225
 3670      FFFF
 3671 1272 84D2     		testb	%dl, %dl
 3672 1274 0F848926 		je	.L247
 3672      0000
 3673 127a 83EA30   		subl	$48, %edx
 3674 127d 80FA09   		cmpb	$9, %dl
 3675 1280 0F87C61F 		ja	.L711
 3675      0000
 3676 1286 E954F1FF 		jmp	.L225
 3676      FF
 3677              	.L419:
 3678 128b 80FA5F   		cmpb	$95, %dl
 3679 128e 0F85B81F 		jne	.L711
 3679      0000
 3680 1294 E946F1FF 		jmp	.L225
 3680      FF
 3681              	.L418:
 3682 1299 80FA68   		cmpb	$104, %dl
 3683 129c 7413     		je	.L417
 3684 129e 80FA7A   		cmpb	$122, %dl
 3685 12a1 0F87A51F 		ja	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 319


 3685      0000
 3686 12a7 E933F1FF 		jmp	.L225
 3686      FF
 3687              	.LVL419:
 3688              	.L416:
2314:out/quex_scan.cpp ****         goto _2536;
 3689              		.loc 1 2314 0
 3690 12ac E99B1F00 		jmp	.L711
 3690      00
 3691              	.L417:
2320:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3692              		.loc 1 2320 0
 3693 12b1 8B5328   		movl	40(%ebx), %edx
 3694              	.LVL420:
 3695 12b4 BEB11200 		movl	$.L417, %esi
 3695      00
 3696 12b9 8D4201   		leal	1(%edx), %eax
 3697              	.LVL421:
 3698 12bc 894328   		movl	%eax, 40(%ebx)
2322:out/quex_scan.cpp ****     switch( input ) {
 3699              		.loc 1 2322 0
 3700 12bf 8A5201   		movb	1(%edx), %dl
2320:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3701              		.loc 1 2320 0
 3702 12c2 B8CF3200 		movl	$.L420, %eax
 3702      00
 3703              	.LVL422:
2322:out/quex_scan.cpp ****     switch( input ) {
 3704              		.loc 1 2322 0
 3705 12c7 80FA5A   		cmpb	$90, %dl
 3706 12ca 7719     		ja	.L421
 3707 12cc 80FA41   		cmpb	$65, %dl
 3708 12cf 0F830AF1 		jae	.L225
 3708      FFFF
 3709 12d5 84D2     		testb	%dl, %dl
 3710 12d7 0F842626 		je	.L247
 3710      0000
 3711 12dd 83EA30   		subl	$48, %edx
 3712 12e0 80FA09   		cmpb	$9, %dl
 3713 12e3 EB15     		jmp	.L895
 3714              	.L421:
 3715 12e5 80FA5F   		cmpb	$95, %dl
 3716 12e8 0F84F1F0 		je	.L225
 3716      FFFF
 3717 12ee 0F82DB1F 		jb	.L717
 3717      0000
 3718 12f4 83EA61   		subl	$97, %edx
 3719 12f7 80FA19   		cmpb	$25, %dl
 3720              	.L895:
 3721 12fa 0F87CF1F 		ja	.L717
 3721      0000
 3722 1300 E9DAF0FF 		jmp	.L225
 3722      FF
 3723              	.LVL423:
 3724              	.L401:
2396:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3725              		.loc 1 2396 0
GAS LISTING /tmp/cc23nfB3.s 			page 320


 3726 1305 8B5328   		movl	40(%ebx), %edx
 3727              	.LVL424:
 3728 1308 BE051300 		movl	$.L401, %esi
 3728      00
 3729 130d 8D4201   		leal	1(%edx), %eax
 3730              	.LVL425:
 3731 1310 894328   		movl	%eax, 40(%ebx)
2398:out/quex_scan.cpp ****     switch( input ) {
 3732              		.loc 1 2398 0
 3733 1313 8A5201   		movb	1(%edx), %dl
2396:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3734              		.loc 1 2396 0
 3735 1316 B8711300 		movl	$.L422, %eax
 3735      00
 3736              	.LVL426:
2398:out/quex_scan.cpp ****     switch( input ) {
 3737              		.loc 1 2398 0
 3738 131b 80FA74   		cmpb	$116, %dl
 3739 131e 773E     		ja	.L424
 3740 1320 80FA61   		cmpb	$97, %dl
 3741 1323 0F83B6F0 		jae	.L225
 3741      FFFF
 3742 1329 80FA5A   		cmpb	$90, %dl
 3743 132c 7722     		ja	.L425
 3744 132e 80FA41   		cmpb	$65, %dl
 3745 1331 0F83A8F0 		jae	.L225
 3745      FFFF
 3746 1337 84D2     		testb	%dl, %dl
 3747 1339 0F84C425 		je	.L247
 3747      0000
 3748 133f 83EA30   		subl	$48, %edx
 3749 1342 80FA09   		cmpb	$9, %dl
 3750 1345 0F87011F 		ja	.L711
 3750      0000
 3751 134b E98FF0FF 		jmp	.L225
 3751      FF
 3752              	.L425:
 3753 1350 80FA5F   		cmpb	$95, %dl
 3754 1353 0F85F31E 		jne	.L711
 3754      0000
 3755 1359 E981F0FF 		jmp	.L225
 3755      FF
 3756              	.L424:
 3757 135e 80FA75   		cmpb	$117, %dl
 3758 1361 7413     		je	.L423
 3759 1363 80FA7A   		cmpb	$122, %dl
 3760 1366 0F87E01E 		ja	.L711
 3760      0000
 3761 136c E96EF0FF 		jmp	.L225
 3761      FF
 3762              	.LVL427:
 3763              	.L422:
2466:out/quex_scan.cpp ****         goto _2536;
 3764              		.loc 1 2466 0
 3765 1371 E9D61E00 		jmp	.L711
 3765      00
 3766              	.L423:
GAS LISTING /tmp/cc23nfB3.s 			page 321


2472:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3767              		.loc 1 2472 0
 3768 1376 8B5328   		movl	40(%ebx), %edx
 3769              	.LVL428:
 3770 1379 BE761300 		movl	$.L423, %esi
 3770      00
 3771 137e 8D4201   		leal	1(%edx), %eax
 3772              	.LVL429:
 3773 1381 894328   		movl	%eax, 40(%ebx)
2474:out/quex_scan.cpp ****     switch( input ) {
 3774              		.loc 1 2474 0
 3775 1384 8A5201   		movb	1(%edx), %dl
2472:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3776              		.loc 1 2472 0
 3777 1387 B8E21300 		movl	$.L426, %eax
 3777      00
 3778              	.LVL430:
2474:out/quex_scan.cpp ****     switch( input ) {
 3779              		.loc 1 2474 0
 3780 138c 80FA62   		cmpb	$98, %dl
 3781 138f 773E     		ja	.L428
 3782 1391 80FA61   		cmpb	$97, %dl
 3783 1394 0F8345F0 		jae	.L225
 3783      FFFF
 3784 139a 80FA5A   		cmpb	$90, %dl
 3785 139d 7722     		ja	.L429
 3786 139f 80FA41   		cmpb	$65, %dl
 3787 13a2 0F8337F0 		jae	.L225
 3787      FFFF
 3788 13a8 84D2     		testb	%dl, %dl
 3789 13aa 0F845325 		je	.L247
 3789      0000
 3790 13b0 83EA30   		subl	$48, %edx
 3791 13b3 80FA09   		cmpb	$9, %dl
 3792 13b6 0F87901E 		ja	.L711
 3792      0000
 3793 13bc E91EF0FF 		jmp	.L225
 3793      FF
 3794              	.L429:
 3795 13c1 80FA5F   		cmpb	$95, %dl
 3796 13c4 0F85821E 		jne	.L711
 3796      0000
 3797 13ca E910F0FF 		jmp	.L225
 3797      FF
 3798              	.L428:
 3799 13cf 80FA63   		cmpb	$99, %dl
 3800 13d2 7413     		je	.L427
 3801 13d4 80FA7A   		cmpb	$122, %dl
 3802 13d7 0F876F1E 		ja	.L711
 3802      0000
 3803 13dd E9FDEFFF 		jmp	.L225
 3803      FF
 3804              	.LVL431:
 3805              	.L426:
2542:out/quex_scan.cpp ****         goto _2536;
 3806              		.loc 1 2542 0
 3807 13e2 E9651E00 		jmp	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 322


 3807      00
 3808              	.L427:
2548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3809              		.loc 1 2548 0
 3810 13e7 8B5328   		movl	40(%ebx), %edx
 3811              	.LVL432:
 3812 13ea BEE71300 		movl	$.L427, %esi
 3812      00
 3813 13ef 8D4201   		leal	1(%edx), %eax
 3814              	.LVL433:
 3815 13f2 894328   		movl	%eax, 40(%ebx)
2550:out/quex_scan.cpp ****     switch( input ) {
 3816              		.loc 1 2550 0
 3817 13f5 8A5201   		movb	1(%edx), %dl
2548:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3818              		.loc 1 2548 0
 3819 13f8 B8531400 		movl	$.L430, %eax
 3819      00
 3820              	.LVL434:
2550:out/quex_scan.cpp ****     switch( input ) {
 3821              		.loc 1 2550 0
 3822 13fd 80FA73   		cmpb	$115, %dl
 3823 1400 773E     		ja	.L432
 3824 1402 80FA61   		cmpb	$97, %dl
 3825 1405 0F83D4EF 		jae	.L225
 3825      FFFF
 3826 140b 80FA5A   		cmpb	$90, %dl
 3827 140e 7722     		ja	.L433
 3828 1410 80FA41   		cmpb	$65, %dl
 3829 1413 0F83C6EF 		jae	.L225
 3829      FFFF
 3830 1419 84D2     		testb	%dl, %dl
 3831 141b 0F84E224 		je	.L247
 3831      0000
 3832 1421 83EA30   		subl	$48, %edx
 3833 1424 80FA09   		cmpb	$9, %dl
 3834 1427 0F871F1E 		ja	.L711
 3834      0000
 3835 142d E9ADEFFF 		jmp	.L225
 3835      FF
 3836              	.L433:
 3837 1432 80FA5F   		cmpb	$95, %dl
 3838 1435 0F85111E 		jne	.L711
 3838      0000
 3839 143b E99FEFFF 		jmp	.L225
 3839      FF
 3840              	.L432:
 3841 1440 80FA74   		cmpb	$116, %dl
 3842 1443 7413     		je	.L431
 3843 1445 80FA7A   		cmpb	$122, %dl
 3844 1448 0F87FE1D 		ja	.L711
 3844      0000
 3845 144e E98CEFFF 		jmp	.L225
 3845      FF
 3846              	.LVL435:
 3847              	.L430:
2618:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 323


 3848              		.loc 1 2618 0
 3849 1453 E9F41D00 		jmp	.L711
 3849      00
 3850              	.L431:
2624:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3851              		.loc 1 2624 0
 3852 1458 8B5328   		movl	40(%ebx), %edx
 3853              	.LVL436:
 3854 145b BE581400 		movl	$.L431, %esi
 3854      00
 3855 1460 8D4201   		leal	1(%edx), %eax
 3856              	.LVL437:
 3857 1463 894328   		movl	%eax, 40(%ebx)
2626:out/quex_scan.cpp ****     switch( input ) {
 3858              		.loc 1 2626 0
 3859 1466 8A5201   		movb	1(%edx), %dl
2624:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3860              		.loc 1 2624 0
 3861 1469 B8BB3200 		movl	$.L434, %eax
 3861      00
 3862              	.LVL438:
2626:out/quex_scan.cpp ****     switch( input ) {
 3863              		.loc 1 2626 0
 3864 146e 80FA5A   		cmpb	$90, %dl
 3865 1471 7719     		ja	.L435
 3866 1473 80FA41   		cmpb	$65, %dl
 3867 1476 0F8363EF 		jae	.L225
 3867      FFFF
 3868 147c 84D2     		testb	%dl, %dl
 3869 147e 0F847F24 		je	.L247
 3869      0000
 3870 1484 83EA30   		subl	$48, %edx
 3871 1487 80FA09   		cmpb	$9, %dl
 3872 148a EB15     		jmp	.L894
 3873              	.L435:
 3874 148c 80FA5F   		cmpb	$95, %dl
 3875 148f 0F844AEF 		je	.L225
 3875      FFFF
 3876 1495 0F82201E 		jb	.L716
 3876      0000
 3877 149b 83EA61   		subl	$97, %edx
 3878 149e 80FA19   		cmpb	$25, %dl
 3879              	.L894:
 3880 14a1 0F87141E 		ja	.L716
 3880      0000
 3881 14a7 E933EFFF 		jmp	.L225
 3881      FF
 3882              	.LVL439:
 3883              	.L284:
2700:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3884              		.loc 1 2700 0
 3885 14ac 8B5328   		movl	40(%ebx), %edx
 3886              	.LVL440:
 3887 14af BEAC1400 		movl	$.L284, %esi
 3887      00
 3888 14b4 8D4201   		leal	1(%edx), %eax
 3889              	.LVL441:
GAS LISTING /tmp/cc23nfB3.s 			page 324


 3890 14b7 894328   		movl	%eax, 40(%ebx)
2702:out/quex_scan.cpp ****     switch( input ) {
 3891              		.loc 1 2702 0
 3892 14ba 8A5201   		movb	1(%edx), %dl
2700:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3893              		.loc 1 2700 0
 3894 14bd B8D51400 		movl	$.L436, %eax
 3894      00
 3895              	.LVL442:
2702:out/quex_scan.cpp ****     switch( input ) {
 3896              		.loc 1 2702 0
 3897 14c2 84D2     		testb	%dl, %dl
 3898 14c4 0F843924 		je	.L247
 3898      0000
 3899 14ca 80FA61   		cmpb	$97, %dl
 3900 14cd 0F858B1B 		jne	.L687
 3900      0000
 3901 14d3 EB05     		jmp	.L437
 3902              	.LVL443:
 3903              	.L436:
2708:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 3904              		.loc 1 2708 0
 3905 14d5 E9841B00 		jmp	.L687
 3905      00
 3906              	.L437:
2714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3907              		.loc 1 2714 0
 3908 14da 8B5328   		movl	40(%ebx), %edx
 3909              	.LVL444:
 3910 14dd BEDA1400 		movl	$.L437, %esi
 3910      00
 3911 14e2 8D4201   		leal	1(%edx), %eax
 3912              	.LVL445:
 3913 14e5 894328   		movl	%eax, 40(%ebx)
2716:out/quex_scan.cpp ****     switch( input ) {
 3914              		.loc 1 2716 0
 3915 14e8 8A5201   		movb	1(%edx), %dl
2714:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3916              		.loc 1 2714 0
 3917 14eb B8031500 		movl	$.L438, %eax
 3917      00
 3918              	.LVL446:
2716:out/quex_scan.cpp ****     switch( input ) {
 3919              		.loc 1 2716 0
 3920 14f0 84D2     		testb	%dl, %dl
 3921 14f2 0F840B24 		je	.L247
 3921      0000
 3922 14f8 80FA67   		cmpb	$103, %dl
 3923 14fb 0F855D1B 		jne	.L687
 3923      0000
 3924 1501 EB05     		jmp	.L439
 3925              	.LVL447:
 3926              	.L438:
2722:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 3927              		.loc 1 2722 0
 3928 1503 E9561B00 		jmp	.L687
 3928      00
GAS LISTING /tmp/cc23nfB3.s 			page 325


 3929              	.L439:
2728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3930              		.loc 1 2728 0
 3931 1508 8B5328   		movl	40(%ebx), %edx
 3932              	.LVL448:
 3933 150b BE081500 		movl	$.L439, %esi
 3933      00
 3934 1510 8D4201   		leal	1(%edx), %eax
 3935              	.LVL449:
 3936 1513 894328   		movl	%eax, 40(%ebx)
2730:out/quex_scan.cpp ****     switch( input ) {
 3937              		.loc 1 2730 0
 3938 1516 8A5201   		movb	1(%edx), %dl
2728:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3939              		.loc 1 2728 0
 3940 1519 B8311500 		movl	$.L440, %eax
 3940      00
 3941              	.LVL450:
2730:out/quex_scan.cpp ****     switch( input ) {
 3942              		.loc 1 2730 0
 3943 151e 84D2     		testb	%dl, %dl
 3944 1520 0F84DD23 		je	.L247
 3944      0000
 3945 1526 80FA6D   		cmpb	$109, %dl
 3946 1529 0F852F1B 		jne	.L687
 3946      0000
 3947 152f EB05     		jmp	.L441
 3948              	.LVL451:
 3949              	.L440:
2736:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 3950              		.loc 1 2736 0
 3951 1531 E9281B00 		jmp	.L687
 3951      00
 3952              	.L441:
2742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3953              		.loc 1 2742 0
 3954 1536 8B5328   		movl	40(%ebx), %edx
 3955              	.LVL452:
 3956 1539 BE361500 		movl	$.L441, %esi
 3956      00
 3957 153e 8D4201   		leal	1(%edx), %eax
 3958              	.LVL453:
 3959 1541 894328   		movl	%eax, 40(%ebx)
2744:out/quex_scan.cpp ****     switch( input ) {
 3960              		.loc 1 2744 0
 3961 1544 8A4A01   		movb	1(%edx), %cl
2742:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3962              		.loc 1 2742 0
 3963 1547 B8621500 		movl	$.L442, %eax
 3963      00
 3964              	.LVL454:
2744:out/quex_scan.cpp ****     switch( input ) {
 3965              		.loc 1 2744 0
 3966 154c 84C9     		testb	%cl, %cl
 3967 154e 0F84AF23 		je	.L247
 3967      0000
 3968 1554 80F961   		cmpb	$97, %cl
GAS LISTING /tmp/cc23nfB3.s 			page 326


 3969 1557 0F85011B 		jne	.L687
 3969      0000
 3970 155d E9441F00 		jmp	.L961
 3970      00
 3971              	.LVL455:
 3972              	.L442:
2750:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 3973              		.loc 1 2750 0
 3974 1562 E9F71A00 		jmp	.L687
 3974      00
 3975              	.L275:
2756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3976              		.loc 1 2756 0
 3977 1567 8B5328   		movl	40(%ebx), %edx
 3978              	.LVL456:
 3979 156a BE671500 		movl	$.L275, %esi
 3979      00
 3980 156f 8D4201   		leal	1(%edx), %eax
 3981              	.LVL457:
 3982 1572 894328   		movl	%eax, 40(%ebx)
2758:out/quex_scan.cpp ****     switch( input ) {
 3983              		.loc 1 2758 0
 3984 1575 8A5201   		movb	1(%edx), %dl
2756:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3985              		.loc 1 2756 0
 3986 1578 B8901500 		movl	$.L444, %eax
 3986      00
 3987              	.LVL458:
2758:out/quex_scan.cpp ****     switch( input ) {
 3988              		.loc 1 2758 0
 3989 157d 84D2     		testb	%dl, %dl
 3990 157f 0F847E23 		je	.L247
 3990      0000
 3991 1585 80FA66   		cmpb	$102, %dl
 3992 1588 0F85D01A 		jne	.L687
 3992      0000
 3993 158e EB05     		jmp	.L445
 3994              	.LVL459:
 3995              	.L444:
2764:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 3996              		.loc 1 2764 0
 3997 1590 E9C91A00 		jmp	.L687
 3997      00
 3998              	.L445:
2770:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 3999              		.loc 1 2770 0
 4000 1595 8B5328   		movl	40(%ebx), %edx
 4001              	.LVL460:
 4002 1598 BE951500 		movl	$.L445, %esi
 4002      00
 4003 159d 8D4201   		leal	1(%edx), %eax
 4004              	.LVL461:
 4005 15a0 894328   		movl	%eax, 40(%ebx)
2772:out/quex_scan.cpp ****     switch( input ) {
 4006              		.loc 1 2772 0
 4007 15a3 8A5201   		movb	1(%edx), %dl
2770:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 327


 4008              		.loc 1 2770 0
 4009 15a6 B8BE1500 		movl	$.L446, %eax
 4009      00
 4010              	.LVL462:
2772:out/quex_scan.cpp ****     switch( input ) {
 4011              		.loc 1 2772 0
 4012 15ab 84D2     		testb	%dl, %dl
 4013 15ad 0F845023 		je	.L247
 4013      0000
 4014 15b3 80FA69   		cmpb	$105, %dl
 4015 15b6 0F85A21A 		jne	.L687
 4015      0000
 4016 15bc EB05     		jmp	.L447
 4017              	.LVL463:
 4018              	.L446:
2778:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4019              		.loc 1 2778 0
 4020 15be E99B1A00 		jmp	.L687
 4020      00
 4021              	.L447:
2784:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4022              		.loc 1 2784 0
 4023 15c3 8B5328   		movl	40(%ebx), %edx
 4024              	.LVL464:
 4025 15c6 BEC31500 		movl	$.L447, %esi
 4025      00
 4026 15cb 8D4201   		leal	1(%edx), %eax
 4027              	.LVL465:
 4028 15ce 894328   		movl	%eax, 40(%ebx)
2786:out/quex_scan.cpp ****     switch( input ) {
 4029              		.loc 1 2786 0
 4030 15d1 8A5201   		movb	1(%edx), %dl
2784:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4031              		.loc 1 2784 0
 4032 15d4 B8EC1500 		movl	$.L448, %eax
 4032      00
 4033              	.LVL466:
2786:out/quex_scan.cpp ****     switch( input ) {
 4034              		.loc 1 2786 0
 4035 15d9 84D2     		testb	%dl, %dl
 4036 15db 0F842223 		je	.L247
 4036      0000
 4037 15e1 80FA6E   		cmpb	$110, %dl
 4038 15e4 0F85741A 		jne	.L687
 4038      0000
 4039 15ea EB05     		jmp	.L449
 4040              	.LVL467:
 4041              	.L448:
2792:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4042              		.loc 1 2792 0
 4043 15ec E96D1A00 		jmp	.L687
 4043      00
 4044              	.L449:
2798:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4045              		.loc 1 2798 0
 4046 15f1 8B5328   		movl	40(%ebx), %edx
 4047              	.LVL468:
GAS LISTING /tmp/cc23nfB3.s 			page 328


 4048 15f4 BEF11500 		movl	$.L449, %esi
 4048      00
 4049 15f9 8D4201   		leal	1(%edx), %eax
 4050              	.LVL469:
 4051 15fc 894328   		movl	%eax, 40(%ebx)
2800:out/quex_scan.cpp ****     switch( input ) {
 4052              		.loc 1 2800 0
 4053 15ff 8A4A01   		movb	1(%edx), %cl
2798:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4054              		.loc 1 2798 0
 4055 1602 B81D1600 		movl	$.L450, %eax
 4055      00
 4056              	.LVL470:
2800:out/quex_scan.cpp ****     switch( input ) {
 4057              		.loc 1 2800 0
 4058 1607 84C9     		testb	%cl, %cl
 4059 1609 0F84F422 		je	.L247
 4059      0000
 4060 160f 80F965   		cmpb	$101, %cl
 4061 1612 0F85461A 		jne	.L687
 4061      0000
 4062 1618 E96B1C00 		jmp	.L962
 4062      00
 4063              	.LVL471:
 4064              	.L450:
2806:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4065              		.loc 1 2806 0
 4066 161d E93C1A00 		jmp	.L687
 4066      00
 4067              	.L269:
2812:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4068              		.loc 1 2812 0
 4069 1622 8B5328   		movl	40(%ebx), %edx
 4070              	.LVL472:
 4071 1625 BE221600 		movl	$.L269, %esi
 4071      00
 4072 162a 8D4201   		leal	1(%edx), %eax
 4073              	.LVL473:
 4074 162d 894328   		movl	%eax, 40(%ebx)
2814:out/quex_scan.cpp ****     switch( input ) {
 4075              		.loc 1 2814 0
 4076 1630 8A5201   		movb	1(%edx), %dl
2812:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4077              		.loc 1 2812 0
 4078 1633 B84E1600 		movl	$.L452, %eax
 4078      00
 4079              	.LVL474:
2814:out/quex_scan.cpp ****     switch( input ) {
 4080              		.loc 1 2814 0
 4081 1638 84D2     		testb	%dl, %dl
 4082 163a 0F84C322 		je	.L247
 4082      0000
 4083 1640 80FA64   		cmpb	$100, %dl
 4084 1643 0F85151A 		jne	.L687
 4084      0000
 4085 1649 E9290100 		jmp	.L453
 4085      00
GAS LISTING /tmp/cc23nfB3.s 			page 329


 4086              	.LVL475:
 4087              	.L452:
2820:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4088              		.loc 1 2820 0
 4089 164e E90B1A00 		jmp	.L687
 4089      00
 4090              	.L270:
2826:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4091              		.loc 1 2826 0
 4092 1653 8B5328   		movl	40(%ebx), %edx
 4093              	.LVL476:
 4094 1656 BE531600 		movl	$.L270, %esi
 4094      00
 4095 165b 8D4201   		leal	1(%edx), %eax
 4096              	.LVL477:
 4097 165e 894328   		movl	%eax, 40(%ebx)
2828:out/quex_scan.cpp ****     switch( input ) {
 4098              		.loc 1 2828 0
 4099 1661 8A5201   		movb	1(%edx), %dl
2826:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4100              		.loc 1 2826 0
 4101 1664 B87F1600 		movl	$.L454, %eax
 4101      00
 4102              	.LVL478:
2828:out/quex_scan.cpp ****     switch( input ) {
 4103              		.loc 1 2828 0
 4104 1669 84D2     		testb	%dl, %dl
 4105 166b 0F849222 		je	.L247
 4105      0000
 4106 1671 80FA72   		cmpb	$114, %dl
 4107 1674 0F85E419 		jne	.L687
 4107      0000
 4108 167a E9990000 		jmp	.L455
 4108      00
 4109              	.LVL479:
 4110              	.L454:
2834:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4111              		.loc 1 2834 0
 4112 167f E9DA1900 		jmp	.L687
 4112      00
 4113              	.L268:
2840:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4114              		.loc 1 2840 0
 4115 1684 8B5328   		movl	40(%ebx), %edx
 4116              	.LVL480:
 4117 1687 BE841600 		movl	$.L268, %esi
 4117      00
 4118 168c 8D4201   		leal	1(%edx), %eax
 4119              	.LVL481:
 4120 168f 894328   		movl	%eax, 40(%ebx)
2842:out/quex_scan.cpp ****     switch( input ) {
 4121              		.loc 1 2842 0
 4122 1692 8A5201   		movb	1(%edx), %dl
2840:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4123              		.loc 1 2840 0
 4124 1695 B8B11600 		movl	$.L456, %eax
 4124      00
GAS LISTING /tmp/cc23nfB3.s 			page 330


 4125              	.LVL482:
2842:out/quex_scan.cpp ****     switch( input ) {
 4126              		.loc 1 2842 0
 4127 169a 80FA69   		cmpb	$105, %dl
 4128 169d 7417     		je	.L457
 4129 169f 80FA73   		cmpb	$115, %dl
 4130 16a2 7443     		je	.L458
 4131 16a4 84D2     		testb	%dl, %dl
 4132 16a6 0F845722 		je	.L247
 4132      0000
 4133 16ac E9AD1900 		jmp	.L687
 4133      00
 4134              	.LVL483:
 4135              	.L456:
2849:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4136              		.loc 1 2849 0
 4137 16b1 E9A81900 		jmp	.L687
 4137      00
 4138              	.L457:
2855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4139              		.loc 1 2855 0
 4140 16b6 8B5328   		movl	40(%ebx), %edx
 4141              	.LVL484:
 4142 16b9 BEB61600 		movl	$.L457, %esi
 4142      00
 4143 16be 8D4201   		leal	1(%edx), %eax
 4144              	.LVL485:
 4145 16c1 894328   		movl	%eax, 40(%ebx)
2857:out/quex_scan.cpp ****     switch( input ) {
 4146              		.loc 1 2857 0
 4147 16c4 8A4A01   		movb	1(%edx), %cl
2855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4148              		.loc 1 2855 0
 4149 16c7 B8E21600 		movl	$.L459, %eax
 4149      00
 4150              	.LVL486:
2857:out/quex_scan.cpp ****     switch( input ) {
 4151              		.loc 1 2857 0
 4152 16cc 84C9     		testb	%cl, %cl
 4153 16ce 0F842F22 		je	.L247
 4153      0000
 4154 16d4 80F966   		cmpb	$102, %cl
 4155 16d7 0F858119 		jne	.L687
 4155      0000
 4156 16dd E9291C00 		jmp	.L963
 4156      00
 4157              	.LVL487:
 4158              	.L459:
2863:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4159              		.loc 1 2863 0
 4160 16e2 E9771900 		jmp	.L687
 4160      00
 4161              	.L458:
2869:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4162              		.loc 1 2869 0
 4163 16e7 8B5328   		movl	40(%ebx), %edx
 4164              	.LVL488:
GAS LISTING /tmp/cc23nfB3.s 			page 331


 4165 16ea BEE71600 		movl	$.L458, %esi
 4165      00
 4166 16ef 8D4201   		leal	1(%edx), %eax
 4167              	.LVL489:
 4168 16f2 894328   		movl	%eax, 40(%ebx)
2871:out/quex_scan.cpp ****     switch( input ) {
 4169              		.loc 1 2871 0
 4170 16f5 8A4A01   		movb	1(%edx), %cl
2869:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4171              		.loc 1 2869 0
 4172 16f8 B8131700 		movl	$.L461, %eax
 4172      00
 4173              	.LVL490:
2871:out/quex_scan.cpp ****     switch( input ) {
 4174              		.loc 1 2871 0
 4175 16fd 84C9     		testb	%cl, %cl
 4176 16ff 0F84FE21 		je	.L247
 4176      0000
 4177 1705 80F965   		cmpb	$101, %cl
 4178 1708 0F855019 		jne	.L687
 4178      0000
 4179 170e E9631A00 		jmp	.L964
 4179      00
 4180              	.LVL491:
 4181              	.L461:
2877:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4182              		.loc 1 2877 0
 4183 1713 E9461900 		jmp	.L687
 4183      00
 4184              	.L455:
2883:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4185              		.loc 1 2883 0
 4186 1718 8B5328   		movl	40(%ebx), %edx
 4187              	.LVL492:
 4188 171b BE181700 		movl	$.L455, %esi
 4188      00
 4189 1720 8D4201   		leal	1(%edx), %eax
 4190              	.LVL493:
 4191 1723 894328   		movl	%eax, 40(%ebx)
2885:out/quex_scan.cpp ****     switch( input ) {
 4192              		.loc 1 2885 0
 4193 1726 8A5201   		movb	1(%edx), %dl
2883:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4194              		.loc 1 2883 0
 4195 1729 B8411700 		movl	$.L463, %eax
 4195      00
 4196              	.LVL494:
2885:out/quex_scan.cpp ****     switch( input ) {
 4197              		.loc 1 2885 0
 4198 172e 84D2     		testb	%dl, %dl
 4199 1730 0F84CD21 		je	.L247
 4199      0000
 4200 1736 80FA6F   		cmpb	$111, %dl
 4201 1739 0F851F19 		jne	.L687
 4201      0000
 4202 173f EB05     		jmp	.L464
 4203              	.LVL495:
GAS LISTING /tmp/cc23nfB3.s 			page 332


 4204              	.L463:
2891:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4205              		.loc 1 2891 0
 4206 1741 E9181900 		jmp	.L687
 4206      00
 4207              	.L464:
2897:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4208              		.loc 1 2897 0
 4209 1746 8B5328   		movl	40(%ebx), %edx
 4210              	.LVL496:
 4211 1749 BE461700 		movl	$.L464, %esi
 4211      00
 4212 174e 8D4201   		leal	1(%edx), %eax
 4213              	.LVL497:
 4214 1751 894328   		movl	%eax, 40(%ebx)
2899:out/quex_scan.cpp ****     switch( input ) {
 4215              		.loc 1 2899 0
 4216 1754 8A4A01   		movb	1(%edx), %cl
2897:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4217              		.loc 1 2897 0
 4218 1757 B8721700 		movl	$.L465, %eax
 4218      00
 4219              	.LVL498:
2899:out/quex_scan.cpp ****     switch( input ) {
 4220              		.loc 1 2899 0
 4221 175c 84C9     		testb	%cl, %cl
 4222 175e 0F849F21 		je	.L247
 4222      0000
 4223 1764 80F972   		cmpb	$114, %cl
 4224 1767 0F85F118 		jne	.L687
 4224      0000
 4225 176d E9DA1D00 		jmp	.L965
 4225      00
 4226              	.LVL499:
 4227              	.L465:
2905:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4228              		.loc 1 2905 0
 4229 1772 E9E71800 		jmp	.L687
 4229      00
 4230              	.L453:
2911:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4231              		.loc 1 2911 0
 4232 1777 8B5328   		movl	40(%ebx), %edx
 4233              	.LVL500:
 4234 177a BE771700 		movl	$.L453, %esi
 4234      00
 4235 177f 8D4201   		leal	1(%edx), %eax
 4236              	.LVL501:
 4237 1782 894328   		movl	%eax, 40(%ebx)
2913:out/quex_scan.cpp ****     switch( input ) {
 4238              		.loc 1 2913 0
 4239 1785 8A5201   		movb	1(%edx), %dl
2911:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4240              		.loc 1 2911 0
 4241 1788 B8A01700 		movl	$.L467, %eax
 4241      00
 4242              	.LVL502:
GAS LISTING /tmp/cc23nfB3.s 			page 333


2913:out/quex_scan.cpp ****     switch( input ) {
 4243              		.loc 1 2913 0
 4244 178d 84D2     		testb	%dl, %dl
 4245 178f 0F846E21 		je	.L247
 4245      0000
 4246 1795 80FA69   		cmpb	$105, %dl
 4247 1798 0F85C018 		jne	.L687
 4247      0000
 4248 179e EB05     		jmp	.L468
 4249              	.LVL503:
 4250              	.L467:
2919:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4251              		.loc 1 2919 0
 4252 17a0 E9B91800 		jmp	.L687
 4252      00
 4253              	.L468:
2925:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4254              		.loc 1 2925 0
 4255 17a5 8B5328   		movl	40(%ebx), %edx
 4256              	.LVL504:
 4257 17a8 BEA51700 		movl	$.L468, %esi
 4257      00
 4258 17ad 8D4201   		leal	1(%edx), %eax
 4259              	.LVL505:
 4260 17b0 894328   		movl	%eax, 40(%ebx)
2927:out/quex_scan.cpp ****     switch( input ) {
 4261              		.loc 1 2927 0
 4262 17b3 8A4A01   		movb	1(%edx), %cl
2925:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4263              		.loc 1 2925 0
 4264 17b6 B8D11700 		movl	$.L469, %eax
 4264      00
 4265              	.LVL506:
2927:out/quex_scan.cpp ****     switch( input ) {
 4266              		.loc 1 2927 0
 4267 17bb 84C9     		testb	%cl, %cl
 4268 17bd 0F844021 		je	.L247
 4268      0000
 4269 17c3 80F966   		cmpb	$102, %cl
 4270 17c6 0F859218 		jne	.L687
 4270      0000
 4271 17cc E9031C00 		jmp	.L966
 4271      00
 4272              	.LVL507:
 4273              	.L469:
2933:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4274              		.loc 1 2933 0
 4275 17d1 E9881800 		jmp	.L687
 4275      00
 4276              	.L263:
2939:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4277              		.loc 1 2939 0
 4278 17d6 8B5328   		movl	40(%ebx), %edx
 4279              	.LVL508:
2942:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
 4280              		.loc 1 2942 0
 4281 17d9 BFF73200 		movl	$.L471, %edi
GAS LISTING /tmp/cc23nfB3.s 			page 334


 4281      00
 4282 17de BED61700 		movl	$.L263, %esi
 4282      00
2939:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4283              		.loc 1 2939 0
 4284 17e3 8D4201   		leal	1(%edx), %eax
 4285              	.LVL509:
 4286 17e6 894328   		movl	%eax, 40(%ebx)
2940:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 4287              		.loc 1 2940 0
 4288 17e9 8A5201   		movb	1(%edx), %dl
 4289              	.LVL510:
2942:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
 4290              		.loc 1 2942 0
 4291 17ec 8945E0   		movl	%eax, -32(%ebp)
 4292              	.LVL511:
 4293 17ef B8131800 		movl	$.L472, %eax
 4293      00
 4294              	.LVL512:
2943:out/quex_scan.cpp ****     switch( input ) {
 4295              		.loc 1 2943 0
 4296 17f4 80FA64   		cmpb	$100, %dl
 4297 17f7 0F84B801 		je	.L491
 4297      0000
 4298 17fd 80FA6E   		cmpb	$110, %dl
 4299 1800 0F848101 		je	.L488
 4299      0000
 4300 1806 84D2     		testb	%dl, %dl
 4301 1808 0F84F520 		je	.L247
 4301      0000
 4302 180e E9E41A00 		jmp	.L471
 4302      00
 4303              	.L472:
2950:out/quex_scan.cpp ****         goto _2643;
 4304              		.loc 1 2950 0
 4305 1813 E9DF1A00 		jmp	.L471
 4305      00
 4306              	.L264:
2956:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4307              		.loc 1 2956 0
 4308 1818 8B5328   		movl	40(%ebx), %edx
 4309              	.LVL513:
 4310 181b BE181800 		movl	$.L264, %esi
 4310      00
 4311 1820 8D4201   		leal	1(%edx), %eax
 4312              	.LVL514:
 4313 1823 894328   		movl	%eax, 40(%ebx)
2958:out/quex_scan.cpp ****     switch( input ) {
 4314              		.loc 1 2958 0
 4315 1826 8A5201   		movb	1(%edx), %dl
2956:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4316              		.loc 1 2956 0
 4317 1829 B8411800 		movl	$.L475, %eax
 4317      00
 4318              	.LVL515:
2958:out/quex_scan.cpp ****     switch( input ) {
 4319              		.loc 1 2958 0
GAS LISTING /tmp/cc23nfB3.s 			page 335


 4320 182e 84D2     		testb	%dl, %dl
 4321 1830 0F84CD20 		je	.L247
 4321      0000
 4322 1836 80FA63   		cmpb	$99, %dl
 4323 1839 0F851F18 		jne	.L687
 4323      0000
 4324 183f EB05     		jmp	.L476
 4325              	.LVL516:
 4326              	.L475:
2964:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4327              		.loc 1 2964 0
 4328 1841 E9181800 		jmp	.L687
 4328      00
 4329              	.L476:
2970:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4330              		.loc 1 2970 0
 4331 1846 8B5328   		movl	40(%ebx), %edx
 4332              	.LVL517:
 4333 1849 BE461800 		movl	$.L476, %esi
 4333      00
 4334 184e 8D4201   		leal	1(%edx), %eax
 4335              	.LVL518:
 4336 1851 894328   		movl	%eax, 40(%ebx)
2972:out/quex_scan.cpp ****     switch( input ) {
 4337              		.loc 1 2972 0
 4338 1854 8A5201   		movb	1(%edx), %dl
2970:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4339              		.loc 1 2970 0
 4340 1857 B86F1800 		movl	$.L477, %eax
 4340      00
 4341              	.LVL519:
2972:out/quex_scan.cpp ****     switch( input ) {
 4342              		.loc 1 2972 0
 4343 185c 84D2     		testb	%dl, %dl
 4344 185e 0F849F20 		je	.L247
 4344      0000
 4345 1864 80FA6C   		cmpb	$108, %dl
 4346 1867 0F85F117 		jne	.L687
 4346      0000
 4347 186d EB05     		jmp	.L478
 4348              	.LVL520:
 4349              	.L477:
2978:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4350              		.loc 1 2978 0
 4351 186f E9EA1700 		jmp	.L687
 4351      00
 4352              	.L478:
2984:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4353              		.loc 1 2984 0
 4354 1874 8B5328   		movl	40(%ebx), %edx
 4355              	.LVL521:
 4356 1877 BE741800 		movl	$.L478, %esi
 4356      00
 4357 187c 8D4201   		leal	1(%edx), %eax
 4358              	.LVL522:
 4359 187f 894328   		movl	%eax, 40(%ebx)
2986:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 336


 4360              		.loc 1 2986 0
 4361 1882 8A5201   		movb	1(%edx), %dl
2984:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4362              		.loc 1 2984 0
 4363 1885 B89D1800 		movl	$.L479, %eax
 4363      00
 4364              	.LVL523:
2986:out/quex_scan.cpp ****     switch( input ) {
 4365              		.loc 1 2986 0
 4366 188a 84D2     		testb	%dl, %dl
 4367 188c 0F847120 		je	.L247
 4367      0000
 4368 1892 80FA75   		cmpb	$117, %dl
 4369 1895 0F85C317 		jne	.L687
 4369      0000
 4370 189b EB05     		jmp	.L480
 4371              	.LVL524:
 4372              	.L479:
2992:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4373              		.loc 1 2992 0
 4374 189d E9BC1700 		jmp	.L687
 4374      00
 4375              	.L480:
2998:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4376              		.loc 1 2998 0
 4377 18a2 8B5328   		movl	40(%ebx), %edx
 4378              	.LVL525:
 4379 18a5 BEA21800 		movl	$.L480, %esi
 4379      00
 4380 18aa 8D4201   		leal	1(%edx), %eax
 4381              	.LVL526:
 4382 18ad 894328   		movl	%eax, 40(%ebx)
3000:out/quex_scan.cpp ****     switch( input ) {
 4383              		.loc 1 3000 0
 4384 18b0 8A5201   		movb	1(%edx), %dl
2998:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4385              		.loc 1 2998 0
 4386 18b3 B8CB1800 		movl	$.L481, %eax
 4386      00
 4387              	.LVL527:
3000:out/quex_scan.cpp ****     switch( input ) {
 4388              		.loc 1 3000 0
 4389 18b8 84D2     		testb	%dl, %dl
 4390 18ba 0F844320 		je	.L247
 4390      0000
 4391 18c0 80FA64   		cmpb	$100, %dl
 4392 18c3 0F859517 		jne	.L687
 4392      0000
 4393 18c9 EB05     		jmp	.L482
 4394              	.LVL528:
 4395              	.L481:
3006:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4396              		.loc 1 3006 0
 4397 18cb E98E1700 		jmp	.L687
 4397      00
 4398              	.L482:
3012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 337


 4399              		.loc 1 3012 0
 4400 18d0 8B5328   		movl	40(%ebx), %edx
 4401              	.LVL529:
 4402 18d3 BED01800 		movl	$.L482, %esi
 4402      00
 4403 18d8 8D4201   		leal	1(%edx), %eax
 4404              	.LVL530:
 4405 18db 894328   		movl	%eax, 40(%ebx)
3014:out/quex_scan.cpp ****     switch( input ) {
 4406              		.loc 1 3014 0
 4407 18de 8A5201   		movb	1(%edx), %dl
3012:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4408              		.loc 1 3012 0
 4409 18e1 B8FC1800 		movl	$.L483, %eax
 4409      00
 4410              	.LVL531:
3014:out/quex_scan.cpp ****     switch( input ) {
 4411              		.loc 1 3014 0
 4412 18e6 84D2     		testb	%dl, %dl
 4413 18e8 0F841520 		je	.L247
 4413      0000
 4414 18ee 80FA65   		cmpb	$101, %dl
 4415              	.L877:
 4416 18f1 0F856717 		jne	.L687
 4416      0000
 4417 18f7 E937EDFF 		jmp	.L285
 4417      FF
 4418              	.LVL532:
 4419              	.L483:
3020:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4420              		.loc 1 3020 0
 4421 18fc E95D1700 		jmp	.L687
 4421      00
 4422              	.L288:
3026:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4423              		.loc 1 3026 0
 4424 1901 8B4328   		movl	40(%ebx), %eax
 4425              	.LVL533:
 4426 1904 8D5001   		leal	1(%eax), %edx
 4427              	.LVL534:
 4428 1907 895328   		movl	%edx, 40(%ebx)
3027:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 4429              		.loc 1 3027 0
 4430 190a 8A4001   		movb	1(%eax), %al
 4431              	.LVL535:
3028:out/quex_scan.cpp ****     if( input < 0x3E) {
 4432              		.loc 1 3028 0
 4433 190d 3C3D     		cmpb	$61, %al
 4434 190f 771D     		ja	.L484
3029:out/quex_scan.cpp ****         if( input >= 0x2 ) {
 4435              		.loc 1 3029 0
 4436 1911 3C01     		cmpb	$1, %al
 4437 1913 0F8792ED 		ja	.L294
 4437      FFFF
 4438 1919 B83B1900 		movl	$.L485, %eax
 4438      00
 4439              	.LVL536:
GAS LISTING /tmp/cc23nfB3.s 			page 338


 4440 191e BE011900 		movl	$.L288, %esi
 4440      00
3031:out/quex_scan.cpp ****         } else if( input == 0x1 ) {
 4441              		.loc 1 3031 0
 4442 1923 0F85DA1F 		jne	.L247
 4442      0000
 4443 1929 E9301700 		jmp	.L687
 4443      00
 4444              	.LVL537:
 4445              	.L484:
3036:out/quex_scan.cpp ****         if( input == 0x3E ) {
 4446              		.loc 1 3036 0
 4447 192e 3C3E     		cmpb	$62, %al
 4448 1930 0F8575ED 		jne	.L294
 4448      FFFF
 4449 1936 E9231700 		jmp	.L687
 4449      00
 4450              	.LVL538:
 4451              	.L485:
3043:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4452              		.loc 1 3043 0
 4453 193b E91E1700 		jmp	.L687
 4453      00
 4454              	.L287:
3049:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4455              		.loc 1 3049 0
 4456 1940 8B4328   		movl	40(%ebx), %eax
 4457              	.LVL539:
 4458 1943 8D5001   		leal	1(%eax), %edx
 4459              	.LVL540:
 4460 1946 895328   		movl	%edx, 40(%ebx)
3050:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 4461              		.loc 1 3050 0
 4462 1949 8A5001   		movb	1(%eax), %dl
 4463              	.LVL541:
3051:out/quex_scan.cpp ****     if( input < 0x22) {
 4464              		.loc 1 3051 0
 4465 194c 80FA21   		cmpb	$33, %dl
 4466 194f 7723     		ja	.L486
 4467 1951 B8821900 		movl	$.L487, %eax
 4467      00
 4468              	.LVL542:
 4469 1956 BE401900 		movl	$.L287, %esi
 4469      00
 4470              	.L887:
3052:out/quex_scan.cpp ****         switch( input ) {
 4471              		.loc 1 3052 0
 4472 195b 84D2     		testb	%dl, %dl
 4473 195d 0F84A01F 		je	.L247
 4473      0000
 4474 1963 83EA02   		subl	$2, %edx
 4475              	.LVL543:
 4476 1966 80FA1F   		cmpb	$31, %dl
 4477 1969 0F87EF16 		ja	.L687
 4477      0000
 4478 196f E908EDFF 		jmp	.L290
 4478      FF
GAS LISTING /tmp/cc23nfB3.s 			page 339


 4479              	.LVL544:
 4480              	.L486:
3088:out/quex_scan.cpp ****         if( input == 0x22 ) {
 4481              		.loc 1 3088 0
 4482 1974 80FA22   		cmpb	$34, %dl
 4483 1977 0F85FFEC 		jne	.L290
 4483      FFFF
 4484 197d E9DC1600 		jmp	.L687
 4484      00
 4485              	.LVL545:
 4486              	.L487:
3095:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4487              		.loc 1 3095 0
 4488 1982 E9D71600 		jmp	.L687
 4488      00
 4489              	.L488:
3101:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4490              		.loc 1 3101 0
 4491 1987 8B5328   		movl	40(%ebx), %edx
 4492              	.LVL546:
 4493 198a BE871900 		movl	$.L488, %esi
 4493      00
 4494 198f 8D4201   		leal	1(%edx), %eax
 4495              	.LVL547:
 4496 1992 894328   		movl	%eax, 40(%ebx)
3103:out/quex_scan.cpp ****     switch( input ) {
 4497              		.loc 1 3103 0
 4498 1995 8A5201   		movb	1(%edx), %dl
3101:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4499              		.loc 1 3101 0
 4500 1998 B8B01900 		movl	$.L489, %eax
 4500      00
 4501              	.LVL548:
3103:out/quex_scan.cpp ****     switch( input ) {
 4502              		.loc 1 3103 0
 4503 199d 84D2     		testb	%dl, %dl
 4504 199f 0F845E1F 		je	.L247
 4504      0000
 4505 19a5 80FA64   		cmpb	$100, %dl
 4506 19a8 0F85B016 		jne	.L687
 4506      0000
 4507 19ae EB64     		jmp	.L490
 4508              	.LVL549:
 4509              	.L489:
3109:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4510              		.loc 1 3109 0
 4511 19b0 E9A91600 		jmp	.L687
 4511      00
 4512              	.L491:
3115:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4513              		.loc 1 3115 0
 4514 19b5 8B5328   		movl	40(%ebx), %edx
 4515              	.LVL550:
 4516 19b8 BEB51900 		movl	$.L491, %esi
 4516      00
 4517 19bd 8D4201   		leal	1(%edx), %eax
 4518              	.LVL551:
GAS LISTING /tmp/cc23nfB3.s 			page 340


 4519 19c0 894328   		movl	%eax, 40(%ebx)
3117:out/quex_scan.cpp ****     switch( input ) {
 4520              		.loc 1 3117 0
 4521 19c3 8A5201   		movb	1(%edx), %dl
3115:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4522              		.loc 1 3115 0
 4523 19c6 B8DE1900 		movl	$.L492, %eax
 4523      00
 4524              	.LVL552:
3117:out/quex_scan.cpp ****     switch( input ) {
 4525              		.loc 1 3117 0
 4526 19cb 84D2     		testb	%dl, %dl
 4527 19cd 0F84301F 		je	.L247
 4527      0000
 4528 19d3 80FA65   		cmpb	$101, %dl
 4529 19d6 0F858216 		jne	.L687
 4529      0000
 4530 19dc EB05     		jmp	.L493
 4531              	.LVL553:
 4532              	.L492:
3123:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4533              		.loc 1 3123 0
 4534 19de E97B1600 		jmp	.L687
 4534      00
 4535              	.L493:
3129:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4536              		.loc 1 3129 0
 4537 19e3 8B5328   		movl	40(%ebx), %edx
 4538              	.LVL554:
 4539 19e6 BEE31900 		movl	$.L493, %esi
 4539      00
 4540 19eb 8D4201   		leal	1(%edx), %eax
 4541              	.LVL555:
 4542 19ee 894328   		movl	%eax, 40(%ebx)
3131:out/quex_scan.cpp ****     switch( input ) {
 4543              		.loc 1 3131 0
 4544 19f1 8A4A01   		movb	1(%edx), %cl
3129:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4545              		.loc 1 3129 0
 4546 19f4 B80F1A00 		movl	$.L494, %eax
 4546      00
 4547              	.LVL556:
3131:out/quex_scan.cpp ****     switch( input ) {
 4548              		.loc 1 3131 0
 4549 19f9 84C9     		testb	%cl, %cl
 4550 19fb 0F84021F 		je	.L247
 4550      0000
 4551 1a01 80F966   		cmpb	$102, %cl
 4552 1a04 0F855416 		jne	.L687
 4552      0000
 4553 1a0a E9521900 		jmp	.L967
 4553      00
 4554              	.LVL557:
 4555              	.L494:
3137:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4556              		.loc 1 3137 0
 4557 1a0f E94A1600 		jmp	.L687
GAS LISTING /tmp/cc23nfB3.s 			page 341


 4557      00
 4558              	.L490:
3143:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4559              		.loc 1 3143 0
 4560 1a14 8B5328   		movl	40(%ebx), %edx
 4561              	.LVL558:
 4562 1a17 BE141A00 		movl	$.L490, %esi
 4562      00
 4563 1a1c 8D4201   		leal	1(%edx), %eax
 4564              	.LVL559:
 4565 1a1f 894328   		movl	%eax, 40(%ebx)
3145:out/quex_scan.cpp ****     switch( input ) {
 4566              		.loc 1 3145 0
 4567 1a22 8A5201   		movb	1(%edx), %dl
3143:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4568              		.loc 1 3143 0
 4569 1a25 B83D1A00 		movl	$.L496, %eax
 4569      00
 4570              	.LVL560:
3145:out/quex_scan.cpp ****     switch( input ) {
 4571              		.loc 1 3145 0
 4572 1a2a 84D2     		testb	%dl, %dl
 4573 1a2c 0F84D11E 		je	.L247
 4573      0000
 4574 1a32 80FA65   		cmpb	$101, %dl
 4575 1a35 0F852316 		jne	.L687
 4575      0000
 4576 1a3b EB05     		jmp	.L497
 4577              	.LVL561:
 4578              	.L496:
3151:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4579              		.loc 1 3151 0
 4580 1a3d E91C1600 		jmp	.L687
 4580      00
 4581              	.L497:
3157:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4582              		.loc 1 3157 0
 4583 1a42 8B5328   		movl	40(%ebx), %edx
 4584              	.LVL562:
 4585 1a45 BE421A00 		movl	$.L497, %esi
 4585      00
 4586 1a4a 8D4201   		leal	1(%edx), %eax
 4587              	.LVL563:
 4588 1a4d 894328   		movl	%eax, 40(%ebx)
3159:out/quex_scan.cpp ****     switch( input ) {
 4589              		.loc 1 3159 0
 4590 1a50 8A4A01   		movb	1(%edx), %cl
3157:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4591              		.loc 1 3157 0
 4592 1a53 B86E1A00 		movl	$.L498, %eax
 4592      00
 4593              	.LVL564:
3159:out/quex_scan.cpp ****     switch( input ) {
 4594              		.loc 1 3159 0
 4595 1a58 84C9     		testb	%cl, %cl
 4596 1a5a 0F84A31E 		je	.L247
 4596      0000
GAS LISTING /tmp/cc23nfB3.s 			page 342


 4597 1a60 80F966   		cmpb	$102, %cl
 4598 1a63 0F85F515 		jne	.L687
 4598      0000
 4599 1a69 E9211900 		jmp	.L968
 4599      00
 4600              	.LVL565:
 4601              	.L498:
3165:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 4602              		.loc 1 3165 0
 4603 1a6e E9EB1500 		jmp	.L687
 4603      00
 4604              	.L369:
3171:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4605              		.loc 1 3171 0
 4606 1a73 8B5328   		movl	40(%ebx), %edx
 4607              	.LVL566:
 4608 1a76 BE731A00 		movl	$.L369, %esi
 4608      00
 4609 1a7b 8D4201   		leal	1(%edx), %eax
 4610              	.LVL567:
 4611 1a7e 894328   		movl	%eax, 40(%ebx)
3173:out/quex_scan.cpp ****     switch( input ) {
 4612              		.loc 1 3173 0
 4613 1a81 8A5201   		movb	1(%edx), %dl
3171:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4614              		.loc 1 3171 0
 4615 1a84 B8DF1A00 		movl	$.L500, %eax
 4615      00
 4616              	.LVL568:
3173:out/quex_scan.cpp ****     switch( input ) {
 4617              		.loc 1 3173 0
 4618 1a89 80FA68   		cmpb	$104, %dl
 4619 1a8c 773E     		ja	.L502
 4620 1a8e 80FA61   		cmpb	$97, %dl
 4621 1a91 0F8348E9 		jae	.L225
 4621      FFFF
 4622 1a97 80FA5A   		cmpb	$90, %dl
 4623 1a9a 7722     		ja	.L503
 4624 1a9c 80FA41   		cmpb	$65, %dl
 4625 1a9f 0F833AE9 		jae	.L225
 4625      FFFF
 4626 1aa5 84D2     		testb	%dl, %dl
 4627 1aa7 0F84561E 		je	.L247
 4627      0000
 4628 1aad 83EA30   		subl	$48, %edx
 4629 1ab0 80FA09   		cmpb	$9, %dl
 4630 1ab3 0F879317 		ja	.L711
 4630      0000
 4631 1ab9 E921E9FF 		jmp	.L225
 4631      FF
 4632              	.L503:
 4633 1abe 80FA5F   		cmpb	$95, %dl
 4634 1ac1 0F858517 		jne	.L711
 4634      0000
 4635 1ac7 E913E9FF 		jmp	.L225
 4635      FF
 4636              	.L502:
GAS LISTING /tmp/cc23nfB3.s 			page 343


 4637 1acc 80FA69   		cmpb	$105, %dl
 4638 1acf 7413     		je	.L501
 4639 1ad1 80FA7A   		cmpb	$122, %dl
 4640 1ad4 0F877217 		ja	.L711
 4640      0000
 4641 1ada E900E9FF 		jmp	.L225
 4641      FF
 4642              	.LVL569:
 4643              	.L500:
3241:out/quex_scan.cpp ****         goto _2536;
 4644              		.loc 1 3241 0
 4645 1adf E9681700 		jmp	.L711
 4645      00
 4646              	.L501:
3247:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4647              		.loc 1 3247 0
 4648 1ae4 8B5328   		movl	40(%ebx), %edx
 4649              	.LVL570:
 4650 1ae7 BEE41A00 		movl	$.L501, %esi
 4650      00
 4651 1aec 8D4201   		leal	1(%edx), %eax
 4652              	.LVL571:
 4653 1aef 894328   		movl	%eax, 40(%ebx)
3249:out/quex_scan.cpp ****     switch( input ) {
 4654              		.loc 1 3249 0
 4655 1af2 8A5201   		movb	1(%edx), %dl
3247:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4656              		.loc 1 3247 0
 4657 1af5 B8501B00 		movl	$.L504, %eax
 4657      00
 4658              	.LVL572:
3249:out/quex_scan.cpp ****     switch( input ) {
 4659              		.loc 1 3249 0
 4660 1afa 80FA6B   		cmpb	$107, %dl
 4661 1afd 773E     		ja	.L506
 4662 1aff 80FA61   		cmpb	$97, %dl
 4663 1b02 0F83D7E8 		jae	.L225
 4663      FFFF
 4664 1b08 80FA5A   		cmpb	$90, %dl
 4665 1b0b 7722     		ja	.L507
 4666 1b0d 80FA41   		cmpb	$65, %dl
 4667 1b10 0F83C9E8 		jae	.L225
 4667      FFFF
 4668 1b16 84D2     		testb	%dl, %dl
 4669 1b18 0F84E51D 		je	.L247
 4669      0000
 4670 1b1e 83EA30   		subl	$48, %edx
 4671 1b21 80FA09   		cmpb	$9, %dl
 4672 1b24 0F872217 		ja	.L711
 4672      0000
 4673 1b2a E9B0E8FF 		jmp	.L225
 4673      FF
 4674              	.L507:
 4675 1b2f 80FA5F   		cmpb	$95, %dl
 4676 1b32 0F851417 		jne	.L711
 4676      0000
 4677 1b38 E9A2E8FF 		jmp	.L225
GAS LISTING /tmp/cc23nfB3.s 			page 344


 4677      FF
 4678              	.L506:
 4679 1b3d 80FA6C   		cmpb	$108, %dl
 4680 1b40 7413     		je	.L505
 4681 1b42 80FA7A   		cmpb	$122, %dl
 4682 1b45 0F870117 		ja	.L711
 4682      0000
 4683 1b4b E98FE8FF 		jmp	.L225
 4683      FF
 4684              	.LVL573:
 4685              	.L504:
3317:out/quex_scan.cpp ****         goto _2536;
 4686              		.loc 1 3317 0
 4687 1b50 E9F71600 		jmp	.L711
 4687      00
 4688              	.L505:
3323:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4689              		.loc 1 3323 0
 4690 1b55 8B5328   		movl	40(%ebx), %edx
 4691              	.LVL574:
 4692 1b58 BE551B00 		movl	$.L505, %esi
 4692      00
 4693 1b5d 8D4201   		leal	1(%edx), %eax
 4694              	.LVL575:
 4695 1b60 894328   		movl	%eax, 40(%ebx)
3325:out/quex_scan.cpp ****     switch( input ) {
 4696              		.loc 1 3325 0
 4697 1b63 8A5201   		movb	1(%edx), %dl
3323:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4698              		.loc 1 3323 0
 4699 1b66 B8C11B00 		movl	$.L508, %eax
 4699      00
 4700              	.LVL576:
3325:out/quex_scan.cpp ****     switch( input ) {
 4701              		.loc 1 3325 0
 4702 1b6b 80FA64   		cmpb	$100, %dl
 4703 1b6e 773E     		ja	.L510
 4704 1b70 80FA61   		cmpb	$97, %dl
 4705 1b73 0F8366E8 		jae	.L225
 4705      FFFF
 4706 1b79 80FA5A   		cmpb	$90, %dl
 4707 1b7c 7722     		ja	.L511
 4708 1b7e 80FA41   		cmpb	$65, %dl
 4709 1b81 0F8358E8 		jae	.L225
 4709      FFFF
 4710 1b87 84D2     		testb	%dl, %dl
 4711 1b89 0F84741D 		je	.L247
 4711      0000
 4712 1b8f 83EA30   		subl	$48, %edx
 4713 1b92 80FA09   		cmpb	$9, %dl
 4714 1b95 0F87B116 		ja	.L711
 4714      0000
 4715 1b9b E93FE8FF 		jmp	.L225
 4715      FF
 4716              	.L511:
 4717 1ba0 80FA5F   		cmpb	$95, %dl
 4718 1ba3 0F85A316 		jne	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 345


 4718      0000
 4719 1ba9 E931E8FF 		jmp	.L225
 4719      FF
 4720              	.L510:
 4721 1bae 80FA65   		cmpb	$101, %dl
 4722 1bb1 7413     		je	.L509
 4723 1bb3 80FA7A   		cmpb	$122, %dl
 4724 1bb6 0F879016 		ja	.L711
 4724      0000
 4725 1bbc E91EE8FF 		jmp	.L225
 4725      FF
 4726              	.LVL577:
 4727              	.L508:
3393:out/quex_scan.cpp ****         goto _2536;
 4728              		.loc 1 3393 0
 4729 1bc1 E9861600 		jmp	.L711
 4729      00
 4730              	.L509:
3399:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4731              		.loc 1 3399 0
 4732 1bc6 8B5328   		movl	40(%ebx), %edx
 4733              	.LVL578:
 4734 1bc9 BEC61B00 		movl	$.L509, %esi
 4734      00
 4735 1bce 8D4201   		leal	1(%edx), %eax
 4736              	.LVL579:
 4737 1bd1 894328   		movl	%eax, 40(%ebx)
3401:out/quex_scan.cpp ****     switch( input ) {
 4738              		.loc 1 3401 0
 4739 1bd4 8A5201   		movb	1(%edx), %dl
3399:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4740              		.loc 1 3399 0
 4741 1bd7 B8A23500 		movl	$.L512, %eax
 4741      00
 4742              	.LVL580:
3401:out/quex_scan.cpp ****     switch( input ) {
 4743              		.loc 1 3401 0
 4744 1bdc 80FA5A   		cmpb	$90, %dl
 4745 1bdf 7719     		ja	.L513
 4746 1be1 80FA41   		cmpb	$65, %dl
 4747 1be4 0F83F5E7 		jae	.L225
 4747      FFFF
 4748 1bea 84D2     		testb	%dl, %dl
 4749 1bec 0F84111D 		je	.L247
 4749      0000
 4750 1bf2 83EA30   		subl	$48, %edx
 4751 1bf5 80FA09   		cmpb	$9, %dl
 4752 1bf8 EB15     		jmp	.L905
 4753              	.L513:
 4754 1bfa 80FA5F   		cmpb	$95, %dl
 4755 1bfd 0F84DCE7 		je	.L225
 4755      FFFF
 4756 1c03 0F829919 		jb	.L746
 4756      0000
 4757 1c09 83EA61   		subl	$97, %edx
 4758 1c0c 80FA19   		cmpb	$25, %dl
 4759              	.L905:
GAS LISTING /tmp/cc23nfB3.s 			page 346


 4760 1c0f 0F878D19 		ja	.L746
 4760      0000
 4761 1c15 E9C5E7FF 		jmp	.L225
 4761      FF
 4762              	.LVL581:
 4763              	.L363:
3475:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4764              		.loc 1 3475 0
 4765 1c1a 8B5328   		movl	40(%ebx), %edx
 4766              	.LVL582:
 4767 1c1d BE1A1C00 		movl	$.L363, %esi
 4767      00
 4768 1c22 8D4201   		leal	1(%edx), %eax
 4769              	.LVL583:
 4770 1c25 894328   		movl	%eax, 40(%ebx)
3477:out/quex_scan.cpp ****     switch( input ) {
 4771              		.loc 1 3477 0
 4772 1c28 8A5201   		movb	1(%edx), %dl
3475:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4773              		.loc 1 3475 0
 4774 1c2b B8801C00 		movl	$.L514, %eax
 4774      00
 4775              	.LVL584:
3477:out/quex_scan.cpp ****     switch( input ) {
 4776              		.loc 1 3477 0
 4777 1c30 80FA5A   		cmpb	$90, %dl
 4778 1c33 7722     		ja	.L516
 4779 1c35 80FA41   		cmpb	$65, %dl
 4780 1c38 0F83A1E7 		jae	.L225
 4780      FFFF
 4781 1c3e 84D2     		testb	%dl, %dl
 4782 1c40 0F84BD1C 		je	.L247
 4782      0000
 4783 1c46 83EA30   		subl	$48, %edx
 4784 1c49 80FA09   		cmpb	$9, %dl
 4785 1c4c 0F87FA15 		ja	.L711
 4785      0000
 4786 1c52 E988E7FF 		jmp	.L225
 4786      FF
 4787              	.L516:
 4788 1c57 80FA7A   		cmpb	$122, %dl
 4789 1c5a 0F87EC15 		ja	.L711
 4789      0000
 4790 1c60 80FA62   		cmpb	$98, %dl
 4791 1c63 0F8376E7 		jae	.L225
 4791      FFFF
 4792 1c69 80FA5F   		cmpb	$95, %dl
 4793 1c6c 0F846DE7 		je	.L225
 4793      FFFF
 4794 1c72 80FA61   		cmpb	$97, %dl
 4795 1c75 0F85D115 		jne	.L711
 4795      0000
 4796 1c7b E9CE0300 		jmp	.L515
 4796      00
 4797              	.LVL585:
 4798              	.L514:
3545:out/quex_scan.cpp ****         goto _2536;
GAS LISTING /tmp/cc23nfB3.s 			page 347


 4799              		.loc 1 3545 0
 4800 1c80 E9C71500 		jmp	.L711
 4800      00
 4801              	.L364:
3551:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4802              		.loc 1 3551 0
 4803 1c85 8B5328   		movl	40(%ebx), %edx
 4804              	.LVL586:
 4805 1c88 BE851C00 		movl	$.L364, %esi
 4805      00
 4806 1c8d 8D4201   		leal	1(%edx), %eax
 4807              	.LVL587:
 4808 1c90 894328   		movl	%eax, 40(%ebx)
3553:out/quex_scan.cpp ****     switch( input ) {
 4809              		.loc 1 3553 0
 4810 1c93 8A5201   		movb	1(%edx), %dl
3551:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4811              		.loc 1 3551 0
 4812 1c96 B8F11C00 		movl	$.L517, %eax
 4812      00
 4813              	.LVL588:
3553:out/quex_scan.cpp ****     switch( input ) {
 4814              		.loc 1 3553 0
 4815 1c9b 80FA6D   		cmpb	$109, %dl
 4816 1c9e 773E     		ja	.L519
 4817 1ca0 80FA61   		cmpb	$97, %dl
 4818 1ca3 0F8336E7 		jae	.L225
 4818      FFFF
 4819 1ca9 80FA5A   		cmpb	$90, %dl
 4820 1cac 7722     		ja	.L520
 4821 1cae 80FA41   		cmpb	$65, %dl
 4822 1cb1 0F8328E7 		jae	.L225
 4822      FFFF
 4823 1cb7 84D2     		testb	%dl, %dl
 4824 1cb9 0F84441C 		je	.L247
 4824      0000
 4825 1cbf 83EA30   		subl	$48, %edx
 4826 1cc2 80FA09   		cmpb	$9, %dl
 4827 1cc5 0F878115 		ja	.L711
 4827      0000
 4828 1ccb E90FE7FF 		jmp	.L225
 4828      FF
 4829              	.L520:
 4830 1cd0 80FA5F   		cmpb	$95, %dl
 4831 1cd3 0F857315 		jne	.L711
 4831      0000
 4832 1cd9 E901E7FF 		jmp	.L225
 4832      FF
 4833              	.L519:
 4834 1cde 80FA6E   		cmpb	$110, %dl
 4835 1ce1 7413     		je	.L518
 4836 1ce3 80FA7A   		cmpb	$122, %dl
 4837 1ce6 0F876015 		ja	.L711
 4837      0000
 4838 1cec E9EEE6FF 		jmp	.L225
 4838      FF
 4839              	.LVL589:
GAS LISTING /tmp/cc23nfB3.s 			page 348


 4840              	.L517:
3621:out/quex_scan.cpp ****         goto _2536;
 4841              		.loc 1 3621 0
 4842 1cf1 E9561500 		jmp	.L711
 4842      00
 4843              	.L518:
3627:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4844              		.loc 1 3627 0
 4845 1cf6 8B5328   		movl	40(%ebx), %edx
 4846              	.LVL590:
 4847 1cf9 BEF61C00 		movl	$.L518, %esi
 4847      00
 4848 1cfe 8D4201   		leal	1(%edx), %eax
 4849              	.LVL591:
 4850 1d01 894328   		movl	%eax, 40(%ebx)
3629:out/quex_scan.cpp ****     switch( input ) {
 4851              		.loc 1 3629 0
 4852 1d04 8A5201   		movb	1(%edx), %dl
3627:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4853              		.loc 1 3627 0
 4854 1d07 B8681D00 		movl	$.L521, %eax
 4854      00
 4855              	.LVL592:
3629:out/quex_scan.cpp ****     switch( input ) {
 4856              		.loc 1 3629 0
 4857 1d0c 80FA72   		cmpb	$114, %dl
 4858 1d0f 773E     		ja	.L524
 4859 1d11 80FA61   		cmpb	$97, %dl
 4860 1d14 0F83C5E6 		jae	.L225
 4860      FFFF
 4861 1d1a 80FA5A   		cmpb	$90, %dl
 4862 1d1d 7722     		ja	.L525
 4863 1d1f 80FA41   		cmpb	$65, %dl
 4864 1d22 0F83B7E6 		jae	.L225
 4864      FFFF
 4865 1d28 84D2     		testb	%dl, %dl
 4866 1d2a 0F84D31B 		je	.L247
 4866      0000
 4867 1d30 83EA30   		subl	$48, %edx
 4868 1d33 80FA09   		cmpb	$9, %dl
 4869 1d36 0F871015 		ja	.L711
 4869      0000
 4870 1d3c E99EE6FF 		jmp	.L225
 4870      FF
 4871              	.L525:
 4872 1d41 80FA5F   		cmpb	$95, %dl
 4873 1d44 0F850215 		jne	.L711
 4873      0000
 4874 1d4a E990E6FF 		jmp	.L225
 4874      FF
 4875              	.L524:
 4876 1d4f 80FA74   		cmpb	$116, %dl
 4877 1d52 0F848A00 		je	.L523
 4877      0000
 4878 1d58 7213     		jb	.L522
 4879 1d5a 80FA7A   		cmpb	$122, %dl
 4880 1d5d 0F87E914 		ja	.L711
GAS LISTING /tmp/cc23nfB3.s 			page 349


 4880      0000
 4881 1d63 E977E6FF 		jmp	.L225
 4881      FF
 4882              	.LVL593:
 4883              	.L521:
3697:out/quex_scan.cpp ****         goto _2536;
 4884              		.loc 1 3697 0
 4885 1d68 E9DF1400 		jmp	.L711
 4885      00
 4886              	.L522:
3703:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4887              		.loc 1 3703 0
 4888 1d6d 8B5328   		movl	40(%ebx), %edx
 4889              	.LVL594:
 4890 1d70 BE6D1D00 		movl	$.L522, %esi
 4890      00
 4891 1d75 8D4201   		leal	1(%edx), %eax
 4892              	.LVL595:
 4893 1d78 894328   		movl	%eax, 40(%ebx)
3705:out/quex_scan.cpp ****     switch( input ) {
 4894              		.loc 1 3705 0
 4895 1d7b 8A5201   		movb	1(%edx), %dl
3703:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4896              		.loc 1 3703 0
 4897 1d7e B8DD1D00 		movl	$.L526, %eax
 4897      00
 4898              	.LVL596:
3705:out/quex_scan.cpp ****     switch( input ) {
 4899              		.loc 1 3705 0
 4900 1d83 80FA73   		cmpb	$115, %dl
 4901 1d86 773E     		ja	.L528
 4902 1d88 80FA61   		cmpb	$97, %dl
 4903 1d8b 0F834EE6 		jae	.L225
 4903      FFFF
 4904 1d91 80FA5A   		cmpb	$90, %dl
 4905 1d94 7722     		ja	.L529
 4906 1d96 80FA41   		cmpb	$65, %dl
 4907 1d99 0F8340E6 		jae	.L225
 4907      FFFF
 4908 1d9f 84D2     		testb	%dl, %dl
 4909 1da1 0F845C1B 		je	.L247
 4909      0000
 4910 1da7 83EA30   		subl	$48, %edx
 4911 1daa 80FA09   		cmpb	$9, %dl
 4912 1dad 0F879914 		ja	.L711
 4912      0000
 4913 1db3 E927E6FF 		jmp	.L225
 4913      FF
 4914              	.L529:
 4915 1db8 80FA5F   		cmpb	$95, %dl
 4916 1dbb 0F858B14 		jne	.L711
 4916      0000
 4917 1dc1 E919E6FF 		jmp	.L225
 4917      FF
 4918              	.L528:
 4919 1dc6 80FA74   		cmpb	$116, %dl
 4920 1dc9 0F842B02 		je	.L527
GAS LISTING /tmp/cc23nfB3.s 			page 350


 4920      0000
 4921 1dcf 80FA7A   		cmpb	$122, %dl
 4922 1dd2 0F877414 		ja	.L711
 4922      0000
 4923 1dd8 E902E6FF 		jmp	.L225
 4923      FF
 4924              	.LVL597:
 4925              	.L526:
3773:out/quex_scan.cpp ****         goto _2536;
 4926              		.loc 1 3773 0
 4927 1ddd E96A1400 		jmp	.L711
 4927      00
 4928              	.L523:
3779:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4929              		.loc 1 3779 0
 4930 1de2 8B5328   		movl	40(%ebx), %edx
 4931              	.LVL598:
 4932 1de5 BEE21D00 		movl	$.L523, %esi
 4932      00
 4933 1dea 8D4201   		leal	1(%edx), %eax
 4934              	.LVL599:
 4935 1ded 894328   		movl	%eax, 40(%ebx)
3781:out/quex_scan.cpp ****     switch( input ) {
 4936              		.loc 1 3781 0
 4937 1df0 8A5201   		movb	1(%edx), %dl
3779:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4938              		.loc 1 3779 0
 4939 1df3 B84E1E00 		movl	$.L530, %eax
 4939      00
 4940              	.LVL600:
3781:out/quex_scan.cpp ****     switch( input ) {
 4941              		.loc 1 3781 0
 4942 1df8 80FA68   		cmpb	$104, %dl
 4943 1dfb 773E     		ja	.L532
 4944 1dfd 80FA61   		cmpb	$97, %dl
 4945 1e00 0F83D9E5 		jae	.L225
 4945      FFFF
 4946 1e06 80FA5A   		cmpb	$90, %dl
 4947 1e09 7722     		ja	.L533
 4948 1e0b 80FA41   		cmpb	$65, %dl
 4949 1e0e 0F83CBE5 		jae	.L225
 4949      FFFF
 4950 1e14 84D2     		testb	%dl, %dl
 4951 1e16 0F84E71A 		je	.L247
 4951      0000
 4952 1e1c 83EA30   		subl	$48, %edx
 4953 1e1f 80FA09   		cmpb	$9, %dl
 4954 1e22 0F872414 		ja	.L711
 4954      0000
 4955 1e28 E9B2E5FF 		jmp	.L225
 4955      FF
 4956              	.L533:
 4957 1e2d 80FA5F   		cmpb	$95, %dl
 4958 1e30 0F851614 		jne	.L711
 4958      0000
 4959 1e36 E9A4E5FF 		jmp	.L225
 4959      FF
GAS LISTING /tmp/cc23nfB3.s 			page 351


 4960              	.L532:
 4961 1e3b 80FA69   		cmpb	$105, %dl
 4962 1e3e 7413     		je	.L531
 4963 1e40 80FA7A   		cmpb	$122, %dl
 4964 1e43 0F870314 		ja	.L711
 4964      0000
 4965 1e49 E991E5FF 		jmp	.L225
 4965      FF
 4966              	.LVL601:
 4967              	.L530:
3849:out/quex_scan.cpp ****         goto _2536;
 4968              		.loc 1 3849 0
 4969 1e4e E9F91300 		jmp	.L711
 4969      00
 4970              	.L531:
3855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4971              		.loc 1 3855 0
 4972 1e53 8B5328   		movl	40(%ebx), %edx
 4973              	.LVL602:
 4974 1e56 BE531E00 		movl	$.L531, %esi
 4974      00
 4975 1e5b 8D4201   		leal	1(%edx), %eax
 4976              	.LVL603:
 4977 1e5e 894328   		movl	%eax, 40(%ebx)
3857:out/quex_scan.cpp ****     switch( input ) {
 4978              		.loc 1 3857 0
 4979 1e61 8A5201   		movb	1(%edx), %dl
3855:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 4980              		.loc 1 3855 0
 4981 1e64 B8BF1E00 		movl	$.L534, %eax
 4981      00
 4982              	.LVL604:
3857:out/quex_scan.cpp ****     switch( input ) {
 4983              		.loc 1 3857 0
 4984 1e69 80FA6D   		cmpb	$109, %dl
 4985 1e6c 773E     		ja	.L536
 4986 1e6e 80FA61   		cmpb	$97, %dl
 4987 1e71 0F8368E5 		jae	.L225
 4987      FFFF
 4988 1e77 80FA5A   		cmpb	$90, %dl
 4989 1e7a 7722     		ja	.L537
 4990 1e7c 80FA41   		cmpb	$65, %dl
 4991 1e7f 0F835AE5 		jae	.L225
 4991      FFFF
 4992 1e85 84D2     		testb	%dl, %dl
 4993 1e87 0F84761A 		je	.L247
 4993      0000
 4994 1e8d 83EA30   		subl	$48, %edx
 4995 1e90 80FA09   		cmpb	$9, %dl
 4996 1e93 0F87B313 		ja	.L711
 4996      0000
 4997 1e99 E941E5FF 		jmp	.L225
 4997      FF
 4998              	.L537:
 4999 1e9e 80FA5F   		cmpb	$95, %dl
 5000 1ea1 0F85A513 		jne	.L711
 5000      0000
GAS LISTING /tmp/cc23nfB3.s 			page 352


 5001 1ea7 E933E5FF 		jmp	.L225
 5001      FF
 5002              	.L536:
 5003 1eac 80FA6E   		cmpb	$110, %dl
 5004 1eaf 7413     		je	.L535
 5005 1eb1 80FA7A   		cmpb	$122, %dl
 5006 1eb4 0F879213 		ja	.L711
 5006      0000
 5007 1eba E920E5FF 		jmp	.L225
 5007      FF
 5008              	.LVL605:
 5009              	.L534:
3925:out/quex_scan.cpp ****         goto _2536;
 5010              		.loc 1 3925 0
 5011 1ebf E9881300 		jmp	.L711
 5011      00
 5012              	.L535:
3931:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5013              		.loc 1 3931 0
 5014 1ec4 8B5328   		movl	40(%ebx), %edx
 5015              	.LVL606:
 5016 1ec7 BEC41E00 		movl	$.L535, %esi
 5016      00
 5017 1ecc 8D4201   		leal	1(%edx), %eax
 5018              	.LVL607:
 5019 1ecf 894328   		movl	%eax, 40(%ebx)
3933:out/quex_scan.cpp ****     switch( input ) {
 5020              		.loc 1 3933 0
 5021 1ed2 8A5201   		movb	1(%edx), %dl
3931:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5022              		.loc 1 3931 0
 5023 1ed5 B8301F00 		movl	$.L538, %eax
 5023      00
 5024              	.LVL608:
3933:out/quex_scan.cpp ****     switch( input ) {
 5025              		.loc 1 3933 0
 5026 1eda 80FA74   		cmpb	$116, %dl
 5027 1edd 773E     		ja	.L540
 5028 1edf 80FA61   		cmpb	$97, %dl
 5029 1ee2 0F83F7E4 		jae	.L225
 5029      FFFF
 5030 1ee8 80FA5A   		cmpb	$90, %dl
 5031 1eeb 7722     		ja	.L541
 5032 1eed 80FA41   		cmpb	$65, %dl
 5033 1ef0 0F83E9E4 		jae	.L225
 5033      FFFF
 5034 1ef6 84D2     		testb	%dl, %dl
 5035 1ef8 0F84051A 		je	.L247
 5035      0000
 5036 1efe 83EA30   		subl	$48, %edx
 5037 1f01 80FA09   		cmpb	$9, %dl
 5038 1f04 0F874213 		ja	.L711
 5038      0000
 5039 1f0a E9D0E4FF 		jmp	.L225
 5039      FF
 5040              	.L541:
 5041 1f0f 80FA5F   		cmpb	$95, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 353


 5042 1f12 0F853413 		jne	.L711
 5042      0000
 5043 1f18 E9C2E4FF 		jmp	.L225
 5043      FF
 5044              	.L540:
 5045 1f1d 80FA75   		cmpb	$117, %dl
 5046 1f20 7413     		je	.L539
 5047 1f22 80FA7A   		cmpb	$122, %dl
 5048 1f25 0F872113 		ja	.L711
 5048      0000
 5049 1f2b E9AFE4FF 		jmp	.L225
 5049      FF
 5050              	.LVL609:
 5051              	.L538:
4001:out/quex_scan.cpp ****         goto _2536;
 5052              		.loc 1 4001 0
 5053 1f30 E9171300 		jmp	.L711
 5053      00
 5054              	.L539:
4007:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5055              		.loc 1 4007 0
 5056 1f35 8B5328   		movl	40(%ebx), %edx
 5057              	.LVL610:
 5058 1f38 BE351F00 		movl	$.L539, %esi
 5058      00
 5059 1f3d 8D4201   		leal	1(%edx), %eax
 5060              	.LVL611:
 5061 1f40 894328   		movl	%eax, 40(%ebx)
4009:out/quex_scan.cpp ****     switch( input ) {
 5062              		.loc 1 4009 0
 5063 1f43 8A5201   		movb	1(%edx), %dl
4007:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5064              		.loc 1 4007 0
 5065 1f46 B8A11F00 		movl	$.L542, %eax
 5065      00
 5066              	.LVL612:
4009:out/quex_scan.cpp ****     switch( input ) {
 5067              		.loc 1 4009 0
 5068 1f4b 80FA64   		cmpb	$100, %dl
 5069 1f4e 773E     		ja	.L544
 5070 1f50 80FA61   		cmpb	$97, %dl
 5071 1f53 0F8386E4 		jae	.L225
 5071      FFFF
 5072 1f59 80FA5A   		cmpb	$90, %dl
 5073 1f5c 7722     		ja	.L545
 5074 1f5e 80FA41   		cmpb	$65, %dl
 5075 1f61 0F8378E4 		jae	.L225
 5075      FFFF
 5076 1f67 84D2     		testb	%dl, %dl
 5077 1f69 0F849419 		je	.L247
 5077      0000
 5078 1f6f 83EA30   		subl	$48, %edx
 5079 1f72 80FA09   		cmpb	$9, %dl
 5080 1f75 0F87D112 		ja	.L711
 5080      0000
 5081 1f7b E95FE4FF 		jmp	.L225
 5081      FF
GAS LISTING /tmp/cc23nfB3.s 			page 354


 5082              	.L545:
 5083 1f80 80FA5F   		cmpb	$95, %dl
 5084 1f83 0F85C312 		jne	.L711
 5084      0000
 5085 1f89 E951E4FF 		jmp	.L225
 5085      FF
 5086              	.L544:
 5087 1f8e 80FA65   		cmpb	$101, %dl
 5088 1f91 7413     		je	.L543
 5089 1f93 80FA7A   		cmpb	$122, %dl
 5090 1f96 0F87B012 		ja	.L711
 5090      0000
 5091 1f9c E93EE4FF 		jmp	.L225
 5091      FF
 5092              	.LVL613:
 5093              	.L542:
4077:out/quex_scan.cpp ****         goto _2536;
 5094              		.loc 1 4077 0
 5095 1fa1 E9A61200 		jmp	.L711
 5095      00
 5096              	.L543:
4083:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5097              		.loc 1 4083 0
 5098 1fa6 8B5328   		movl	40(%ebx), %edx
 5099              	.LVL614:
 5100 1fa9 BEA61F00 		movl	$.L543, %esi
 5100      00
 5101 1fae 8D4201   		leal	1(%edx), %eax
 5102              	.LVL615:
 5103 1fb1 894328   		movl	%eax, 40(%ebx)
4085:out/quex_scan.cpp ****     switch( input ) {
 5104              		.loc 1 4085 0
 5105 1fb4 8A5201   		movb	1(%edx), %dl
4083:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5106              		.loc 1 4083 0
 5107 1fb7 B8DA3000 		movl	$.L546, %eax
 5107      00
 5108              	.LVL616:
4085:out/quex_scan.cpp ****     switch( input ) {
 5109              		.loc 1 4085 0
 5110 1fbc 80FA5A   		cmpb	$90, %dl
 5111 1fbf 7719     		ja	.L547
 5112 1fc1 80FA41   		cmpb	$65, %dl
 5113 1fc4 0F8315E4 		jae	.L225
 5113      FFFF
 5114 1fca 84D2     		testb	%dl, %dl
 5115 1fcc 0F843119 		je	.L247
 5115      0000
 5116 1fd2 83EA30   		subl	$48, %edx
 5117 1fd5 80FA09   		cmpb	$9, %dl
 5118 1fd8 EB15     		jmp	.L888
 5119              	.L547:
 5120 1fda 80FA5F   		cmpb	$95, %dl
 5121 1fdd 0F84FCE3 		je	.L225
 5121      FFFF
 5122 1fe3 0F82F110 		jb	.L694
 5122      0000
GAS LISTING /tmp/cc23nfB3.s 			page 355


 5123 1fe9 83EA61   		subl	$97, %edx
 5124 1fec 80FA19   		cmpb	$25, %dl
 5125              	.L888:
 5126 1fef 0F87E510 		ja	.L694
 5126      0000
 5127 1ff5 E9E5E3FF 		jmp	.L225
 5127      FF
 5128              	.LVL617:
 5129              	.L527:
4159:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5130              		.loc 1 4159 0
 5131 1ffa 8B5328   		movl	40(%ebx), %edx
 5132              	.LVL618:
 5133 1ffd BEFA1F00 		movl	$.L527, %esi
 5133      00
 5134 2002 8D4201   		leal	1(%edx), %eax
 5135              	.LVL619:
 5136 2005 894328   		movl	%eax, 40(%ebx)
4161:out/quex_scan.cpp ****     switch( input ) {
 5137              		.loc 1 4161 0
 5138 2008 8A5201   		movb	1(%edx), %dl
4159:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5139              		.loc 1 4159 0
 5140 200b B8253300 		movl	$.L548, %eax
 5140      00
 5141              	.LVL620:
4161:out/quex_scan.cpp ****     switch( input ) {
 5142              		.loc 1 4161 0
 5143 2010 80FA5A   		cmpb	$90, %dl
 5144 2013 7719     		ja	.L549
 5145 2015 80FA41   		cmpb	$65, %dl
 5146 2018 0F83C1E3 		jae	.L225
 5146      FFFF
 5147 201e 84D2     		testb	%dl, %dl
 5148 2020 0F84DD18 		je	.L247
 5148      0000
 5149 2026 83EA30   		subl	$48, %edx
 5150 2029 80FA09   		cmpb	$9, %dl
 5151 202c EB15     		jmp	.L897
 5152              	.L549:
 5153 202e 80FA5F   		cmpb	$95, %dl
 5154 2031 0F84A8E3 		je	.L225
 5154      FFFF
 5155 2037 0F82E812 		jb	.L720
 5155      0000
 5156 203d 83EA61   		subl	$97, %edx
 5157 2040 80FA19   		cmpb	$25, %dl
 5158              	.L897:
 5159 2043 0F87DC12 		ja	.L720
 5159      0000
 5160 2049 E991E3FF 		jmp	.L225
 5160      FF
 5161              	.LVL621:
 5162              	.L515:
4235:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5163              		.loc 1 4235 0
 5164 204e 8B5328   		movl	40(%ebx), %edx
GAS LISTING /tmp/cc23nfB3.s 			page 356


 5165              	.LVL622:
 5166 2051 BE4E2000 		movl	$.L515, %esi
 5166      00
 5167 2056 8D4201   		leal	1(%edx), %eax
 5168              	.LVL623:
 5169 2059 894328   		movl	%eax, 40(%ebx)
4237:out/quex_scan.cpp ****     switch( input ) {
 5170              		.loc 1 4237 0
 5171 205c 8A5201   		movb	1(%edx), %dl
4235:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5172              		.loc 1 4235 0
 5173 205f B8BA2000 		movl	$.L550, %eax
 5173      00
 5174              	.LVL624:
4237:out/quex_scan.cpp ****     switch( input ) {
 5175              		.loc 1 4237 0
 5176 2064 80FA71   		cmpb	$113, %dl
 5177 2067 773E     		ja	.L552
 5178 2069 80FA61   		cmpb	$97, %dl
 5179 206c 0F836DE3 		jae	.L225
 5179      FFFF
 5180 2072 80FA5A   		cmpb	$90, %dl
 5181 2075 7722     		ja	.L553
 5182 2077 80FA41   		cmpb	$65, %dl
 5183 207a 0F835FE3 		jae	.L225
 5183      FFFF
 5184 2080 84D2     		testb	%dl, %dl
 5185 2082 0F847B18 		je	.L247
 5185      0000
 5186 2088 83EA30   		subl	$48, %edx
 5187 208b 80FA09   		cmpb	$9, %dl
 5188 208e 0F87B811 		ja	.L711
 5188      0000
 5189 2094 E946E3FF 		jmp	.L225
 5189      FF
 5190              	.L553:
 5191 2099 80FA5F   		cmpb	$95, %dl
 5192 209c 0F85AA11 		jne	.L711
 5192      0000
 5193 20a2 E938E3FF 		jmp	.L225
 5193      FF
 5194              	.L552:
 5195 20a7 80FA72   		cmpb	$114, %dl
 5196 20aa 7413     		je	.L551
 5197 20ac 80FA7A   		cmpb	$122, %dl
 5198 20af 0F879711 		ja	.L711
 5198      0000
 5199 20b5 E925E3FF 		jmp	.L225
 5199      FF
 5200              	.LVL625:
 5201              	.L550:
4305:out/quex_scan.cpp ****         goto _2536;
 5202              		.loc 1 4305 0
 5203 20ba E98D1100 		jmp	.L711
 5203      00
 5204              	.L551:
4311:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 357


 5205              		.loc 1 4311 0
 5206 20bf 8B5328   		movl	40(%ebx), %edx
 5207              	.LVL626:
 5208 20c2 BEBF2000 		movl	$.L551, %esi
 5208      00
 5209 20c7 8D4201   		leal	1(%edx), %eax
 5210              	.LVL627:
 5211 20ca 894328   		movl	%eax, 40(%ebx)
4313:out/quex_scan.cpp ****     switch( input ) {
 5212              		.loc 1 4313 0
 5213 20cd 8A5201   		movb	1(%edx), %dl
4311:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5214              		.loc 1 4311 0
 5215 20d0 B8EE3300 		movl	$.L554, %eax
 5215      00
 5216              	.LVL628:
4313:out/quex_scan.cpp ****     switch( input ) {
 5217              		.loc 1 4313 0
 5218 20d5 80FA5A   		cmpb	$90, %dl
 5219 20d8 7719     		ja	.L555
 5220 20da 80FA41   		cmpb	$65, %dl
 5221 20dd 0F83FCE2 		jae	.L225
 5221      FFFF
 5222 20e3 84D2     		testb	%dl, %dl
 5223 20e5 0F841818 		je	.L247
 5223      0000
 5224 20eb 83EA30   		subl	$48, %edx
 5225 20ee 80FA09   		cmpb	$9, %dl
 5226 20f1 EB15     		jmp	.L902
 5227              	.L555:
 5228 20f3 80FA5F   		cmpb	$95, %dl
 5229 20f6 0F84E3E2 		je	.L225
 5229      FFFF
 5230 20fc 0F82EC12 		jb	.L728
 5230      0000
 5231 2102 83EA61   		subl	$97, %edx
 5232 2105 80FA19   		cmpb	$25, %dl
 5233              	.L902:
 5234 2108 0F87E012 		ja	.L728
 5234      0000
 5235 210e E9CCE2FF 		jmp	.L225
 5235      FF
 5236              	.LVL629:
 5237              	.L357:
4387:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5238              		.loc 1 4387 0
 5239 2113 8B5328   		movl	40(%ebx), %edx
 5240              	.LVL630:
 5241 2116 BE132100 		movl	$.L357, %esi
 5241      00
 5242 211b 8D4201   		leal	1(%edx), %eax
 5243              	.LVL631:
 5244 211e 894328   		movl	%eax, 40(%ebx)
4389:out/quex_scan.cpp ****     switch( input ) {
 5245              		.loc 1 4389 0
 5246 2121 8A5201   		movb	1(%edx), %dl
4387:out/quex_scan.cpp ****     ++(me->buffer._input_p);
GAS LISTING /tmp/cc23nfB3.s 			page 358


 5247              		.loc 1 4387 0
 5248 2124 B8832100 		movl	$.L556, %eax
 5248      00
 5249              	.LVL632:
4389:out/quex_scan.cpp ****     switch( input ) {
 5250              		.loc 1 4389 0
 5251 2129 80FA65   		cmpb	$101, %dl
 5252 212c 773E     		ja	.L558
 5253 212e 80FA61   		cmpb	$97, %dl
 5254 2131 0F83A8E2 		jae	.L225
 5254      FFFF
 5255 2137 80FA5A   		cmpb	$90, %dl
 5256 213a 7722     		ja	.L559
 5257 213c 80FA41   		cmpb	$65, %dl
 5258 213f 0F839AE2 		jae	.L225
 5258      FFFF
 5259 2145 84D2     		testb	%dl, %dl
 5260 2147 0F84B617 		je	.L247
 5260      0000
 5261 214d 83EA30   		subl	$48, %edx
 5262 2150 80FA09   		cmpb	$9, %dl
 5263 2153 0F87F310 		ja	.L711
 5263      0000
 5264 2159 E981E2FF 		jmp	.L225
 5264      FF
 5265              	.L559:
 5266 215e 80FA5F   		cmpb	$95, %dl
 5267 2161 0F85E510 		jne	.L711
 5267      0000
 5268 2167 E973E2FF 		jmp	.L225
 5268      FF
 5269              	.L558:
 5270 216c 80FA66   		cmpb	$102, %dl
 5271 216f 0F842102 		je	.L557
 5271      0000
 5272 2175 80FA7A   		cmpb	$122, %dl
 5273 2178 0F87CE10 		ja	.L711
 5273      0000
 5274 217e E95CE2FF 		jmp	.L225
 5274      FF
 5275              	.LVL633:
 5276              	.L556:
4457:out/quex_scan.cpp ****         goto _2536;
 5277              		.loc 1 4457 0
 5278 2183 E9C41000 		jmp	.L711
 5278      00
 5279              	.L358:
4463:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5280              		.loc 1 4463 0
 5281 2188 8B5328   		movl	40(%ebx), %edx
 5282              	.LVL634:
 5283 218b BE882100 		movl	$.L358, %esi
 5283      00
 5284 2190 8D4201   		leal	1(%edx), %eax
 5285              	.LVL635:
 5286 2193 894328   		movl	%eax, 40(%ebx)
4465:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 359


 5287              		.loc 1 4465 0
 5288 2196 8A5201   		movb	1(%edx), %dl
4463:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5289              		.loc 1 4463 0
 5290 2199 B8D83400 		movl	$.L560, %eax
 5290      00
 5291              	.LVL636:
4465:out/quex_scan.cpp ****     switch( input ) {
 5292              		.loc 1 4465 0
 5293 219e 80FA74   		cmpb	$116, %dl
 5294 21a1 7735     		ja	.L562
 5295 21a3 80FA61   		cmpb	$97, %dl
 5296 21a6 0F8333E2 		jae	.L225
 5296      FFFF
 5297 21ac 80FA5A   		cmpb	$90, %dl
 5298 21af 7719     		ja	.L563
 5299 21b1 80FA41   		cmpb	$65, %dl
 5300 21b4 0F8325E2 		jae	.L225
 5300      FFFF
 5301 21ba 84D2     		testb	%dl, %dl
 5302 21bc 0F844117 		je	.L247
 5302      0000
 5303 21c2 83EA30   		subl	$48, %edx
 5304 21c5 80FA09   		cmpb	$9, %dl
 5305 21c8 EB16     		jmp	.L904
 5306              	.L563:
 5307 21ca 80FA5F   		cmpb	$95, %dl
 5308 21cd 0F850513 		jne	.L737
 5308      0000
 5309 21d3 E907E2FF 		jmp	.L225
 5309      FF
 5310              	.L562:
 5311 21d8 80FA75   		cmpb	$117, %dl
 5312 21db 740E     		je	.L561
 5313 21dd 80FA7A   		cmpb	$122, %dl
 5314              	.L904:
 5315 21e0 0F87F212 		ja	.L737
 5315      0000
 5316 21e6 E9F4E1FF 		jmp	.L225
 5316      FF
 5317              	.LVL637:
 5318              	.L561:
4539:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5319              		.loc 1 4539 0
 5320 21eb 8B5328   		movl	40(%ebx), %edx
 5321              	.LVL638:
 5322 21ee BEEB2100 		movl	$.L561, %esi
 5322      00
 5323 21f3 8D4201   		leal	1(%edx), %eax
 5324              	.LVL639:
 5325 21f6 894328   		movl	%eax, 40(%ebx)
4541:out/quex_scan.cpp ****     switch( input ) {
 5326              		.loc 1 4541 0
 5327 21f9 8A5201   		movb	1(%edx), %dl
4539:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5328              		.loc 1 4539 0
 5329 21fc B85B2200 		movl	$.L564, %eax
GAS LISTING /tmp/cc23nfB3.s 			page 360


 5329      00
 5330              	.LVL640:
4541:out/quex_scan.cpp ****     switch( input ) {
 5331              		.loc 1 4541 0
 5332 2201 80FA5F   		cmpb	$95, %dl
 5333 2204 0F84D5E1 		je	.L225
 5333      FFFF
 5334 220a 772C     		ja	.L566
 5335 220c 80FA39   		cmpb	$57, %dl
 5336 220f 7716     		ja	.L567
 5337 2211 80FA30   		cmpb	$48, %dl
 5338 2214 0F83C5E1 		jae	.L225
 5338      FFFF
 5339 221a 84D2     		testb	%dl, %dl
 5340 221c 0F84E116 		je	.L247
 5340      0000
 5341 2222 E9251000 		jmp	.L711
 5341      00
 5342              	.L567:
 5343 2227 83EA41   		subl	$65, %edx
 5344 222a 80FA19   		cmpb	$25, %dl
 5345 222d 0F871910 		ja	.L711
 5345      0000
 5346 2233 E9A7E1FF 		jmp	.L225
 5346      FF
 5347              	.L566:
 5348 2238 80FA62   		cmpb	$98, %dl
 5349 223b 7423     		je	.L565
 5350 223d 770E     		ja	.L568
 5351 223f 80FA61   		cmpb	$97, %dl
 5352 2242 0F850410 		jne	.L711
 5352      0000
 5353 2248 E992E1FF 		jmp	.L225
 5353      FF
 5354              	.L568:
 5355 224d 80FA7A   		cmpb	$122, %dl
 5356 2250 0F87F60F 		ja	.L711
 5356      0000
 5357 2256 E984E1FF 		jmp	.L225
 5357      FF
 5358              	.LVL641:
 5359              	.L564:
4609:out/quex_scan.cpp ****         goto _2536;
 5360              		.loc 1 4609 0
 5361 225b E9EC0F00 		jmp	.L711
 5361      00
 5362              	.L565:
4615:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5363              		.loc 1 4615 0
 5364 2260 8B5328   		movl	40(%ebx), %edx
 5365              	.LVL642:
 5366 2263 BE602200 		movl	$.L565, %esi
 5366      00
 5367 2268 8D4201   		leal	1(%edx), %eax
 5368              	.LVL643:
 5369 226b 894328   		movl	%eax, 40(%ebx)
4617:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 361


 5370              		.loc 1 4617 0
 5371 226e 8A5201   		movb	1(%edx), %dl
4615:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5372              		.loc 1 4615 0
 5373 2271 B8CC2200 		movl	$.L569, %eax
 5373      00
 5374              	.LVL644:
4617:out/quex_scan.cpp ****     switch( input ) {
 5375              		.loc 1 4617 0
 5376 2276 80FA6B   		cmpb	$107, %dl
 5377 2279 773E     		ja	.L571
 5378 227b 80FA61   		cmpb	$97, %dl
 5379 227e 0F835BE1 		jae	.L225
 5379      FFFF
 5380 2284 80FA5A   		cmpb	$90, %dl
 5381 2287 7722     		ja	.L572
 5382 2289 80FA41   		cmpb	$65, %dl
 5383 228c 0F834DE1 		jae	.L225
 5383      FFFF
 5384 2292 84D2     		testb	%dl, %dl
 5385 2294 0F846916 		je	.L247
 5385      0000
 5386 229a 83EA30   		subl	$48, %edx
 5387 229d 80FA09   		cmpb	$9, %dl
 5388 22a0 0F87A60F 		ja	.L711
 5388      0000
 5389 22a6 E934E1FF 		jmp	.L225
 5389      FF
 5390              	.L572:
 5391 22ab 80FA5F   		cmpb	$95, %dl
 5392 22ae 0F85980F 		jne	.L711
 5392      0000
 5393 22b4 E926E1FF 		jmp	.L225
 5393      FF
 5394              	.L571:
 5395 22b9 80FA6C   		cmpb	$108, %dl
 5396 22bc 7413     		je	.L570
 5397 22be 80FA7A   		cmpb	$122, %dl
 5398 22c1 0F87850F 		ja	.L711
 5398      0000
 5399 22c7 E913E1FF 		jmp	.L225
 5399      FF
 5400              	.LVL645:
 5401              	.L569:
4685:out/quex_scan.cpp ****         goto _2536;
 5402              		.loc 1 4685 0
 5403 22cc E97B0F00 		jmp	.L711
 5403      00
 5404              	.L570:
4691:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5405              		.loc 1 4691 0
 5406 22d1 8B5328   		movl	40(%ebx), %edx
 5407              	.LVL646:
 5408 22d4 BED12200 		movl	$.L570, %esi
 5408      00
 5409 22d9 8D4201   		leal	1(%edx), %eax
 5410              	.LVL647:
GAS LISTING /tmp/cc23nfB3.s 			page 362


 5411 22dc 894328   		movl	%eax, 40(%ebx)
4693:out/quex_scan.cpp ****     switch( input ) {
 5412              		.loc 1 4693 0
 5413 22df 8A5201   		movb	1(%edx), %dl
4691:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5414              		.loc 1 4691 0
 5415 22e2 B83D2300 		movl	$.L573, %eax
 5415      00
 5416              	.LVL648:
4693:out/quex_scan.cpp ****     switch( input ) {
 5417              		.loc 1 4693 0
 5418 22e7 80FA64   		cmpb	$100, %dl
 5419 22ea 773E     		ja	.L575
 5420 22ec 80FA61   		cmpb	$97, %dl
 5421 22ef 0F83EAE0 		jae	.L225
 5421      FFFF
 5422 22f5 80FA5A   		cmpb	$90, %dl
 5423 22f8 7722     		ja	.L576
 5424 22fa 80FA41   		cmpb	$65, %dl
 5425 22fd 0F83DCE0 		jae	.L225
 5425      FFFF
 5426 2303 84D2     		testb	%dl, %dl
 5427 2305 0F84F815 		je	.L247
 5427      0000
 5428 230b 83EA30   		subl	$48, %edx
 5429 230e 80FA09   		cmpb	$9, %dl
 5430 2311 0F87350F 		ja	.L711
 5430      0000
 5431 2317 E9C3E0FF 		jmp	.L225
 5431      FF
 5432              	.L576:
 5433 231c 80FA5F   		cmpb	$95, %dl
 5434 231f 0F85270F 		jne	.L711
 5434      0000
 5435 2325 E9B5E0FF 		jmp	.L225
 5435      FF
 5436              	.L575:
 5437 232a 80FA65   		cmpb	$101, %dl
 5438 232d 7413     		je	.L574
 5439 232f 80FA7A   		cmpb	$122, %dl
 5440 2332 0F87140F 		ja	.L711
 5440      0000
 5441 2338 E9A2E0FF 		jmp	.L225
 5441      FF
 5442              	.LVL649:
 5443              	.L573:
4761:out/quex_scan.cpp ****         goto _2536;
 5444              		.loc 1 4761 0
 5445 233d E90A0F00 		jmp	.L711
 5445      00
 5446              	.L574:
4767:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5447              		.loc 1 4767 0
 5448 2342 8B5328   		movl	40(%ebx), %edx
 5449              	.LVL650:
 5450 2345 BE422300 		movl	$.L574, %esi
 5450      00
GAS LISTING /tmp/cc23nfB3.s 			page 363


 5451 234a 8D4201   		leal	1(%edx), %eax
 5452              	.LVL651:
 5453 234d 894328   		movl	%eax, 40(%ebx)
4769:out/quex_scan.cpp ****     switch( input ) {
 5454              		.loc 1 4769 0
 5455 2350 8A5201   		movb	1(%edx), %dl
4767:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5456              		.loc 1 4767 0
 5457 2353 B8A93300 		movl	$.L577, %eax
 5457      00
 5458              	.LVL652:
4769:out/quex_scan.cpp ****     switch( input ) {
 5459              		.loc 1 4769 0
 5460 2358 80FA5A   		cmpb	$90, %dl
 5461 235b 7719     		ja	.L578
 5462 235d 80FA41   		cmpb	$65, %dl
 5463 2360 0F8379E0 		jae	.L225
 5463      FFFF
 5464 2366 84D2     		testb	%dl, %dl
 5465 2368 0F849515 		je	.L247
 5465      0000
 5466 236e 83EA30   		subl	$48, %edx
 5467 2371 80FA09   		cmpb	$9, %dl
 5468 2374 EB15     		jmp	.L901
 5469              	.L578:
 5470 2376 80FA5F   		cmpb	$95, %dl
 5471 2379 0F8460E0 		je	.L225
 5471      FFFF
 5472 237f 0F822410 		jb	.L726
 5472      0000
 5473 2385 83EA61   		subl	$97, %edx
 5474 2388 80FA19   		cmpb	$25, %dl
 5475              	.L901:
 5476 238b 0F871810 		ja	.L726
 5476      0000
 5477 2391 E949E0FF 		jmp	.L225
 5477      FF
 5478              	.LVL653:
 5479              	.L557:
4843:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5480              		.loc 1 4843 0
 5481 2396 8B5328   		movl	40(%ebx), %edx
 5482              	.LVL654:
 5483 2399 BE962300 		movl	$.L557, %esi
 5483      00
 5484 239e 8D4201   		leal	1(%edx), %eax
 5485              	.LVL655:
 5486 23a1 894328   		movl	%eax, 40(%ebx)
4845:out/quex_scan.cpp ****     switch( input ) {
 5487              		.loc 1 4845 0
 5488 23a4 8A5201   		movb	1(%edx), %dl
4843:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5489              		.loc 1 4843 0
 5490 23a7 B8022400 		movl	$.L579, %eax
 5490      00
 5491              	.LVL656:
4845:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 364


 5492              		.loc 1 4845 0
 5493 23ac 80FA68   		cmpb	$104, %dl
 5494 23af 773E     		ja	.L581
 5495 23b1 80FA61   		cmpb	$97, %dl
 5496 23b4 0F8325E0 		jae	.L225
 5496      FFFF
 5497 23ba 80FA5A   		cmpb	$90, %dl
 5498 23bd 7722     		ja	.L582
 5499 23bf 80FA41   		cmpb	$65, %dl
 5500 23c2 0F8317E0 		jae	.L225
 5500      FFFF
 5501 23c8 84D2     		testb	%dl, %dl
 5502 23ca 0F843315 		je	.L247
 5502      0000
 5503 23d0 83EA30   		subl	$48, %edx
 5504 23d3 80FA09   		cmpb	$9, %dl
 5505 23d6 0F87700E 		ja	.L711
 5505      0000
 5506 23dc E9FEDFFF 		jmp	.L225
 5506      FF
 5507              	.L582:
 5508 23e1 80FA5F   		cmpb	$95, %dl
 5509 23e4 0F85620E 		jne	.L711
 5509      0000
 5510 23ea E9F0DFFF 		jmp	.L225
 5510      FF
 5511              	.L581:
 5512 23ef 80FA69   		cmpb	$105, %dl
 5513 23f2 7413     		je	.L580
 5514 23f4 80FA7A   		cmpb	$122, %dl
 5515 23f7 0F874F0E 		ja	.L711
 5515      0000
 5516 23fd E9DDDFFF 		jmp	.L225
 5516      FF
 5517              	.LVL657:
 5518              	.L579:
4913:out/quex_scan.cpp ****         goto _2536;
 5519              		.loc 1 4913 0
 5520 2402 E9450E00 		jmp	.L711
 5520      00
 5521              	.L580:
4919:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5522              		.loc 1 4919 0
 5523 2407 8B5328   		movl	40(%ebx), %edx
 5524              	.LVL658:
 5525 240a BE072400 		movl	$.L580, %esi
 5525      00
 5526 240f 8D4201   		leal	1(%edx), %eax
 5527              	.LVL659:
 5528 2412 894328   		movl	%eax, 40(%ebx)
4921:out/quex_scan.cpp ****     switch( input ) {
 5529              		.loc 1 4921 0
 5530 2415 8A5201   		movb	1(%edx), %dl
4919:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5531              		.loc 1 4919 0
 5532 2418 B8732400 		movl	$.L583, %eax
 5532      00
GAS LISTING /tmp/cc23nfB3.s 			page 365


 5533              	.LVL660:
4921:out/quex_scan.cpp ****     switch( input ) {
 5534              		.loc 1 4921 0
 5535 241d 80FA6D   		cmpb	$109, %dl
 5536 2420 773E     		ja	.L585
 5537 2422 80FA61   		cmpb	$97, %dl
 5538 2425 0F83B4DF 		jae	.L225
 5538      FFFF
 5539 242b 80FA5A   		cmpb	$90, %dl
 5540 242e 7722     		ja	.L586
 5541 2430 80FA41   		cmpb	$65, %dl
 5542 2433 0F83A6DF 		jae	.L225
 5542      FFFF
 5543 2439 84D2     		testb	%dl, %dl
 5544 243b 0F84C214 		je	.L247
 5544      0000
 5545 2441 83EA30   		subl	$48, %edx
 5546 2444 80FA09   		cmpb	$9, %dl
 5547 2447 0F87FF0D 		ja	.L711
 5547      0000
 5548 244d E98DDFFF 		jmp	.L225
 5548      FF
 5549              	.L586:
 5550 2452 80FA5F   		cmpb	$95, %dl
 5551 2455 0F85F10D 		jne	.L711
 5551      0000
 5552 245b E97FDFFF 		jmp	.L225
 5552      FF
 5553              	.L585:
 5554 2460 80FA6E   		cmpb	$110, %dl
 5555 2463 7413     		je	.L584
 5556 2465 80FA7A   		cmpb	$122, %dl
 5557 2468 0F87DE0D 		ja	.L711
 5557      0000
 5558 246e E96CDFFF 		jmp	.L225
 5558      FF
 5559              	.LVL661:
 5560              	.L583:
4989:out/quex_scan.cpp ****         goto _2536;
 5561              		.loc 1 4989 0
 5562 2473 E9D40D00 		jmp	.L711
 5562      00
 5563              	.L584:
4995:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5564              		.loc 1 4995 0
 5565 2478 8B5328   		movl	40(%ebx), %edx
 5566              	.LVL662:
 5567 247b BE782400 		movl	$.L584, %esi
 5567      00
 5568 2480 8D4201   		leal	1(%edx), %eax
 5569              	.LVL663:
 5570 2483 894328   		movl	%eax, 40(%ebx)
4997:out/quex_scan.cpp ****     switch( input ) {
 5571              		.loc 1 4997 0
 5572 2486 8A5201   		movb	1(%edx), %dl
4995:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5573              		.loc 1 4995 0
GAS LISTING /tmp/cc23nfB3.s 			page 366


 5574 2489 B8E42400 		movl	$.L587, %eax
 5574      00
 5575              	.LVL664:
4997:out/quex_scan.cpp ****     switch( input ) {
 5576              		.loc 1 4997 0
 5577 248e 80FA64   		cmpb	$100, %dl
 5578 2491 773E     		ja	.L589
 5579 2493 80FA61   		cmpb	$97, %dl
 5580 2496 0F8343DF 		jae	.L225
 5580      FFFF
 5581 249c 80FA5A   		cmpb	$90, %dl
 5582 249f 7722     		ja	.L590
 5583 24a1 80FA41   		cmpb	$65, %dl
 5584 24a4 0F8335DF 		jae	.L225
 5584      FFFF
 5585 24aa 84D2     		testb	%dl, %dl
 5586 24ac 0F845114 		je	.L247
 5586      0000
 5587 24b2 83EA30   		subl	$48, %edx
 5588 24b5 80FA09   		cmpb	$9, %dl
 5589 24b8 0F878E0D 		ja	.L711
 5589      0000
 5590 24be E91CDFFF 		jmp	.L225
 5590      FF
 5591              	.L590:
 5592 24c3 80FA5F   		cmpb	$95, %dl
 5593 24c6 0F85800D 		jne	.L711
 5593      0000
 5594 24cc E90EDFFF 		jmp	.L225
 5594      FF
 5595              	.L589:
 5596 24d1 80FA65   		cmpb	$101, %dl
 5597 24d4 7413     		je	.L588
 5598 24d6 80FA7A   		cmpb	$122, %dl
 5599 24d9 0F876D0D 		ja	.L711
 5599      0000
 5600 24df E9FBDEFF 		jmp	.L225
 5600      FF
 5601              	.LVL665:
 5602              	.L587:
5065:out/quex_scan.cpp ****         goto _2536;
 5603              		.loc 1 5065 0
 5604 24e4 E9630D00 		jmp	.L711
 5604      00
 5605              	.L588:
5071:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5606              		.loc 1 5071 0
 5607 24e9 8B5328   		movl	40(%ebx), %edx
 5608              	.LVL666:
 5609 24ec BEE92400 		movl	$.L588, %esi
 5609      00
 5610 24f1 8D4201   		leal	1(%edx), %eax
 5611              	.LVL667:
 5612 24f4 894328   		movl	%eax, 40(%ebx)
5073:out/quex_scan.cpp ****     switch( input ) {
 5613              		.loc 1 5073 0
 5614 24f7 8A5201   		movb	1(%edx), %dl
GAS LISTING /tmp/cc23nfB3.s 			page 367


5071:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5615              		.loc 1 5071 0
 5616 24fa B8552500 		movl	$.L591, %eax
 5616      00
 5617              	.LVL668:
5073:out/quex_scan.cpp ****     switch( input ) {
 5618              		.loc 1 5073 0
 5619 24ff 80FA63   		cmpb	$99, %dl
 5620 2502 773E     		ja	.L593
 5621 2504 80FA61   		cmpb	$97, %dl
 5622 2507 0F83D2DE 		jae	.L225
 5622      FFFF
 5623 250d 80FA5A   		cmpb	$90, %dl
 5624 2510 7722     		ja	.L594
 5625 2512 80FA41   		cmpb	$65, %dl
 5626 2515 0F83C4DE 		jae	.L225
 5626      FFFF
 5627 251b 84D2     		testb	%dl, %dl
 5628 251d 0F84E013 		je	.L247
 5628      0000
 5629 2523 83EA30   		subl	$48, %edx
 5630 2526 80FA09   		cmpb	$9, %dl
 5631 2529 0F871D0D 		ja	.L711
 5631      0000
 5632 252f E9ABDEFF 		jmp	.L225
 5632      FF
 5633              	.L594:
 5634 2534 80FA5F   		cmpb	$95, %dl
 5635 2537 0F850F0D 		jne	.L711
 5635      0000
 5636 253d E99DDEFF 		jmp	.L225
 5636      FF
 5637              	.L593:
 5638 2542 80FA64   		cmpb	$100, %dl
 5639 2545 7413     		je	.L592
 5640 2547 80FA7A   		cmpb	$122, %dl
 5641 254a 0F87FC0C 		ja	.L711
 5641      0000
 5642 2550 E98ADEFF 		jmp	.L225
 5642      FF
 5643              	.LVL669:
 5644              	.L591:
5141:out/quex_scan.cpp ****         goto _2536;
 5645              		.loc 1 5141 0
 5646 2555 E9F20C00 		jmp	.L711
 5646      00
 5647              	.L592:
5147:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5648              		.loc 1 5147 0
 5649 255a 8B5328   		movl	40(%ebx), %edx
 5650              	.LVL670:
 5651 255d BE5A2500 		movl	$.L592, %esi
 5651      00
 5652 2562 8D4201   		leal	1(%edx), %eax
 5653              	.LVL671:
 5654 2565 894328   		movl	%eax, 40(%ebx)
5149:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 368


 5655              		.loc 1 5149 0
 5656 2568 8A5201   		movb	1(%edx), %dl
5147:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5657              		.loc 1 5147 0
 5658 256b B8383800 		movl	$.L595, %eax
 5658      00
 5659              	.LVL672:
5149:out/quex_scan.cpp ****     switch( input ) {
 5660              		.loc 1 5149 0
 5661 2570 80FA5A   		cmpb	$90, %dl
 5662 2573 7719     		ja	.L596
 5663 2575 80FA41   		cmpb	$65, %dl
 5664 2578 0F8361DE 		jae	.L225
 5664      FFFF
 5665 257e 84D2     		testb	%dl, %dl
 5666 2580 0F847D13 		je	.L247
 5666      0000
 5667 2586 83EA30   		subl	$48, %edx
 5668 2589 80FA09   		cmpb	$9, %dl
 5669 258c EB15     		jmp	.L910
 5670              	.L596:
 5671 258e 80FA5F   		cmpb	$95, %dl
 5672 2591 0F8448DE 		je	.L225
 5672      FFFF
 5673 2597 0F829B12 		jb	.L789
 5673      0000
 5674 259d 83EA61   		subl	$97, %edx
 5675 25a0 80FA19   		cmpb	$25, %dl
 5676              	.L910:
 5677 25a3 0F878F12 		ja	.L789
 5677      0000
 5678 25a9 E931DEFF 		jmp	.L225
 5678      FF
 5679              	.LVL673:
 5680              	.L349:
5223:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5681              		.loc 1 5223 0
 5682 25ae 8B5328   		movl	40(%ebx), %edx
 5683              	.LVL674:
 5684 25b1 BEAE2500 		movl	$.L349, %esi
 5684      00
 5685 25b6 8D4201   		leal	1(%edx), %eax
 5686              	.LVL675:
 5687 25b9 894328   		movl	%eax, 40(%ebx)
5225:out/quex_scan.cpp ****     switch( input ) {
 5688              		.loc 1 5225 0
 5689 25bc 8A5201   		movb	1(%edx), %dl
5223:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5690              		.loc 1 5223 0
 5691 25bf B81A2600 		movl	$.L597, %eax
 5691      00
 5692              	.LVL676:
5225:out/quex_scan.cpp ****     switch( input ) {
 5693              		.loc 1 5225 0
 5694 25c4 80FA6D   		cmpb	$109, %dl
 5695 25c7 773E     		ja	.L599
 5696 25c9 80FA61   		cmpb	$97, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 369


 5697 25cc 0F830DDE 		jae	.L225
 5697      FFFF
 5698 25d2 80FA5A   		cmpb	$90, %dl
 5699 25d5 7722     		ja	.L600
 5700 25d7 80FA41   		cmpb	$65, %dl
 5701 25da 0F83FFDD 		jae	.L225
 5701      FFFF
 5702 25e0 84D2     		testb	%dl, %dl
 5703 25e2 0F841B13 		je	.L247
 5703      0000
 5704 25e8 83EA30   		subl	$48, %edx
 5705 25eb 80FA09   		cmpb	$9, %dl
 5706 25ee 0F87580C 		ja	.L711
 5706      0000
 5707 25f4 E9E6DDFF 		jmp	.L225
 5707      FF
 5708              	.L600:
 5709 25f9 80FA5F   		cmpb	$95, %dl
 5710 25fc 0F854A0C 		jne	.L711
 5710      0000
 5711 2602 E9D8DDFF 		jmp	.L225
 5711      FF
 5712              	.L599:
 5713 2607 80FA6E   		cmpb	$110, %dl
 5714 260a 7413     		je	.L598
 5715 260c 80FA7A   		cmpb	$122, %dl
 5716 260f 0F87370C 		ja	.L711
 5716      0000
 5717 2615 E9C5DDFF 		jmp	.L225
 5717      FF
 5718              	.LVL677:
 5719              	.L597:
5293:out/quex_scan.cpp ****         goto _2536;
 5720              		.loc 1 5293 0
 5721 261a E92D0C00 		jmp	.L711
 5721      00
 5722              	.L598:
5299:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5723              		.loc 1 5299 0
 5724 261f 8B5328   		movl	40(%ebx), %edx
 5725              	.LVL678:
 5726 2622 BE1F2600 		movl	$.L598, %esi
 5726      00
 5727 2627 8D4201   		leal	1(%edx), %eax
 5728              	.LVL679:
 5729 262a 894328   		movl	%eax, 40(%ebx)
5301:out/quex_scan.cpp ****     switch( input ) {
 5730              		.loc 1 5301 0
 5731 262d 8A5201   		movb	1(%edx), %dl
5299:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5732              		.loc 1 5299 0
 5733 2630 B88B2600 		movl	$.L601, %eax
 5733      00
 5734              	.LVL680:
5301:out/quex_scan.cpp ****     switch( input ) {
 5735              		.loc 1 5301 0
 5736 2635 80FA66   		cmpb	$102, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 370


 5737 2638 773E     		ja	.L603
 5738 263a 80FA61   		cmpb	$97, %dl
 5739 263d 0F839CDD 		jae	.L225
 5739      FFFF
 5740 2643 80FA5A   		cmpb	$90, %dl
 5741 2646 7722     		ja	.L604
 5742 2648 80FA41   		cmpb	$65, %dl
 5743 264b 0F838EDD 		jae	.L225
 5743      FFFF
 5744 2651 84D2     		testb	%dl, %dl
 5745 2653 0F84AA12 		je	.L247
 5745      0000
 5746 2659 83EA30   		subl	$48, %edx
 5747 265c 80FA09   		cmpb	$9, %dl
 5748 265f 0F87E70B 		ja	.L711
 5748      0000
 5749 2665 E975DDFF 		jmp	.L225
 5749      FF
 5750              	.L604:
 5751 266a 80FA5F   		cmpb	$95, %dl
 5752 266d 0F85D90B 		jne	.L711
 5752      0000
 5753 2673 E967DDFF 		jmp	.L225
 5753      FF
 5754              	.L603:
 5755 2678 80FA67   		cmpb	$103, %dl
 5756 267b 7413     		je	.L602
 5757 267d 80FA7A   		cmpb	$122, %dl
 5758 2680 0F87C60B 		ja	.L711
 5758      0000
 5759 2686 E954DDFF 		jmp	.L225
 5759      FF
 5760              	.LVL681:
 5761              	.L601:
5369:out/quex_scan.cpp ****         goto _2536;
 5762              		.loc 1 5369 0
 5763 268b E9BC0B00 		jmp	.L711
 5763      00
 5764              	.L602:
5375:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5765              		.loc 1 5375 0
 5766 2690 8B5328   		movl	40(%ebx), %edx
 5767              	.LVL682:
 5768 2693 BE902600 		movl	$.L602, %esi
 5768      00
 5769 2698 8D4201   		leal	1(%edx), %eax
 5770              	.LVL683:
 5771 269b 894328   		movl	%eax, 40(%ebx)
5377:out/quex_scan.cpp ****     switch( input ) {
 5772              		.loc 1 5377 0
 5773 269e 8A5201   		movb	1(%edx), %dl
5375:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5774              		.loc 1 5375 0
 5775 26a1 B8E33200 		movl	$.L605, %eax
 5775      00
 5776              	.LVL684:
5377:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 371


 5777              		.loc 1 5377 0
 5778 26a6 80FA5A   		cmpb	$90, %dl
 5779 26a9 7719     		ja	.L606
 5780 26ab 80FA41   		cmpb	$65, %dl
 5781 26ae 0F832BDD 		jae	.L225
 5781      FFFF
 5782 26b4 84D2     		testb	%dl, %dl
 5783 26b6 0F844712 		je	.L247
 5783      0000
 5784 26bc 83EA30   		subl	$48, %edx
 5785 26bf 80FA09   		cmpb	$9, %dl
 5786 26c2 EB15     		jmp	.L896
 5787              	.L606:
 5788 26c4 80FA5F   		cmpb	$95, %dl
 5789 26c7 0F8412DD 		je	.L225
 5789      FFFF
 5790 26cd 0F82100C 		jb	.L718
 5790      0000
 5791 26d3 83EA61   		subl	$97, %edx
 5792 26d6 80FA19   		cmpb	$25, %dl
 5793              	.L896:
 5794 26d9 0F87040C 		ja	.L718
 5794      0000
 5795 26df E9FBDCFF 		jmp	.L225
 5795      FF
 5796              	.LVL685:
 5797              	.L256:
5451:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5798              		.loc 1 5451 0
 5799 26e4 8B5328   		movl	40(%ebx), %edx
 5800              	.LVL686:
5456:out/quex_scan.cpp ****         switch( input ) {
 5801              		.loc 1 5456 0
 5802 26e7 BFC03300 		movl	$.L608, %edi
 5802      00
5451:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5803              		.loc 1 5451 0
 5804 26ec 8D4201   		leal	1(%edx), %eax
 5805              	.LVL687:
 5806 26ef 894328   		movl	%eax, 40(%ebx)
5452:out/quex_scan.cpp ****     input = *(me->buffer._input_p);
 5807              		.loc 1 5452 0
 5808 26f2 8A5201   		movb	1(%edx), %dl
 5809              	.LVL688:
5454:out/quex_scan.cpp ****     last_acceptance_input_position = QUEX_NAME(Buffer_tell_memory_adr)(&me->buffer);
 5810              		.loc 1 5454 0
 5811 26f5 8945E0   		movl	%eax, -32(%ebp)
 5812              	.LVL689:
5455:out/quex_scan.cpp ****     if( input < 0x23) {
 5813              		.loc 1 5455 0
 5814 26f8 80FA22   		cmpb	$34, %dl
 5815 26fb 0F876DDD 		ja	.L249
 5815      FFFF
5456:out/quex_scan.cpp ****         switch( input ) {
 5816              		.loc 1 5456 0
 5817 2701 80FA21   		cmpb	$33, %dl
5455:out/quex_scan.cpp ****     if( input < 0x23) {
GAS LISTING /tmp/cc23nfB3.s 			page 372


 5818              		.loc 1 5455 0
 5819 2704 BFC03300 		movl	$.L608, %edi
 5819      00
 5820 2709 B8392700 		movl	$.L609, %eax
 5820      00
 5821              	.LVL690:
 5822 270e BEE42600 		movl	$.L256, %esi
 5822      00
5456:out/quex_scan.cpp ****         switch( input ) {
 5823              		.loc 1 5456 0
 5824 2713 7716     		ja	.L611
 5825 2715 80FA02   		cmpb	$2, %dl
 5826 2718 0F8310DD 		jae	.L205
 5826      FFFF
 5827 271e 84D2     		testb	%dl, %dl
 5828 2720 0F84DD11 		je	.L247
 5828      0000
 5829 2726 E9950C00 		jmp	.L608
 5829      00
 5830              	.L611:
 5831 272b 80FA22   		cmpb	$34, %dl
 5832 272e 0F858C0C 		jne	.L608
 5832      0000
 5833 2734 E9840C00 		jmp	.L251
 5833      00
 5834              	.L609:
5503:out/quex_scan.cpp ****         goto _2697;
 5835              		.loc 1 5503 0
 5836 2739 E9820C00 		jmp	.L608
 5836      00
 5837              	.L345:
5509:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5838              		.loc 1 5509 0
 5839 273e 8B5328   		movl	40(%ebx), %edx
 5840              	.LVL691:
 5841 2741 BE3E2700 		movl	$.L345, %esi
 5841      00
 5842 2746 8D4201   		leal	1(%edx), %eax
 5843              	.LVL692:
 5844 2749 894328   		movl	%eax, 40(%ebx)
5511:out/quex_scan.cpp ****     switch( input ) {
 5845              		.loc 1 5511 0
 5846 274c 8A5201   		movb	1(%edx), %dl
5509:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5847              		.loc 1 5509 0
 5848 274f B8AA2700 		movl	$.L612, %eax
 5848      00
 5849              	.LVL693:
5511:out/quex_scan.cpp ****     switch( input ) {
 5850              		.loc 1 5511 0
 5851 2754 80FA72   		cmpb	$114, %dl
 5852 2757 773E     		ja	.L614
 5853 2759 80FA61   		cmpb	$97, %dl
 5854 275c 0F837DDC 		jae	.L225
 5854      FFFF
 5855 2762 80FA5A   		cmpb	$90, %dl
 5856 2765 7722     		ja	.L615
GAS LISTING /tmp/cc23nfB3.s 			page 373


 5857 2767 80FA41   		cmpb	$65, %dl
 5858 276a 0F836FDC 		jae	.L225
 5858      FFFF
 5859 2770 84D2     		testb	%dl, %dl
 5860 2772 0F848B11 		je	.L247
 5860      0000
 5861 2778 83EA30   		subl	$48, %edx
 5862 277b 80FA09   		cmpb	$9, %dl
 5863 277e 0F87C80A 		ja	.L711
 5863      0000
 5864 2784 E956DCFF 		jmp	.L225
 5864      FF
 5865              	.L615:
 5866 2789 80FA5F   		cmpb	$95, %dl
 5867 278c 0F85BA0A 		jne	.L711
 5867      0000
 5868 2792 E948DCFF 		jmp	.L225
 5868      FF
 5869              	.L614:
 5870 2797 80FA73   		cmpb	$115, %dl
 5871 279a 7413     		je	.L613
 5872 279c 80FA7A   		cmpb	$122, %dl
 5873 279f 0F87A70A 		ja	.L711
 5873      0000
 5874 27a5 E935DCFF 		jmp	.L225
 5874      FF
 5875              	.LVL694:
 5876              	.L612:
5579:out/quex_scan.cpp ****         goto _2536;
 5877              		.loc 1 5579 0
 5878 27aa E99D0A00 		jmp	.L711
 5878      00
 5879              	.L613:
5585:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5880              		.loc 1 5585 0
 5881 27af 8B5328   		movl	40(%ebx), %edx
 5882              	.LVL695:
 5883 27b2 BEAF2700 		movl	$.L613, %esi
 5883      00
 5884 27b7 8D4201   		leal	1(%edx), %eax
 5885              	.LVL696:
 5886 27ba 894328   		movl	%eax, 40(%ebx)
5587:out/quex_scan.cpp ****     switch( input ) {
 5887              		.loc 1 5587 0
 5888 27bd 8A5201   		movb	1(%edx), %dl
5585:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5889              		.loc 1 5585 0
 5890 27c0 B81B2800 		movl	$.L616, %eax
 5890      00
 5891              	.LVL697:
5587:out/quex_scan.cpp ****     switch( input ) {
 5892              		.loc 1 5587 0
 5893 27c5 80FA68   		cmpb	$104, %dl
 5894 27c8 773E     		ja	.L618
 5895 27ca 80FA61   		cmpb	$97, %dl
 5896 27cd 0F830CDC 		jae	.L225
 5896      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 374


 5897 27d3 80FA5A   		cmpb	$90, %dl
 5898 27d6 7722     		ja	.L619
 5899 27d8 80FA41   		cmpb	$65, %dl
 5900 27db 0F83FEDB 		jae	.L225
 5900      FFFF
 5901 27e1 84D2     		testb	%dl, %dl
 5902 27e3 0F841A11 		je	.L247
 5902      0000
 5903 27e9 83EA30   		subl	$48, %edx
 5904 27ec 80FA09   		cmpb	$9, %dl
 5905 27ef 0F87570A 		ja	.L711
 5905      0000
 5906 27f5 E9E5DBFF 		jmp	.L225
 5906      FF
 5907              	.L619:
 5908 27fa 80FA5F   		cmpb	$95, %dl
 5909 27fd 0F85490A 		jne	.L711
 5909      0000
 5910 2803 E9D7DBFF 		jmp	.L225
 5910      FF
 5911              	.L618:
 5912 2808 80FA69   		cmpb	$105, %dl
 5913 280b 7413     		je	.L617
 5914 280d 80FA7A   		cmpb	$122, %dl
 5915 2810 0F87360A 		ja	.L711
 5915      0000
 5916 2816 E9C4DBFF 		jmp	.L225
 5916      FF
 5917              	.LVL698:
 5918              	.L616:
5655:out/quex_scan.cpp ****         goto _2536;
 5919              		.loc 1 5655 0
 5920 281b E92C0A00 		jmp	.L711
 5920      00
 5921              	.L617:
5661:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5922              		.loc 1 5661 0
 5923 2820 8B5328   		movl	40(%ebx), %edx
 5924              	.LVL699:
 5925 2823 BE202800 		movl	$.L617, %esi
 5925      00
 5926 2828 8D4201   		leal	1(%edx), %eax
 5927              	.LVL700:
 5928 282b 894328   		movl	%eax, 40(%ebx)
5663:out/quex_scan.cpp ****     switch( input ) {
 5929              		.loc 1 5663 0
 5930 282e 8A5201   		movb	1(%edx), %dl
5661:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5931              		.loc 1 5661 0
 5932 2831 B88C2800 		movl	$.L620, %eax
 5932      00
 5933              	.LVL701:
5663:out/quex_scan.cpp ****     switch( input ) {
 5934              		.loc 1 5663 0
 5935 2836 80FA66   		cmpb	$102, %dl
 5936 2839 773E     		ja	.L622
 5937 283b 80FA61   		cmpb	$97, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 375


 5938 283e 0F839BDB 		jae	.L225
 5938      FFFF
 5939 2844 80FA5A   		cmpb	$90, %dl
 5940 2847 7722     		ja	.L623
 5941 2849 80FA41   		cmpb	$65, %dl
 5942 284c 0F838DDB 		jae	.L225
 5942      FFFF
 5943 2852 84D2     		testb	%dl, %dl
 5944 2854 0F84A910 		je	.L247
 5944      0000
 5945 285a 83EA30   		subl	$48, %edx
 5946 285d 80FA09   		cmpb	$9, %dl
 5947 2860 0F87E609 		ja	.L711
 5947      0000
 5948 2866 E974DBFF 		jmp	.L225
 5948      FF
 5949              	.L623:
 5950 286b 80FA5F   		cmpb	$95, %dl
 5951 286e 0F85D809 		jne	.L711
 5951      0000
 5952 2874 E966DBFF 		jmp	.L225
 5952      FF
 5953              	.L622:
 5954 2879 80FA67   		cmpb	$103, %dl
 5955 287c 7413     		je	.L621
 5956 287e 80FA7A   		cmpb	$122, %dl
 5957 2881 0F87C509 		ja	.L711
 5957      0000
 5958 2887 E953DBFF 		jmp	.L225
 5958      FF
 5959              	.LVL702:
 5960              	.L620:
5731:out/quex_scan.cpp ****         goto _2536;
 5961              		.loc 1 5731 0
 5962 288c E9BB0900 		jmp	.L711
 5962      00
 5963              	.L621:
5737:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5964              		.loc 1 5737 0
 5965 2891 8B5328   		movl	40(%ebx), %edx
 5966              	.LVL703:
 5967 2894 BE912800 		movl	$.L621, %esi
 5967      00
 5968 2899 8D4201   		leal	1(%edx), %eax
 5969              	.LVL704:
 5970 289c 894328   		movl	%eax, 40(%ebx)
5739:out/quex_scan.cpp ****     switch( input ) {
 5971              		.loc 1 5739 0
 5972 289f 8A5201   		movb	1(%edx), %dl
5737:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 5973              		.loc 1 5737 0
 5974 28a2 B8FD2800 		movl	$.L624, %eax
 5974      00
 5975              	.LVL705:
5739:out/quex_scan.cpp ****     switch( input ) {
 5976              		.loc 1 5739 0
 5977 28a7 80FA6D   		cmpb	$109, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 376


 5978 28aa 773E     		ja	.L626
 5979 28ac 80FA61   		cmpb	$97, %dl
 5980 28af 0F832ADB 		jae	.L225
 5980      FFFF
 5981 28b5 80FA5A   		cmpb	$90, %dl
 5982 28b8 7722     		ja	.L627
 5983 28ba 80FA41   		cmpb	$65, %dl
 5984 28bd 0F831CDB 		jae	.L225
 5984      FFFF
 5985 28c3 84D2     		testb	%dl, %dl
 5986 28c5 0F843810 		je	.L247
 5986      0000
 5987 28cb 83EA30   		subl	$48, %edx
 5988 28ce 80FA09   		cmpb	$9, %dl
 5989 28d1 0F877509 		ja	.L711
 5989      0000
 5990 28d7 E903DBFF 		jmp	.L225
 5990      FF
 5991              	.L627:
 5992 28dc 80FA5F   		cmpb	$95, %dl
 5993 28df 0F856709 		jne	.L711
 5993      0000
 5994 28e5 E9F5DAFF 		jmp	.L225
 5994      FF
 5995              	.L626:
 5996 28ea 80FA6E   		cmpb	$110, %dl
 5997 28ed 7413     		je	.L625
 5998 28ef 80FA7A   		cmpb	$122, %dl
 5999 28f2 0F875409 		ja	.L711
 5999      0000
 6000 28f8 E9E2DAFF 		jmp	.L225
 6000      FF
 6001              	.LVL706:
 6002              	.L624:
5807:out/quex_scan.cpp ****         goto _2536;
 6003              		.loc 1 5807 0
 6004 28fd E94A0900 		jmp	.L711
 6004      00
 6005              	.L625:
5813:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6006              		.loc 1 5813 0
 6007 2902 8B5328   		movl	40(%ebx), %edx
 6008              	.LVL707:
 6009 2905 BE022900 		movl	$.L625, %esi
 6009      00
 6010 290a 8D4201   		leal	1(%edx), %eax
 6011              	.LVL708:
 6012 290d 894328   		movl	%eax, 40(%ebx)
5815:out/quex_scan.cpp ****     switch( input ) {
 6013              		.loc 1 5815 0
 6014 2910 8A5201   		movb	1(%edx), %dl
5813:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6015              		.loc 1 5813 0
 6016 2913 B86E2900 		movl	$.L628, %eax
 6016      00
 6017              	.LVL709:
5815:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 377


 6018              		.loc 1 5815 0
 6019 2918 80FA64   		cmpb	$100, %dl
 6020 291b 773E     		ja	.L630
 6021 291d 80FA61   		cmpb	$97, %dl
 6022 2920 0F83B9DA 		jae	.L225
 6022      FFFF
 6023 2926 80FA5A   		cmpb	$90, %dl
 6024 2929 7722     		ja	.L631
 6025 292b 80FA41   		cmpb	$65, %dl
 6026 292e 0F83ABDA 		jae	.L225
 6026      FFFF
 6027 2934 84D2     		testb	%dl, %dl
 6028 2936 0F84C70F 		je	.L247
 6028      0000
 6029 293c 83EA30   		subl	$48, %edx
 6030 293f 80FA09   		cmpb	$9, %dl
 6031 2942 0F870409 		ja	.L711
 6031      0000
 6032 2948 E992DAFF 		jmp	.L225
 6032      FF
 6033              	.L631:
 6034 294d 80FA5F   		cmpb	$95, %dl
 6035 2950 0F85F608 		jne	.L711
 6035      0000
 6036 2956 E984DAFF 		jmp	.L225
 6036      FF
 6037              	.L630:
 6038 295b 80FA65   		cmpb	$101, %dl
 6039 295e 7413     		je	.L629
 6040 2960 80FA7A   		cmpb	$122, %dl
 6041 2963 0F87E308 		ja	.L711
 6041      0000
 6042 2969 E971DAFF 		jmp	.L225
 6042      FF
 6043              	.LVL710:
 6044              	.L628:
5883:out/quex_scan.cpp ****         goto _2536;
 6045              		.loc 1 5883 0
 6046 296e E9D90800 		jmp	.L711
 6046      00
 6047              	.L629:
5889:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6048              		.loc 1 5889 0
 6049 2973 8B5328   		movl	40(%ebx), %edx
 6050              	.LVL711:
 6051 2976 BE732900 		movl	$.L629, %esi
 6051      00
 6052 297b 8D4201   		leal	1(%edx), %eax
 6053              	.LVL712:
 6054 297e 894328   		movl	%eax, 40(%ebx)
5891:out/quex_scan.cpp ****     switch( input ) {
 6055              		.loc 1 5891 0
 6056 2981 8A5201   		movb	1(%edx), %dl
5889:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6057              		.loc 1 5889 0
 6058 2984 B8DF2900 		movl	$.L632, %eax
 6058      00
GAS LISTING /tmp/cc23nfB3.s 			page 378


 6059              	.LVL713:
5891:out/quex_scan.cpp ****     switch( input ) {
 6060              		.loc 1 5891 0
 6061 2989 80FA63   		cmpb	$99, %dl
 6062 298c 773E     		ja	.L634
 6063 298e 80FA61   		cmpb	$97, %dl
 6064 2991 0F8348DA 		jae	.L225
 6064      FFFF
 6065 2997 80FA5A   		cmpb	$90, %dl
 6066 299a 7722     		ja	.L635
 6067 299c 80FA41   		cmpb	$65, %dl
 6068 299f 0F833ADA 		jae	.L225
 6068      FFFF
 6069 29a5 84D2     		testb	%dl, %dl
 6070 29a7 0F84560F 		je	.L247
 6070      0000
 6071 29ad 83EA30   		subl	$48, %edx
 6072 29b0 80FA09   		cmpb	$9, %dl
 6073 29b3 0F879308 		ja	.L711
 6073      0000
 6074 29b9 E921DAFF 		jmp	.L225
 6074      FF
 6075              	.L635:
 6076 29be 80FA5F   		cmpb	$95, %dl
 6077 29c1 0F858508 		jne	.L711
 6077      0000
 6078 29c7 E913DAFF 		jmp	.L225
 6078      FF
 6079              	.L634:
 6080 29cc 80FA64   		cmpb	$100, %dl
 6081 29cf 7413     		je	.L633
 6082 29d1 80FA7A   		cmpb	$122, %dl
 6083 29d4 0F877208 		ja	.L711
 6083      0000
 6084 29da E900DAFF 		jmp	.L225
 6084      FF
 6085              	.LVL714:
 6086              	.L632:
5959:out/quex_scan.cpp ****         goto _2536;
 6087              		.loc 1 5959 0
 6088 29df E9680800 		jmp	.L711
 6088      00
 6089              	.L633:
5965:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6090              		.loc 1 5965 0
 6091 29e4 8B5328   		movl	40(%ebx), %edx
 6092              	.LVL715:
 6093 29e7 BEE42900 		movl	$.L633, %esi
 6093      00
 6094 29ec 8D4201   		leal	1(%edx), %eax
 6095              	.LVL716:
 6096 29ef 894328   		movl	%eax, 40(%ebx)
5967:out/quex_scan.cpp ****     switch( input ) {
 6097              		.loc 1 5967 0
 6098 29f2 8A5201   		movb	1(%edx), %dl
5965:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6099              		.loc 1 5965 0
GAS LISTING /tmp/cc23nfB3.s 			page 379


 6100 29f5 B8D63100 		movl	$.L636, %eax
 6100      00
 6101              	.LVL717:
5967:out/quex_scan.cpp ****     switch( input ) {
 6102              		.loc 1 5967 0
 6103 29fa 80FA5A   		cmpb	$90, %dl
 6104 29fd 7719     		ja	.L637
 6105 29ff 80FA41   		cmpb	$65, %dl
 6106 2a02 0F83D7D9 		jae	.L225
 6106      FFFF
 6107 2a08 84D2     		testb	%dl, %dl
 6108 2a0a 0F84F30E 		je	.L247
 6108      0000
 6109 2a10 83EA30   		subl	$48, %edx
 6110 2a13 80FA09   		cmpb	$9, %dl
 6111 2a16 EB15     		jmp	.L889
 6112              	.L637:
 6113 2a18 80FA5F   		cmpb	$95, %dl
 6114 2a1b 0F84BED9 		je	.L225
 6114      FFFF
 6115 2a21 0F82AF07 		jb	.L706
 6115      0000
 6116 2a27 83EA61   		subl	$97, %edx
 6117 2a2a 80FA19   		cmpb	$25, %dl
 6118              	.L889:
 6119 2a2d 0F87A307 		ja	.L706
 6119      0000
 6120 2a33 E9A7D9FF 		jmp	.L225
 6120      FF
 6121              	.LVL718:
 6122              	.L338:
6041:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6123              		.loc 1 6041 0
 6124 2a38 8B5328   		movl	40(%ebx), %edx
 6125              	.LVL719:
 6126 2a3b BE382A00 		movl	$.L338, %esi
 6126      00
 6127 2a40 8D4201   		leal	1(%edx), %eax
 6128              	.LVL720:
 6129 2a43 894328   		movl	%eax, 40(%ebx)
6043:out/quex_scan.cpp ****     switch( input ) {
 6130              		.loc 1 6043 0
 6131 2a46 8A5201   		movb	1(%edx), %dl
6041:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6132              		.loc 1 6041 0
 6133 2a49 B8A42A00 		movl	$.L638, %eax
 6133      00
 6134              	.LVL721:
6043:out/quex_scan.cpp ****     switch( input ) {
 6135              		.loc 1 6043 0
 6136 2a4e 80FA73   		cmpb	$115, %dl
 6137 2a51 773E     		ja	.L640
 6138 2a53 80FA61   		cmpb	$97, %dl
 6139 2a56 0F8383D9 		jae	.L225
 6139      FFFF
 6140 2a5c 80FA5A   		cmpb	$90, %dl
 6141 2a5f 7722     		ja	.L641
GAS LISTING /tmp/cc23nfB3.s 			page 380


 6142 2a61 80FA41   		cmpb	$65, %dl
 6143 2a64 0F8375D9 		jae	.L225
 6143      FFFF
 6144 2a6a 84D2     		testb	%dl, %dl
 6145 2a6c 0F84910E 		je	.L247
 6145      0000
 6146 2a72 83EA30   		subl	$48, %edx
 6147 2a75 80FA09   		cmpb	$9, %dl
 6148 2a78 0F87CE07 		ja	.L711
 6148      0000
 6149 2a7e E95CD9FF 		jmp	.L225
 6149      FF
 6150              	.L641:
 6151 2a83 80FA5F   		cmpb	$95, %dl
 6152 2a86 0F85C007 		jne	.L711
 6152      0000
 6153 2a8c E94ED9FF 		jmp	.L225
 6153      FF
 6154              	.L640:
 6155 2a91 80FA74   		cmpb	$116, %dl
 6156 2a94 7467     		je	.L639
 6157 2a96 80FA7A   		cmpb	$122, %dl
 6158 2a99 0F87AD07 		ja	.L711
 6158      0000
 6159 2a9f E93BD9FF 		jmp	.L225
 6159      FF
 6160              	.LVL722:
 6161              	.L638:
6111:out/quex_scan.cpp ****         goto _2536;
 6162              		.loc 1 6111 0
 6163 2aa4 E9A30700 		jmp	.L711
 6163      00
 6164              	.L337:
6117:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6165              		.loc 1 6117 0
 6166 2aa9 8B5328   		movl	40(%ebx), %edx
 6167              	.LVL723:
 6168 2aac BEA92A00 		movl	$.L337, %esi
 6168      00
 6169 2ab1 8D4201   		leal	1(%edx), %eax
 6170              	.LVL724:
 6171 2ab4 894328   		movl	%eax, 40(%ebx)
6119:out/quex_scan.cpp ****     switch( input ) {
 6172              		.loc 1 6119 0
 6173 2ab7 8A5201   		movb	1(%edx), %dl
6117:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6174              		.loc 1 6117 0
 6175 2aba B84D3300 		movl	$.L642, %eax
 6175      00
 6176              	.LVL725:
6119:out/quex_scan.cpp ****     switch( input ) {
 6177              		.loc 1 6119 0
 6178 2abf 80FA5A   		cmpb	$90, %dl
 6179 2ac2 7719     		ja	.L643
 6180 2ac4 80FA41   		cmpb	$65, %dl
 6181 2ac7 0F8312D9 		jae	.L225
 6181      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 381


 6182 2acd 84D2     		testb	%dl, %dl
 6183 2acf 0F842E0E 		je	.L247
 6183      0000
 6184 2ad5 83EA30   		subl	$48, %edx
 6185 2ad8 80FA09   		cmpb	$9, %dl
 6186 2adb EB15     		jmp	.L899
 6187              	.L643:
 6188 2add 80FA5F   		cmpb	$95, %dl
 6189 2ae0 0F84F9D8 		je	.L225
 6189      FFFF
 6190 2ae6 0F826108 		jb	.L722
 6190      0000
 6191 2aec 83EA61   		subl	$97, %edx
 6192 2aef 80FA19   		cmpb	$25, %dl
 6193              	.L899:
 6194 2af2 0F875508 		ja	.L722
 6194      0000
 6195 2af8 E9E2D8FF 		jmp	.L225
 6195      FF
 6196              	.LVL726:
 6197              	.L639:
6193:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6198              		.loc 1 6193 0
 6199 2afd 8B5328   		movl	40(%ebx), %edx
 6200              	.LVL727:
 6201 2b00 BEFD2A00 		movl	$.L639, %esi
 6201      00
 6202 2b05 8D4201   		leal	1(%edx), %eax
 6203              	.LVL728:
 6204 2b08 894328   		movl	%eax, 40(%ebx)
6195:out/quex_scan.cpp ****     switch( input ) {
 6205              		.loc 1 6195 0
 6206 2b0b 8A5201   		movb	1(%edx), %dl
6193:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6207              		.loc 1 6193 0
 6208 2b0e B8603200 		movl	$.L644, %eax
 6208      00
 6209              	.LVL729:
6195:out/quex_scan.cpp ****     switch( input ) {
 6210              		.loc 1 6195 0
 6211 2b13 80FA5A   		cmpb	$90, %dl
 6212 2b16 7719     		ja	.L645
 6213 2b18 80FA41   		cmpb	$65, %dl
 6214 2b1b 0F83BED8 		jae	.L225
 6214      FFFF
 6215 2b21 84D2     		testb	%dl, %dl
 6216 2b23 0F84DA0D 		je	.L247
 6216      0000
 6217 2b29 83EA30   		subl	$48, %edx
 6218 2b2c 80FA09   		cmpb	$9, %dl
 6219 2b2f EB15     		jmp	.L890
 6220              	.L645:
 6221 2b31 80FA5F   		cmpb	$95, %dl
 6222 2b34 0F84A5D8 		je	.L225
 6222      FFFF
 6223 2b3a 0F822007 		jb	.L712
 6223      0000
GAS LISTING /tmp/cc23nfB3.s 			page 382


 6224 2b40 83EA61   		subl	$97, %edx
 6225 2b43 80FA19   		cmpb	$25, %dl
 6226              	.L890:
 6227 2b46 0F871407 		ja	.L712
 6227      0000
 6228 2b4c E98ED8FF 		jmp	.L225
 6228      FF
 6229              	.LVL730:
 6230              	.L324:
6269:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6231              		.loc 1 6269 0
 6232 2b51 8B5328   		movl	40(%ebx), %edx
 6233              	.LVL731:
 6234 2b54 BE512B00 		movl	$.L324, %esi
 6234      00
 6235 2b59 8D4201   		leal	1(%edx), %eax
 6236              	.LVL732:
 6237 2b5c 894328   		movl	%eax, 40(%ebx)
6271:out/quex_scan.cpp ****     switch( input ) {
 6238              		.loc 1 6271 0
 6239 2b5f 8A5201   		movb	1(%edx), %dl
6269:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6240              		.loc 1 6269 0
 6241 2b62 B8C12B00 		movl	$.L646, %eax
 6241      00
 6242              	.LVL733:
6271:out/quex_scan.cpp ****     switch( input ) {
 6243              		.loc 1 6271 0
 6244 2b67 80FA71   		cmpb	$113, %dl
 6245 2b6a 773E     		ja	.L648
 6246 2b6c 80FA61   		cmpb	$97, %dl
 6247 2b6f 0F836AD8 		jae	.L225
 6247      FFFF
 6248 2b75 80FA5A   		cmpb	$90, %dl
 6249 2b78 7722     		ja	.L649
 6250 2b7a 80FA41   		cmpb	$65, %dl
 6251 2b7d 0F835CD8 		jae	.L225
 6251      FFFF
 6252 2b83 84D2     		testb	%dl, %dl
 6253 2b85 0F84780D 		je	.L247
 6253      0000
 6254 2b8b 83EA30   		subl	$48, %edx
 6255 2b8e 80FA09   		cmpb	$9, %dl
 6256 2b91 0F87B506 		ja	.L711
 6256      0000
 6257 2b97 E943D8FF 		jmp	.L225
 6257      FF
 6258              	.L649:
 6259 2b9c 80FA5F   		cmpb	$95, %dl
 6260 2b9f 0F85A706 		jne	.L711
 6260      0000
 6261 2ba5 E935D8FF 		jmp	.L225
 6261      FF
 6262              	.L648:
 6263 2baa 80FA72   		cmpb	$114, %dl
 6264 2bad 0F84B101 		je	.L647
 6264      0000
GAS LISTING /tmp/cc23nfB3.s 			page 383


 6265 2bb3 80FA7A   		cmpb	$122, %dl
 6266 2bb6 0F879006 		ja	.L711
 6266      0000
 6267 2bbc E91ED8FF 		jmp	.L225
 6267      FF
 6268              	.LVL734:
 6269              	.L646:
6339:out/quex_scan.cpp ****         goto _2536;
 6270              		.loc 1 6339 0
 6271 2bc1 E9860600 		jmp	.L711
 6271      00
 6272              	.L323:
6345:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6273              		.loc 1 6345 0
 6274 2bc6 8B5328   		movl	40(%ebx), %edx
 6275              	.LVL735:
 6276 2bc9 BEC62B00 		movl	$.L323, %esi
 6276      00
 6277 2bce 8D4201   		leal	1(%edx), %eax
 6278              	.LVL736:
 6279 2bd1 894328   		movl	%eax, 40(%ebx)
6347:out/quex_scan.cpp ****     switch( input ) {
 6280              		.loc 1 6347 0
 6281 2bd4 8A5201   		movb	1(%edx), %dl
6345:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6282              		.loc 1 6345 0
 6283 2bd7 B8322C00 		movl	$.L650, %eax
 6283      00
 6284              	.LVL737:
6347:out/quex_scan.cpp ****     switch( input ) {
 6285              		.loc 1 6347 0
 6286 2bdc 80FA6E   		cmpb	$110, %dl
 6287 2bdf 773E     		ja	.L652
 6288 2be1 80FA61   		cmpb	$97, %dl
 6289 2be4 0F83F5D7 		jae	.L225
 6289      FFFF
 6290 2bea 80FA5A   		cmpb	$90, %dl
 6291 2bed 7722     		ja	.L653
 6292 2bef 80FA41   		cmpb	$65, %dl
 6293 2bf2 0F83E7D7 		jae	.L225
 6293      FFFF
 6294 2bf8 84D2     		testb	%dl, %dl
 6295 2bfa 0F84030D 		je	.L247
 6295      0000
 6296 2c00 83EA30   		subl	$48, %edx
 6297 2c03 80FA09   		cmpb	$9, %dl
 6298 2c06 0F874006 		ja	.L711
 6298      0000
 6299 2c0c E9CED7FF 		jmp	.L225
 6299      FF
 6300              	.L653:
 6301 2c11 80FA5F   		cmpb	$95, %dl
 6302 2c14 0F853206 		jne	.L711
 6302      0000
 6303 2c1a E9C0D7FF 		jmp	.L225
 6303      FF
 6304              	.L652:
GAS LISTING /tmp/cc23nfB3.s 			page 384


 6305 2c1f 80FA6F   		cmpb	$111, %dl
 6306 2c22 7413     		je	.L651
 6307 2c24 80FA7A   		cmpb	$122, %dl
 6308 2c27 0F871F06 		ja	.L711
 6308      0000
 6309 2c2d E9ADD7FF 		jmp	.L225
 6309      FF
 6310              	.LVL738:
 6311              	.L650:
6415:out/quex_scan.cpp ****         goto _2536;
 6312              		.loc 1 6415 0
 6313 2c32 E9150600 		jmp	.L711
 6313      00
 6314              	.L651:
6421:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6315              		.loc 1 6421 0
 6316 2c37 8B5328   		movl	40(%ebx), %edx
 6317              	.LVL739:
 6318 2c3a BE372C00 		movl	$.L651, %esi
 6318      00
 6319 2c3f 8D4201   		leal	1(%edx), %eax
 6320              	.LVL740:
 6321 2c42 894328   		movl	%eax, 40(%ebx)
6423:out/quex_scan.cpp ****     switch( input ) {
 6322              		.loc 1 6423 0
 6323 2c45 8A5201   		movb	1(%edx), %dl
6421:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6324              		.loc 1 6421 0
 6325 2c48 B89A2C00 		movl	$.L654, %eax
 6325      00
 6326              	.LVL741:
6423:out/quex_scan.cpp ****     switch( input ) {
 6327              		.loc 1 6423 0
 6328 2c4d 80FA5A   		cmpb	$90, %dl
 6329 2c50 7722     		ja	.L656
 6330 2c52 80FA41   		cmpb	$65, %dl
 6331 2c55 0F8384D7 		jae	.L225
 6331      FFFF
 6332 2c5b 84D2     		testb	%dl, %dl
 6333 2c5d 0F84A00C 		je	.L247
 6333      0000
 6334 2c63 83EA30   		subl	$48, %edx
 6335 2c66 80FA09   		cmpb	$9, %dl
 6336 2c69 0F87DD05 		ja	.L711
 6336      0000
 6337 2c6f E96BD7FF 		jmp	.L225
 6337      FF
 6338              	.L656:
 6339 2c74 80FA7A   		cmpb	$122, %dl
 6340 2c77 0F87CF05 		ja	.L711
 6340      0000
 6341 2c7d 80FA62   		cmpb	$98, %dl
 6342 2c80 0F8359D7 		jae	.L225
 6342      FFFF
 6343 2c86 80FA5F   		cmpb	$95, %dl
 6344 2c89 0F8450D7 		je	.L225
 6344      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 385


 6345 2c8f 80FA61   		cmpb	$97, %dl
 6346 2c92 0F85B405 		jne	.L711
 6346      0000
 6347 2c98 EB05     		jmp	.L655
 6348              	.LVL742:
 6349              	.L654:
6491:out/quex_scan.cpp ****         goto _2536;
 6350              		.loc 1 6491 0
 6351 2c9a E9AD0500 		jmp	.L711
 6351      00
 6352              	.L655:
6497:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6353              		.loc 1 6497 0
 6354 2c9f 8B5328   		movl	40(%ebx), %edx
 6355              	.LVL743:
 6356 2ca2 BE9F2C00 		movl	$.L655, %esi
 6356      00
 6357 2ca7 8D4201   		leal	1(%edx), %eax
 6358              	.LVL744:
 6359 2caa 894328   		movl	%eax, 40(%ebx)
6499:out/quex_scan.cpp ****     switch( input ) {
 6360              		.loc 1 6499 0
 6361 2cad 8A5201   		movb	1(%edx), %dl
6497:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6362              		.loc 1 6497 0
 6363 2cb0 B80B2D00 		movl	$.L657, %eax
 6363      00
 6364              	.LVL745:
6499:out/quex_scan.cpp ****     switch( input ) {
 6365              		.loc 1 6499 0
 6366 2cb5 80FA73   		cmpb	$115, %dl
 6367 2cb8 773E     		ja	.L659
 6368 2cba 80FA61   		cmpb	$97, %dl
 6369 2cbd 0F831CD7 		jae	.L225
 6369      FFFF
 6370 2cc3 80FA5A   		cmpb	$90, %dl
 6371 2cc6 7722     		ja	.L660
 6372 2cc8 80FA41   		cmpb	$65, %dl
 6373 2ccb 0F830ED7 		jae	.L225
 6373      FFFF
 6374 2cd1 84D2     		testb	%dl, %dl
 6375 2cd3 0F842A0C 		je	.L247
 6375      0000
 6376 2cd9 83EA30   		subl	$48, %edx
 6377 2cdc 80FA09   		cmpb	$9, %dl
 6378 2cdf 0F876705 		ja	.L711
 6378      0000
 6379 2ce5 E9F5D6FF 		jmp	.L225
 6379      FF
 6380              	.L660:
 6381 2cea 80FA5F   		cmpb	$95, %dl
 6382 2ced 0F855905 		jne	.L711
 6382      0000
 6383 2cf3 E9E7D6FF 		jmp	.L225
 6383      FF
 6384              	.L659:
 6385 2cf8 80FA74   		cmpb	$116, %dl
GAS LISTING /tmp/cc23nfB3.s 			page 386


 6386 2cfb 7413     		je	.L658
 6387 2cfd 80FA7A   		cmpb	$122, %dl
 6388 2d00 0F874605 		ja	.L711
 6388      0000
 6389 2d06 E9D4D6FF 		jmp	.L225
 6389      FF
 6390              	.LVL746:
 6391              	.L657:
6567:out/quex_scan.cpp ****         goto _2536;
 6392              		.loc 1 6567 0
 6393 2d0b E93C0500 		jmp	.L711
 6393      00
 6394              	.L658:
6573:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6395              		.loc 1 6573 0
 6396 2d10 8B5328   		movl	40(%ebx), %edx
 6397              	.LVL747:
 6398 2d13 BE102D00 		movl	$.L658, %esi
 6398      00
 6399 2d18 8D4201   		leal	1(%edx), %eax
 6400              	.LVL748:
 6401 2d1b 894328   		movl	%eax, 40(%ebx)
6575:out/quex_scan.cpp ****     switch( input ) {
 6402              		.loc 1 6575 0
 6403 2d1e 8A5201   		movb	1(%edx), %dl
6573:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6404              		.loc 1 6573 0
 6405 2d21 B8393300 		movl	$.L661, %eax
 6405      00
 6406              	.LVL749:
6575:out/quex_scan.cpp ****     switch( input ) {
 6407              		.loc 1 6575 0
 6408 2d26 80FA5A   		cmpb	$90, %dl
 6409 2d29 7719     		ja	.L662
 6410 2d2b 80FA41   		cmpb	$65, %dl
 6411 2d2e 0F83ABD6 		jae	.L225
 6411      FFFF
 6412 2d34 84D2     		testb	%dl, %dl
 6413 2d36 0F84C70B 		je	.L247
 6413      0000
 6414 2d3c 83EA30   		subl	$48, %edx
 6415 2d3f 80FA09   		cmpb	$9, %dl
 6416 2d42 EB15     		jmp	.L898
 6417              	.L662:
 6418 2d44 80FA5F   		cmpb	$95, %dl
 6419 2d47 0F8492D6 		je	.L225
 6419      FFFF
 6420 2d4d 0F82E605 		jb	.L721
 6420      0000
 6421 2d53 83EA61   		subl	$97, %edx
 6422 2d56 80FA19   		cmpb	$25, %dl
 6423              	.L898:
 6424 2d59 0F87DA05 		ja	.L721
 6424      0000
 6425 2d5f E97BD6FF 		jmp	.L225
 6425      FF
 6426              	.LVL750:
GAS LISTING /tmp/cc23nfB3.s 			page 387


 6427              	.L647:
6649:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6428              		.loc 1 6649 0
 6429 2d64 8B5328   		movl	40(%ebx), %edx
 6430              	.LVL751:
 6431 2d67 BE642D00 		movl	$.L647, %esi
 6431      00
 6432 2d6c 8D4201   		leal	1(%edx), %eax
 6433              	.LVL752:
 6434 2d6f 894328   		movl	%eax, 40(%ebx)
6651:out/quex_scan.cpp ****     switch( input ) {
 6435              		.loc 1 6651 0
 6436 2d72 8A5201   		movb	1(%edx), %dl
6649:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6437              		.loc 1 6649 0
 6438 2d75 B87A3400 		movl	$.L663, %eax
 6438      00
 6439              	.LVL753:
6651:out/quex_scan.cpp ****     switch( input ) {
 6440              		.loc 1 6651 0
 6441 2d7a 80FA5A   		cmpb	$90, %dl
 6442 2d7d 7719     		ja	.L664
 6443 2d7f 80FA41   		cmpb	$65, %dl
 6444 2d82 0F8357D6 		jae	.L225
 6444      FFFF
 6445 2d88 84D2     		testb	%dl, %dl
 6446 2d8a 0F84730B 		je	.L247
 6446      0000
 6447 2d90 83EA30   		subl	$48, %edx
 6448 2d93 80FA09   		cmpb	$9, %dl
 6449 2d96 EB15     		jmp	.L903
 6450              	.L664:
 6451 2d98 80FA5F   		cmpb	$95, %dl
 6452 2d9b 0F843ED6 		je	.L225
 6452      FFFF
 6453 2da1 0F82D306 		jb	.L733
 6453      0000
 6454 2da7 83EA61   		subl	$97, %edx
 6455 2daa 80FA19   		cmpb	$25, %dl
 6456              	.L903:
 6457 2dad 0F87C706 		ja	.L733
 6457      0000
 6458 2db3 E927D6FF 		jmp	.L225
 6458      FF
 6459              	.LVL754:
 6460              	.L319:
6725:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6461              		.loc 1 6725 0
 6462 2db8 8B5328   		movl	40(%ebx), %edx
 6463              	.LVL755:
 6464 2dbb BEB82D00 		movl	$.L319, %esi
 6464      00
 6465 2dc0 8D4201   		leal	1(%edx), %eax
 6466              	.LVL756:
 6467 2dc3 894328   		movl	%eax, 40(%ebx)
6727:out/quex_scan.cpp ****     switch( input ) {
 6468              		.loc 1 6727 0
GAS LISTING /tmp/cc23nfB3.s 			page 388


 6469 2dc6 8A5201   		movb	1(%edx), %dl
6725:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6470              		.loc 1 6725 0
 6471 2dc9 B8242E00 		movl	$.L665, %eax
 6471      00
 6472              	.LVL757:
6727:out/quex_scan.cpp ****     switch( input ) {
 6473              		.loc 1 6727 0
 6474 2dce 80FA64   		cmpb	$100, %dl
 6475 2dd1 773E     		ja	.L667
 6476 2dd3 80FA61   		cmpb	$97, %dl
 6477 2dd6 0F8303D6 		jae	.L225
 6477      FFFF
 6478 2ddc 80FA5A   		cmpb	$90, %dl
 6479 2ddf 7722     		ja	.L668
 6480 2de1 80FA41   		cmpb	$65, %dl
 6481 2de4 0F83F5D5 		jae	.L225
 6481      FFFF
 6482 2dea 84D2     		testb	%dl, %dl
 6483 2dec 0F84110B 		je	.L247
 6483      0000
 6484 2df2 83EA30   		subl	$48, %edx
 6485 2df5 80FA09   		cmpb	$9, %dl
 6486 2df8 0F874E04 		ja	.L711
 6486      0000
 6487 2dfe E9DCD5FF 		jmp	.L225
 6487      FF
 6488              	.L668:
 6489 2e03 80FA5F   		cmpb	$95, %dl
 6490 2e06 0F854004 		jne	.L711
 6490      0000
 6491 2e0c E9CED5FF 		jmp	.L225
 6491      FF
 6492              	.L667:
 6493 2e11 80FA65   		cmpb	$101, %dl
 6494 2e14 7413     		je	.L666
 6495 2e16 80FA7A   		cmpb	$122, %dl
 6496 2e19 0F872D04 		ja	.L711
 6496      0000
 6497 2e1f E9BBD5FF 		jmp	.L225
 6497      FF
 6498              	.LVL758:
 6499              	.L665:
6795:out/quex_scan.cpp ****         goto _2536;
 6500              		.loc 1 6795 0
 6501 2e24 E9230400 		jmp	.L711
 6501      00
 6502              	.L666:
6801:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6503              		.loc 1 6801 0
 6504 2e29 8B5328   		movl	40(%ebx), %edx
 6505              	.LVL759:
 6506 2e2c BE292E00 		movl	$.L666, %esi
 6506      00
 6507 2e31 8D4201   		leal	1(%edx), %eax
 6508              	.LVL760:
 6509 2e34 894328   		movl	%eax, 40(%ebx)
GAS LISTING /tmp/cc23nfB3.s 			page 389


6803:out/quex_scan.cpp ****     switch( input ) {
 6510              		.loc 1 6803 0
 6511 2e37 8A5201   		movb	1(%edx), %dl
6801:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6512              		.loc 1 6801 0
 6513 2e3a B88C2E00 		movl	$.L669, %eax
 6513      00
 6514              	.LVL761:
6803:out/quex_scan.cpp ****     switch( input ) {
 6515              		.loc 1 6803 0
 6516 2e3f 80FA5A   		cmpb	$90, %dl
 6517 2e42 7722     		ja	.L671
 6518 2e44 80FA41   		cmpb	$65, %dl
 6519 2e47 0F8392D5 		jae	.L225
 6519      FFFF
 6520 2e4d 84D2     		testb	%dl, %dl
 6521 2e4f 0F84AE0A 		je	.L247
 6521      0000
 6522 2e55 83EA30   		subl	$48, %edx
 6523 2e58 80FA09   		cmpb	$9, %dl
 6524 2e5b 0F87EB03 		ja	.L711
 6524      0000
 6525 2e61 E979D5FF 		jmp	.L225
 6525      FF
 6526              	.L671:
 6527 2e66 80FA7A   		cmpb	$122, %dl
 6528 2e69 0F87DD03 		ja	.L711
 6528      0000
 6529 2e6f 80FA62   		cmpb	$98, %dl
 6530 2e72 0F8367D5 		jae	.L225
 6530      FFFF
 6531 2e78 80FA5F   		cmpb	$95, %dl
 6532 2e7b 0F845ED5 		je	.L225
 6532      FFFF
 6533 2e81 80FA61   		cmpb	$97, %dl
 6534 2e84 0F85C203 		jne	.L711
 6534      0000
 6535 2e8a EB05     		jmp	.L670
 6536              	.LVL762:
 6537              	.L669:
6871:out/quex_scan.cpp ****         goto _2536;
 6538              		.loc 1 6871 0
 6539 2e8c E9BB0300 		jmp	.L711
 6539      00
 6540              	.L670:
6877:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6541              		.loc 1 6877 0
 6542 2e91 8B5328   		movl	40(%ebx), %edx
 6543              	.LVL763:
 6544 2e94 BE912E00 		movl	$.L670, %esi
 6544      00
 6545 2e99 8D4201   		leal	1(%edx), %eax
 6546              	.LVL764:
 6547 2e9c 894328   		movl	%eax, 40(%ebx)
6879:out/quex_scan.cpp ****     switch( input ) {
 6548              		.loc 1 6879 0
 6549 2e9f 8A5201   		movb	1(%edx), %dl
GAS LISTING /tmp/cc23nfB3.s 			page 390


6877:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6550              		.loc 1 6877 0
 6551 2ea2 B8FD2E00 		movl	$.L672, %eax
 6551      00
 6552              	.LVL765:
6879:out/quex_scan.cpp ****     switch( input ) {
 6553              		.loc 1 6879 0
 6554 2ea7 80FA6A   		cmpb	$106, %dl
 6555 2eaa 773E     		ja	.L674
 6556 2eac 80FA61   		cmpb	$97, %dl
 6557 2eaf 0F832AD5 		jae	.L225
 6557      FFFF
 6558 2eb5 80FA5A   		cmpb	$90, %dl
 6559 2eb8 7722     		ja	.L675
 6560 2eba 80FA41   		cmpb	$65, %dl
 6561 2ebd 0F831CD5 		jae	.L225
 6561      FFFF
 6562 2ec3 84D2     		testb	%dl, %dl
 6563 2ec5 0F84380A 		je	.L247
 6563      0000
 6564 2ecb 83EA30   		subl	$48, %edx
 6565 2ece 80FA09   		cmpb	$9, %dl
 6566 2ed1 0F877503 		ja	.L711
 6566      0000
 6567 2ed7 E903D5FF 		jmp	.L225
 6567      FF
 6568              	.L675:
 6569 2edc 80FA5F   		cmpb	$95, %dl
 6570 2edf 0F856703 		jne	.L711
 6570      0000
 6571 2ee5 E9F5D4FF 		jmp	.L225
 6571      FF
 6572              	.L674:
 6573 2eea 80FA6B   		cmpb	$107, %dl
 6574 2eed 7413     		je	.L673
 6575 2eef 80FA7A   		cmpb	$122, %dl
 6576 2ef2 0F875403 		ja	.L711
 6576      0000
 6577 2ef8 E9E2D4FF 		jmp	.L225
 6577      FF
 6578              	.LVL766:
 6579              	.L672:
6947:out/quex_scan.cpp ****         goto _2536;
 6580              		.loc 1 6947 0
 6581 2efd E94A0300 		jmp	.L711
 6581      00
 6582              	.L673:
6953:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6583              		.loc 1 6953 0
 6584 2f02 8B5328   		movl	40(%ebx), %edx
 6585              	.LVL767:
 6586 2f05 BE022F00 		movl	$.L673, %esi
 6586      00
 6587 2f0a 8D4201   		leal	1(%edx), %eax
 6588              	.LVL768:
 6589 2f0d 894328   		movl	%eax, 40(%ebx)
6955:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 391


 6590              		.loc 1 6955 0
 6591 2f10 8A5201   		movb	1(%edx), %dl
6953:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6592              		.loc 1 6953 0
 6593 2f13 B84C3800 		movl	$.L676, %eax
 6593      00
 6594              	.LVL769:
6955:out/quex_scan.cpp ****     switch( input ) {
 6595              		.loc 1 6955 0
 6596 2f18 80FA5A   		cmpb	$90, %dl
 6597 2f1b 7719     		ja	.L677
 6598 2f1d 80FA41   		cmpb	$65, %dl
 6599 2f20 0F83B9D4 		jae	.L225
 6599      FFFF
 6600 2f26 84D2     		testb	%dl, %dl
 6601 2f28 0F84D509 		je	.L247
 6601      0000
 6602 2f2e 83EA30   		subl	$48, %edx
 6603 2f31 80FA09   		cmpb	$9, %dl
 6604 2f34 EB15     		jmp	.L911
 6605              	.L677:
 6606 2f36 80FA5F   		cmpb	$95, %dl
 6607 2f39 0F84A0D4 		je	.L225
 6607      FFFF
 6608 2f3f 0F820709 		jb	.L790
 6608      0000
 6609 2f45 83EA61   		subl	$97, %edx
 6610 2f48 80FA19   		cmpb	$25, %dl
 6611              	.L911:
 6612 2f4b 0F87FB08 		ja	.L790
 6612      0000
 6613 2f51 E989D4FF 		jmp	.L225
 6613      FF
 6614              	.LVL770:
 6615              	.L317:
7029:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6616              		.loc 1 7029 0
 6617 2f56 8B5328   		movl	40(%ebx), %edx
 6618              	.LVL771:
 6619 2f59 BE562F00 		movl	$.L317, %esi
 6619      00
 6620 2f5e 8D4201   		leal	1(%edx), %eax
 6621              	.LVL772:
 6622 2f61 894328   		movl	%eax, 40(%ebx)
7031:out/quex_scan.cpp ****     switch( input ) {
 6623              		.loc 1 7031 0
 6624 2f64 8A5201   		movb	1(%edx), %dl
7029:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6625              		.loc 1 7029 0
 6626 2f67 B8ED2F00 		movl	$.L678, %eax
 6626      00
 6627              	.LVL773:
7031:out/quex_scan.cpp ****     switch( input ) {
 6628              		.loc 1 7031 0
 6629 2f6c 80FA66   		cmpb	$102, %dl
 6630 2f6f 0F8470D7 		je	.L298
 6630      FFFF
GAS LISTING /tmp/cc23nfB3.s 			page 392


 6631 2f75 7744     		ja	.L681
 6632 2f77 80FA37   		cmpb	$55, %dl
 6633 2f7a 771F     		ja	.L682
 6634 2f7c 80FA30   		cmpb	$48, %dl
 6635 2f7f 0F837DD7 		jae	.L301
 6635      FFFF
 6636 2f85 84D2     		testb	%dl, %dl
 6637 2f87 0F847609 		je	.L247
 6637      0000
 6638 2f8d 80FA27   		cmpb	$39, %dl
 6639 2f90 0F85C800 		jne	.L687
 6639      0000
 6640 2f96 E9970000 		jmp	.L679
 6640      00
 6641              	.L682:
 6642 2f9b 80FA5C   		cmpb	$92, %dl
 6643 2f9e 0F8441D7 		je	.L298
 6643      FFFF
 6644 2fa4 0F82B400 		jb	.L687
 6644      0000
 6645 2faa 83EA61   		subl	$97, %edx
 6646 2fad 80FA02   		cmpb	$2, %dl
 6647              	.L881:
 6648 2fb0 0F87A800 		ja	.L687
 6648      0000
 6649 2fb6 E92AD7FF 		jmp	.L298
 6649      FF
 6650              	.L681:
 6651 2fbb 80FA74   		cmpb	$116, %dl
 6652 2fbe 0F8421D7 		je	.L298
 6652      FFFF
 6653 2fc4 7717     		ja	.L683
 6654 2fc6 80FA6E   		cmpb	$110, %dl
 6655 2fc9 0F8416D7 		je	.L298
 6655      FFFF
 6656 2fcf 80FA72   		cmpb	$114, %dl
 6657 2fd2 0F858600 		jne	.L687
 6657      0000
 6658 2fd8 E908D7FF 		jmp	.L298
 6658      FF
 6659              	.L683:
 6660 2fdd 80FA76   		cmpb	$118, %dl
 6661 2fe0 0F84FFD6 		je	.L298
 6661      FFFF
 6662 2fe6 80FA78   		cmpb	$120, %dl
 6663 2fe9 7573     		jne	.L687
 6664 2feb EB02     		jmp	.L680
 6665              	.LVL774:
 6666              	.L678:
7055:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 6667              		.loc 1 7055 0
 6668 2fed EB6F     		jmp	.L687
 6669              	.L680:
7061:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6670              		.loc 1 7061 0
 6671 2fef 8B5328   		movl	40(%ebx), %edx
 6672              	.LVL775:
GAS LISTING /tmp/cc23nfB3.s 			page 393


 6673 2ff2 BEEF2F00 		movl	$.L680, %esi
 6673      00
 6674 2ff7 8D4201   		leal	1(%edx), %eax
 6675              	.LVL776:
 6676 2ffa 894328   		movl	%eax, 40(%ebx)
7063:out/quex_scan.cpp ****     switch( input ) {
 6677              		.loc 1 7063 0
 6678 2ffd 8A5201   		movb	1(%edx), %dl
7061:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6679              		.loc 1 7061 0
 6680 3000 B8303000 		movl	$.L684, %eax
 6680      00
 6681              	.LVL777:
7063:out/quex_scan.cpp ****     switch( input ) {
 6682              		.loc 1 7063 0
 6683 3005 80FA46   		cmpb	$70, %dl
 6684 3008 7719     		ja	.L685
 6685 300a 80FA41   		cmpb	$65, %dl
 6686 300d 0F831AD7 		jae	.L303
 6686      FFFF
 6687 3013 84D2     		testb	%dl, %dl
 6688 3015 0F84E808 		je	.L247
 6688      0000
 6689 301b 83EA30   		subl	$48, %edx
 6690 301e 80FA09   		cmpb	$9, %dl
 6691 3021 EB06     		jmp	.L885
 6692              	.L685:
 6693 3023 83EA61   		subl	$97, %edx
 6694 3026 80FA05   		cmpb	$5, %dl
 6695              	.L885:
 6696 3029 7733     		ja	.L687
 6697 302b E9FDD6FF 		jmp	.L303
 6697      FF
 6698              	.LVL778:
 6699              	.L684:
7090:out/quex_scan.cpp ****     goto __TERMINAL_ROUTER;
 6700              		.loc 1 7090 0
 6701 3030 EB2C     		jmp	.L687
 6702              	.L679:
7096:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6703              		.loc 1 7096 0
 6704 3032 8B5328   		movl	40(%ebx), %edx
 6705              	.LVL779:
 6706 3035 BE323000 		movl	$.L679, %esi
 6706      00
 6707 303a 8D4201   		leal	1(%edx), %eax
 6708              	.LVL780:
 6709 303d 894328   		movl	%eax, 40(%ebx)
7098:out/quex_scan.cpp ****     switch( input ) {
 6710              		.loc 1 7098 0
 6711 3040 8A5201   		movb	1(%edx), %dl
7096:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6712              		.loc 1 7096 0
 6713 3043 B8A73200 		movl	$.L686, %eax
 6713      00
 6714              	.LVL781:
7098:out/quex_scan.cpp ****     switch( input ) {
GAS LISTING /tmp/cc23nfB3.s 			page 394


 6715              		.loc 1 7098 0
 6716 3048 84D2     		testb	%dl, %dl
 6717 304a 0F84B308 		je	.L247
 6717      0000
 6718 3050 80FA27   		cmpb	$39, %dl
 6719 3053 0F854E02 		jne	.L715
 6719      0000
 6720 3059 E9440200 		jmp	.L300
 6720      00
 6721              	.LVL782:
 6722              	.L250:
 6723              	.LVL783:
 6724              	.L687:
7112:out/quex_scan.cpp ****     if( last_acceptance == QUEX_LABEL(2534) ) {
 6725              		.loc 1 7112 0
 6726 305e 81FF7138 		cmpl	$.L199, %edi
 6726      0000
 6727 3064 0F840708 		je	.L199
 6727      0000
7120:out/quex_scan.cpp ****     if(last_acceptance_input_position != 0x0) {
 6728              		.loc 1 7120 0
 6729 306a 8B45E0   		movl	-32(%ebp), %eax
 6730              	.LVL784:
 6731 306d 85C0     		testl	%eax, %eax
 6732 306f 7403     		je	.L688
 6733              	.LBB441:
 6734              	.LBB442:
 222:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p = Position;
 6735              		.loc 2 222 0
 6736 3071 894328   		movl	%eax, 40(%ebx)
 6737              	.L688:
 6738 3074 89FE     		movl	%edi, %esi
 6739              	.L801:
 6740              	.LBE442:
 6741              	.LBE441:
7124:out/quex_scan.cpp ****     goto *last_acceptance;
 6742              		.loc 1 7124 0
 6743 3076 FFE6     		jmp	*%esi
 6744              	.LVL785:
 6745              	.L953:
 6746              	.L330:
 6747              	.L689:
7231:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6748              		.loc 1 7231 0
 6749 3078 83C002   		addl	$2, %eax
 6750 307b 894328   		movl	%eax, 40(%ebx)
 6751              		.file 15 "in/quex/c.qx"
   1:in/quex/c.qx  **** // -*- C++ -*- vim: set syntax=cpp:
   2:in/quex/c.qx  **** start = PROGRAM;
   3:in/quex/c.qx  **** 
   4:in/quex/c.qx  **** 
   5:in/quex/c.qx  **** define {
   6:in/quex/c.qx  ****     // Pattern definitions for example application
   7:in/quex/c.qx  ****     P_WHITESPACE          [ \t\n]+
   8:in/quex/c.qx  ****     P_IDENTIFIER          [_a-zA-Z][_a-zA-Z0-9]*
   9:in/quex/c.qx  ****     P_NUMBER              [0-9]+
  10:in/quex/c.qx  ****     //
GAS LISTING /tmp/cc23nfB3.s 			page 395


  11:in/quex/c.qx  ****     // String: 
  12:in/quex/c.qx  ****     //    Quote " followe by either \" or something different from " and then a final "
  13:in/quex/c.qx  ****     P_STRING              "\""(\\"\""|[^"])*"\""
  14:in/quex/c.qx  ****     P_QUOTED_CHAR_1       ("'\\''")|("'"[^'\n\t]?"'")
  15:in/quex/c.qx  ****     P_QUOTED_CHAR_2       "'\\"([0-7]+|[abcfnrtv\\])"'"
  16:in/quex/c.qx  ****     P_QUOTED_CHAR_3       "'\\x"[0-9a-fA-F]+"'"
  17:in/quex/c.qx  ****     P_QUOTED_CHAR         ({P_QUOTED_CHAR_1}|{P_QUOTED_CHAR_2}|{P_QUOTED_CHAR_3})
  18:in/quex/c.qx  ****     P_INCLUDE_FILE1       "<"[^>]+">"
  19:in/quex/c.qx  ****     P_INCLUDE_FILE2       "\""[^"]+"\""
  20:in/quex/c.qx  **** }
  21:in/quex/c.qx  **** 
  22:in/quex/c.qx  **** mode PROGRAM :
  23:in/quex/c.qx  **** <skip:       [ \r\n\t]>
  24:in/quex/c.qx  **** <skip_range: "/*" "*/">
  25:in/quex/c.qx  **** <skip_range: "//" "\n">
  26:in/quex/c.qx  **** {
  27:in/quex/c.qx  ****     <<EOF>>       => TKN_TERMINATION;
  28:in/quex/c.qx  **** 
  29:in/quex/c.qx  ****     "#"[ \t]*"include"[ \t]*{P_INCLUDE_FILE2} => TKN_PP_INCLUDE;
  30:in/quex/c.qx  ****     "#"[ \t]*"include"[ \t]*{P_INCLUDE_FILE1} => TKN_PP_INCLUDE;
  31:in/quex/c.qx  ****     "#"[ \t]*"define"  => TKN_PP_DEFINE;
  32:in/quex/c.qx  ****     "#"[ \t]*"if"      => TKN_PP_IF;
  33:in/quex/c.qx  ****     "#"[ \t]*"elif"    => TKN_PP_ELIF;
  34:in/quex/c.qx  ****     "#"[ \t]*"ifdef"   => TKN_PP_IFDEF;
  35:in/quex/c.qx  ****     "#"[ \t]*"ifndef"  => TKN_PP_IFNDEF;
  36:in/quex/c.qx  ****     "#"[ \t]*"endif"   => TKN_PP_ENDIF;
  37:in/quex/c.qx  ****     "#"[ \t]*"else"    => TKN_PP_ELSE;
  38:in/quex/c.qx  ****     "#"[ \t]*"pragma"  => TKN_PP_PRAGMA;
  39:in/quex/c.qx  ****     "#"[ \t]*"error"   => TKN_PP_ERROR;
  40:in/quex/c.qx  ****     defined            => TKN_PP_DEFINED;
  41:in/quex/c.qx  ****     "\\\n"             => TKN_BACKLASHED_NEWLINE;
  42:in/quex/c.qx  **** 
  43:in/quex/c.qx  ****     unsigned  => TKN_TYPE_UNSIGNED;
  44:in/quex/c.qx  ****     int       => TKN_TYPE_INT;
  45:in/quex/c.qx  ****     long      => TKN_TYPE_LONG;
  46:in/quex/c.qx  ****     float     => TKN_TYPE_FLOAT;
  47:in/quex/c.qx  ****     double    => TKN_TYPE_DOUBLE;
  48:in/quex/c.qx  ****     char      => TKN_TYPE_CHAR;
  49:in/quex/c.qx  **** 
  50:in/quex/c.qx  ****     "#"           => TKN_HASH;
  51:in/quex/c.qx  ****     "##"          => TKN_DOUBLE_HASH;
  52:in/quex/c.qx  ****     "?"           => TKN_QUESTION_MARK;
  53:in/quex/c.qx  ****     "~"           => TKN_TILDE;
  54:in/quex/c.qx  ****     "("           => TKN_BRACKET_O;
  55:in/quex/c.qx  ****     ")"           => TKN_BRACKET_C;
  56:in/quex/c.qx  ****     "["           => TKN_CORNER_BRACKET_O;
  57:in/quex/c.qx  ****     "]"           => TKN_CORNER_BRACKET_C;
  58:in/quex/c.qx  ****     "{"           => TKN_CURLY_BRACKET_O;
  59:in/quex/c.qx  ****     "}"           => TKN_CURLY_BRACKET_C;
  60:in/quex/c.qx  ****     "="           => TKN_OP_ASSIGNMENT;
  61:in/quex/c.qx  ****     "+"           => TKN_PLUS;
  62:in/quex/c.qx  ****     "-"           => TKN_MINUS;
  63:in/quex/c.qx  ****     "*"           => TKN_MULT;
  64:in/quex/c.qx  ****     "/"           => TKN_DIV;
  65:in/quex/c.qx  ****     "%"           => TKN_MODULO;
  66:in/quex/c.qx  ****     "+="          => TKN_ASSIGN_PLUS;
  67:in/quex/c.qx  ****     "-="          => TKN_ASSIGN_MINUS;
GAS LISTING /tmp/cc23nfB3.s 			page 396


  68:in/quex/c.qx  ****     "*="          => TKN_ASSIGN_MULT;
  69:in/quex/c.qx  ****     "/="          => TKN_ASSIGN_DIV;
  70:in/quex/c.qx  ****     "=="          => TKN_EQ;
  71:in/quex/c.qx  ****     "!="          => TKN_NOT_EQ;
 6752              		.loc 15 71 0
 6753 307e 8B4304   		movl	4(%ebx), %eax
 6754 3081 C7400C2D 		movl	$45, 12(%eax)
 6754      000000
 6755 3088 B82D0000 		movl	$45, %eax
 6755      00
 6756              	.LVL786:
  72:in/quex/c.qx  ****     ">"           => TKN_GREATER;
 6757              		.loc 15 72 0
 6758 308d E9A50800 		jmp	.L690
 6758      00
 6759              	.LVL787:
 6760              	.L950:
 6761              	.L309:
 6762              	.L691:
  41:in/quex/c.qx  ****     "\\\n"             => TKN_BACKLASHED_NEWLINE;
 6763              		.loc 15 41 0
 6764 3092 8B4304   		movl	4(%ebx), %eax
 6765              	.LVL788:
7255:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6766              		.loc 1 7255 0
 6767 3095 83C202   		addl	$2, %edx
 6768 3098 895328   		movl	%edx, 40(%ebx)
  41:in/quex/c.qx  ****     "\\\n"             => TKN_BACKLASHED_NEWLINE;
 6769              		.loc 15 41 0
 6770 309b C7400C09 		movl	$9, 12(%eax)
 6770      000000
 6771 30a2 B8090000 		movl	$9, %eax
 6771      00
 6772              	.LVL789:
  42:in/quex/c.qx  **** 
 6773              		.loc 15 42 0
 6774 30a7 E98B0800 		jmp	.L690
 6774      00
 6775              	.LVL790:
 6776              	.L310:
 6777              	.L692:
 6778              		.loc 15 72 0
 6779 30ac 8B4304   		movl	4(%ebx), %eax
 6780              	.LVL791:
 6781 30af C7400C21 		movl	$33, 12(%eax)
 6781      000000
 6782 30b6 B8210000 		movl	$33, %eax
 6782      00
 6783              	.LVL792:
  73:in/quex/c.qx  ****     ">="          => TKN_GR_EQ;
 6784              		.loc 15 73 0
 6785 30bb E9770800 		jmp	.L690
 6785      00
 6786              	.LVL793:
 6787              	.L951:
 6788              	.L311:
 6789              	.L693:
GAS LISTING /tmp/cc23nfB3.s 			page 397


 6790              		.loc 15 73 0
 6791 30c0 8B4304   		movl	4(%ebx), %eax
 6792              	.LVL794:
7304:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6793              		.loc 1 7304 0
 6794 30c3 83C202   		addl	$2, %edx
 6795 30c6 895328   		movl	%edx, 40(%ebx)
 6796              		.loc 15 73 0
 6797 30c9 C7400C22 		movl	$34, 12(%eax)
 6797      000000
 6798 30d0 B8220000 		movl	$34, %eax
 6798      00
 6799              	.LVL795:
  74:in/quex/c.qx  ****     "<"           => TKN_LESS;
 6800              		.loc 15 74 0
 6801 30d5 E95D0800 		jmp	.L690
 6801      00
 6802              	.LVL796:
 6803              	.L546:
 6804              	.L694:
  75:in/quex/c.qx  ****     "<="          => TKN_LE_EQ;
  76:in/quex/c.qx  ****     "!"           => TKN_NOT;
  77:in/quex/c.qx  ****     "|"           => TKN_LOGICAL_OR;
  78:in/quex/c.qx  ****     "^"           => TKN_EXCLUSIVE_OR;
  79:in/quex/c.qx  ****     "||"          => TKN_OR;
  80:in/quex/c.qx  ****     "&"           => TKN_AMPERSANT;
  81:in/quex/c.qx  ****     "&&"          => TKN_AND;
  82:in/quex/c.qx  ****     ":"           => TKN_COLON;
  83:in/quex/c.qx  ****     struct        => TKN_STRUCT;
  84:in/quex/c.qx  ****     const         => TKN_CONST;
  85:in/quex/c.qx  ****     if            => TKN_IF;
  86:in/quex/c.qx  ****     else          => TKN_ELSE;
  87:in/quex/c.qx  ****     switch        => TKN_SWITCH;
  88:in/quex/c.qx  ****     for           => TKN_FOR;
  89:in/quex/c.qx  ****     do            => TKN_DO;
  90:in/quex/c.qx  ****     while         => TKN_WHILE;
  91:in/quex/c.qx  ****     break         => TKN_BREAK;
  92:in/quex/c.qx  ****     continue      => TKN_CONTINUE;
 6805              		.loc 15 92 0
 6806 30da 8B4304   		movl	4(%ebx), %eax
 6807              	.LVL797:
 6808 30dd C7400C13 		movl	$19, 12(%eax)
 6808      000000
 6809 30e4 B8130000 		movl	$19, %eax
 6809      00
 6810              	.LVL798:
  93:in/quex/c.qx  ****     ";"           => TKN_SEMICOLON;
 6811              		.loc 15 93 0
 6812 30e9 E9490800 		jmp	.L690
 6812      00
 6813              	.LVL799:
 6814              	.L306:
 6815              	.L695:
  74:in/quex/c.qx  ****     "<"           => TKN_LESS;
 6816              		.loc 15 74 0
 6817 30ee 8B4304   		movl	4(%ebx), %eax
 6818              	.LVL800:
GAS LISTING /tmp/cc23nfB3.s 			page 398


 6819 30f1 C7400C26 		movl	$38, 12(%eax)
 6819      000000
 6820 30f8 B8260000 		movl	$38, %eax
 6820      00
 6821              	.LVL801:
  75:in/quex/c.qx  ****     "<="          => TKN_LE_EQ;
 6822              		.loc 15 75 0
 6823 30fd E9350800 		jmp	.L690
 6823      00
 6824              	.LVL802:
 6825              	.L949:
 6826              	.L307:
 6827              	.L696:
  75:in/quex/c.qx  ****     "<="          => TKN_LE_EQ;
 6828              		.loc 15 75 0
 6829 3102 8B4304   		movl	4(%ebx), %eax
 6830              	.LVL803:
7376:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6831              		.loc 1 7376 0
 6832 3105 83C202   		addl	$2, %edx
 6833 3108 895328   		movl	%edx, 40(%ebx)
  75:in/quex/c.qx  ****     "<="          => TKN_LE_EQ;
 6834              		.loc 15 75 0
 6835 310b C7400C27 		movl	$39, 12(%eax)
 6835      000000
 6836 3112 B8270000 		movl	$39, %eax
 6836      00
 6837              	.LVL804:
  76:in/quex/c.qx  ****     "!"           => TKN_NOT;
 6838              		.loc 15 76 0
 6839 3117 E91B0800 		jmp	.L690
 6839      00
 6840              	.L293:
 6841              	.L697:
 6842              	.LVL805:
 6843              	.L328:
 6844              	.L698:
  76:in/quex/c.qx  ****     "!"           => TKN_NOT;
 6845              		.loc 15 76 0
 6846 311c 8B4304   		movl	4(%ebx), %eax
 6847              	.LVL806:
 6848 311f C7400C2C 		movl	$44, 12(%eax)
 6848      000000
 6849 3126 B82C0000 		movl	$44, %eax
 6849      00
 6850              	.LVL807:
  77:in/quex/c.qx  ****     "|"           => TKN_LOGICAL_OR;
 6851              		.loc 15 77 0
 6852 312b E9070800 		jmp	.L690
 6852      00
 6853              	.LVL808:
 6854              	.L376:
 6855              	.L699:
  77:in/quex/c.qx  ****     "|"           => TKN_LOGICAL_OR;
 6856              		.loc 15 77 0
 6857 3130 8B4304   		movl	4(%ebx), %eax
 6858              	.LVL809:
GAS LISTING /tmp/cc23nfB3.s 			page 399


 6859 3133 C7400C28 		movl	$40, 12(%eax)
 6859      000000
 6860 313a B8280000 		movl	$40, %eax
 6860      00
 6861              	.LVL810:
  78:in/quex/c.qx  ****     "^"           => TKN_EXCLUSIVE_OR;
 6862              		.loc 15 78 0
 6863 313f E9F30700 		jmp	.L690
 6863      00
 6864              	.LVL811:
 6865              	.L229:
 6866              	.L700:
7472:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6867              		.loc 1 7472 0
 6868 3144 40       		incl	%eax
 6869 3145 894328   		movl	%eax, 40(%ebx)
  78:in/quex/c.qx  ****     "^"           => TKN_EXCLUSIVE_OR;
 6870              		.loc 15 78 0
 6871 3148 8B4304   		movl	4(%ebx), %eax
 6872 314b C7400C1F 		movl	$31, 12(%eax)
 6872      000000
 6873 3152 B81F0000 		movl	$31, %eax
 6873      00
 6874              	.LVL812:
  79:in/quex/c.qx  ****     "||"          => TKN_OR;
 6875              		.loc 15 79 0
 6876 3157 E9DB0700 		jmp	.L690
 6876      00
 6877              	.LVL813:
 6878              	.L959:
 6879              	.L377:
 6880              	.L701:
  79:in/quex/c.qx  ****     "||"          => TKN_OR;
 6881              		.loc 15 79 0
 6882 315c 8B4304   		movl	4(%ebx), %eax
 6883              	.LVL814:
7496:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6884              		.loc 1 7496 0
 6885 315f 83C202   		addl	$2, %edx
 6886 3162 895328   		movl	%edx, 40(%ebx)
  79:in/quex/c.qx  ****     "||"          => TKN_OR;
 6887              		.loc 15 79 0
 6888 3165 C7400C30 		movl	$48, 12(%eax)
 6888      000000
 6889 316c B8300000 		movl	$48, %eax
 6889      00
 6890              	.LVL815:
  80:in/quex/c.qx  ****     "&"           => TKN_AMPERSANT;
 6891              		.loc 15 80 0
 6892 3171 E9C10700 		jmp	.L690
 6892      00
 6893              	.LVL816:
 6894              	.L964:
 6895              	.L462:
 6896              	.L702:
  37:in/quex/c.qx  ****     "#"[ \t]*"else"    => TKN_PP_ELSE;
 6897              		.loc 15 37 0
GAS LISTING /tmp/cc23nfB3.s 			page 400


 6898 3176 8B4304   		movl	4(%ebx), %eax
 6899              	.LVL817:
7520:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6900              		.loc 1 7520 0
 6901 3179 83C202   		addl	$2, %edx
 6902 317c 895328   		movl	%edx, 40(%ebx)
  37:in/quex/c.qx  ****     "#"[ \t]*"else"    => TKN_PP_ELSE;
 6903              		.loc 15 37 0
 6904 317f C7400C35 		movl	$53, 12(%eax)
 6904      000000
 6905 3186 B8350000 		movl	$53, %eax
 6905      00
 6906              	.LVL818:
  38:in/quex/c.qx  ****     "#"[ \t]*"pragma"  => TKN_PP_PRAGMA;
 6907              		.loc 15 38 0
 6908 318b E9A70700 		jmp	.L690
 6908      00
 6909              	.LVL819:
 6910              	.L342:
 6911              	.L703:
  80:in/quex/c.qx  ****     "&"           => TKN_AMPERSANT;
 6912              		.loc 15 80 0
 6913 3190 8B4304   		movl	4(%ebx), %eax
 6914              	.LVL820:
 6915 3193 C7400C03 		movl	$3, 12(%eax)
 6915      000000
 6916 319a B8030000 		movl	$3, %eax
 6916      00
 6917              	.LVL821:
  81:in/quex/c.qx  ****     "&&"          => TKN_AND;
 6918              		.loc 15 81 0
 6919 319f E9930700 		jmp	.L690
 6919      00
 6920              	.LVL822:
 6921              	.L956:
 6922              	.L343:
 6923              	.L704:
  81:in/quex/c.qx  ****     "&&"          => TKN_AND;
 6924              		.loc 15 81 0
 6925 31a4 8B4304   		movl	4(%ebx), %eax
 6926              	.LVL823:
7568:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6927              		.loc 1 7568 0
 6928 31a7 83C202   		addl	$2, %edx
 6929 31aa 895328   		movl	%edx, 40(%ebx)
  81:in/quex/c.qx  ****     "&&"          => TKN_AND;
 6930              		.loc 15 81 0
 6931 31ad C7400C04 		movl	$4, 12(%eax)
 6931      000000
 6932 31b4 B8040000 		movl	$4, %eax
 6932      00
 6933              	.LVL824:
  82:in/quex/c.qx  ****     ":"           => TKN_COLON;
 6934              		.loc 15 82 0
 6935 31b9 E9790700 		jmp	.L690
 6935      00
 6936              	.LVL825:
GAS LISTING /tmp/cc23nfB3.s 			page 401


 6937              	.L219:
 6938              	.L705:
7592:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6939              		.loc 1 7592 0
 6940 31be 40       		incl	%eax
 6941 31bf 894328   		movl	%eax, 40(%ebx)
  82:in/quex/c.qx  ****     ":"           => TKN_COLON;
 6942              		.loc 15 82 0
 6943 31c2 8B4304   		movl	4(%ebx), %eax
 6944 31c5 C7400C0F 		movl	$15, 12(%eax)
 6944      000000
 6945 31cc B80F0000 		movl	$15, %eax
 6945      00
 6946              	.LVL826:
  83:in/quex/c.qx  ****     struct        => TKN_STRUCT;
 6947              		.loc 15 83 0
 6948 31d1 E9610700 		jmp	.L690
 6948      00
 6949              	.LVL827:
 6950              	.L636:
 6951              	.L706:
  43:in/quex/c.qx  ****     unsigned  => TKN_TYPE_UNSIGNED;
 6952              		.loc 15 43 0
 6953 31d6 8B4304   		movl	4(%ebx), %eax
 6954              	.LVL828:
 6955 31d9 C7400C4A 		movl	$74, 12(%eax)
 6955      000000
 6956 31e0 B84A0000 		movl	$74, %eax
 6956      00
 6957              	.LVL829:
  44:in/quex/c.qx  ****     int       => TKN_TYPE_INT;
 6958              		.loc 15 44 0
 6959 31e5 E94D0700 		jmp	.L690
 6959      00
 6960              	.LVL830:
 6961              	.L220:
 6962              	.L707:
7640:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6963              		.loc 1 7640 0
 6964 31ea 40       		incl	%eax
 6965 31eb 894328   		movl	%eax, 40(%ebx)
 6966              		.loc 15 93 0
 6967 31ee 8B4304   		movl	4(%ebx), %eax
 6968 31f1 C7400C40 		movl	$64, 12(%eax)
 6968      000000
 6969 31f8 B8400000 		movl	$64, %eax
 6969      00
 6970              	.LVL831:
  94:in/quex/c.qx  ****     "."           => TKN_DOT;
 6971              		.loc 15 94 0
 6972 31fd E9350700 		jmp	.L690
 6972      00
 6973              	.LVL832:
 6974              	.L297:
 6975              	.L708:
7664:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6976              		.loc 1 7664 0
GAS LISTING /tmp/cc23nfB3.s 			page 402


 6977 3202 83C002   		addl	$2, %eax
 6978 3205 894328   		movl	%eax, 40(%ebx)
  30:in/quex/c.qx  ****     "#"[ \t]*"include"[ \t]*{P_INCLUDE_FILE1} => TKN_PP_INCLUDE;
 6979              		.loc 15 30 0
 6980 3208 8B4304   		movl	4(%ebx), %eax
 6981 320b C7400C3B 		movl	$59, 12(%eax)
 6981      000000
 6982 3212 B83B0000 		movl	$59, %eax
 6982      00
 6983              	.LVL833:
  31:in/quex/c.qx  ****     "#"[ \t]*"define"  => TKN_PP_DEFINE;
 6984              		.loc 15 31 0
 6985 3217 E91B0700 		jmp	.L690
 6985      00
 6986              	.LVL834:
 6987              	.L216:
 6988              	.L709:
7688:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 6989              		.loc 1 7688 0
 6990 321c 40       		incl	%eax
 6991 321d 894328   		movl	%eax, 40(%ebx)
 6992              		.loc 15 94 0
 6993 3220 8B4304   		movl	4(%ebx), %eax
 6994 3223 C7400C1A 		movl	$26, 12(%eax)
 6994      000000
 6995 322a B81A0000 		movl	$26, %eax
 6995      00
 6996              	.LVL835:
  95:in/quex/c.qx  ****     ","           => TKN_COMMA;
 6997              		.loc 15 95 0
 6998 322f E9030700 		jmp	.L690
 6998      00
 6999              	.LVL836:
 7000              	.L214:
 7001              	.L710:
7712:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7002              		.loc 1 7712 0
 7003 3234 40       		incl	%eax
 7004 3235 894328   		movl	%eax, 40(%ebx)
 7005              		.loc 15 95 0
 7006 3238 8B4304   		movl	4(%ebx), %eax
 7007 323b C7400C10 		movl	$16, 12(%eax)
 7007      000000
 7008 3242 B8100000 		movl	$16, %eax
 7008      00
 7009              	.LVL837:
  96:in/quex/c.qx  **** 
 7010              		.loc 15 96 0
 7011 3247 E9EB0600 		jmp	.L690
 7011      00
 7012              	.LVL838:
 7013              	.L246:
 7014              	.L711:
  97:in/quex/c.qx  ****     {P_IDENTIFIER}  => TKN_IDENTIFIER;
 7015              		.loc 15 97 0
 7016 324c 8B4304   		movl	4(%ebx), %eax
 7017              	.LVL839:
GAS LISTING /tmp/cc23nfB3.s 			page 403


 7018 324f C7400C24 		movl	$36, 12(%eax)
 7018      000000
 7019 3256 B8240000 		movl	$36, %eax
 7019      00
 7020              	.LVL840:
  98:in/quex/c.qx  ****     {P_NUMBER}      => TKN_NUMBER;
 7021              		.loc 15 98 0
 7022 325b E9D70600 		jmp	.L690
 7022      00
 7023              	.LVL841:
 7024              	.L644:
 7025              	.L712:
  44:in/quex/c.qx  ****     int       => TKN_TYPE_INT;
 7026              		.loc 15 44 0
 7027 3260 8B4304   		movl	4(%ebx), %eax
 7028              	.LVL842:
 7029 3263 C7400C48 		movl	$72, 12(%eax)
 7029      000000
 7030 326a B8480000 		movl	$72, %eax
 7030      00
 7031              	.LVL843:
  45:in/quex/c.qx  ****     long      => TKN_TYPE_LONG;
 7032              		.loc 15 45 0
 7033 326f E9C30600 		jmp	.L690
 7033      00
 7034              	.LVL844:
 7035              	.L258:
 7036              	.L713:
 7037              		.loc 15 98 0
 7038 3274 8B4304   		movl	4(%ebx), %eax
 7039              	.LVL845:
 7040 3277 C7400C2E 		movl	$46, 12(%eax)
 7040      000000
 7041 327e B82E0000 		movl	$46, %eax
 7041      00
 7042              	.LVL846:
  99:in/quex/c.qx  ****     {P_STRING}      => TKN_STRING;
 7043              		.loc 15 99 0
 7044 3283 E9AF0600 		jmp	.L690
 7044      00
 7045              	.LVL847:
 7046              	.L962:
 7047              	.L451:
 7048              	.L714:
  31:in/quex/c.qx  ****     "#"[ \t]*"define"  => TKN_PP_DEFINE;
 7049              		.loc 15 31 0
 7050 3288 8B4304   		movl	4(%ebx), %eax
 7051              	.LVL848:
7808:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7052              		.loc 1 7808 0
 7053 328b 83C202   		addl	$2, %edx
 7054 328e 895328   		movl	%edx, 40(%ebx)
  31:in/quex/c.qx  ****     "#"[ \t]*"define"  => TKN_PP_DEFINE;
 7055              		.loc 15 31 0
 7056 3291 C7400C32 		movl	$50, 12(%eax)
 7056      000000
 7057 3298 B8320000 		movl	$50, %eax
GAS LISTING /tmp/cc23nfB3.s 			page 404


 7057      00
 7058              	.LVL849:
  32:in/quex/c.qx  ****     "#"[ \t]*"if"      => TKN_PP_IF;
 7059              		.loc 15 32 0
 7060 329d E9950600 		jmp	.L690
 7060      00
 7061              	.LVL850:
 7062              	.L300:
7832:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7063              		.loc 1 7832 0
 7064 32a2 FF4328   		incl	40(%ebx)
 7065 32a5 EB00     		jmp	.L715
 7066              	.L686:
 7067              	.L715:
 100:in/quex/c.qx  ****     {P_QUOTED_CHAR} => TKN_QUOTED_CHAR;
 7068              		.loc 15 100 0
 7069 32a7 8B4304   		movl	4(%ebx), %eax
 7070              	.LVL851:
 7071 32aa C7400C3F 		movl	$63, 12(%eax)
 7071      000000
 7072 32b1 B83F0000 		movl	$63, %eax
 7072      00
 7073              	.LVL852:
 101:in/quex/c.qx  **** 
 7074              		.loc 15 101 0
 7075 32b6 E97C0600 		jmp	.L690
 7075      00
 7076              	.LVL853:
 7077              	.L434:
 7078              	.L716:
  83:in/quex/c.qx  ****     struct        => TKN_STRUCT;
 7079              		.loc 15 83 0
 7080 32bb 8B4304   		movl	4(%ebx), %eax
 7081              	.LVL854:
 7082 32be C7400C42 		movl	$66, 12(%eax)
 7082      000000
 7083 32c5 B8420000 		movl	$66, %eax
 7083      00
 7084              	.LVL855:
  84:in/quex/c.qx  ****     const         => TKN_CONST;
 7085              		.loc 15 84 0
 7086 32ca E9680600 		jmp	.L690
 7086      00
 7087              	.LVL856:
 7088              	.L420:
 7089              	.L717:
  87:in/quex/c.qx  ****     switch        => TKN_SWITCH;
 7090              		.loc 15 87 0
 7091 32cf 8B4304   		movl	4(%ebx), %eax
 7092              	.LVL857:
 7093 32d2 C7400C43 		movl	$67, 12(%eax)
 7093      000000
 7094 32d9 B8430000 		movl	$67, %eax
 7094      00
 7095              	.LVL858:
  88:in/quex/c.qx  ****     for           => TKN_FOR;
 7096              		.loc 15 88 0
GAS LISTING /tmp/cc23nfB3.s 			page 405


 7097 32de E9540600 		jmp	.L690
 7097      00
 7098              	.LVL859:
 7099              	.L605:
 7100              	.L718:
  45:in/quex/c.qx  ****     long      => TKN_TYPE_LONG;
 7101              		.loc 15 45 0
 7102 32e3 8B4304   		movl	4(%ebx), %eax
 7103              	.LVL860:
 7104 32e6 C7400C49 		movl	$73, 12(%eax)
 7104      000000
 7105 32ed B8490000 		movl	$73, %eax
 7105      00
 7106              	.LVL861:
  46:in/quex/c.qx  ****     float     => TKN_TYPE_FLOAT;
 7107              		.loc 15 46 0
 7108 32f2 E9400600 		jmp	.L690
 7108      00
 7109              	.LVL862:
 7110              	.L471:
  32:in/quex/c.qx  ****     "#"[ \t]*"if"      => TKN_PP_IF;
 7111              		.loc 15 32 0
 7112 32f7 8B4304   		movl	4(%ebx), %eax
 7113              	.LVL863:
 7114 32fa C7400C38 		movl	$56, 12(%eax)
 7114      000000
 7115 3301 B8380000 		movl	$56, %eax
 7115      00
 7116              	.LVL864:
  33:in/quex/c.qx  ****     "#"[ \t]*"elif"    => TKN_PP_ELIF;
 7117              		.loc 15 33 0
 7118 3306 E92C0600 		jmp	.L690
 7118      00
 7119              	.LVL865:
 7120              	.L963:
 7121              	.L460:
 7122              	.L719:
  33:in/quex/c.qx  ****     "#"[ \t]*"elif"    => TKN_PP_ELIF;
 7123              		.loc 15 33 0
 7124 330b 8B4304   		movl	4(%ebx), %eax
 7125              	.LVL866:
7952:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7126              		.loc 1 7952 0
 7127 330e 83C202   		addl	$2, %edx
 7128 3311 895328   		movl	%edx, 40(%ebx)
  33:in/quex/c.qx  ****     "#"[ \t]*"elif"    => TKN_PP_ELIF;
 7129              		.loc 15 33 0
 7130 3314 C7400C34 		movl	$52, 12(%eax)
 7130      000000
 7131 331b B8340000 		movl	$52, %eax
 7131      00
 7132              	.LVL867:
  34:in/quex/c.qx  ****     "#"[ \t]*"ifdef"   => TKN_PP_IFDEF;
 7133              		.loc 15 34 0
 7134 3320 E9120600 		jmp	.L690
 7134      00
 7135              	.LVL868:
GAS LISTING /tmp/cc23nfB3.s 			page 406


 7136              	.L548:
 7137              	.L720:
  84:in/quex/c.qx  ****     const         => TKN_CONST;
 7138              		.loc 15 84 0
 7139 3325 8B4304   		movl	4(%ebx), %eax
 7140              	.LVL869:
 7141 3328 C7400C12 		movl	$18, 12(%eax)
 7141      000000
 7142 332f B8120000 		movl	$18, %eax
 7142      00
 7143              	.LVL870:
  85:in/quex/c.qx  ****     if            => TKN_IF;
 7144              		.loc 15 85 0
 7145 3334 E9FE0500 		jmp	.L690
 7145      00
 7146              	.LVL871:
 7147              	.L661:
 7148              	.L721:
  46:in/quex/c.qx  ****     float     => TKN_TYPE_FLOAT;
 7149              		.loc 15 46 0
 7150 3339 8B4304   		movl	4(%ebx), %eax
 7151              	.LVL872:
 7152 333c C7400C47 		movl	$71, 12(%eax)
 7152      000000
 7153 3343 B8470000 		movl	$71, %eax
 7153      00
 7154              	.LVL873:
  47:in/quex/c.qx  ****     double    => TKN_TYPE_DOUBLE;
 7155              		.loc 15 47 0
 7156 3348 E9EA0500 		jmp	.L690
 7156      00
 7157              	.LVL874:
 7158              	.L642:
 7159              	.L722:
  85:in/quex/c.qx  ****     if            => TKN_IF;
 7160              		.loc 15 85 0
 7161 334d 8B4304   		movl	4(%ebx), %eax
 7162              	.LVL875:
 7163 3350 C7400C25 		movl	$37, 12(%eax)
 7163      000000
 7164 3357 B8250000 		movl	$37, %eax
 7164      00
 7165              	.LVL876:
  86:in/quex/c.qx  ****     else          => TKN_ELSE;
 7166              		.loc 15 86 0
 7167 335c E9D60500 		jmp	.L690
 7167      00
 7168              	.LVL877:
 7169              	.L967:
 7170              	.L495:
 7171              	.L723:
  34:in/quex/c.qx  ****     "#"[ \t]*"ifdef"   => TKN_PP_IFDEF;
 7172              		.loc 15 34 0
 7173 3361 8B4304   		movl	4(%ebx), %eax
 7174              	.LVL878:
8048:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7175              		.loc 1 8048 0
GAS LISTING /tmp/cc23nfB3.s 			page 407


 7176 3364 83C202   		addl	$2, %edx
 7177 3367 895328   		movl	%edx, 40(%ebx)
  34:in/quex/c.qx  ****     "#"[ \t]*"ifdef"   => TKN_PP_IFDEF;
 7178              		.loc 15 34 0
 7179 336a C7400C39 		movl	$57, 12(%eax)
 7179      000000
 7180 3371 B8390000 		movl	$57, %eax
 7180      00
 7181              	.LVL879:
  35:in/quex/c.qx  ****     "#"[ \t]*"ifndef"  => TKN_PP_IFNDEF;
 7182              		.loc 15 35 0
 7183 3376 E9BC0500 		jmp	.L690
 7183      00
 7184              	.LVL880:
 7185              	.L398:
 7186              	.L724:
  86:in/quex/c.qx  ****     else          => TKN_ELSE;
 7187              		.loc 15 86 0
 7188 337b 8B4304   		movl	4(%ebx), %eax
 7189              	.LVL881:
 7190 337e C7400C1D 		movl	$29, 12(%eax)
 7190      000000
 7191 3385 B81D0000 		movl	$29, %eax
 7191      00
 7192              	.LVL882:
  87:in/quex/c.qx  ****     switch        => TKN_SWITCH;
 7193              		.loc 15 87 0
 7194 338a E9A80500 		jmp	.L690
 7194      00
 7195              	.LVL883:
 7196              	.L968:
 7197              	.L499:
 7198              	.L725:
  35:in/quex/c.qx  ****     "#"[ \t]*"ifndef"  => TKN_PP_IFNDEF;
 7199              		.loc 15 35 0
 7200 338f 8B4304   		movl	4(%ebx), %eax
 7201              	.LVL884:
8096:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7202              		.loc 1 8096 0
 7203 3392 83C202   		addl	$2, %edx
 7204 3395 895328   		movl	%edx, 40(%ebx)
  35:in/quex/c.qx  ****     "#"[ \t]*"ifndef"  => TKN_PP_IFNDEF;
 7205              		.loc 15 35 0
 7206 3398 C7400C3A 		movl	$58, 12(%eax)
 7206      000000
 7207 339f B83A0000 		movl	$58, %eax
 7207      00
 7208              	.LVL885:
  36:in/quex/c.qx  ****     "#"[ \t]*"endif"   => TKN_PP_ENDIF;
 7209              		.loc 15 36 0
 7210 33a4 E98E0500 		jmp	.L690
 7210      00
 7211              	.LVL886:
 7212              	.L577:
 7213              	.L726:
  47:in/quex/c.qx  ****     double    => TKN_TYPE_DOUBLE;
 7214              		.loc 15 47 0
GAS LISTING /tmp/cc23nfB3.s 			page 408


 7215 33a9 8B4304   		movl	4(%ebx), %eax
 7216              	.LVL887:
 7217 33ac C7400C46 		movl	$70, 12(%eax)
 7217      000000
 7218 33b3 B8460000 		movl	$70, %eax
 7218      00
 7219              	.LVL888:
  48:in/quex/c.qx  ****     char      => TKN_TYPE_CHAR;
 7220              		.loc 15 48 0
 7221 33b8 E97A0500 		jmp	.L690
 7221      00
 7222              	.LVL889:
 7223              	.L251:
8144:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7224              		.loc 1 8144 0
 7225 33bd FF4328   		incl	40(%ebx)
 7226              	.L608:
  99:in/quex/c.qx  ****     {P_STRING}      => TKN_STRING;
 7227              		.loc 15 99 0
 7228 33c0 8B4304   		movl	4(%ebx), %eax
 7229              	.LVL890:
 7230 33c3 C7400C41 		movl	$65, 12(%eax)
 7230      000000
 7231 33ca B8410000 		movl	$65, %eax
 7231      00
 7232              	.LVL891:
 100:in/quex/c.qx  ****     {P_QUOTED_CHAR} => TKN_QUOTED_CHAR;
 7233              		.loc 15 100 0
 7234 33cf E9630500 		jmp	.L690
 7234      00
 7235              	.LVL892:
 7236              	.L966:
 7237              	.L470:
 7238              	.L727:
  36:in/quex/c.qx  ****     "#"[ \t]*"endif"   => TKN_PP_ENDIF;
 7239              		.loc 15 36 0
 7240 33d4 8B4304   		movl	4(%ebx), %eax
 7241              	.LVL893:
8168:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7242              		.loc 1 8168 0
 7243 33d7 83C202   		addl	$2, %edx
 7244 33da 895328   		movl	%edx, 40(%ebx)
  36:in/quex/c.qx  ****     "#"[ \t]*"endif"   => TKN_PP_ENDIF;
 7245              		.loc 15 36 0
 7246 33dd C7400C36 		movl	$54, 12(%eax)
 7246      000000
 7247 33e4 B8360000 		movl	$54, %eax
 7247      00
 7248              	.LVL894:
  37:in/quex/c.qx  ****     "#"[ \t]*"else"    => TKN_PP_ELSE;
 7249              		.loc 15 37 0
 7250 33e9 E9490500 		jmp	.L690
 7250      00
 7251              	.LVL895:
 7252              	.L554:
 7253              	.L728:
  48:in/quex/c.qx  ****     char      => TKN_TYPE_CHAR;
GAS LISTING /tmp/cc23nfB3.s 			page 409


 7254              		.loc 15 48 0
 7255 33ee 8B4304   		movl	4(%ebx), %eax
 7256              	.LVL896:
 7257 33f1 C7400C45 		movl	$69, 12(%eax)
 7257      000000
 7258 33f8 B8450000 		movl	$69, %eax
 7258      00
 7259              	.LVL897:
  49:in/quex/c.qx  **** 
 7260              		.loc 15 49 0
 7261 33fd E9350500 		jmp	.L690
 7261      00
 7262              	.LVL898:
 7263              	.L960:
 7264              	.L389:
 7265              	.L729:
  70:in/quex/c.qx  ****     "=="          => TKN_EQ;
 7266              		.loc 15 70 0
 7267 3402 8B4304   		movl	4(%ebx), %eax
 7268              	.LVL899:
8216:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7269              		.loc 1 8216 0
 7270 3405 83C202   		addl	$2, %edx
 7271 3408 895328   		movl	%edx, 40(%ebx)
  70:in/quex/c.qx  ****     "=="          => TKN_EQ;
 7272              		.loc 15 70 0
 7273 340b C7400C1E 		movl	$30, 12(%eax)
 7273      000000
 7274 3412 B81E0000 		movl	$30, %eax
 7274      00
 7275              	.LVL900:
  71:in/quex/c.qx  ****     "!="          => TKN_NOT_EQ;
 7276              		.loc 15 71 0
 7277 3417 E91B0500 		jmp	.L690
 7277      00
 7278              	.LVL901:
 7279              	.L260:
  50:in/quex/c.qx  ****     "#"           => TKN_HASH;
 7280              		.loc 15 50 0
 7281 341c 8B4304   		movl	4(%ebx), %eax
 7282              	.LVL902:
 7283 341f C7400C23 		movl	$35, 12(%eax)
 7283      000000
 7284 3426 B8230000 		movl	$35, %eax
 7284      00
 7285              	.LVL903:
  51:in/quex/c.qx  ****     "##"          => TKN_DOUBLE_HASH;
 7286              		.loc 15 51 0
 7287 342b E9070500 		jmp	.L690
 7287      00
 7288              	.LVL904:
 7289              	.L373:
 7290              	.L730:
  51:in/quex/c.qx  ****     "##"          => TKN_DOUBLE_HASH;
 7291              		.loc 15 51 0
 7292 3430 8B4304   		movl	4(%ebx), %eax
 7293              	.LVL905:
GAS LISTING /tmp/cc23nfB3.s 			page 410


8264:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7294              		.loc 1 8264 0
 7295 3433 83C102   		addl	$2, %ecx
 7296 3436 894B28   		movl	%ecx, 40(%ebx)
  51:in/quex/c.qx  ****     "##"          => TKN_DOUBLE_HASH;
 7297              		.loc 15 51 0
 7298 3439 C7400C1C 		movl	$28, 12(%eax)
 7298      000000
 7299 3440 B81C0000 		movl	$28, %eax
 7299      00
 7300              	.LVL906:
  52:in/quex/c.qx  ****     "?"           => TKN_QUESTION_MARK;
 7301              		.loc 15 52 0
 7302 3445 E9ED0400 		jmp	.L690
 7302      00
 7303              	.LVL907:
 7304              	.L224:
 7305              	.L731:
8288:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7306              		.loc 1 8288 0
 7307 344a 40       		incl	%eax
 7308 344b 894328   		movl	%eax, 40(%ebx)
  52:in/quex/c.qx  ****     "?"           => TKN_QUESTION_MARK;
 7309              		.loc 15 52 0
 7310 344e 8B4304   		movl	4(%ebx), %eax
 7311 3451 C7400C3D 		movl	$61, 12(%eax)
 7311      000000
 7312 3458 B83D0000 		movl	$61, %eax
 7312      00
 7313              	.LVL908:
  53:in/quex/c.qx  ****     "~"           => TKN_TILDE;
 7314              		.loc 15 53 0
 7315 345d E9D50400 		jmp	.L690
 7315      00
 7316              	.LVL909:
 7317              	.L243:
 7318              	.L732:
8312:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7319              		.loc 1 8312 0
 7320 3462 40       		incl	%eax
 7321 3463 894328   		movl	%eax, 40(%ebx)
  53:in/quex/c.qx  ****     "~"           => TKN_TILDE;
 7322              		.loc 15 53 0
 7323 3466 8B4304   		movl	4(%ebx), %eax
 7324 3469 C7400C44 		movl	$68, 12(%eax)
 7324      000000
 7325 3470 B8440000 		movl	$68, %eax
 7325      00
 7326              	.LVL910:
  54:in/quex/c.qx  ****     "("           => TKN_BRACKET_O;
 7327              		.loc 15 54 0
 7328 3475 E9BD0400 		jmp	.L690
 7328      00
 7329              	.LVL911:
 7330              	.L663:
 7331              	.L733:
  88:in/quex/c.qx  ****     for           => TKN_FOR;
GAS LISTING /tmp/cc23nfB3.s 			page 411


 7332              		.loc 15 88 0
 7333 347a 8B4304   		movl	4(%ebx), %eax
 7334              	.LVL912:
 7335 347d C7400C20 		movl	$32, 12(%eax)
 7335      000000
 7336 3484 B8200000 		movl	$32, %eax
 7336      00
 7337              	.LVL913:
  89:in/quex/c.qx  ****     do            => TKN_DO;
 7338              		.loc 15 89 0
 7339 3489 E9A90400 		jmp	.L690
 7339      00
 7340              	.LVL914:
 7341              	.L211:
 7342              	.L734:
8360:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7343              		.loc 1 8360 0
 7344 348e 40       		incl	%eax
 7345 348f 894328   		movl	%eax, 40(%ebx)
  55:in/quex/c.qx  ****     ")"           => TKN_BRACKET_C;
 7346              		.loc 15 55 0
 7347 3492 8B4304   		movl	4(%ebx), %eax
 7348 3495 C7400C0A 		movl	$10, 12(%eax)
 7348      000000
 7349 349c B80A0000 		movl	$10, %eax
 7349      00
 7350              	.LVL915:
  56:in/quex/c.qx  ****     "["           => TKN_CORNER_BRACKET_O;
 7351              		.loc 15 56 0
 7352 34a1 E9910400 		jmp	.L690
 7352      00
 7353              	.LVL916:
 7354              	.L961:
 7355              	.L443:
 7356              	.L735:
  38:in/quex/c.qx  ****     "#"[ \t]*"pragma"  => TKN_PP_PRAGMA;
 7357              		.loc 15 38 0
 7358 34a6 8B4304   		movl	4(%ebx), %eax
 7359              	.LVL917:
8384:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7360              		.loc 1 8384 0
 7361 34a9 83C202   		addl	$2, %edx
 7362 34ac 895328   		movl	%edx, 40(%ebx)
  38:in/quex/c.qx  ****     "#"[ \t]*"pragma"  => TKN_PP_PRAGMA;
 7363              		.loc 15 38 0
 7364 34af C7400C3C 		movl	$60, 12(%eax)
 7364      000000
 7365 34b6 B83C0000 		movl	$60, %eax
 7365      00
 7366              	.LVL918:
  39:in/quex/c.qx  ****     "#"[ \t]*"error"   => TKN_PP_ERROR;
 7367              		.loc 15 39 0
 7368 34bb E9770400 		jmp	.L690
 7368      00
 7369              	.LVL919:
 7370              	.L226:
 7371              	.L736:
GAS LISTING /tmp/cc23nfB3.s 			page 412


8408:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7372              		.loc 1 8408 0
 7373 34c0 40       		incl	%eax
 7374 34c1 894328   		movl	%eax, 40(%ebx)
  56:in/quex/c.qx  ****     "["           => TKN_CORNER_BRACKET_O;
 7375              		.loc 15 56 0
 7376 34c4 8B4304   		movl	4(%ebx), %eax
 7377 34c7 C7400C15 		movl	$21, 12(%eax)
 7377      000000
 7378 34ce B8150000 		movl	$21, %eax
 7378      00
 7379              	.LVL920:
  57:in/quex/c.qx  ****     "]"           => TKN_CORNER_BRACKET_C;
 7380              		.loc 15 57 0
 7381 34d3 E95F0400 		jmp	.L690
 7381      00
 7382              	.LVL921:
 7383              	.L560:
 7384              	.L737:
  89:in/quex/c.qx  ****     do            => TKN_DO;
 7385              		.loc 15 89 0
 7386 34d8 8B4304   		movl	4(%ebx), %eax
 7387              	.LVL922:
 7388 34db C7400C19 		movl	$25, 12(%eax)
 7388      000000
 7389 34e2 B8190000 		movl	$25, %eax
 7389      00
 7390              	.LVL923:
  90:in/quex/c.qx  ****     while         => TKN_WHILE;
 7391              		.loc 15 90 0
 7392 34e7 E94B0400 		jmp	.L690
 7392      00
 7393              	.LVL924:
 7394              	.L228:
 7395              	.L738:
8456:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7396              		.loc 1 8456 0
 7397 34ec 40       		incl	%eax
 7398 34ed 894328   		movl	%eax, 40(%ebx)
  57:in/quex/c.qx  ****     "]"           => TKN_CORNER_BRACKET_C;
 7399              		.loc 15 57 0
 7400 34f0 8B4304   		movl	4(%ebx), %eax
 7401 34f3 C7400C14 		movl	$20, 12(%eax)
 7401      000000
 7402 34fa B8140000 		movl	$20, %eax
 7402      00
 7403              	.LVL925:
  58:in/quex/c.qx  ****     "{"           => TKN_CURLY_BRACKET_O;
 7404              		.loc 15 58 0
 7405 34ff E9330400 		jmp	.L690
 7405      00
 7406              	.LVL926:
 7407              	.L210:
 7408              	.L739:
8480:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7409              		.loc 1 8480 0
 7410 3504 40       		incl	%eax
GAS LISTING /tmp/cc23nfB3.s 			page 413


 7411 3505 894328   		movl	%eax, 40(%ebx)
  54:in/quex/c.qx  ****     "("           => TKN_BRACKET_O;
 7412              		.loc 15 54 0
 7413 3508 8B4304   		movl	4(%ebx), %eax
 7414 350b C7400C0B 		movl	$11, 12(%eax)
 7414      000000
 7415 3512 B80B0000 		movl	$11, %eax
 7415      00
 7416              	.LVL927:
  55:in/quex/c.qx  ****     ")"           => TKN_BRACKET_C;
 7417              		.loc 15 55 0
 7418 3517 E91B0400 		jmp	.L690
 7418      00
 7419              	.LVL928:
 7420              	.L240:
 7421              	.L740:
8504:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7422              		.loc 1 8504 0
 7423 351c 40       		incl	%eax
 7424 351d 894328   		movl	%eax, 40(%ebx)
  58:in/quex/c.qx  ****     "{"           => TKN_CURLY_BRACKET_O;
 7425              		.loc 15 58 0
 7426 3520 8B4304   		movl	4(%ebx), %eax
 7427 3523 C7400C17 		movl	$23, 12(%eax)
 7427      000000
 7428 352a B8170000 		movl	$23, %eax
 7428      00
 7429              	.LVL929:
  59:in/quex/c.qx  ****     "}"           => TKN_CURLY_BRACKET_C;
 7430              		.loc 15 59 0
 7431 352f E9030400 		jmp	.L690
 7431      00
 7432              	.LVL930:
 7433              	.L242:
 7434              	.L741:
8528:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7435              		.loc 1 8528 0
 7436 3534 40       		incl	%eax
 7437 3535 894328   		movl	%eax, 40(%ebx)
  59:in/quex/c.qx  ****     "}"           => TKN_CURLY_BRACKET_C;
 7438              		.loc 15 59 0
 7439 3538 8B4304   		movl	4(%ebx), %eax
 7440 353b C7400C16 		movl	$22, 12(%eax)
 7440      000000
 7441 3542 B8160000 		movl	$22, %eax
 7441      00
 7442              	.LVL931:
  60:in/quex/c.qx  ****     "="           => TKN_OP_ASSIGNMENT;
 7443              		.loc 15 60 0
 7444 3547 E9EB0300 		jmp	.L690
 7444      00
 7445              	.LVL932:
 7446              	.L965:
 7447              	.L466:
 7448              	.L742:
  39:in/quex/c.qx  ****     "#"[ \t]*"error"   => TKN_PP_ERROR;
 7449              		.loc 15 39 0
GAS LISTING /tmp/cc23nfB3.s 			page 414


 7450 354c 8B4304   		movl	4(%ebx), %eax
 7451              	.LVL933:
8552:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7452              		.loc 1 8552 0
 7453 354f 83C202   		addl	$2, %edx
 7454 3552 895328   		movl	%edx, 40(%ebx)
  39:in/quex/c.qx  ****     "#"[ \t]*"error"   => TKN_PP_ERROR;
 7455              		.loc 15 39 0
 7456 3555 C7400C37 		movl	$55, 12(%eax)
 7456      000000
 7457 355c B8370000 		movl	$55, %eax
 7457      00
 7458              	.LVL934:
  40:in/quex/c.qx  ****     defined            => TKN_PP_DEFINED;
 7459              		.loc 15 40 0
 7460 3561 E9D10300 		jmp	.L690
 7460      00
 7461              	.LVL935:
 7462              	.L352:
 7463              	.L743:
  61:in/quex/c.qx  ****     "+"           => TKN_PLUS;
 7464              		.loc 15 61 0
 7465 3566 8B4304   		movl	4(%ebx), %eax
 7466              	.LVL936:
 7467 3569 C7400C31 		movl	$49, 12(%eax)
 7467      000000
 7468 3570 B8310000 		movl	$49, %eax
 7468      00
 7469              	.LVL937:
  62:in/quex/c.qx  ****     "-"           => TKN_MINUS;
 7470              		.loc 15 62 0
 7471 3575 E9BD0300 		jmp	.L690
 7471      00
 7472              	.LVL938:
 7473              	.L312:
 7474              	.L744:
  62:in/quex/c.qx  ****     "-"           => TKN_MINUS;
 7475              		.loc 15 62 0
 7476 357a 8B4304   		movl	4(%ebx), %eax
 7477              	.LVL939:
 7478 357d C7400C29 		movl	$41, 12(%eax)
 7478      000000
 7479 3584 B8290000 		movl	$41, %eax
 7479      00
 7480              	.LVL940:
  63:in/quex/c.qx  ****     "*"           => TKN_MULT;
 7481              		.loc 15 63 0
 7482 3589 E9A90300 		jmp	.L690
 7482      00
 7483              	.LVL941:
 7484              	.L354:
 7485              	.L745:
  63:in/quex/c.qx  ****     "*"           => TKN_MULT;
 7486              		.loc 15 63 0
 7487 358e 8B4304   		movl	4(%ebx), %eax
 7488              	.LVL942:
 7489 3591 C7400C2B 		movl	$43, 12(%eax)
GAS LISTING /tmp/cc23nfB3.s 			page 415


 7489      000000
 7490 3598 B82B0000 		movl	$43, %eax
 7490      00
 7491              	.LVL943:
  64:in/quex/c.qx  ****     "/"           => TKN_DIV;
 7492              		.loc 15 64 0
 7493 359d E9950300 		jmp	.L690
 7493      00
 7494              	.LVL944:
 7495              	.L512:
 7496              	.L746:
  90:in/quex/c.qx  ****     while         => TKN_WHILE;
 7497              		.loc 15 90 0
 7498 35a2 8B4304   		movl	4(%ebx), %eax
 7499              	.LVL945:
 7500 35a5 C7400C4B 		movl	$75, 12(%eax)
 7500      000000
 7501 35ac B84B0000 		movl	$75, %eax
 7501      00
 7502              	.LVL946:
  91:in/quex/c.qx  ****     break         => TKN_BREAK;
 7503              		.loc 15 91 0
 7504 35b1 E9810300 		jmp	.L690
 7504      00
 7505              	.LVL947:
 7506              	.L331:
 7507              	.L747:
  64:in/quex/c.qx  ****     "/"           => TKN_DIV;
 7508              		.loc 15 64 0
 7509 35b6 8B4304   		movl	4(%ebx), %eax
 7510              	.LVL948:
 7511 35b9 C7400C18 		movl	$24, 12(%eax)
 7511      000000
 7512 35c0 B8180000 		movl	$24, %eax
 7512      00
 7513              	.LVL949:
  65:in/quex/c.qx  ****     "%"           => TKN_MODULO;
 7514              		.loc 15 65 0
 7515 35c5 E96D0300 		jmp	.L690
 7515      00
 7516              	.LVL950:
 7517              	.L207:
 7518              	.L748:
8696:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7519              		.loc 1 8696 0
 7520 35ca 40       		incl	%eax
 7521 35cb 894328   		movl	%eax, 40(%ebx)
  65:in/quex/c.qx  ****     "%"           => TKN_MODULO;
 7522              		.loc 15 65 0
 7523 35ce 8B4304   		movl	4(%ebx), %eax
 7524 35d1 C7400C2A 		movl	$42, 12(%eax)
 7524      000000
 7525 35d8 B82A0000 		movl	$42, %eax
 7525      00
 7526              	.LVL951:
  66:in/quex/c.qx  ****     "+="          => TKN_ASSIGN_PLUS;
 7527              		.loc 15 66 0
GAS LISTING /tmp/cc23nfB3.s 			page 416


 7528 35dd E9550300 		jmp	.L690
 7528      00
 7529              	.LVL952:
 7530              	.L203:
8720:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7531              		.loc 1 8720 0
 7532 35e2 40       		incl	%eax
 7533 35e3 894328   		movl	%eax, 40(%ebx)
 7534              	.L834:
8747:out/quex_scan.cpp ****         input = *(me->buffer._input_p); 
 7535              		.loc 1 8747 0
 7536 35e6 8B5328   		movl	40(%ebx), %edx
8757:out/quex_scan.cpp ****         switch( input ) {
 7537              		.loc 1 8757 0
 7538 35e9 8A02     		movb	(%edx), %al
 7539 35eb 3C0A     		cmpb	$10, %al
 7540 35ed 770D     		ja	.L751
 7541 35ef 3C09     		cmpb	$9, %al
 7542 35f1 7315     		jae	.L750
 7543 35f3 84C0     		testb	%al, %al
 7544 35f5 7417     		je	.L749
 7545 35f7 E9BACDFF 		jmp	.L833
 7545      FF
 7546              	.L751:
 7547 35fc 3C0D     		cmpb	$13, %al
 7548 35fe 7408     		je	.L750
 7549 3600 3C20     		cmpb	$32, %al
 7550 3602 0F85AECD 		jne	.L833
 7550      FFFF
 7551              	.L750:
8777:out/quex_scan.cpp ****         ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
 7552              		.loc 1 8777 0
 7553 3608 42       		incl	%edx
 7554 3609 895328   		movl	%edx, 40(%ebx)
8778:out/quex_scan.cpp ****         goto STATE_1788_LOOP;
 7555              		.loc 1 8778 0
 7556 360c EBD8     		jmp	.L834
 7557              	.L749:
8791:out/quex_scan.cpp ****             if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) ) {
 7558              		.loc 1 8791 0
 7559 360e 3B5320   		cmpl	32(%ebx), %edx
8790:out/quex_scan.cpp ****             me->buffer._lexeme_start_p = me->buffer._input_p;
 7560              		.loc 1 8790 0
 7561 3611 89532C   		movl	%edx, 44(%ebx)
8791:out/quex_scan.cpp ****             if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) ) {
 7562              		.loc 1 8791 0
 7563 3614 0F844602 		je	.L753
 7563      0000
8795:out/quex_scan.cpp ****                                                        post_context_start_position, PostContextStar
 7564              		.loc 1 8795 0
 7565 361a 8B45C4   		movl	-60(%ebp), %eax
 7566 361d 8D55E0   		leal	-32(%ebp), %edx
 7567              	.LEHB19:
 7568 3620 E832CDFF 		call	T.340
 7568      FF
8798:out/quex_scan.cpp ****                 ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
 7569              		.loc 1 8798 0
GAS LISTING /tmp/cc23nfB3.s 			page 417


 7570 3625 FF4328   		incl	40(%ebx)
 7571 3628 EBBC     		jmp	.L834
 7572              	.LVL953:
 7573              	.L957:
 7574              	.L353:
 7575              	.L754:
  66:in/quex/c.qx  ****     "+="          => TKN_ASSIGN_PLUS;
 7576              		.loc 15 66 0
 7577 362a 8B4304   		movl	4(%ebx), %eax
 7578              	.LVL954:
8814:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7579              		.loc 1 8814 0
 7580 362d 83C202   		addl	$2, %edx
 7581 3630 895328   		movl	%edx, 40(%ebx)
  66:in/quex/c.qx  ****     "+="          => TKN_ASSIGN_PLUS;
 7582              		.loc 15 66 0
 7583 3633 C7400C08 		movl	$8, 12(%eax)
 7583      000000
 7584 363a B8080000 		movl	$8, %eax
 7584      00
 7585              	.LVL955:
  67:in/quex/c.qx  ****     "-="          => TKN_ASSIGN_MINUS;
 7586              		.loc 15 67 0
 7587 363f E9F30200 		jmp	.L690
 7587      00
 7588              	.LVL956:
 7589              	.L954:
 7590              	.L332:
 7591              	.L755:
8838:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7592              		.loc 1 8838 0
 7593 3644 83C202   		addl	$2, %edx
 7594 3647 895328   		movl	%edx, 40(%ebx)
 7595 364a EB59     		jmp	.L907
 7596              	.LVL957:
 7597              	.L969:
 7598              	.LBB443:
 7599              	.LBB430:
 7600              	.LBB431:
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 7601              		.loc 2 290 0
 7602 364c 8B431C   		movl	28(%ebx), %eax
 7603              	.LVL958:
 7604              	.L832:
 7605              	.LBE431:
 7606              	.LBE430:
8872:out/quex_scan.cpp ****         *text_end = Skipper1792[0]; /* Overwrite BufferLimitCode (BLC).  */
 7607              		.loc 1 8872 0
 7608 364f C6002A   		movb	$42, (%eax)
 7609              	.L758:
8875:out/quex_scan.cpp ****             input = *(me->buffer._input_p); 
 7610              		.loc 1 8875 0
 7611 3652 8B5328   		movl	40(%ebx), %edx
8876:out/quex_scan.cpp ****             if( input == Skipper1792[0] ) {
 7612              		.loc 1 8876 0
 7613 3655 803A2A   		cmpb	$42, (%edx)
 7614 3658 7406     		je	.L757
GAS LISTING /tmp/cc23nfB3.s 			page 418


8891:out/quex_scan.cpp ****             ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
 7615              		.loc 1 8891 0
 7616 365a 42       		incl	%edx
 7617 365b 895328   		movl	%edx, 40(%ebx)
8873:out/quex_scan.cpp ****         while( 1 + 1 == 2 ) {
 7618              		.loc 1 8873 0
 7619 365e EBF2     		jmp	.L758
 7620              	.L757:
8894:out/quex_scan.cpp ****         *text_end = QUEX_SETTING_BUFFER_LIMIT_CODE; /* Reset BLC. */
 7621              		.loc 1 8894 0
 7622 3660 C60000   		movb	$0, (%eax)
 7623              	.LBB432:
 7624              	.LBB433:
 7625              	.LBB434:
 7626              	.LBB435:
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 7627              		.loc 2 289 0
 7628 3663 8B4B20   		movl	32(%ebx), %ecx
 7629 3666 85C9     		testl	%ecx, %ecx
 7630 3668 7503     		jne	.L759
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 7631              		.loc 2 290 0
 7632 366a 8B4B1C   		movl	28(%ebx), %ecx
 7633              	.L759:
 7634              	.LBE435:
 7635              	.LBE434:
 297:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return QUEX_NAME(Buffer_text_end)(me) - me->_input_p;
 7636              		.loc 2 297 0
 7637 366d 8B5328   		movl	40(%ebx), %edx
 7638              	.LBE433:
 7639              	.LBE432:
8923:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_distance_input_to_text_end)(&me->buffer) < (ptrdiff_t)Skipper1792L ) {
 7640              		.loc 1 8923 0
 7641 3670 29D1     		subl	%edx, %ecx
 7642 3672 49       		decl	%ecx
 7643 3673 7E14     		jle	.L760
8930:out/quex_scan.cpp ****         ++(me->buffer._input_p);
 7644              		.loc 1 8930 0
 7645 3675 8D4A01   		leal	1(%edx), %ecx
 7646 3678 894B28   		movl	%ecx, 40(%ebx)
8937:out/quex_scan.cpp ****         if( input != Skipper1792[1] ) {
 7647              		.loc 1 8937 0
 7648 367b 807A012F 		cmpb	$47, 1(%edx)
 7649 367f 75CE     		jne	.L832
 7650              	.LBB436:
 7651              	.LBB437:
 169:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         buffer->_input_p += Offset; 
 7652              		.loc 2 169 0
 7653 3681 83C202   		addl	$2, %edx
 7654 3684 E9D60000 		jmp	.L872
 7654      00
 7655              	.L760:
 7656              	.LBE437:
 7657              	.LBE436:
8968:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
 7658              		.loc 1 8968 0
 7659 3689 3B4320   		cmpl	32(%ebx), %eax
GAS LISTING /tmp/cc23nfB3.s 			page 419


8959:out/quex_scan.cpp ****         me->buffer._lexeme_start_p = me->buffer._input_p;
 7660              		.loc 1 8959 0
 7661 368c 89532C   		movl	%edx, 44(%ebx)
8967:out/quex_scan.cpp ****         me->buffer._input_p = text_end;
 7662              		.loc 1 8967 0
 7663 368f 894328   		movl	%eax, 40(%ebx)
8968:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
 7664              		.loc 1 8968 0
 7665 3692 741A     		je	.L761
8970:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
 7666              		.loc 1 8970 0
 7667 3694 8B45C4   		movl	-60(%ebp), %eax
 7668              	.LVL959:
 7669 3697 8D55E0   		leal	-32(%ebp), %edx
 7670 369a E8B8CCFF 		call	T.340
 7670      FF
 7671              	.LEHE19:
8973:out/quex_scan.cpp ****             me->buffer._input_p = me->buffer._lexeme_start_p;
 7672              		.loc 1 8973 0
 7673 369f 8B432C   		movl	44(%ebx), %eax
 7674 36a2 894328   		movl	%eax, 40(%ebx)
 7675              	.LVL960:
 7676              	.L907:
 7677              	.LBB438:
 7678              	.LBB439:
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 7679              		.loc 2 289 0
 7680 36a5 8B4320   		movl	32(%ebx), %eax
 7681              	.LVL961:
 7682 36a8 85C0     		testl	%eax, %eax
 7683 36aa 75A3     		jne	.L832
 7684 36ac EB9E     		jmp	.L969
 7685              	.L761:
 7686              	.LBE439:
 7687              	.LBE438:
8983:out/quex_scan.cpp ****         me->buffer._input_p = me->buffer._lexeme_start_p;
 7688              		.loc 1 8983 0
 7689 36ae 895328   		movl	%edx, 40(%ebx)
8984:out/quex_scan.cpp ****         QUEX_ERROR_EXIT("\nLexical analyzer mode 'PROGRAM':\n"
 7690              		.loc 1 8984 0
 7691 36b1 8D45E7   		leal	-25(%ebp), %eax
 7692              	.LVL962:
 7693              	.LVL963:
 7694 36b4 57       		pushl	%edi
 7695 36b5 50       		pushl	%eax
 7696 36b6 68ED0300 		pushl	$.LC4
 7696      00
 7697 36bb 8D45DC   		leal	-36(%ebp), %eax
 7698 36be 50       		pushl	%eax
 7699              	.LEHB20:
 7700              		.cfi_escape 0x2e,0x10
 7701 36bf E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 7701      FF
 7702              	.LEHE20:
 7703 36c4 C7042408 		movl	$8, (%esp)
 7703      000000
 7704 36cb E8FCFFFF 		call	__cxa_allocate_exception
GAS LISTING /tmp/cc23nfB3.s 			page 420


 7704      FF
 7705 36d0 5B       		popl	%ebx
 7706              	.LVL964:
 7707 36d1 5E       		popl	%esi
 7708              	.LVL965:
 7709 36d2 8D75DC   		leal	-36(%ebp), %esi
 7710 36d5 56       		pushl	%esi
 7711 36d6 50       		pushl	%eax
 7712 36d7 89C7     		movl	%eax, %edi
 7713              	.LEHB21:
 7714 36d9 E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 7714      FF
 7715              	.LEHE21:
 7716 36de 893424   		movl	%esi, (%esp)
 7717              	.LEHB22:
 7718 36e1 E8FCFFFF 		call	_ZNSsD1Ev
 7718      FF
 7719              	.LEHE22:
 7720 36e6 E9E60100 		jmp	.L837
 7720      00
 7721              	.L821:
 7722              	.L763:
 7723              	.L822:
 7724              	.L764:
 7725 36eb 83EC0C   		subl	$12, %esp
 7726 36ee 89C3     		movl	%eax, %ebx
 7727 36f0 57       		pushl	%edi
 7728 36f1 E8FCFFFF 		call	__cxa_free_exception
 7728      FF
 7729 36f6 893424   		movl	%esi, (%esp)
 7730              	.LEHB23:
 7731 36f9 E8FCFFFF 		call	_ZNSsD1Ev
 7731      FF
 7732              	.LEHE23:
 7733 36fe E9C70100 		jmp	.L925
 7733      00
 7734              	.L820:
 7735 3703 E9DC0100 		jmp	.L920
 7735      00
 7736              	.L766:
 7737              	.L819:
 7738 3708 E9D70100 		jmp	.L920
 7738      00
 7739              	.L768:
 7740              	.LVL966:
 7741              	.L823:
 7742 370d E9DC0100 		jmp	.L926
 7742      00
 7743              	.L769:
 7744              	.LVL967:
 7745              	.L952:
 7746              	.L313:
 7747              	.L770:
 7748              	.LBE443:
  67:in/quex/c.qx  ****     "-="          => TKN_ASSIGN_MINUS;
 7749              		.loc 15 67 0
 7750 3712 8B4304   		movl	4(%ebx), %eax
GAS LISTING /tmp/cc23nfB3.s 			page 421


 7751              	.LVL968:
8994:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7752              		.loc 1 8994 0
 7753 3715 83C202   		addl	$2, %edx
 7754 3718 895328   		movl	%edx, 40(%ebx)
  67:in/quex/c.qx  ****     "-="          => TKN_ASSIGN_MINUS;
 7755              		.loc 15 67 0
 7756 371b C7400C06 		movl	$6, 12(%eax)
 7756      000000
 7757 3722 B8060000 		movl	$6, %eax
 7757      00
 7758              	.LVL969:
  68:in/quex/c.qx  ****     "*="          => TKN_ASSIGN_MULT;
 7759              		.loc 15 68 0
 7760 3727 E90B0200 		jmp	.L690
 7760      00
 7761              	.LVL970:
 7762              	.L333:
 7763              	.L771:
9018:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7764              		.loc 1 9018 0
 7765 372c 83C202   		addl	$2, %edx
 7766 372f 895328   		movl	%edx, 40(%ebx)
 7767 3732 EB4F     		jmp	.L909
 7768              	.LVL971:
 7769              	.L970:
 7770              	.LBB444:
 7771              	.LBB445:
 7772              	.LBB446:
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 7773              		.loc 2 290 0
 7774 3734 8B431C   		movl	28(%ebx), %eax
 7775              	.LVL972:
 7776              	.L831:
 7777              	.LBE446:
 7778              	.LBE445:
9051:out/quex_scan.cpp ****         *text_end = Skipper1786[0]; /* Overwrite BufferLimitCode (BLC).  */
 7779              		.loc 1 9051 0
 7780 3737 C6000A   		movb	$10, (%eax)
 7781              	.L774:
9054:out/quex_scan.cpp ****             input = *(me->buffer._input_p); 
 7782              		.loc 1 9054 0
 7783 373a 8B5328   		movl	40(%ebx), %edx
9055:out/quex_scan.cpp ****             if( input == Skipper1786[0] ) {
 7784              		.loc 1 9055 0
 7785 373d 803A0A   		cmpb	$10, (%edx)
 7786 3740 7406     		je	.L773
9062:out/quex_scan.cpp ****             ++(me->buffer._input_p); /* Now, BLC cannot occur. See above. */
 7787              		.loc 1 9062 0
 7788 3742 42       		incl	%edx
 7789 3743 895328   		movl	%edx, 40(%ebx)
9052:out/quex_scan.cpp ****         while( 1 + 1 == 2 ) {
 7790              		.loc 1 9052 0
 7791 3746 EBF2     		jmp	.L774
 7792              	.L773:
9065:out/quex_scan.cpp ****         *text_end = QUEX_SETTING_BUFFER_LIMIT_CODE; /* Reset BLC. */
 7793              		.loc 1 9065 0
GAS LISTING /tmp/cc23nfB3.s 			page 422


 7794 3748 C60000   		movb	$0, (%eax)
 7795              	.LBB447:
 7796              	.LBB448:
 7797              	.LBB449:
 7798              	.LBB450:
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 7799              		.loc 2 289 0
 7800 374b 8B4B20   		movl	32(%ebx), %ecx
 7801 374e 85C9     		testl	%ecx, %ecx
 7802 3750 7503     		jne	.L775
 290:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         else                                  return me->_memory._back;   
 7803              		.loc 2 290 0
 7804 3752 8B4B1C   		movl	28(%ebx), %ecx
 7805              	.L775:
 7806              	.LBE450:
 7807              	.LBE449:
 297:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         return QUEX_NAME(Buffer_text_end)(me) - me->_input_p;
 7808              		.loc 2 297 0
 7809 3755 8B5328   		movl	40(%ebx), %edx
 7810              	.LBE448:
 7811              	.LBE447:
9094:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_distance_input_to_text_end)(&me->buffer) < (ptrdiff_t)Skipper1786L ) {
 7812              		.loc 1 9094 0
 7813 3758 29D1     		subl	%edx, %ecx
 7814 375a 85C9     		testl	%ecx, %ecx
 7815 375c 7E09     		jle	.L776
9101:out/quex_scan.cpp ****         ++(me->buffer._input_p);
 7816              		.loc 1 9101 0
 7817 375e 42       		incl	%edx
 7818              	.LVL973:
 7819              	.L872:
 7820 375f 895328   		movl	%edx, 40(%ebx)
 7821 3762 E94FCCFF 		jmp	.L833
 7821      FF
 7822              	.LVL974:
 7823              	.L776:
9132:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
 7824              		.loc 1 9132 0
 7825 3767 3B4320   		cmpl	32(%ebx), %eax
9125:out/quex_scan.cpp ****         me->buffer._lexeme_start_p = me->buffer._input_p;
 7826              		.loc 1 9125 0
 7827 376a 89532C   		movl	%edx, 44(%ebx)
9131:out/quex_scan.cpp ****         me->buffer._input_p = text_end;
 7828              		.loc 1 9131 0
 7829 376d 894328   		movl	%eax, 40(%ebx)
9132:out/quex_scan.cpp ****         if( QUEX_NAME(Buffer_is_end_of_file)(&me->buffer) == false ) {
 7830              		.loc 1 9132 0
 7831 3770 741A     		je	.L777
9134:out/quex_scan.cpp ****                                                    post_context_start_position, PostContextStartPos
 7832              		.loc 1 9134 0
 7833 3772 8B45C4   		movl	-60(%ebp), %eax
 7834              	.LVL975:
 7835 3775 8D55E0   		leal	-32(%ebp), %edx
 7836              	.LEHB24:
 7837              		.cfi_escape 0x2e,0x0
 7838 3778 E8DACBFF 		call	T.340
 7838      FF
GAS LISTING /tmp/cc23nfB3.s 			page 423


 7839              	.LEHE24:
9137:out/quex_scan.cpp ****             me->buffer._input_p = me->buffer._lexeme_start_p;
 7840              		.loc 1 9137 0
 7841 377d 8B432C   		movl	44(%ebx), %eax
 7842 3780 894328   		movl	%eax, 40(%ebx)
 7843              	.LVL976:
 7844              	.L909:
 7845              	.LBB451:
 7846              	.LBB452:
 289:/home/fschaef/prj/quex/trunk/quex/code_base/buffer/Buffer.i ****         if( me->_memory._end_of_file_p != 0 ) return me->_memory._end_of_file_p;
 7847              		.loc 2 289 0
 7848 3783 8B4320   		movl	32(%ebx), %eax
 7849              	.LVL977:
 7850 3786 85C0     		testl	%eax, %eax
 7851 3788 75AD     		jne	.L831
 7852 378a EBA8     		jmp	.L970
 7853              	.L777:
 7854              	.LBE452:
 7855              	.LBE451:
9146:out/quex_scan.cpp ****         me->buffer._input_p = me->buffer._lexeme_start_p;
 7856              		.loc 1 9146 0
 7857 378c 895328   		movl	%edx, 40(%ebx)
9147:out/quex_scan.cpp ****         QUEX_ERROR_EXIT("\nLexical analyzer mode 'PROGRAM':\n"
 7858              		.loc 1 9147 0
 7859 378f 8D45E6   		leal	-26(%ebp), %eax
 7860              	.LVL978:
 7861 3792 51       		pushl	%ecx
 7862 3793 50       		pushl	%eax
 7863 3794 68ED0300 		pushl	$.LC4
 7863      00
 7864 3799 8D45D8   		leal	-40(%ebp), %eax
 7865 379c 50       		pushl	%eax
 7866              	.LEHB25:
 7867              		.cfi_escape 0x2e,0x10
 7868 379d E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 7868      FF
 7869              	.LEHE25:
 7870 37a2 C7042408 		movl	$8, (%esp)
 7870      000000
 7871 37a9 8D75D8   		leal	-40(%ebp), %esi
 7872              	.LVL979:
 7873 37ac E8FCFFFF 		call	__cxa_allocate_exception
 7873      FF
 7874 37b1 89C7     		movl	%eax, %edi
 7875              	.LVL980:
 7876 37b3 58       		popl	%eax
 7877 37b4 5A       		popl	%edx
 7878 37b5 56       		pushl	%esi
 7879 37b6 57       		pushl	%edi
 7880              	.LEHB26:
 7881 37b7 E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 7881      FF
 7882              	.LEHE26:
 7883 37bc 893424   		movl	%esi, (%esp)
 7884              	.LEHB27:
 7885 37bf E8FCFFFF 		call	_ZNSsD1Ev
 7885      FF
GAS LISTING /tmp/cc23nfB3.s 			page 424


 7886              	.LEHE27:
 7887 37c4 E9080100 		jmp	.L837
 7887      00
 7888              	.L816:
 7889              	.L779:
 7890              	.L817:
 7891              	.L780:
 7892 37c9 83EC0C   		subl	$12, %esp
 7893 37cc 89C3     		movl	%eax, %ebx
 7894              	.LVL981:
 7895 37ce 57       		pushl	%edi
 7896 37cf E8FCFFFF 		call	__cxa_free_exception
 7896      FF
 7897 37d4 893424   		movl	%esi, (%esp)
 7898              	.LEHB28:
 7899 37d7 E8FCFFFF 		call	_ZNSsD1Ev
 7899      FF
 7900              	.LEHE28:
 7901 37dc E9E90000 		jmp	.L925
 7901      00
 7902              	.L815:
 7903 37e1 E9FE0000 		jmp	.L920
 7903      00
 7904              	.L782:
 7905              	.LVL982:
 7906              	.L814:
 7907 37e6 E9F90000 		jmp	.L920
 7907      00
 7908              	.L784:
 7909              	.LVL983:
 7910              	.L818:
 7911 37eb E9FE0000 		jmp	.L926
 7911      00
 7912              	.L785:
 7913              	.LVL984:
 7914              	.L958:
 7915              	.L355:
 7916              	.L786:
 7917              	.LBE444:
  68:in/quex/c.qx  ****     "*="          => TKN_ASSIGN_MULT;
 7918              		.loc 15 68 0
 7919 37f0 8B4304   		movl	4(%ebx), %eax
 7920              	.LVL985:
9157:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7921              		.loc 1 9157 0
 7922 37f3 83C202   		addl	$2, %edx
 7923 37f6 895328   		movl	%edx, 40(%ebx)
  68:in/quex/c.qx  ****     "*="          => TKN_ASSIGN_MULT;
 7924              		.loc 15 68 0
 7925 37f9 C7400C07 		movl	$7, 12(%eax)
 7925      000000
 7926 3800 B8070000 		movl	$7, %eax
 7926      00
 7927              	.LVL986:
  69:in/quex/c.qx  ****     "/="          => TKN_ASSIGN_DIV;
 7928              		.loc 15 69 0
 7929 3805 E92D0100 		jmp	.L690
GAS LISTING /tmp/cc23nfB3.s 			page 425


 7929      00
 7930              	.LVL987:
 7931              	.L955:
 7932              	.L334:
 7933              	.L787:
  69:in/quex/c.qx  ****     "/="          => TKN_ASSIGN_DIV;
 7934              		.loc 15 69 0
 7935 380a 8B4304   		movl	4(%ebx), %eax
 7936              	.LVL988:
9181:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7937              		.loc 1 9181 0
 7938 380d 83C202   		addl	$2, %edx
 7939 3810 895328   		movl	%edx, 40(%ebx)
  69:in/quex/c.qx  ****     "/="          => TKN_ASSIGN_DIV;
 7940              		.loc 15 69 0
 7941 3813 C7400C05 		movl	$5, 12(%eax)
 7941      000000
 7942 381a B8050000 		movl	$5, %eax
 7942      00
 7943              	.LVL989:
  70:in/quex/c.qx  ****     "=="          => TKN_EQ;
 7944              		.loc 15 70 0
 7945 381f E9130100 		jmp	.L690
 7945      00
 7946              	.LVL990:
 7947              	.L388:
 7948              	.L788:
  60:in/quex/c.qx  ****     "="           => TKN_OP_ASSIGNMENT;
 7949              		.loc 15 60 0
 7950 3824 8B4304   		movl	4(%ebx), %eax
 7951              	.LVL991:
 7952 3827 C7400C2F 		movl	$47, 12(%eax)
 7952      000000
 7953 382e B82F0000 		movl	$47, %eax
 7953      00
 7954              	.LVL992:
  61:in/quex/c.qx  ****     "+"           => TKN_PLUS;
 7955              		.loc 15 61 0
 7956 3833 E9FF0000 		jmp	.L690
 7956      00
 7957              	.LVL993:
 7958              	.L595:
 7959              	.L789:
  40:in/quex/c.qx  ****     defined            => TKN_PP_DEFINED;
 7960              		.loc 15 40 0
 7961 3838 8B4304   		movl	4(%ebx), %eax
 7962              	.LVL994:
 7963 383b C7400C33 		movl	$51, 12(%eax)
 7963      000000
 7964 3842 B8330000 		movl	$51, %eax
 7964      00
 7965              	.LVL995:
  41:in/quex/c.qx  ****     "\\\n"             => TKN_BACKLASHED_NEWLINE;
 7966              		.loc 15 41 0
 7967 3847 E9EB0000 		jmp	.L690
 7967      00
 7968              	.LVL996:
GAS LISTING /tmp/cc23nfB3.s 			page 426


 7969              	.L676:
 7970              	.L790:
  91:in/quex/c.qx  ****     break         => TKN_BREAK;
 7971              		.loc 15 91 0
 7972 384c 8B4304   		movl	4(%ebx), %eax
 7973              	.LVL997:
 7974 384f C7400C0C 		movl	$12, 12(%eax)
 7974      000000
 7975 3856 B80C0000 		movl	$12, %eax
 7975      00
 7976              	.LVL998:
  92:in/quex/c.qx  ****     continue      => TKN_CONTINUE;
 7977              		.loc 15 92 0
 7978 385b E9D70000 		jmp	.L690
 7978      00
 7979              	.LVL999:
 7980              	.L753:
  27:in/quex/c.qx  ****     <<EOF>>       => TKN_TERMINATION;
 7981              		.loc 15 27 0
 7982 3860 8B4304   		movl	4(%ebx), %eax
 7983 3863 C7400C00 		movl	$0, 12(%eax)
 7983      000000
 7984 386a 31C0     		xorl	%eax, %eax
 7985              	.LVL1000:
9295:out/quex_scan.cpp ****      RETURN;          
 7986              		.loc 1 9295 0
 7987 386c E9C60000 		jmp	.L690
 7987      00
 7988              	.LVL1001:
 7989              	.L199:
9298:out/quex_scan.cpp **** me->buffer._input_p = me->buffer._lexeme_start_p;
 7990              		.loc 1 9298 0
 7991 3871 8B432C   		movl	44(%ebx), %eax
 7992              	.LVL1002:
9299:out/quex_scan.cpp **** if(QUEX_NAME(Buffer_is_end_of_file)(&me->buffer)) {
 7993              		.loc 1 9299 0
 7994 3874 3B4320   		cmpl	32(%ebx), %eax
9298:out/quex_scan.cpp **** me->buffer._input_p = me->buffer._lexeme_start_p;
 7995              		.loc 1 9298 0
 7996 3877 894328   		movl	%eax, 40(%ebx)
9299:out/quex_scan.cpp **** if(QUEX_NAME(Buffer_is_end_of_file)(&me->buffer)) {
 7997              		.loc 1 9299 0
 7998 387a 7404     		je	.L791
9306:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 7999              		.loc 1 9306 0
 8000 387c 40       		incl	%eax
 8001 387d 894328   		movl	%eax, 40(%ebx)
 8002              	.L791:
9317:out/quex_scan.cpp ****     QUEX_ERROR_EXIT("\n    Match failure in mode 'PROGRAM'.\n"
 8003              		.loc 1 9317 0
 8004 3880 8D45E5   		leal	-27(%ebp), %eax
 8005              	.LVL1003:
 8006 3883 57       		pushl	%edi
 8007 3884 50       		pushl	%eax
 8008 3885 68810400 		pushl	$.LC5
 8008      00
 8009 388a 8D45D4   		leal	-44(%ebp), %eax
GAS LISTING /tmp/cc23nfB3.s 			page 427


 8010 388d 50       		pushl	%eax
 8011              	.LEHB29:
 8012 388e E8FCFFFF 		call	_ZNSsC1EPKcRKSaIcE
 8012      FF
 8013              	.LEHE29:
 8014              	.LVL1004:
 8015 3893 C7042408 		movl	$8, (%esp)
 8015      000000
 8016 389a E8FCFFFF 		call	__cxa_allocate_exception
 8016      FF
 8017 389f 5B       		popl	%ebx
 8018              	.LVL1005:
 8019 38a0 5E       		popl	%esi
 8020              	.LVL1006:
 8021 38a1 8D75D4   		leal	-44(%ebp), %esi
 8022 38a4 56       		pushl	%esi
 8023 38a5 50       		pushl	%eax
 8024 38a6 89C7     		movl	%eax, %edi
 8025              	.LEHB30:
 8026 38a8 E8FCFFFF 		call	_ZNSt13runtime_errorC1ERKSs
 8026      FF
 8027              	.LEHE30:
 8028 38ad 893424   		movl	%esi, (%esp)
 8029              	.LEHB31:
 8030 38b0 E8FCFFFF 		call	_ZNSsD1Ev
 8030      FF
 8031              	.LEHE31:
 8032 38b5 EB1A     		jmp	.L837
 8033              	.L811:
 8034              	.L793:
 8035              	.L812:
 8036              	.L794:
 8037 38b7 83EC0C   		subl	$12, %esp
 8038 38ba 89C3     		movl	%eax, %ebx
 8039 38bc 57       		pushl	%edi
 8040 38bd E8FCFFFF 		call	__cxa_free_exception
 8040      FF
 8041 38c2 893424   		movl	%esi, (%esp)
 8042              	.LEHB32:
 8043 38c5 E8FCFFFF 		call	_ZNSsD1Ev
 8043      FF
 8044              	.LEHE32:
 8045              	.L925:
 8046 38ca 83C410   		addl	$16, %esp
 8047 38cd EB21     		jmp	.L799
 8048              	.L810:
 8049 38cf EB13     		jmp	.L920
 8050              	.L796:
 8051              	.LVL1007:
 8052              	.L837:
 8053 38d1 83C40C   		addl	$12, %esp
 8054 38d4 68000000 		pushl	$_ZNSt13runtime_errorD1Ev
 8054      00
 8055 38d9 68000000 		pushl	$_ZTISt13runtime_error
 8055      00
 8056 38de 57       		pushl	%edi
 8057              	.LEHB33:
GAS LISTING /tmp/cc23nfB3.s 			page 428


 8058 38df E8FCFFFF 		call	__cxa_throw
 8058      FF
 8059              	.LVL1008:
 8060              	.L809:
 8061              	.LVL1009:
 8062              	.L920:
 8063 38e4 42       		incl	%edx
 8064 38e5 89C3     		movl	%eax, %ebx
 8065 38e7 7507     		jne	.L799
 8066              	.L798:
 8067              		.cfi_escape 0x2e,0x0
 8068 38e9 E8FCFFFF 		call	_ZSt9terminatev
 8068      FF
 8069              	.LVL1010:
 8070              	.L813:
 8071              	.LVL1011:
 8072              	.L926:
 8073 38ee 89C3     		movl	%eax, %ebx
 8074              	.LVL1012:
 8075              	.L799:
 8076 38f0 83EC0C   		subl	$12, %esp
 8077 38f3 53       		pushl	%ebx
 8078              		.cfi_escape 0x2e,0x10
 8079 38f4 E8FCFFFF 		call	_Unwind_Resume
 8079      FF
 8080              	.LVL1013:
 8081              	.L329:
 8082 38f9 BE920900 		movl	$.L204, %esi
 8082      00
 8083 38fe B81C3100 		movl	$.L328, %eax
 8083      00
 8084              	.LVL1014:
 8085              	.L247:
9759:out/quex_scan.cpp ****     if( me->buffer._memory._end_of_file_p == 0x0 ) {
 8086              		.loc 1 9759 0
 8087 3903 837B2000 		cmpl	$0, 32(%ebx)
 8088 3907 7404     		je	.L800
 8089 3909 89C6     		movl	%eax, %esi
7124:out/quex_scan.cpp ****     goto *last_acceptance;
 8090              		.loc 1 7124 0
 8091 390b FFE6     		jmp	*%esi
 8092              	.L800:
9762:out/quex_scan.cpp ****                                                post_context_start_position, PostContextStartPositio
 8093              		.loc 1 9762 0
 8094 390d 8B45C4   		movl	-60(%ebp), %eax
 8095              	.LVL1015:
 8096 3910 8D55E0   		leal	-32(%ebp), %edx
 8097              	.LVL1016:
 8098              		.cfi_escape 0x2e,0x0
 8099 3913 E83FCAFF 		call	T.340
 8099      FF
7124:out/quex_scan.cpp ****     goto *last_acceptance;
 8100              		.loc 1 7124 0
 8101 3918 FFE6     		jmp	*%esi
 8102              	.L202:
9771:out/quex_scan.cpp ****     if( me->buffer._memory._end_of_file_p == 0x0 ) {
 8103              		.loc 1 9771 0
GAS LISTING /tmp/cc23nfB3.s 			page 429


 8104 391a 837B2000 		cmpl	$0, 32(%ebx)
 8105 391e 0F853CFF 		jne	.L753
 8105      FFFF
 8106              	.L245:
9774:out/quex_scan.cpp ****                                                post_context_start_position, PostContextStartPositio
 8107              		.loc 1 9774 0
 8108 3924 8B45C4   		movl	-60(%ebp), %eax
 8109 3927 8D55E0   		leal	-32(%ebp), %edx
 8110 392a E828CAFF 		call	T.340
 8110      FF
 8111              	.LEHE33:
 253:out/quex_scan.cpp ****     ++(me->buffer._input_p);
 8112              		.loc 1 253 0
 8113 392f FF4328   		incl	40(%ebx)
 254:out/quex_scan.cpp ****     goto INIT_STATE_TRANSITION_BLOCK;
 8114              		.loc 1 254 0
 8115 3932 E992CAFF 		jmp	.L830
 8115      FF
 8116              	.LVL1017:
 8117              	.L690:
 8118              	.LBE453:
9781:out/quex_scan.cpp **** }
 8119              		.loc 1 9781 0
 8120 3937 8D65F4   		leal	-12(%ebp), %esp
 8121              	.LVL1018:
 8122 393a 5B       		popl	%ebx
 8123              	.LVL1019:
 8124 393b 5E       		popl	%esi
 8125              	.LVL1020:
 8126 393c 5F       		popl	%edi
 8127              	.LVL1021:
 8128 393d 5D       		popl	%ebp
 8129 393e C3       		ret
 8130              		.cfi_endproc
 8131              	.LFE1313:
 8133              		.section	.gcc_except_table
 8134 0079 000000   		.align 4
 8135              	.LLSDA1313:
 8136 007c FF       		.byte	0xff
 8137 007d 00       		.byte	0x0
 8138 007e 5D       		.uleb128 .LLSDATT1313-.LLSDATTD1313
 8139              	.LLSDATTD1313:
 8140 007f 01       		.byte	0x1
 8141 0080 57       		.uleb128 .LLSDACSE1313-.LLSDACSB1313
 8142              	.LLSDACSB1313:
 8143 0081 8865     		.uleb128 .LEHB19-.LFB1313
 8144 0083 7F       		.uleb128 .LEHE19-.LEHB19
 8145 0084 00       		.uleb128 0x0
 8146 0085 00       		.uleb128 0x0
 8147 0086 A766     		.uleb128 .LEHB20-.LFB1313
 8148 0088 05       		.uleb128 .LEHE20-.LEHB20
 8149 0089 F566     		.uleb128 .L823-.LFB1313
 8150 008b 00       		.uleb128 0x0
 8151 008c C166     		.uleb128 .LEHB21-.LFB1313
 8152 008e 05       		.uleb128 .LEHE21-.LEHB21
 8153 008f D366     		.uleb128 .L821-.LFB1313
 8154 0091 00       		.uleb128 0x0
GAS LISTING /tmp/cc23nfB3.s 			page 430


 8155 0092 C966     		.uleb128 .LEHB22-.LFB1313
 8156 0094 05       		.uleb128 .LEHE22-.LEHB22
 8157 0095 F066     		.uleb128 .L819-.LFB1313
 8158 0097 03       		.uleb128 0x3
 8159 0098 E166     		.uleb128 .LEHB23-.LFB1313
 8160 009a 05       		.uleb128 .LEHE23-.LEHB23
 8161 009b EB66     		.uleb128 .L820-.LFB1313
 8162 009d 03       		.uleb128 0x3
 8163 009e E067     		.uleb128 .LEHB24-.LFB1313
 8164 00a0 05       		.uleb128 .LEHE24-.LEHB24
 8165 00a1 00       		.uleb128 0x0
 8166 00a2 00       		.uleb128 0x0
 8167 00a3 8568     		.uleb128 .LEHB25-.LFB1313
 8168 00a5 05       		.uleb128 .LEHE25-.LEHB25
 8169 00a6 D368     		.uleb128 .L818-.LFB1313
 8170 00a8 00       		.uleb128 0x0
 8171 00a9 9F68     		.uleb128 .LEHB26-.LFB1313
 8172 00ab 05       		.uleb128 .LEHE26-.LEHB26
 8173 00ac B168     		.uleb128 .L816-.LFB1313
 8174 00ae 00       		.uleb128 0x0
 8175 00af A768     		.uleb128 .LEHB27-.LFB1313
 8176 00b1 05       		.uleb128 .LEHE27-.LEHB27
 8177 00b2 CE68     		.uleb128 .L814-.LFB1313
 8178 00b4 03       		.uleb128 0x3
 8179 00b5 BF68     		.uleb128 .LEHB28-.LFB1313
 8180 00b7 05       		.uleb128 .LEHE28-.LEHB28
 8181 00b8 C968     		.uleb128 .L815-.LFB1313
 8182 00ba 03       		.uleb128 0x3
 8183 00bb F669     		.uleb128 .LEHB29-.LFB1313
 8184 00bd 05       		.uleb128 .LEHE29-.LEHB29
 8185 00be D66A     		.uleb128 .L813-.LFB1313
 8186 00c0 00       		.uleb128 0x0
 8187 00c1 906A     		.uleb128 .LEHB30-.LFB1313
 8188 00c3 05       		.uleb128 .LEHE30-.LEHB30
 8189 00c4 9F6A     		.uleb128 .L811-.LFB1313
 8190 00c6 00       		.uleb128 0x0
 8191 00c7 986A     		.uleb128 .LEHB31-.LFB1313
 8192 00c9 05       		.uleb128 .LEHE31-.LEHB31
 8193 00ca CC6A     		.uleb128 .L809-.LFB1313
 8194 00cc 03       		.uleb128 0x3
 8195 00cd AD6A     		.uleb128 .LEHB32-.LFB1313
 8196 00cf 05       		.uleb128 .LEHE32-.LEHB32
 8197 00d0 B76A     		.uleb128 .L810-.LFB1313
 8198 00d2 03       		.uleb128 0x3
 8199 00d3 C76A     		.uleb128 .LEHB33-.LFB1313
 8200 00d5 50       		.uleb128 .LEHE33-.LEHB33
 8201 00d6 00       		.uleb128 0x0
 8202 00d7 00       		.uleb128 0x0
 8203              	.LLSDACSE1313:
 8204 00d8 00       		.byte	0x0
 8205 00d9 00       		.byte	0x0
 8206 00da 7F       		.byte	0x7f
 8207 00db 7D       		.byte	0x7d
 8208              		.align 4
 8209              	.LLSDATT1313:
 8210 00dc 00       		.byte	0x0
 8211              		.text
GAS LISTING /tmp/cc23nfB3.s 			page 431


 8212              	.globl _ZN4quex17quex_scan_PROGRAME
 8213              		.bss
 8214              		.align 4
 8217              	_ZN4quex17quex_scan_PROGRAME:
 8218 0000 00000000 		.zero	36
 8218      00000000 
 8218      00000000 
 8218      00000000 
 8218      00000000 
 8219              	.globl _ZN4quex26quex_scan_LexemeNullObjectE
 8222              	_ZN4quex26quex_scan_LexemeNullObjectE:
 8223 0024 00       		.zero	1
 8224              		.weak	_ZTVN4quex5TokenE
 8225              		.section	.rodata._ZTVN4quex5TokenE,"aG",@progbits,_ZTVN4quex5TokenE,comdat
 8226              		.align 8
 8229              	_ZTVN4quex5TokenE:
 8230 0000 00000000 		.long	0
 8231 0004 00000000 		.long	_ZTIN4quex5TokenE
 8232 0008 00000000 		.long	_ZN4quex5TokenD1Ev
 8233 000c 00000000 		.long	_ZN4quex5TokenD0Ev
 8234              		.weak	_ZTVN4quex9quex_scanE
 8235              		.section	.rodata._ZTVN4quex9quex_scanE,"aG",@progbits,_ZTVN4quex9quex_scanE,comdat
 8236              		.align 8
 8239              	_ZTVN4quex9quex_scanE:
 8240 0000 00000000 		.long	0
 8241 0004 00000000 		.long	_ZTIN4quex9quex_scanE
 8242 0008 00000000 		.long	_ZN4quex9quex_scanD1Ev
 8243 000c 00000000 		.long	_ZN4quex9quex_scanD0Ev
 8244              		.weak	_ZTSN4quex9quex_scanE
 8245              		.section	.rodata._ZTSN4quex9quex_scanE,"aG",@progbits,_ZTSN4quex9quex_scanE,comdat
 8246              		.align 4
 8249              	_ZTSN4quex9quex_scanE:
 8250 0000 4E347175 		.string	"N4quex9quex_scanE"
 8250      65783971 
 8250      7565785F 
 8250      7363616E 
 8250      4500
 8251              		.weak	_ZTIN4quex9quex_scanE
 8252              		.section	.rodata._ZTIN4quex9quex_scanE,"aG",@progbits,_ZTIN4quex9quex_scanE,comdat
 8253              		.align 4
 8256              	_ZTIN4quex9quex_scanE:
 8257 0000 08000000 		.long	_ZTVN10__cxxabiv117__class_type_infoE+8
 8258 0004 00000000 		.long	_ZTSN4quex9quex_scanE
 8259              		.weak	_ZTSN4quex5TokenE
 8260              		.section	.rodata._ZTSN4quex5TokenE,"aG",@progbits,_ZTSN4quex5TokenE,comdat
 8261              		.align 4
 8264              	_ZTSN4quex5TokenE:
 8265 0000 4E347175 		.string	"N4quex5TokenE"
 8265      65783554 
 8265      6F6B656E 
 8265      4500
 8266              		.weak	_ZTIN4quex5TokenE
 8267              		.section	.rodata._ZTIN4quex5TokenE,"aG",@progbits,_ZTIN4quex5TokenE,comdat
 8268              		.align 4
 8271              	_ZTIN4quex5TokenE:
 8272 0000 08000000 		.long	_ZTVN10__cxxabiv117__class_type_infoE+8
 8273 0004 00000000 		.long	_ZTSN4quex5TokenE
GAS LISTING /tmp/cc23nfB3.s 			page 432


 8274              		.weak	_ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE
 8275              		.section	.bss._ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE,"awG",@nobits,_ZNSbIhSt1
 8276              		.align 4
 8279              	_ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE:
 8280 0000 00000000 		.zero	16
 8280      00000000 
 8280      00000000 
 8280      00000000 
 8281              		.local	_ZStL8__ioinit
 8282              		.comm	_ZStL8__ioinit,1,1
 8283              		.section	.rodata
 8284              		.align 4
 8287              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_WHILE:
 8288 032c 5748494C 		.string	"WHILE"
 8288      4500
 8289 0332 0000     		.align 4
 8292              	_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_TYPE_UNSIGNED:
 8293 0334 54595045 		.string	"TYPE_UNSIGNED"
 8293      5F554E53 
 8293      49474E45 
 8293      4400
 8294 0342 0000     		.align 4
 8297              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_LONG:
 8298 0344 54595045 		.string	"TYPE_LONG"
 8298      5F4C4F4E 
 8298      4700
 8299 034e 0000     		.align 4
 8302              	_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_TYPE_INT:
 8303 0350 54595045 		.string	"TYPE_INT"
 8303      5F494E54 
 8303      00
 8304 0359 000000   		.align 4
 8307              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_TYPE_FLOAT:
 8308 035c 54595045 		.string	"TYPE_FLOAT"
 8308      5F464C4F 
 8308      415400
 8309 0367 00       		.align 4
 8312              	_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_TYPE_DOUBLE:
 8313 0368 54595045 		.string	"TYPE_DOUBLE"
 8313      5F444F55 
 8313      424C4500 
 8314              		.align 4
 8317              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_CHAR:
 8318 0374 54595045 		.string	"TYPE_CHAR"
 8318      5F434841 
 8318      5200
 8319 037e 0000     		.align 4
 8322              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_TILDE:
 8323 0380 54494C44 		.string	"TILDE"
 8323      4500
 8324 0386 0000     		.align 4
 8327              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_SWITCH:
 8328 0388 53574954 		.string	"SWITCH"
 8328      434800
 8329 038f 00       		.align 4
 8332              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRUCT:
 8333 0390 53545255 		.string	"STRUCT"
GAS LISTING /tmp/cc23nfB3.s 			page 433


 8333      435400
 8334 0397 00       		.align 4
 8337              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRING:
 8338 0398 53545249 		.string	"STRING"
 8338      4E4700
 8339 039f 00       		.align 4
 8342              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_SEMICOLON:
 8343 03a0 53454D49 		.string	"SEMICOLON"
 8343      434F4C4F 
 8343      4E00
 8344 03aa 0000     		.align 4
 8347              	_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_QUOTED_CHAR:
 8348 03ac 51554F54 		.string	"QUOTED_CHAR"
 8348      45445F43 
 8348      48415200 
 8349              		.align 4
 8352              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_QUOTE:
 8353 03b8 51554F54 		.string	"QUOTE"
 8353      4500
 8354 03be 0000     		.align 4
 8357              	_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_QUESTION_MARK:
 8358 03c0 51554553 		.string	"QUESTION_MARK"
 8358      54494F4E 
 8358      5F4D4152 
 8358      4B00
 8359 03ce 0000     		.align 4
 8362              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_PRAGMA:
 8363 03d0 50505F50 		.string	"PP_PRAGMA"
 8363      5241474D 
 8363      4100
 8364 03da 0000     		.align 4
 8367              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_INCLUDE:
 8368 03dc 50505F49 		.string	"PP_INCLUDE"
 8368      4E434C55 
 8368      444500
 8369 03e7 00       		.align 4
 8372              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_IFNDEF:
 8373 03e8 50505F49 		.string	"PP_IFNDEF"
 8373      464E4445 
 8373      4600
 8374 03f2 0000     		.align 4
 8377              	_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_IFDEF:
 8378 03f4 50505F49 		.string	"PP_IFDEF"
 8378      46444546 
 8378      00
 8379 03fd 000000   		.align 4
 8382              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_PP_IF:
 8383 0400 50505F49 		.string	"PP_IF"
 8383      4600
 8384 0406 0000     		.align 4
 8387              	_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ERROR:
 8388 0408 50505F45 		.string	"PP_ERROR"
 8388      52524F52 
 8388      00
 8389 0411 000000   		.align 4
 8392              	_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ENDIF:
 8393 0414 50505F45 		.string	"PP_ENDIF"
GAS LISTING /tmp/cc23nfB3.s 			page 434


 8393      4E444946 
 8393      00
 8394 041d 000000   		.align 4
 8397              	_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELSE:
 8398 0420 50505F45 		.string	"PP_ELSE"
 8398      4C534500 
 8399              		.align 4
 8402              	_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELIF:
 8403 0428 50505F45 		.string	"PP_ELIF"
 8403      4C494600 
 8404              		.align 4
 8407              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_DEFINED:
 8408 0430 50505F44 		.string	"PP_DEFINED"
 8408      4546494E 
 8408      454400
 8409 043b 00       		.align 4
 8412              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_DEFINE:
 8413 043c 50505F44 		.string	"PP_DEFINE"
 8413      4546494E 
 8413      4500
 8414 0446 0000     		.align 4
 8417              	_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_PLUS:
 8418 0448 504C5553 		.string	"PLUS"
 8418      00
 8421              	_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_OR:
 8422 044d 4F5200   		.string	"OR"
 8423              		.align 4
 8426              	_ZZN4quex20Token_map_id_to_nameEjE26token_id_str_OP_ASSIGNMENT:
 8427 0450 4F505F41 		.string	"OP_ASSIGNMENT"
 8427      53534947 
 8427      4E4D454E 
 8427      5400
 8428 045e 0000     		.align 4
 8431              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NUMBER:
 8432 0460 4E554D42 		.string	"NUMBER"
 8432      455200
 8433 0467 00       		.align 4
 8436              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NOT_EQ:
 8437 0468 4E4F545F 		.string	"NOT_EQ"
 8437      455100
 8438 046f 00       		.align 4
 8441              	_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_NOT:
 8442 0470 4E4F5400 		.string	"NOT"
 8443              		.align 4
 8446              	_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_MULT:
 8447 0474 4D554C54 		.string	"MULT"
 8447      00
 8448 0479 000000   		.align 4
 8451              	_ZZN4quex20Token_map_id_to_nameEjE19token_id_str_MODULO:
 8452 047c 4D4F4455 		.string	"MODULO"
 8452      4C4F00
 8453 0483 00       		.align 4
 8456              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_MINUS:
 8457 0484 4D494E55 		.string	"MINUS"
 8457      5300
 8458 048a 0000     		.align 4
 8461              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_LOGICAL_OR:
GAS LISTING /tmp/cc23nfB3.s 			page 435


 8462 048c 4C4F4749 		.string	"LOGICAL_OR"
 8462      43414C5F 
 8462      4F5200
 8463 0497 00       		.align 4
 8466              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_LE_EQ:
 8467 0498 4C455F45 		.string	"LE_EQ"
 8467      5100
 8468 049e 0000     		.align 4
 8471              	_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_LESS:
 8472 04a0 4C455353 		.string	"LESS"
 8472      00
 8475              	_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_IF:
 8476 04a5 494600   		.string	"IF"
 8477              		.align 4
 8480              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_IDENTIFIER:
 8481 04a8 4944454E 		.string	"IDENTIFIER"
 8481      54494649 
 8481      455200
 8482 04b3 00       		.align 4
 8485              	_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_HASH:
 8486 04b4 48415348 		.string	"HASH"
 8486      00
 8487 04b9 000000   		.align 4
 8490              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_GR_EQ:
 8491 04bc 47525F45 		.string	"GR_EQ"
 8491      5100
 8492 04c2 0000     		.align 4
 8495              	_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_GREATER:
 8496 04c4 47524541 		.string	"GREATER"
 8496      54455200 
 8497              		.align 4
 8500              	_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_FOR:
 8501 04cc 464F5200 		.string	"FOR"
 8502              		.align 4
 8505              	_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_EXCLUSIVE_OR:
 8506 04d0 4558434C 		.string	"EXCLUSIVE_OR"
 8506      55534956 
 8506      455F4F52 
 8506      00
 8509              	_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_EQ:
 8510 04dd 455100   		.string	"EQ"
 8511              		.align 4
 8514              	_ZZN4quex20Token_map_id_to_nameEjE17token_id_str_ELSE:
 8515 04e0 454C5345 		.string	"ELSE"
 8515      00
 8516 04e5 000000   		.align 4
 8519              	_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_DOUBLE_HASH:
 8520 04e8 444F5542 		.string	"DOUBLE_HASH"
 8520      4C455F48 
 8520      41534800 
 8521              		.align 4
 8524              	_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_DOUBLE_COLON:
 8525 04f4 444F5542 		.string	"DOUBLE_COLON"
 8525      4C455F43 
 8525      4F4C4F4E 
 8525      00
 8526 0501 000000   		.align 4
GAS LISTING /tmp/cc23nfB3.s 			page 436


 8529              	_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DOT:
 8530 0504 444F5400 		.string	"DOT"
 8533              	_ZZN4quex20Token_map_id_to_nameEjE15token_id_str_DO:
 8534 0508 444F00   		.string	"DO"
 8535 050b 00       		.align 4
 8538              	_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DIV:
 8539 050c 44495600 		.string	"DIV"
 8540              		.align 4
 8543              	_ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_O:
 8544 0510 4355524C 		.string	"CURLY_BRACKET_O"
 8544      595F4252 
 8544      41434B45 
 8544      545F4F00 
 8545              		.align 4
 8548              	_ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_C:
 8549 0520 4355524C 		.string	"CURLY_BRACKET_C"
 8549      595F4252 
 8549      41434B45 
 8549      545F4300 
 8550              		.align 4
 8553              	_ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_O:
 8554 0530 434F524E 		.string	"CORNER_BRACKET_O"
 8554      45525F42 
 8554      5241434B 
 8554      45545F4F 
 8554      00
 8555 0541 000000   		.align 4
 8558              	_ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_C:
 8559 0544 434F524E 		.string	"CORNER_BRACKET_C"
 8559      45525F42 
 8559      5241434B 
 8559      45545F43 
 8559      00
 8560 0555 000000   		.align 4
 8563              	_ZZN4quex20Token_map_id_to_nameEjE21token_id_str_CONTINUE:
 8564 0558 434F4E54 		.string	"CONTINUE"
 8564      494E5545 
 8564      00
 8565 0561 000000   		.align 4
 8568              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CONST:
 8569 0564 434F4E53 		.string	"CONST"
 8569      5400
 8570 056a 0000     		.align 4
 8573              	_ZZN4quex20Token_map_id_to_nameEjE20token_id_str_COMMENT:
 8574 056c 434F4D4D 		.string	"COMMENT"
 8574      454E5400 
 8575              		.align 4
 8578              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COMMA:
 8579 0574 434F4D4D 		.string	"COMMA"
 8579      4100
 8580 057a 0000     		.align 4
 8583              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COLON:
 8584 057c 434F4C4F 		.string	"COLON"
 8584      4E00
 8585 0582 0000     		.align 4
 8588              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CLASS:
 8589 0584 434C4153 		.string	"CLASS"
GAS LISTING /tmp/cc23nfB3.s 			page 437


 8589      5300
 8590 058a 0000     		.align 4
 8593              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CATCH:
 8594 058c 43415443 		.string	"CATCH"
 8594      4800
 8595 0592 0000     		.align 4
 8598              	_ZZN4quex20Token_map_id_to_nameEjE18token_id_str_BREAK:
 8599 0594 42524541 		.string	"BREAK"
 8599      4B00
 8600 059a 0000     		.align 4
 8603              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_O:
 8604 059c 42524143 		.string	"BRACKET_O"
 8604      4B45545F 
 8604      4F00
 8605 05a6 0000     		.align 4
 8608              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_C:
 8609 05a8 42524143 		.string	"BRACKET_C"
 8609      4B45545F 
 8609      4300
 8610 05b2 0000     		.align 4
 8613              	_ZZN4quex20Token_map_id_to_nameEjE31token_id_str_BACKLASHED_NEWLINE:
 8614 05b4 4241434B 		.string	"BACKLASHED_NEWLINE"
 8614      4C415348 
 8614      45445F4E 
 8614      45574C49 
 8614      4E4500
 8615 05c7 00       		.align 4
 8618              	_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_PLUS:
 8619 05c8 41535349 		.string	"ASSIGN_PLUS"
 8619      474E5F50 
 8619      4C555300 
 8620              		.align 4
 8623              	_ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_MULT:
 8624 05d4 41535349 		.string	"ASSIGN_MULT"
 8624      474E5F4D 
 8624      554C5400 
 8625              		.align 4
 8628              	_ZZN4quex20Token_map_id_to_nameEjE25token_id_str_ASSIGN_MINUS:
 8629 05e0 41535349 		.string	"ASSIGN_MINUS"
 8629      474E5F4D 
 8629      494E5553 
 8629      00
 8630 05ed 000000   		.align 4
 8633              	_ZZN4quex20Token_map_id_to_nameEjE23token_id_str_ASSIGN_DIV:
 8634 05f0 41535349 		.string	"ASSIGN_DIV"
 8634      474E5F44 
 8634      495600
 8635 05fb 00       		.align 4
 8638              	_ZZN4quex20Token_map_id_to_nameEjE16token_id_str_AND:
 8639 05fc 414E4400 		.string	"AND"
 8640              		.align 4
 8643              	_ZZN4quex20Token_map_id_to_nameEjE22token_id_str_AMPERSANT:
 8644 0600 414D5045 		.string	"AMPERSANT"
 8644      5253414E 
 8644      5400
 8645 060a 0000     		.align 4
 8648              	_ZZN4quex20Token_map_id_to_nameEjE18termination_string:
GAS LISTING /tmp/cc23nfB3.s 			page 438


 8649 060c 3C544552 		.string	"<TERMINATION>"
 8649      4D494E41 
 8649      54494F4E 
 8649      3E00
 8650 061a 0000     		.align 4
 8653              	_ZZN4quex20Token_map_id_to_nameEjE20uninitialized_string:
 8654 061c 3C554E49 		.string	"<UNINITIALIZED>"
 8654      4E495449 
 8654      414C495A 
 8654      45443E00 
 8655              		.local	_ZZN4quex20Token_map_id_to_nameEjE12error_string
 8656              		.comm	_ZZN4quex20Token_map_id_to_nameEjE12error_string,64,4
 8657              		.weakref	_ZL20__gthrw_pthread_oncePiPFvvE,pthread_once
 8658              		.weakref	_ZL27__gthrw_pthread_getspecificj,pthread_getspecific
 8659              		.weakref	_ZL27__gthrw_pthread_setspecificjPKv,pthread_setspecific
 8660              		.weakref	_ZL22__gthrw_pthread_createPmPK14pthread_attr_tPFPvS3_ES3_,pthread_create
 8661              		.weakref	_ZL20__gthrw_pthread_joinmPPv,pthread_join
 8662              		.weakref	_ZL21__gthrw_pthread_equalmm,pthread_equal
 8663              		.weakref	_ZL20__gthrw_pthread_selfv,pthread_self
 8664              		.weakref	_ZL22__gthrw_pthread_detachm,pthread_detach
 8665              		.weakref	_ZL22__gthrw_pthread_cancelm,pthread_cancel
 8666              		.weakref	_ZL19__gthrw_sched_yieldv,sched_yield
 8667              		.weakref	_ZL26__gthrw_pthread_mutex_lockP15pthread_mutex_t,pthread_mutex_lock
 8668              		.weakref	_ZL29__gthrw_pthread_mutex_trylockP15pthread_mutex_t,pthread_mutex_trylock
 8669              		.weakref	_ZL31__gthrw_pthread_mutex_timedlockP15pthread_mutex_tPK8timespec,pthread_mutex_timedlock
 8670              		.weakref	_ZL28__gthrw_pthread_mutex_unlockP15pthread_mutex_t,pthread_mutex_unlock
 8671              		.weakref	_ZL26__gthrw_pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t,pthread_mutex_in
 8672              		.weakref	_ZL29__gthrw_pthread_mutex_destroyP15pthread_mutex_t,pthread_mutex_destroy
 8673              		.weakref	_ZL30__gthrw_pthread_cond_broadcastP14pthread_cond_t,pthread_cond_broadcast
 8674              		.weakref	_ZL27__gthrw_pthread_cond_signalP14pthread_cond_t,pthread_cond_signal
 8675              		.weakref	_ZL25__gthrw_pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t,pthread_cond_wait
 8676              		.weakref	_ZL30__gthrw_pthread_cond_timedwaitP14pthread_cond_tP15pthread_mutex_tPK8timespec,pthread
 8677              		.weakref	_ZL28__gthrw_pthread_cond_destroyP14pthread_cond_t,pthread_cond_destroy
 8678              		.weakref	_ZL26__gthrw_pthread_key_createPjPFvPvE,pthread_key_create
 8679              		.weakref	_ZL26__gthrw_pthread_key_deletej,pthread_key_delete
 8680              		.weakref	_ZL30__gthrw_pthread_mutexattr_initP19pthread_mutexattr_t,pthread_mutexattr_init
 8681              		.weakref	_ZL33__gthrw_pthread_mutexattr_settypeP19pthread_mutexattr_ti,pthread_mutexattr_settype
 8682              		.weakref	_ZL33__gthrw_pthread_mutexattr_destroyP19pthread_mutexattr_t,pthread_mutexattr_destroy
 8683              		.text
 8684              	.Letext0:
GAS LISTING /tmp/cc23nfB3.s 			page 439


DEFINED SYMBOLS
                            *ABS*:0000000000000000 quex_scan.cpp
     /tmp/cc23nfB3.s:12     .text:0000000000000000 _ZN4quex26quex_scan_PROGRAM_on_entryEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE
     /tmp/cc23nfB3.s:8217   .bss:0000000000000000 _ZN4quex17quex_scan_PROGRAME
     /tmp/cc23nfB3.s:41     .text:0000000000000014 _ZN4quex25quex_scan_PROGRAM_on_exitEPNS_9quex_scanEPKNS_18quex_scan_Mode_tagE
     /tmp/cc23nfB3.s:69     .text:0000000000000028 _ZN4quex26quex_scan_PROGRAM_has_baseEPKNS_18quex_scan_Mode_tagE
     /tmp/cc23nfB3.s:93     .text:000000000000002f _ZN4quex32quex_scan_PROGRAM_has_entry_fromEPKNS_18quex_scan_Mode_tagE
     /tmp/cc23nfB3.s:117    .text:0000000000000036 _ZN4quex29quex_scan_PROGRAM_has_exit_toEPKNS_18quex_scan_Mode_tagE
     /tmp/cc23nfB3.s:142    .text._ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE:0000000000000000 _ZN4quex25quex_scan_Buffer_destructEPNS_16quex_scan_BufferE
     /tmp/cc23nfB3.s:212    .text._ZN4quex18quex_scan_destructEPNS_9quex_scanE:0000000000000000 _ZN4quex18quex_scan_destructEPNS_9quex_scanE
     /tmp/cc23nfB3.s:350    .text._ZNSbIhSt11char_traitsIhESaIhEED1Ev:0000000000000000 _ZNSbIhSt11char_traitsIhESaIhEED1Ev
     /tmp/cc23nfB3.s:8279   .bss._ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE:0000000000000000 _ZNSbIhSt11char_traitsIhESaIhEE4_Rep20_S_empty_rep_storageE
     /tmp/cc23nfB3.s:453    .text._ZN4quex5TokenD0Ev:0000000000000000 _ZN4quex5TokenD0Ev
     /tmp/cc23nfB3.s:8229   .rodata._ZTVN4quex5TokenE:0000000000000000 _ZTVN4quex5TokenE
     /tmp/cc23nfB3.s:492    .text._ZN4quex5TokenD1Ev:0000000000000000 _ZN4quex5TokenD1Ev
     /tmp/cc23nfB3.s:523    .text._ZN4quex9quex_scanD0Ev:0000000000000000 _ZN4quex9quex_scanD0Ev
     /tmp/cc23nfB3.s:8239   .rodata._ZTVN4quex9quex_scanE:0000000000000000 _ZTVN4quex9quex_scanE
     /tmp/cc23nfB3.s:604    .text._ZN4quex9quex_scanD1Ev:0000000000000000 _ZN4quex9quex_scanD1Ev
     /tmp/cc23nfB3.s:677    .text:000000000000003d _GLOBAL__I__ZN4quex17quex_scan_PROGRAME
                             .bss:0000000000000025 _ZStL8__ioinit
     /tmp/cc23nfB3.s:720    .text:0000000000000069 _ZN4quex20Token_map_id_to_nameEj
     /tmp/cc23nfB3.s:8653   .rodata:000000000000061c _ZZN4quex20Token_map_id_to_nameEjE20uninitialized_string
     /tmp/cc23nfB3.s:8648   .rodata:000000000000060c _ZZN4quex20Token_map_id_to_nameEjE18termination_string
     /tmp/cc23nfB3.s:8656   .bss:0000000000000028 _ZZN4quex20Token_map_id_to_nameEjE12error_string
     /tmp/cc23nfB3.s:8643   .rodata:0000000000000600 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_AMPERSANT
     /tmp/cc23nfB3.s:8638   .rodata:00000000000005fc _ZZN4quex20Token_map_id_to_nameEjE16token_id_str_AND
     /tmp/cc23nfB3.s:8633   .rodata:00000000000005f0 _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_ASSIGN_DIV
     /tmp/cc23nfB3.s:8628   .rodata:00000000000005e0 _ZZN4quex20Token_map_id_to_nameEjE25token_id_str_ASSIGN_MINUS
     /tmp/cc23nfB3.s:8623   .rodata:00000000000005d4 _ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_MULT
     /tmp/cc23nfB3.s:8618   .rodata:00000000000005c8 _ZZN4quex20Token_map_id_to_nameEjE24token_id_str_ASSIGN_PLUS
     /tmp/cc23nfB3.s:8613   .rodata:00000000000005b4 _ZZN4quex20Token_map_id_to_nameEjE31token_id_str_BACKLASHED_NEWLINE
     /tmp/cc23nfB3.s:8608   .rodata:00000000000005a8 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_C
     /tmp/cc23nfB3.s:8603   .rodata:000000000000059c _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_BRACKET_O
     /tmp/cc23nfB3.s:8598   .rodata:0000000000000594 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_BREAK
     /tmp/cc23nfB3.s:8593   .rodata:000000000000058c _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CATCH
     /tmp/cc23nfB3.s:8588   .rodata:0000000000000584 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CLASS
     /tmp/cc23nfB3.s:8583   .rodata:000000000000057c _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COLON
     /tmp/cc23nfB3.s:8578   .rodata:0000000000000574 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_COMMA
     /tmp/cc23nfB3.s:8573   .rodata:000000000000056c _ZZN4quex20Token_map_id_to_nameEjE20token_id_str_COMMENT
     /tmp/cc23nfB3.s:8568   .rodata:0000000000000564 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_CONST
     /tmp/cc23nfB3.s:8563   .rodata:0000000000000558 _ZZN4quex20Token_map_id_to_nameEjE21token_id_str_CONTINUE
     /tmp/cc23nfB3.s:8558   .rodata:0000000000000544 _ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_C
     /tmp/cc23nfB3.s:8553   .rodata:0000000000000530 _ZZN4quex20Token_map_id_to_nameEjE29token_id_str_CORNER_BRACKET_O
     /tmp/cc23nfB3.s:8548   .rodata:0000000000000520 _ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_C
     /tmp/cc23nfB3.s:8543   .rodata:0000000000000510 _ZZN4quex20Token_map_id_to_nameEjE28token_id_str_CURLY_BRACKET_O
     /tmp/cc23nfB3.s:8538   .rodata:000000000000050c _ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DIV
     /tmp/cc23nfB3.s:8533   .rodata:0000000000000508 _ZZN4quex20Token_map_id_to_nameEjE15token_id_str_DO
     /tmp/cc23nfB3.s:8529   .rodata:0000000000000504 _ZZN4quex20Token_map_id_to_nameEjE16token_id_str_DOT
     /tmp/cc23nfB3.s:8524   .rodata:00000000000004f4 _ZZN4quex20Token_map_id_to_nameEjE25token_id_str_DOUBLE_COLON
     /tmp/cc23nfB3.s:8519   .rodata:00000000000004e8 _ZZN4quex20Token_map_id_to_nameEjE24token_id_str_DOUBLE_HASH
     /tmp/cc23nfB3.s:8514   .rodata:00000000000004e0 _ZZN4quex20Token_map_id_to_nameEjE17token_id_str_ELSE
     /tmp/cc23nfB3.s:8509   .rodata:00000000000004dd _ZZN4quex20Token_map_id_to_nameEjE15token_id_str_EQ
     /tmp/cc23nfB3.s:8505   .rodata:00000000000004d0 _ZZN4quex20Token_map_id_to_nameEjE25token_id_str_EXCLUSIVE_OR
     /tmp/cc23nfB3.s:8500   .rodata:00000000000004cc _ZZN4quex20Token_map_id_to_nameEjE16token_id_str_FOR
     /tmp/cc23nfB3.s:8495   .rodata:00000000000004c4 _ZZN4quex20Token_map_id_to_nameEjE20token_id_str_GREATER
     /tmp/cc23nfB3.s:8490   .rodata:00000000000004bc _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_GR_EQ
     /tmp/cc23nfB3.s:8485   .rodata:00000000000004b4 _ZZN4quex20Token_map_id_to_nameEjE17token_id_str_HASH
GAS LISTING /tmp/cc23nfB3.s 			page 440


     /tmp/cc23nfB3.s:8480   .rodata:00000000000004a8 _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_IDENTIFIER
     /tmp/cc23nfB3.s:8475   .rodata:00000000000004a5 _ZZN4quex20Token_map_id_to_nameEjE15token_id_str_IF
     /tmp/cc23nfB3.s:8471   .rodata:00000000000004a0 _ZZN4quex20Token_map_id_to_nameEjE17token_id_str_LESS
     /tmp/cc23nfB3.s:8466   .rodata:0000000000000498 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_LE_EQ
     /tmp/cc23nfB3.s:8461   .rodata:000000000000048c _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_LOGICAL_OR
     /tmp/cc23nfB3.s:8456   .rodata:0000000000000484 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_MINUS
     /tmp/cc23nfB3.s:8451   .rodata:000000000000047c _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_MODULO
     /tmp/cc23nfB3.s:8446   .rodata:0000000000000474 _ZZN4quex20Token_map_id_to_nameEjE17token_id_str_MULT
     /tmp/cc23nfB3.s:8441   .rodata:0000000000000470 _ZZN4quex20Token_map_id_to_nameEjE16token_id_str_NOT
     /tmp/cc23nfB3.s:8436   .rodata:0000000000000468 _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NOT_EQ
     /tmp/cc23nfB3.s:8431   .rodata:0000000000000460 _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_NUMBER
     /tmp/cc23nfB3.s:8426   .rodata:0000000000000450 _ZZN4quex20Token_map_id_to_nameEjE26token_id_str_OP_ASSIGNMENT
     /tmp/cc23nfB3.s:8421   .rodata:000000000000044d _ZZN4quex20Token_map_id_to_nameEjE15token_id_str_OR
     /tmp/cc23nfB3.s:8417   .rodata:0000000000000448 _ZZN4quex20Token_map_id_to_nameEjE17token_id_str_PLUS
     /tmp/cc23nfB3.s:8412   .rodata:000000000000043c _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_DEFINE
     /tmp/cc23nfB3.s:8407   .rodata:0000000000000430 _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_DEFINED
     /tmp/cc23nfB3.s:8402   .rodata:0000000000000428 _ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELIF
     /tmp/cc23nfB3.s:8397   .rodata:0000000000000420 _ZZN4quex20Token_map_id_to_nameEjE20token_id_str_PP_ELSE
     /tmp/cc23nfB3.s:8392   .rodata:0000000000000414 _ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ENDIF
     /tmp/cc23nfB3.s:8387   .rodata:0000000000000408 _ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_ERROR
     /tmp/cc23nfB3.s:8382   .rodata:0000000000000400 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_PP_IF
     /tmp/cc23nfB3.s:8377   .rodata:00000000000003f4 _ZZN4quex20Token_map_id_to_nameEjE21token_id_str_PP_IFDEF
     /tmp/cc23nfB3.s:8372   .rodata:00000000000003e8 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_IFNDEF
     /tmp/cc23nfB3.s:8367   .rodata:00000000000003dc _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_PP_INCLUDE
     /tmp/cc23nfB3.s:8362   .rodata:00000000000003d0 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_PP_PRAGMA
     /tmp/cc23nfB3.s:8357   .rodata:00000000000003c0 _ZZN4quex20Token_map_id_to_nameEjE26token_id_str_QUESTION_MARK
     /tmp/cc23nfB3.s:8352   .rodata:00000000000003b8 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_QUOTE
     /tmp/cc23nfB3.s:8347   .rodata:00000000000003ac _ZZN4quex20Token_map_id_to_nameEjE24token_id_str_QUOTED_CHAR
     /tmp/cc23nfB3.s:8342   .rodata:00000000000003a0 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_SEMICOLON
     /tmp/cc23nfB3.s:8337   .rodata:0000000000000398 _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRING
     /tmp/cc23nfB3.s:8332   .rodata:0000000000000390 _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_STRUCT
     /tmp/cc23nfB3.s:8327   .rodata:0000000000000388 _ZZN4quex20Token_map_id_to_nameEjE19token_id_str_SWITCH
     /tmp/cc23nfB3.s:8322   .rodata:0000000000000380 _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_TILDE
     /tmp/cc23nfB3.s:8317   .rodata:0000000000000374 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_CHAR
     /tmp/cc23nfB3.s:8312   .rodata:0000000000000368 _ZZN4quex20Token_map_id_to_nameEjE24token_id_str_TYPE_DOUBLE
     /tmp/cc23nfB3.s:8307   .rodata:000000000000035c _ZZN4quex20Token_map_id_to_nameEjE23token_id_str_TYPE_FLOAT
     /tmp/cc23nfB3.s:8302   .rodata:0000000000000350 _ZZN4quex20Token_map_id_to_nameEjE21token_id_str_TYPE_INT
     /tmp/cc23nfB3.s:8297   .rodata:0000000000000344 _ZZN4quex20Token_map_id_to_nameEjE22token_id_str_TYPE_LONG
     /tmp/cc23nfB3.s:8292   .rodata:0000000000000334 _ZZN4quex20Token_map_id_to_nameEjE26token_id_str_TYPE_UNSIGNED
     /tmp/cc23nfB3.s:8287   .rodata:000000000000032c _ZZN4quex20Token_map_id_to_nameEjE18token_id_str_WHILE
     /tmp/cc23nfB3.s:1314   .text._ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE:0000000000000000 _ZN4quex35quex_scan_BufferFiller_load_forwardEPNS_16quex_scan_BufferE
     /tmp/cc23nfB3.s:1884   .text:0000000000000357 T.340
     /tmp/cc23nfB3.s:1968   .text:0000000000000398 _ZN4quex35quex_scan_PROGRAM_analyzer_functionEPNS_9quex_scanE
     /tmp/cc23nfB3.s:8222   .bss:0000000000000024 _ZN4quex26quex_scan_LexemeNullObjectE
     /tmp/cc23nfB3.s:8271   .rodata._ZTIN4quex5TokenE:0000000000000000 _ZTIN4quex5TokenE
     /tmp/cc23nfB3.s:8256   .rodata._ZTIN4quex9quex_scanE:0000000000000000 _ZTIN4quex9quex_scanE
     /tmp/cc23nfB3.s:8249   .rodata._ZTSN4quex9quex_scanE:0000000000000000 _ZTSN4quex9quex_scanE
     /tmp/cc23nfB3.s:8264   .rodata._ZTSN4quex5TokenE:0000000000000000 _ZTSN4quex5TokenE

UNDEFINED SYMBOLS
__gxx_personality_v0
free
fclose
_ZdlPv
_Unwind_Resume
_ZNSt8ios_base4InitC1Ev
__dso_handle
GAS LISTING /tmp/cc23nfB3.s 			page 441


_ZNSt8ios_base4InitD1Ev
__cxa_atexit
__sprintf_chk
_ZNSsC1EPKcRKSaIcE
__cxa_allocate_exception
_ZNSt13runtime_errorC1ERKSs
_ZNSsD1Ev
__cxa_free_exception
memmove
_ZNSt13runtime_errorD1Ev
_ZTISt13runtime_error
__cxa_throw
_ZSt9terminatev
_ZTVN10__cxxabiv117__class_type_infoE
pthread_cancel
